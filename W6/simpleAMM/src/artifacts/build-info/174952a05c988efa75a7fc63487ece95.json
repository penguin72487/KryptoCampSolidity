{
	"id": "174952a05c988efa75a7fc63487ece95",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"W6/simpleAMM/src/simpleAMMV6.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.18;\r\n//goerli 0xae6B0f75b55fa4c90b2768e3157b7000241A41c5 merge 0x4a9C121080f6D9250Fc0143f41B595fD172E31bf\r\n// V1 0xf60440f93a677AB6968E1Fd10cf8a6cE61941131\r\n// V2 0x8b175c421E9307F0365dd37bc32Dda5df95C4946\r\n// V3 0x3ea585565c490232b0379C7D3C3A9fC3fA5C9c0C\r\n// V4  0x6D81EE8B003422Ee9d1255aceA42386eCBD20a60 merge 0x540d7E428D5207B30EE03F2551Cbb5751D3c7569\r\n// V6 merge 0xaE036c65C649172b43ef7156b009c6221B596B8b\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/Math.sol\";\r\n\r\ncontract AMM {\r\n    address developer;\r\n\r\n    IERC20 public immutable token;\r\n    address public constant ETH_ADDRESS = address(0);\r\n\r\n    uint256 public reserveETH; // eth\r\n    uint256 public reserveERC; // erc20\r\n\r\n    uint256 public totalSupply;\r\n    mapping(address => uint256) public balanceOf;\r\n\r\n    constructor(address _token) {\r\n        developer = msg.sender;\r\n        token = IERC20(_token);\r\n    }\r\n\r\n    function _mint(address _to, uint256 _amount) private {\r\n        balanceOf[_to] += _amount;\r\n        totalSupply += _amount;\r\n    }\r\n\r\n    function _burn(address _from, uint256 _amount) private {\r\n        balanceOf[_from] -= _amount;\r\n        totalSupply -= _amount;\r\n    }\r\n\r\n    function _update(uint256 _reserve0, uint256 _reserve1) private {\r\n        reserveETH = _reserve0;\r\n        reserveERC = _reserve1;\r\n    }\r\n\r\n    function swap(uint256 _amountIn) public payable returns (uint256 amountOut) {\r\n        require(msg.value == _amountIn, \"ETH amount mismatch\");\r\n\r\n        uint256 amountInWithFee = (_amountIn * 997) / 1000;\r\n        amountOut = (reserveERC * amountInWithFee) / (reserveETH + amountInWithFee);\r\n        uint256 feeToDeveloper = _amountIn * 3*totalSupply/(reserveETH*2000);\r\n        _mint(developer,feeToDeveloper); // 50% of the profit to developer\r\n\r\n        token.transfer(msg.sender, amountOut);\r\n\r\n        _update(address(this).balance, token.balanceOf(address(this)));\r\n    }\r\n    function swapTokenForETH(uint256 _amountIn) public returns (uint256 amountOut) {\r\n        uint256 amountInWithFee = (_amountIn * 997) / 1000;\r\n\r\n        amountOut = (reserveETH * amountInWithFee) / (reserveERC + amountInWithFee);\r\n        require(amountOut > 0, \"Insufficient output amount\");\r\n        uint256 feeToDeveloper = _amountIn * 3*totalSupply/(reserveERC*2000);\r\n        _mint(developer,feeToDeveloper); // 50% of the profit to developer\r\n\r\n        token.transferFrom(msg.sender, address(this), _amountIn);\r\n        payable(msg.sender).transfer(amountOut);\r\n\r\n        _update(address(this).balance, token.balanceOf(address(this)));\r\n    }\r\n    function swap_WithSlipLock(uint256 _amountIn,uint256 _forwardOutput,uint256 _slipLock) public payable returns (uint256 amountOut)\r\n    {\r\n        require(msg.value == _amountIn, \"ETH amount mismatch\");\r\n\r\n        uint256 amountInWithFee = (_amountIn * 997) / 1000;\r\n        amountOut = (reserveERC * amountInWithFee) / (reserveETH + amountInWithFee);\r\n        require(amountOut > 0, \"Insufficient output amount\");\r\n        require(amountOut >= (_forwardOutput*(1000-_slipLock)/1000), \"SlipLock\");\r\n        uint256 feeToDeveloper = _amountIn * 3*totalSupply/(reserveETH*2000);\r\n        _mint(developer,feeToDeveloper); // 50% of the profit to developer\r\n\r\n        token.transfer(msg.sender, amountOut);\r\n\r\n        _update(address(this).balance, token.balanceOf(address(this)));\r\n    }\r\n    function swapTokenForETH_WithSlipLock(uint256 _amountIn,uint256 _forwardOutput,uint256 _slipLock) public returns (uint256 amountOut) {\r\n        uint256 amountInWithFee = (_amountIn * 997) / 1000;\r\n\r\n        amountOut = (reserveETH * amountInWithFee) / (reserveERC + amountInWithFee);\r\n        require(amountOut > 0, \"Insufficient output amount\");\r\n        require(amountOut >= (_forwardOutput*(1000-_slipLock)/1000), \"SlipLock\");\r\n        uint256 feeToDeveloper = _amountIn * 3*totalSupply/(reserveERC*2000);\r\n        _mint(developer,feeToDeveloper); // 50% of the profit to developer\r\n\r\n        token.transferFrom(msg.sender, address(this), _amountIn);\r\n        payable(msg.sender).transfer(amountOut);\r\n\r\n        _update(address(this).balance, token.balanceOf(address(this)));\r\n    }\r\n    function addLiquidity(uint256 _amount1) external payable returns (uint256 shares) {\r\n        token.transferFrom(msg.sender, address(this), _amount1);\r\n\r\n        uint256 _amount0 = msg.value;\r\n\r\n        if (reserveETH > 0 || reserveERC > 0) {\r\n            require(reserveETH * _amount1 == reserveERC * _amount0, \"x / y != dx / dy\");\r\n        }\r\n\r\n        if (totalSupply == 0) {\r\n            shares = _sqrt(_amount0 * _amount1);\r\n        } else {\r\n            shares = Math.min(\r\n                (_amount0 * totalSupply) / reserveETH,\r\n                (_amount1 * totalSupply) / reserveERC\r\n            );\r\n        }\r\n        require(shares > 0, \"shares = 0\");\r\n        _mint(msg.sender, shares);\r\n\r\n        _update(address(this).balance, token.balanceOf(address(this)));\r\n    }\r\n\r\n    function removeAllLiquidity(address _user) external returns (uint256 amountETH, uint256 amountERC) {\r\n        return _removeLiquidity(_user,balanceOf[_user]);\r\n    }\r\n    function removeLiquidity(uint256 _shares) external returns (uint256 amountETH, uint256 amountERC) {\r\n        require(_shares <= balanceOf[msg.sender], \"Insufficient balance\");\r\n        return _removeLiquidity(msg.sender, _shares);\r\n    }\r\n\r\n    function removeLiquidity(address _user, uint256 _shares) external returns (uint256 amountETH, uint256 amountERC) {\r\n        require(_shares <= balanceOf[_user], \"Insufficient balance\");\r\n        return _removeLiquidity(_user, _shares);\r\n    }\r\n    function _removeLiquidity(address _user, uint256 _shares) internal returns (uint256 amountETH, uint256 amountERC) {\r\n        amountETH = (_shares * reserveETH) / totalSupply;\r\n        amountERC = (_shares * reserveERC) / totalSupply;\r\n        require(amountETH > 0 && amountERC > 0, \"amountETH or amountERC = 0\");\r\n\r\n        _burn(_user, _shares);\r\n        _update(address(this).balance - amountETH, token.balanceOf(address(this)) - amountERC);\r\n\r\n        payable(_user).transfer(amountETH);\r\n        token.transfer(_user, amountERC);\r\n    }\r\n    function my_shars() public view returns(uint256){\r\n        return balanceOf[msg.sender];\r\n    }\r\n    function sharesOf(address _user) public view returns(uint256){\r\n        return balanceOf[_user];\r\n    }\r\n\r\n    function _sqrt(uint y) internal pure returns (uint z) {\r\n        if (y > 3) {\r\n            z = y;\r\n            uint x = y / 2 + 1;\r\n            while (x < z) {\r\n                z = x;\r\n                x = (y / x + x) / 2;\r\n            }\r\n        } else if (y != 0) {\r\n            z = 1;\r\n        }\r\n    }\r\n    function _min(uint256 x, uint256 y) private pure returns (uint256) {\r\n        return x <= y ? x : y;\r\n    }\r\n    function getETHPrice() public view returns (uint256) {\r\n        require(reserveETH > 0 && reserveERC > 0, \"Invalid ETH reserves\");\r\n        return (reserveERC * 10**18) / reserveETH;\r\n    }\r\n    function getERCPrice() public view returns (uint256) {\r\n        require(reserveETH > 0 && reserveERC > 0, \"Invalid ERC20 reserves\");\r\n        uint256 decimals = ERC20(address(token)).decimals();\r\n        return (reserveETH * 10**decimals) / reserveERC;\r\n    }\r\n\r\n    function getInETHPredictOutputERC(uint256 _amount) public view returns (uint256) {\r\n        require(reserveETH > 0 && reserveERC > 0 && _amount>0, \"Invalid ERC20 reserves\");\r\n        uint256 amountInWithFee=(_amount * 997) / 1000;\r\n        return (reserveERC * amountInWithFee) / (reserveETH + amountInWithFee);\r\n    }\r\n    function getInERCPredictOutputETH(uint256 _amount) public view returns (uint256) {\r\n        require(reserveETH > 0 && reserveERC > 0 && _amount>0, \"Invalid ETH reserves\");\r\n        uint256 amountInWithFee=(_amount * 997) / 1000;\r\n        return (reserveETH * amountInWithFee) / (reserveERC + amountInWithFee);\r\n    }\r\n\r\n}"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1);\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator,\n        Rounding rounding\n    ) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10**64) {\n                value /= 10**64;\n                result += 64;\n            }\n            if (value >= 10**32) {\n                value /= 10**32;\n                result += 32;\n            }\n            if (value >= 10**16) {\n                value /= 10**16;\n                result += 16;\n            }\n            if (value >= 10**8) {\n                value /= 10**8;\n                result += 8;\n            }\n            if (value >= 10**4) {\n                value /= 10**4;\n                result += 4;\n            }\n            if (value >= 10**2) {\n                value /= 10**2;\n                result += 2;\n            }\n            if (value >= 10**1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1401:13011  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1976:2089  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2050:2055  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2042:2047  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2042:2055  _name = name_ */\n  swap1\n  dup2\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2075:2082  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2065:2072  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2065:2082  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1976:2089  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1401:13011  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  jump(tag_9)\n    /* \"#utility.yul\":7:82   */\ntag_10:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_11:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_12:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_13:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_14:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_15:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_16:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_17:\n    /* \"#utility.yul\":957:984   */\n  tag_51\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_15\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_52\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_53\n  tag_16\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":1030:1118   */\ntag_52:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_18:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_55\n  tag_10\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_56\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_17\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_19:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_59\n  tag_16\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":1434:1490   */\ntag_58:\n    /* \"#utility.yul\":1508:1537   */\n  tag_60\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_15\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1856   */\ntag_20:\n    /* \"#utility.yul\":1691:1692   */\n  0x00\n    /* \"#utility.yul\":1701:1814   */\ntag_62:\n    /* \"#utility.yul\":1715:1721   */\n  dup4\n    /* \"#utility.yul\":1712:1713   */\n  dup2\n    /* \"#utility.yul\":1709:1722   */\n  lt\n    /* \"#utility.yul\":1701:1814   */\n  iszero\n  tag_64\n  jumpi\n    /* \"#utility.yul\":1800:1801   */\n  dup1\n    /* \"#utility.yul\":1795:1798   */\n  dup3\n    /* \"#utility.yul\":1791:1802   */\n  add\n    /* \"#utility.yul\":1785:1803   */\n  mload\n    /* \"#utility.yul\":1781:1782   */\n  dup2\n    /* \"#utility.yul\":1776:1779   */\n  dup5\n    /* \"#utility.yul\":1772:1783   */\n  add\n    /* \"#utility.yul\":1765:1804   */\n  mstore\n    /* \"#utility.yul\":1737:1739   */\n  0x20\n    /* \"#utility.yul\":1734:1735   */\n  dup2\n    /* \"#utility.yul\":1730:1740   */\n  add\n    /* \"#utility.yul\":1725:1740   */\n  swap1\n  pop\n    /* \"#utility.yul\":1701:1814   */\n  jump(tag_62)\ntag_64:\n    /* \"#utility.yul\":1848:1849   */\n  0x00\n    /* \"#utility.yul\":1839:1845   */\n  dup5\n    /* \"#utility.yul\":1834:1837   */\n  dup5\n    /* \"#utility.yul\":1830:1846   */\n  add\n    /* \"#utility.yul\":1823:1850   */\n  mstore\n    /* \"#utility.yul\":1672:1856   */\n  pop\n    /* \"#utility.yul\":1610:1856   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1862:2296   */\ntag_21:\n    /* \"#utility.yul\":1951:1956   */\n  0x00\n    /* \"#utility.yul\":1976:2042   */\n  tag_66\n    /* \"#utility.yul\":1992:2041   */\n  tag_67\n    /* \"#utility.yul\":2034:2040   */\n  dup5\n    /* \"#utility.yul\":1992:2041   */\n  tag_19\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":1976:2042   */\n  tag_18\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":1967:2042   */\n  swap1\n  pop\n    /* \"#utility.yul\":2065:2071   */\n  dup3\n    /* \"#utility.yul\":2058:2063   */\n  dup2\n    /* \"#utility.yul\":2051:2072   */\n  mstore\n    /* \"#utility.yul\":2103:2107   */\n  0x20\n    /* \"#utility.yul\":2096:2101   */\n  dup2\n    /* \"#utility.yul\":2092:2108   */\n  add\n    /* \"#utility.yul\":2141:2144   */\n  dup5\n    /* \"#utility.yul\":2132:2138   */\n  dup5\n    /* \"#utility.yul\":2127:2130   */\n  dup5\n    /* \"#utility.yul\":2123:2139   */\n  add\n    /* \"#utility.yul\":2120:2145   */\n  gt\n    /* \"#utility.yul\":2117:2229   */\n  iszero\n  tag_68\n  jumpi\n    /* \"#utility.yul\":2148:2227   */\n  tag_69\n  tag_14\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2117:2229   */\ntag_68:\n    /* \"#utility.yul\":2238:2290   */\n  tag_70\n    /* \"#utility.yul\":2283:2289   */\n  dup5\n    /* \"#utility.yul\":2278:2281   */\n  dup3\n    /* \"#utility.yul\":2273:2276   */\n  dup6\n    /* \"#utility.yul\":2238:2290   */\n  tag_20\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":1957:2296   */\n  pop\n    /* \"#utility.yul\":1862:2296   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2316:2671   */\ntag_22:\n    /* \"#utility.yul\":2383:2388   */\n  0x00\n    /* \"#utility.yul\":2432:2435   */\n  dup3\n    /* \"#utility.yul\":2425:2429   */\n  0x1f\n    /* \"#utility.yul\":2417:2423   */\n  dup4\n    /* \"#utility.yul\":2413:2430   */\n  add\n    /* \"#utility.yul\":2409:2436   */\n  slt\n    /* \"#utility.yul\":2399:2521   */\n  tag_72\n  jumpi\n    /* \"#utility.yul\":2440:2519   */\n  tag_73\n  tag_13\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":2399:2521   */\ntag_72:\n    /* \"#utility.yul\":2550:2556   */\n  dup2\n    /* \"#utility.yul\":2544:2557   */\n  mload\n    /* \"#utility.yul\":2575:2665   */\n  tag_74\n    /* \"#utility.yul\":2661:2664   */\n  dup5\n    /* \"#utility.yul\":2653:2659   */\n  dup3\n    /* \"#utility.yul\":2646:2650   */\n  0x20\n    /* \"#utility.yul\":2638:2644   */\n  dup7\n    /* \"#utility.yul\":2634:2651   */\n  add\n    /* \"#utility.yul\":2575:2665   */\n  tag_21\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":2566:2665   */\n  swap2\n  pop\n    /* \"#utility.yul\":2389:2671   */\n  pop\n    /* \"#utility.yul\":2316:2671   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2677:3530   */\ntag_3:\n    /* \"#utility.yul\":2776:2782   */\n  0x00\n    /* \"#utility.yul\":2784:2790   */\n  dup1\n    /* \"#utility.yul\":2833:2835   */\n  0x40\n    /* \"#utility.yul\":2821:2830   */\n  dup4\n    /* \"#utility.yul\":2812:2819   */\n  dup6\n    /* \"#utility.yul\":2808:2831   */\n  sub\n    /* \"#utility.yul\":2804:2836   */\n  slt\n    /* \"#utility.yul\":2801:2920   */\n  iszero\n  tag_76\n  jumpi\n    /* \"#utility.yul\":2839:2918   */\n  tag_77\n  tag_11\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":2801:2920   */\ntag_76:\n    /* \"#utility.yul\":2980:2981   */\n  0x00\n    /* \"#utility.yul\":2969:2978   */\n  dup4\n    /* \"#utility.yul\":2965:2982   */\n  add\n    /* \"#utility.yul\":2959:2983   */\n  mload\n    /* \"#utility.yul\":3010:3028   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3002:3008   */\n  dup2\n    /* \"#utility.yul\":2999:3029   */\n  gt\n    /* \"#utility.yul\":2996:3113   */\n  iszero\n  tag_78\n  jumpi\n    /* \"#utility.yul\":3032:3111   */\n  tag_79\n  tag_12\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":2996:3113   */\ntag_78:\n    /* \"#utility.yul\":3137:3211   */\n  tag_80\n    /* \"#utility.yul\":3203:3210   */\n  dup6\n    /* \"#utility.yul\":3194:3200   */\n  dup3\n    /* \"#utility.yul\":3183:3192   */\n  dup7\n    /* \"#utility.yul\":3179:3201   */\n  add\n    /* \"#utility.yul\":3137:3211   */\n  tag_22\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":3127:3211   */\n  swap3\n  pop\n    /* \"#utility.yul\":2930:3221   */\n  pop\n    /* \"#utility.yul\":3281:3283   */\n  0x20\n    /* \"#utility.yul\":3270:3279   */\n  dup4\n    /* \"#utility.yul\":3266:3284   */\n  add\n    /* \"#utility.yul\":3260:3285   */\n  mload\n    /* \"#utility.yul\":3312:3330   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3304:3310   */\n  dup2\n    /* \"#utility.yul\":3301:3331   */\n  gt\n    /* \"#utility.yul\":3298:3415   */\n  iszero\n  tag_81\n  jumpi\n    /* \"#utility.yul\":3334:3413   */\n  tag_82\n  tag_12\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":3298:3415   */\ntag_81:\n    /* \"#utility.yul\":3439:3513   */\n  tag_83\n    /* \"#utility.yul\":3505:3512   */\n  dup6\n    /* \"#utility.yul\":3496:3502   */\n  dup3\n    /* \"#utility.yul\":3485:3494   */\n  dup7\n    /* \"#utility.yul\":3481:3503   */\n  add\n    /* \"#utility.yul\":3439:3513   */\n  tag_22\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":3429:3513   */\n  swap2\n  pop\n    /* \"#utility.yul\":3231:3523   */\n  pop\n    /* \"#utility.yul\":2677:3530   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3536:3635   */\ntag_23:\n    /* \"#utility.yul\":3588:3594   */\n  0x00\n    /* \"#utility.yul\":3622:3627   */\n  dup2\n    /* \"#utility.yul\":3616:3628   */\n  mload\n    /* \"#utility.yul\":3606:3628   */\n  swap1\n  pop\n    /* \"#utility.yul\":3536:3635   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3641:3821   */\ntag_24:\n    /* \"#utility.yul\":3689:3766   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3686:3687   */\n  0x00\n    /* \"#utility.yul\":3679:3767   */\n  mstore\n    /* \"#utility.yul\":3786:3790   */\n  0x22\n    /* \"#utility.yul\":3783:3784   */\n  0x04\n    /* \"#utility.yul\":3776:3791   */\n  mstore\n    /* \"#utility.yul\":3810:3814   */\n  0x24\n    /* \"#utility.yul\":3807:3808   */\n  0x00\n    /* \"#utility.yul\":3800:3815   */\n  revert\n    /* \"#utility.yul\":3827:4147   */\ntag_25:\n    /* \"#utility.yul\":3871:3877   */\n  0x00\n    /* \"#utility.yul\":3908:3909   */\n  0x02\n    /* \"#utility.yul\":3902:3906   */\n  dup3\n    /* \"#utility.yul\":3898:3910   */\n  div\n    /* \"#utility.yul\":3888:3910   */\n  swap1\n  pop\n    /* \"#utility.yul\":3955:3956   */\n  0x01\n    /* \"#utility.yul\":3949:3953   */\n  dup3\n    /* \"#utility.yul\":3945:3957   */\n  and\n    /* \"#utility.yul\":3976:3994   */\n  dup1\n    /* \"#utility.yul\":3966:4047   */\n  tag_87\n  jumpi\n    /* \"#utility.yul\":4032:4036   */\n  0x7f\n    /* \"#utility.yul\":4024:4030   */\n  dup3\n    /* \"#utility.yul\":4020:4037   */\n  and\n    /* \"#utility.yul\":4010:4037   */\n  swap2\n  pop\n    /* \"#utility.yul\":3966:4047   */\ntag_87:\n    /* \"#utility.yul\":4094:4096   */\n  0x20\n    /* \"#utility.yul\":4086:4092   */\n  dup3\n    /* \"#utility.yul\":4083:4097   */\n  lt\n    /* \"#utility.yul\":4063:4081   */\n  dup2\n    /* \"#utility.yul\":4060:4098   */\n  sub\n    /* \"#utility.yul\":4057:4141   */\n  tag_88\n  jumpi\n    /* \"#utility.yul\":4113:4131   */\n  tag_89\n  tag_24\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":4057:4141   */\ntag_88:\n    /* \"#utility.yul\":3878:4147   */\n  pop\n    /* \"#utility.yul\":3827:4147   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4153:4294   */\ntag_26:\n    /* \"#utility.yul\":4202:4206   */\n  0x00\n    /* \"#utility.yul\":4225:4228   */\n  dup2\n    /* \"#utility.yul\":4217:4228   */\n  swap1\n  pop\n    /* \"#utility.yul\":4248:4251   */\n  dup2\n    /* \"#utility.yul\":4245:4246   */\n  0x00\n    /* \"#utility.yul\":4238:4252   */\n  mstore\n    /* \"#utility.yul\":4282:4286   */\n  0x20\n    /* \"#utility.yul\":4279:4280   */\n  0x00\n    /* \"#utility.yul\":4269:4287   */\n  keccak256\n    /* \"#utility.yul\":4261:4287   */\n  swap1\n  pop\n    /* \"#utility.yul\":4153:4294   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4300:4393   */\ntag_27:\n    /* \"#utility.yul\":4337:4343   */\n  0x00\n    /* \"#utility.yul\":4384:4386   */\n  0x20\n    /* \"#utility.yul\":4379:4381   */\n  0x1f\n    /* \"#utility.yul\":4372:4377   */\n  dup4\n    /* \"#utility.yul\":4368:4382   */\n  add\n    /* \"#utility.yul\":4364:4387   */\n  div\n    /* \"#utility.yul\":4354:4387   */\n  swap1\n  pop\n    /* \"#utility.yul\":4300:4393   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4399:4506   */\ntag_28:\n    /* \"#utility.yul\":4443:4451   */\n  0x00\n    /* \"#utility.yul\":4493:4498   */\n  dup3\n    /* \"#utility.yul\":4487:4491   */\n  dup3\n    /* \"#utility.yul\":4483:4499   */\n  shl\n    /* \"#utility.yul\":4462:4499   */\n  swap1\n  pop\n    /* \"#utility.yul\":4399:4506   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4512:4905   */\ntag_29:\n    /* \"#utility.yul\":4581:4587   */\n  0x00\n    /* \"#utility.yul\":4631:4632   */\n  0x08\n    /* \"#utility.yul\":4619:4629   */\n  dup4\n    /* \"#utility.yul\":4615:4633   */\n  mul\n    /* \"#utility.yul\":4654:4751   */\n  tag_94\n    /* \"#utility.yul\":4684:4750   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":4673:4682   */\n  dup3\n    /* \"#utility.yul\":4654:4751   */\n  tag_28\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":4772:4811   */\n  tag_95\n    /* \"#utility.yul\":4802:4810   */\n  dup7\n    /* \"#utility.yul\":4791:4800   */\n  dup4\n    /* \"#utility.yul\":4772:4811   */\n  tag_28\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":4760:4811   */\n  swap6\n  pop\n    /* \"#utility.yul\":4844:4848   */\n  dup1\n    /* \"#utility.yul\":4840:4849   */\n  not\n    /* \"#utility.yul\":4833:4838   */\n  dup5\n    /* \"#utility.yul\":4829:4850   */\n  and\n    /* \"#utility.yul\":4820:4850   */\n  swap4\n  pop\n    /* \"#utility.yul\":4893:4897   */\n  dup1\n    /* \"#utility.yul\":4883:4891   */\n  dup7\n    /* \"#utility.yul\":4879:4898   */\n  and\n    /* \"#utility.yul\":4872:4877   */\n  dup5\n    /* \"#utility.yul\":4869:4899   */\n  or\n    /* \"#utility.yul\":4859:4899   */\n  swap3\n  pop\n    /* \"#utility.yul\":4588:4905   */\n  pop\n  pop\n    /* \"#utility.yul\":4512:4905   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4911:4988   */\ntag_30:\n    /* \"#utility.yul\":4948:4955   */\n  0x00\n    /* \"#utility.yul\":4977:4982   */\n  dup2\n    /* \"#utility.yul\":4966:4982   */\n  swap1\n  pop\n    /* \"#utility.yul\":4911:4988   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4994:5054   */\ntag_31:\n    /* \"#utility.yul\":5022:5025   */\n  0x00\n    /* \"#utility.yul\":5043:5048   */\n  dup2\n    /* \"#utility.yul\":5036:5048   */\n  swap1\n  pop\n    /* \"#utility.yul\":4994:5054   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5060:5202   */\ntag_32:\n    /* \"#utility.yul\":5110:5119   */\n  0x00\n    /* \"#utility.yul\":5143:5196   */\n  tag_99\n    /* \"#utility.yul\":5161:5195   */\n  tag_100\n    /* \"#utility.yul\":5170:5194   */\n  tag_101\n    /* \"#utility.yul\":5188:5193   */\n  dup5\n    /* \"#utility.yul\":5170:5194   */\n  tag_30\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":5161:5195   */\n  tag_31\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":5143:5196   */\n  tag_30\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":5130:5196   */\n  swap1\n  pop\n    /* \"#utility.yul\":5060:5202   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5208:5283   */\ntag_33:\n    /* \"#utility.yul\":5251:5254   */\n  0x00\n    /* \"#utility.yul\":5272:5277   */\n  dup2\n    /* \"#utility.yul\":5265:5277   */\n  swap1\n  pop\n    /* \"#utility.yul\":5208:5283   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5289:5558   */\ntag_34:\n    /* \"#utility.yul\":5399:5438   */\n  tag_104\n    /* \"#utility.yul\":5430:5437   */\n  dup4\n    /* \"#utility.yul\":5399:5438   */\n  tag_32\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":5460:5551   */\n  tag_105\n    /* \"#utility.yul\":5509:5550   */\n  tag_106\n    /* \"#utility.yul\":5533:5549   */\n  dup3\n    /* \"#utility.yul\":5509:5550   */\n  tag_33\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":5501:5507   */\n  dup5\n    /* \"#utility.yul\":5494:5498   */\n  dup5\n    /* \"#utility.yul\":5488:5499   */\n  sload\n    /* \"#utility.yul\":5460:5551   */\n  tag_29\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":5454:5458   */\n  dup3\n    /* \"#utility.yul\":5447:5552   */\n  sstore\n    /* \"#utility.yul\":5365:5558   */\n  pop\n    /* \"#utility.yul\":5289:5558   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5564:5637   */\ntag_35:\n    /* \"#utility.yul\":5609:5612   */\n  0x00\n    /* \"#utility.yul\":5564:5637   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":5643:5832   */\ntag_36:\n    /* \"#utility.yul\":5720:5752   */\n  tag_109\n  tag_35\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":5761:5826   */\n  tag_110\n    /* \"#utility.yul\":5819:5825   */\n  dup2\n    /* \"#utility.yul\":5811:5817   */\n  dup5\n    /* \"#utility.yul\":5805:5809   */\n  dup5\n    /* \"#utility.yul\":5761:5826   */\n  tag_34\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":5696:5832   */\n  pop\n    /* \"#utility.yul\":5643:5832   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5838:6024   */\ntag_37:\n    /* \"#utility.yul\":5898:6018   */\ntag_112:\n    /* \"#utility.yul\":5915:5918   */\n  dup2\n    /* \"#utility.yul\":5908:5913   */\n  dup2\n    /* \"#utility.yul\":5905:5919   */\n  lt\n    /* \"#utility.yul\":5898:6018   */\n  iszero\n  tag_114\n  jumpi\n    /* \"#utility.yul\":5969:6008   */\n  tag_115\n    /* \"#utility.yul\":6006:6007   */\n  0x00\n    /* \"#utility.yul\":5999:6004   */\n  dup3\n    /* \"#utility.yul\":5969:6008   */\n  tag_36\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":5942:5943   */\n  0x01\n    /* \"#utility.yul\":5935:5940   */\n  dup2\n    /* \"#utility.yul\":5931:5944   */\n  add\n    /* \"#utility.yul\":5922:5944   */\n  swap1\n  pop\n    /* \"#utility.yul\":5898:6018   */\n  jump(tag_112)\ntag_114:\n    /* \"#utility.yul\":5838:6024   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6030:6573   */\ntag_38:\n    /* \"#utility.yul\":6131:6133   */\n  0x1f\n    /* \"#utility.yul\":6126:6129   */\n  dup3\n    /* \"#utility.yul\":6123:6134   */\n  gt\n    /* \"#utility.yul\":6120:6566   */\n  iszero\n  tag_117\n  jumpi\n    /* \"#utility.yul\":6165:6203   */\n  tag_118\n    /* \"#utility.yul\":6197:6202   */\n  dup2\n    /* \"#utility.yul\":6165:6203   */\n  tag_26\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":6249:6278   */\n  tag_119\n    /* \"#utility.yul\":6267:6277   */\n  dup5\n    /* \"#utility.yul\":6249:6278   */\n  tag_27\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":6239:6247   */\n  dup2\n    /* \"#utility.yul\":6235:6279   */\n  add\n    /* \"#utility.yul\":6432:6434   */\n  0x20\n    /* \"#utility.yul\":6420:6430   */\n  dup6\n    /* \"#utility.yul\":6417:6435   */\n  lt\n    /* \"#utility.yul\":6414:6463   */\n  iszero\n  tag_120\n  jumpi\n    /* \"#utility.yul\":6453:6461   */\n  dup2\n    /* \"#utility.yul\":6438:6461   */\n  swap1\n  pop\n    /* \"#utility.yul\":6414:6463   */\ntag_120:\n    /* \"#utility.yul\":6476:6556   */\n  tag_121\n    /* \"#utility.yul\":6532:6554   */\n  tag_122\n    /* \"#utility.yul\":6550:6553   */\n  dup6\n    /* \"#utility.yul\":6532:6554   */\n  tag_27\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":6522:6530   */\n  dup4\n    /* \"#utility.yul\":6518:6555   */\n  add\n    /* \"#utility.yul\":6505:6516   */\n  dup3\n    /* \"#utility.yul\":6476:6556   */\n  tag_37\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":6135:6566   */\n  pop\n  pop\n    /* \"#utility.yul\":6120:6566   */\ntag_117:\n    /* \"#utility.yul\":6030:6573   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6579:6696   */\ntag_39:\n    /* \"#utility.yul\":6633:6641   */\n  0x00\n    /* \"#utility.yul\":6683:6688   */\n  dup3\n    /* \"#utility.yul\":6677:6681   */\n  dup3\n    /* \"#utility.yul\":6673:6689   */\n  shr\n    /* \"#utility.yul\":6652:6689   */\n  swap1\n  pop\n    /* \"#utility.yul\":6579:6696   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6702:6871   */\ntag_40:\n    /* \"#utility.yul\":6746:6752   */\n  0x00\n    /* \"#utility.yul\":6779:6830   */\n  tag_125\n    /* \"#utility.yul\":6827:6828   */\n  0x00\n    /* \"#utility.yul\":6823:6829   */\n  not\n    /* \"#utility.yul\":6815:6820   */\n  dup5\n    /* \"#utility.yul\":6812:6813   */\n  0x08\n    /* \"#utility.yul\":6808:6821   */\n  mul\n    /* \"#utility.yul\":6779:6830   */\n  tag_39\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":6775:6831   */\n  not\n    /* \"#utility.yul\":6860:6864   */\n  dup1\n    /* \"#utility.yul\":6854:6858   */\n  dup4\n    /* \"#utility.yul\":6850:6865   */\n  and\n    /* \"#utility.yul\":6840:6865   */\n  swap2\n  pop\n    /* \"#utility.yul\":6753:6871   */\n  pop\n    /* \"#utility.yul\":6702:6871   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6876:7171   */\ntag_41:\n    /* \"#utility.yul\":6952:6956   */\n  0x00\n    /* \"#utility.yul\":7098:7127   */\n  tag_127\n    /* \"#utility.yul\":7123:7126   */\n  dup4\n    /* \"#utility.yul\":7117:7121   */\n  dup4\n    /* \"#utility.yul\":7098:7127   */\n  tag_40\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":7090:7127   */\n  swap2\n  pop\n    /* \"#utility.yul\":7160:7163   */\n  dup3\n    /* \"#utility.yul\":7157:7158   */\n  0x02\n    /* \"#utility.yul\":7153:7164   */\n  mul\n    /* \"#utility.yul\":7147:7151   */\n  dup3\n    /* \"#utility.yul\":7144:7165   */\n  or\n    /* \"#utility.yul\":7136:7165   */\n  swap1\n  pop\n    /* \"#utility.yul\":6876:7171   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7176:8571   */\ntag_7:\n    /* \"#utility.yul\":7293:7330   */\n  tag_129\n    /* \"#utility.yul\":7326:7329   */\n  dup3\n    /* \"#utility.yul\":7293:7330   */\n  tag_23\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":7395:7413   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7387:7393   */\n  dup2\n    /* \"#utility.yul\":7384:7414   */\n  gt\n    /* \"#utility.yul\":7381:7437   */\n  iszero\n  tag_130\n  jumpi\n    /* \"#utility.yul\":7417:7435   */\n  tag_131\n  tag_16\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":7381:7437   */\ntag_130:\n    /* \"#utility.yul\":7461:7499   */\n  tag_132\n    /* \"#utility.yul\":7493:7497   */\n  dup3\n    /* \"#utility.yul\":7487:7498   */\n  sload\n    /* \"#utility.yul\":7461:7499   */\n  tag_25\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":7546:7613   */\n  tag_133\n    /* \"#utility.yul\":7606:7612   */\n  dup3\n    /* \"#utility.yul\":7598:7604   */\n  dup3\n    /* \"#utility.yul\":7592:7596   */\n  dup6\n    /* \"#utility.yul\":7546:7613   */\n  tag_38\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":7640:7641   */\n  0x00\n    /* \"#utility.yul\":7664:7668   */\n  0x20\n    /* \"#utility.yul\":7651:7668   */\n  swap1\n  pop\n    /* \"#utility.yul\":7696:7698   */\n  0x1f\n    /* \"#utility.yul\":7688:7694   */\n  dup4\n    /* \"#utility.yul\":7685:7699   */\n  gt\n    /* \"#utility.yul\":7713:7714   */\n  0x01\n    /* \"#utility.yul\":7708:8326   */\n  dup2\n  eq\n  tag_135\n  jumpi\n    /* \"#utility.yul\":8370:8371   */\n  0x00\n    /* \"#utility.yul\":8387:8393   */\n  dup5\n    /* \"#utility.yul\":8384:8461   */\n  iszero\n  tag_136\n  jumpi\n    /* \"#utility.yul\":8436:8445   */\n  dup3\n    /* \"#utility.yul\":8431:8434   */\n  dup8\n    /* \"#utility.yul\":8427:8446   */\n  add\n    /* \"#utility.yul\":8421:8447   */\n  mload\n    /* \"#utility.yul\":8412:8447   */\n  swap1\n  pop\n    /* \"#utility.yul\":8384:8461   */\ntag_136:\n    /* \"#utility.yul\":8487:8554   */\n  tag_137\n    /* \"#utility.yul\":8547:8553   */\n  dup6\n    /* \"#utility.yul\":8540:8545   */\n  dup3\n    /* \"#utility.yul\":8487:8554   */\n  tag_41\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":8481:8485   */\n  dup7\n    /* \"#utility.yul\":8474:8555   */\n  sstore\n    /* \"#utility.yul\":8343:8565   */\n  pop\n    /* \"#utility.yul\":7678:8565   */\n  jump(tag_134)\n    /* \"#utility.yul\":7708:8326   */\ntag_135:\n    /* \"#utility.yul\":7760:7764   */\n  0x1f\n    /* \"#utility.yul\":7756:7765   */\n  not\n    /* \"#utility.yul\":7748:7754   */\n  dup5\n    /* \"#utility.yul\":7744:7766   */\n  and\n    /* \"#utility.yul\":7794:7831   */\n  tag_138\n    /* \"#utility.yul\":7826:7830   */\n  dup7\n    /* \"#utility.yul\":7794:7831   */\n  tag_26\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":7853:7854   */\n  0x00\n    /* \"#utility.yul\":7867:8075   */\ntag_139:\n    /* \"#utility.yul\":7881:7888   */\n  dup3\n    /* \"#utility.yul\":7878:7879   */\n  dup2\n    /* \"#utility.yul\":7875:7889   */\n  lt\n    /* \"#utility.yul\":7867:8075   */\n  iszero\n  tag_141\n  jumpi\n    /* \"#utility.yul\":7960:7969   */\n  dup5\n    /* \"#utility.yul\":7955:7958   */\n  dup10\n    /* \"#utility.yul\":7951:7970   */\n  add\n    /* \"#utility.yul\":7945:7971   */\n  mload\n    /* \"#utility.yul\":7937:7943   */\n  dup3\n    /* \"#utility.yul\":7930:7972   */\n  sstore\n    /* \"#utility.yul\":8011:8012   */\n  0x01\n    /* \"#utility.yul\":8003:8009   */\n  dup3\n    /* \"#utility.yul\":7999:8013   */\n  add\n    /* \"#utility.yul\":7989:8013   */\n  swap2\n  pop\n    /* \"#utility.yul\":8058:8060   */\n  0x20\n    /* \"#utility.yul\":8047:8056   */\n  dup6\n    /* \"#utility.yul\":8043:8061   */\n  add\n    /* \"#utility.yul\":8030:8061   */\n  swap5\n  pop\n    /* \"#utility.yul\":7904:7908   */\n  0x20\n    /* \"#utility.yul\":7901:7902   */\n  dup2\n    /* \"#utility.yul\":7897:7909   */\n  add\n    /* \"#utility.yul\":7892:7909   */\n  swap1\n  pop\n    /* \"#utility.yul\":7867:8075   */\n  jump(tag_139)\ntag_141:\n    /* \"#utility.yul\":8103:8109   */\n  dup7\n    /* \"#utility.yul\":8094:8101   */\n  dup4\n    /* \"#utility.yul\":8091:8110   */\n  lt\n    /* \"#utility.yul\":8088:8267   */\n  iszero\n  tag_142\n  jumpi\n    /* \"#utility.yul\":8161:8170   */\n  dup5\n    /* \"#utility.yul\":8156:8159   */\n  dup10\n    /* \"#utility.yul\":8152:8171   */\n  add\n    /* \"#utility.yul\":8146:8172   */\n  mload\n    /* \"#utility.yul\":8204:8252   */\n  tag_143\n    /* \"#utility.yul\":8246:8250   */\n  0x1f\n    /* \"#utility.yul\":8238:8244   */\n  dup10\n    /* \"#utility.yul\":8234:8251   */\n  and\n    /* \"#utility.yul\":8223:8232   */\n  dup3\n    /* \"#utility.yul\":8204:8252   */\n  tag_40\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":8196:8202   */\n  dup4\n    /* \"#utility.yul\":8189:8253   */\n  sstore\n    /* \"#utility.yul\":8111:8267   */\n  pop\n    /* \"#utility.yul\":8088:8267   */\ntag_142:\n    /* \"#utility.yul\":8313:8314   */\n  0x01\n    /* \"#utility.yul\":8309:8310   */\n  0x02\n    /* \"#utility.yul\":8301:8307   */\n  dup9\n    /* \"#utility.yul\":8297:8311   */\n  mul\n    /* \"#utility.yul\":8293:8315   */\n  add\n    /* \"#utility.yul\":8287:8291   */\n  dup9\n    /* \"#utility.yul\":8280:8316   */\n  sstore\n    /* \"#utility.yul\":7715:8326   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7678:8565   */\ntag_134:\n  pop\n    /* \"#utility.yul\":7268:8571   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7176:8571   */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1401:13011  contract ERC20 is Context, IERC20, IERC20Metadata {... */\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1401:13011  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2154:2252  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4431:4628  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3242:3348  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5190:5476  function transferFrom(... */\n    tag_6:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3091:3182  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5871:6105  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3406:3531  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2365:2467  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6592:7019  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3727:3916  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3974:4123  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2154:2252  function name() public view virtual override returns (string memory) {... */\n    tag_16:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2208:2221  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2240:2245  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2233:2245  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2154:2252  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4431:4628  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_22:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4514:4518  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4530:4543  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4546:4558  _msgSender() */\n      tag_71\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4546:4556  _msgSender */\n      tag_72\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4546:4558  _msgSender() */\n      jump\t// in\n    tag_71:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4530:4558  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4568:4600  _approve(owner, spender, amount) */\n      tag_73\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4577:4582  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4584:4591  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4593:4599  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4568:4576  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4568:4600  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_73:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4617:4621  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4610:4621  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4431:4628  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3242:3348  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_26:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3303:3310  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3329:3341  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3322:3341  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3242:3348  function totalSupply() public view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5190:5476  function transferFrom(... */\n    tag_32:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5317:5321  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5333:5348  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5351:5363  _msgSender() */\n      tag_77\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5351:5361  _msgSender */\n      tag_72\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5351:5363  _msgSender() */\n      jump\t// in\n    tag_77:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5333:5363  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5373:5411  _spendAllowance(from, spender, amount) */\n      tag_78\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5389:5393  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5395:5402  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5404:5410  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5373:5388  _spendAllowance */\n      tag_79\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5373:5411  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_78:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5421:5448  _transfer(from, to, amount) */\n      tag_80\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5431:5435  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5437:5439  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5441:5447  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5421:5430  _transfer */\n      tag_81\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5421:5448  _transfer(from, to, amount) */\n      jump\t// in\n    tag_80:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5465:5469  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5458:5469  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5190:5476  function transferFrom(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3091:3182  function decimals() public view virtual override returns (uint8) {... */\n    tag_35:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3149:3154  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3173:3175  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3166:3175  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3091:3182  function decimals() public view virtual override returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5871:6105  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5959:5963  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5975:5988  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5991:6003  _msgSender() */\n      tag_84\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5991:6001  _msgSender */\n      tag_72\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5991:6003  _msgSender() */\n      jump\t// in\n    tag_84:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5975:6003  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6013:6077  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_85\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6022:6027  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6029:6036  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6066:6076  addedValue */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6038:6063  allowance(owner, spender) */\n      tag_86\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6048:6053  owner */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6055:6062  spender */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6038:6047  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6038:6063  allowance(owner, spender) */\n      jump\t// in\n    tag_86:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6038:6076  allowance(owner, spender) + addedValue */\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6013:6021  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6013:6077  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n    tag_85:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6094:6098  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6087:6098  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5871:6105  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3406:3531  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3480:3487  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3506:3515  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3506:3524  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3516:3523  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3506:3524  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3499:3524  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3406:3531  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2365:2467  function symbol() public view virtual override returns (string memory) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2421:2434  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2453:2460  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2446:2460  return _symbol */\n      dup1\n      sload\n      tag_91\n      swap1\n      tag_65\n      jump\t// in\n    tag_91:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_92\n      swap1\n      tag_65\n      jump\t// in\n    tag_92:\n      dup1\n      iszero\n      tag_93\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_94\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_93)\n    tag_94:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_95:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_95\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_93:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2365:2467  function symbol() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6592:7019  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6685:6689  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6701:6714  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6717:6729  _msgSender() */\n      tag_97\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6717:6727  _msgSender */\n      tag_72\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6717:6729  _msgSender() */\n      jump\t// in\n    tag_97:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6701:6729  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6739:6763  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6766:6791  allowance(owner, spender) */\n      tag_98\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6776:6781  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6783:6790  spender */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6766:6775  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6766:6791  allowance(owner, spender) */\n      jump\t// in\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6739:6791  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6829:6844  subtractedValue */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6809:6825  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6809:6844  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6801:6886  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_100\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6920:6980  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_102\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6929:6934  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6936:6943  spender */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6964:6979  subtractedValue */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6945:6961  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6945:6979  currentAllowance - subtractedValue */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6920:6928  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6920:6980  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n    tag_102:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7008:7012  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7001:7012  return true */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6592:7019  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3727:3916  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3806:3810  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3822:3835  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3838:3850  _msgSender() */\n      tag_104\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3838:3848  _msgSender */\n      tag_72\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3838:3850  _msgSender() */\n      jump\t// in\n    tag_104:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3822:3850  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3860:3888  _transfer(owner, to, amount) */\n      tag_105\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3870:3875  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3877:3879  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3881:3887  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3860:3869  _transfer */\n      tag_81\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3860:3888  _transfer(owner, to, amount) */\n      jump\t// in\n    tag_105:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3905:3909  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3898:3909  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3727:3916  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3974:4123  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4063:4070  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4089:4100  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4089:4107  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4101:4106  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4089:4107  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4089:4116  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4108:4115  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4089:4116  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4082:4116  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3974:4123  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10504:10874  function _approve(... */\n    tag_74:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10652:10653  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10635:10654  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10635:10640  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10635:10654  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10627:10695  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_110\n      swap1\n      tag_111\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_109:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10732:10733  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10713:10734  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10713:10720  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10713:10734  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10705:10773  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_113\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_112:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10814:10820  amount */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10795  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10802  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10796:10801  owner */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10802  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10811  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10810  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10811  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10820  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10851:10858  spender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10835:10867  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10844:10849  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10835:10867  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10860:10866  amount */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10835:10867  Approval(owner, spender, amount) */\n      mload(0x40)\n      tag_115\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10504:10874  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11155:11596  function _spendAllowance(... */\n    tag_79:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11285:11309  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11312:11337  allowance(owner, spender) */\n      tag_117\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11322:11327  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11329:11336  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11312:11321  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11312:11337  allowance(owner, spender) */\n      jump\t// in\n    tag_117:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11285:11337  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11371:11388  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11351:11367  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11351:11388  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11347:11590  if (currentAllowance != type(uint256).max) {... */\n      tag_118\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11432:11438  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11412:11428  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11412:11438  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11404:11472  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_119:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11514:11565  _approve(owner, spender, currentAllowance - amount) */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11523:11528  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11530:11537  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11558:11564  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11539:11555  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11539:11564  currentAllowance - amount */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11514:11522  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11514:11565  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_122:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11347:11590  if (currentAllowance != type(uint256).max) {... */\n    tag_118:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11275:11596  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11155:11596  function _spendAllowance(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7473:8291  function _transfer(... */\n    tag_81:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7615:7616  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7599:7617  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7599:7603  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7599:7617  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7591:7659  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_125\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_124:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7691:7692  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7677:7693  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7677:7679  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7677:7693  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7669:7733  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_128\n      swap1\n      tag_129\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_127:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7744:7782  _beforeTokenTransfer(from, to, amount) */\n      tag_130\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7765:7769  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7771:7773  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7775:7781  amount */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7744:7764  _beforeTokenTransfer */\n      tag_131\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7744:7782  _beforeTokenTransfer(from, to, amount) */\n      jump\t// in\n    tag_130:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7793:7812  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7815:7824  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7815:7830  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7825:7829  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7815:7830  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7793:7830  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7863:7869  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7848:7859  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7848:7869  fromBalance >= amount */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7840:7912  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_133\n      swap1\n      tag_134\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_132:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7978:7984  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7964:7975  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7964:7984  fromBalance - amount */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7946:7955  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7946:7961  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7956:7960  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7946:7961  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7946:7984  _balances[from] = fromBalance - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8178:8184  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8161:8170  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8161:8174  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8171:8173  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8161:8174  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8161:8184  _balances[to] += amount */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8225:8227  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8210:8236  Transfer(from, to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8219:8223  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8210:8236  Transfer(from, to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8229:8235  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8210:8236  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_135\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8284  _afterTokenTransfer(from, to, amount) */\n      tag_136\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8267:8271  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8273:8275  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8277:8283  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8266  _afterTokenTransfer */\n      tag_137\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8284  _afterTokenTransfer(from, to, amount) */\n      jump\t// in\n    tag_136:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7581:8291  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7473:8291  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":12180:12301  function _beforeTokenTransfer(... */\n    tag_131:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":12889:13009  function _afterTokenTransfer(... */\n    tag_137:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_140:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_141:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:533   */\n    tag_142:\n        /* \"#utility.yul\":368:369   */\n      0x00\n        /* \"#utility.yul\":378:491   */\n    tag_180:\n        /* \"#utility.yul\":392:398   */\n      dup4\n        /* \"#utility.yul\":389:390   */\n      dup2\n        /* \"#utility.yul\":386:399   */\n      lt\n        /* \"#utility.yul\":378:491   */\n      iszero\n      tag_182\n      jumpi\n        /* \"#utility.yul\":477:478   */\n      dup1\n        /* \"#utility.yul\":472:475   */\n      dup3\n        /* \"#utility.yul\":468:479   */\n      add\n        /* \"#utility.yul\":462:480   */\n      mload\n        /* \"#utility.yul\":458:459   */\n      dup2\n        /* \"#utility.yul\":453:456   */\n      dup5\n        /* \"#utility.yul\":449:460   */\n      add\n        /* \"#utility.yul\":442:481   */\n      mstore\n        /* \"#utility.yul\":414:416   */\n      0x20\n        /* \"#utility.yul\":411:412   */\n      dup2\n        /* \"#utility.yul\":407:417   */\n      add\n        /* \"#utility.yul\":402:417   */\n      swap1\n      pop\n        /* \"#utility.yul\":378:491   */\n      jump(tag_180)\n    tag_182:\n        /* \"#utility.yul\":525:526   */\n      0x00\n        /* \"#utility.yul\":516:522   */\n      dup5\n        /* \"#utility.yul\":511:514   */\n      dup5\n        /* \"#utility.yul\":507:523   */\n      add\n        /* \"#utility.yul\":500:527   */\n      mstore\n        /* \"#utility.yul\":349:533   */\n      pop\n        /* \"#utility.yul\":287:533   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":539:641   */\n    tag_143:\n        /* \"#utility.yul\":580:586   */\n      0x00\n        /* \"#utility.yul\":631:633   */\n      0x1f\n        /* \"#utility.yul\":627:634   */\n      not\n        /* \"#utility.yul\":622:624   */\n      0x1f\n        /* \"#utility.yul\":615:620   */\n      dup4\n        /* \"#utility.yul\":611:625   */\n      add\n        /* \"#utility.yul\":607:635   */\n      and\n        /* \"#utility.yul\":597:635   */\n      swap1\n      pop\n        /* \"#utility.yul\":539:641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":647:1024   */\n    tag_144:\n        /* \"#utility.yul\":735:738   */\n      0x00\n        /* \"#utility.yul\":763:802   */\n      tag_185\n        /* \"#utility.yul\":796:801   */\n      dup3\n        /* \"#utility.yul\":763:802   */\n      tag_140\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":818:889   */\n      tag_186\n        /* \"#utility.yul\":882:888   */\n      dup2\n        /* \"#utility.yul\":877:880   */\n      dup6\n        /* \"#utility.yul\":818:889   */\n      tag_141\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":811:889   */\n      swap4\n      pop\n        /* \"#utility.yul\":898:963   */\n      tag_187\n        /* \"#utility.yul\":956:962   */\n      dup2\n        /* \"#utility.yul\":951:954   */\n      dup6\n        /* \"#utility.yul\":944:948   */\n      0x20\n        /* \"#utility.yul\":937:942   */\n      dup7\n        /* \"#utility.yul\":933:949   */\n      add\n        /* \"#utility.yul\":898:963   */\n      tag_142\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":988:1017   */\n      tag_188\n        /* \"#utility.yul\":1010:1016   */\n      dup2\n        /* \"#utility.yul\":988:1017   */\n      tag_143\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":983:986   */\n      dup5\n        /* \"#utility.yul\":979:1018   */\n      add\n        /* \"#utility.yul\":972:1018   */\n      swap2\n      pop\n        /* \"#utility.yul\":739:1024   */\n      pop\n        /* \"#utility.yul\":647:1024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1030:1343   */\n    tag_18:\n        /* \"#utility.yul\":1143:1147   */\n      0x00\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1170:1179   */\n      dup3\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"#utility.yul\":1158:1184   */\n      swap1\n      pop\n        /* \"#utility.yul\":1230:1239   */\n      dup2\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1220:1240   */\n      sub\n        /* \"#utility.yul\":1216:1217   */\n      0x00\n        /* \"#utility.yul\":1205:1214   */\n      dup4\n        /* \"#utility.yul\":1201:1218   */\n      add\n        /* \"#utility.yul\":1194:1241   */\n      mstore\n        /* \"#utility.yul\":1258:1336   */\n      tag_190\n        /* \"#utility.yul\":1331:1335   */\n      dup2\n        /* \"#utility.yul\":1322:1328   */\n      dup5\n        /* \"#utility.yul\":1258:1336   */\n      tag_144\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":1250:1336   */\n      swap1\n      pop\n        /* \"#utility.yul\":1030:1343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1430:1547   */\n    tag_146:\n        /* \"#utility.yul\":1539:1540   */\n      0x00\n        /* \"#utility.yul\":1536:1537   */\n      dup1\n        /* \"#utility.yul\":1529:1541   */\n      revert\n        /* \"#utility.yul\":1676:1802   */\n    tag_148:\n        /* \"#utility.yul\":1713:1720   */\n      0x00\n        /* \"#utility.yul\":1753:1795   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1746:1751   */\n      dup3\n        /* \"#utility.yul\":1742:1796   */\n      and\n        /* \"#utility.yul\":1731:1796   */\n      swap1\n      pop\n        /* \"#utility.yul\":1676:1802   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1808:1904   */\n    tag_149:\n        /* \"#utility.yul\":1845:1852   */\n      0x00\n        /* \"#utility.yul\":1874:1898   */\n      tag_196\n        /* \"#utility.yul\":1892:1897   */\n      dup3\n        /* \"#utility.yul\":1874:1898   */\n      tag_148\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":1863:1898   */\n      swap1\n      pop\n        /* \"#utility.yul\":1808:1904   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1910:2032   */\n    tag_150:\n        /* \"#utility.yul\":1983:2007   */\n      tag_198\n        /* \"#utility.yul\":2001:2006   */\n      dup2\n        /* \"#utility.yul\":1983:2007   */\n      tag_149\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":1976:1981   */\n      dup2\n        /* \"#utility.yul\":1973:2008   */\n      eq\n        /* \"#utility.yul\":1963:2026   */\n      tag_199\n      jumpi\n        /* \"#utility.yul\":2022:2023   */\n      0x00\n        /* \"#utility.yul\":2019:2020   */\n      dup1\n        /* \"#utility.yul\":2012:2024   */\n      revert\n        /* \"#utility.yul\":1963:2026   */\n    tag_199:\n        /* \"#utility.yul\":1910:2032   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2038:2177   */\n    tag_151:\n        /* \"#utility.yul\":2084:2089   */\n      0x00\n        /* \"#utility.yul\":2122:2128   */\n      dup2\n        /* \"#utility.yul\":2109:2129   */\n      calldataload\n        /* \"#utility.yul\":2100:2129   */\n      swap1\n      pop\n        /* \"#utility.yul\":2138:2171   */\n      tag_201\n        /* \"#utility.yul\":2165:2170   */\n      dup2\n        /* \"#utility.yul\":2138:2171   */\n      tag_150\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":2038:2177   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2183:2260   */\n    tag_152:\n        /* \"#utility.yul\":2220:2227   */\n      0x00\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2238:2254   */\n      swap1\n      pop\n        /* \"#utility.yul\":2183:2260   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2266:2388   */\n    tag_153:\n        /* \"#utility.yul\":2339:2363   */\n      tag_204\n        /* \"#utility.yul\":2357:2362   */\n      dup2\n        /* \"#utility.yul\":2339:2363   */\n      tag_152\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":2332:2337   */\n      dup2\n        /* \"#utility.yul\":2329:2364   */\n      eq\n        /* \"#utility.yul\":2319:2382   */\n      tag_205\n      jumpi\n        /* \"#utility.yul\":2378:2379   */\n      0x00\n        /* \"#utility.yul\":2375:2376   */\n      dup1\n        /* \"#utility.yul\":2368:2380   */\n      revert\n        /* \"#utility.yul\":2319:2382   */\n    tag_205:\n        /* \"#utility.yul\":2266:2388   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2394:2533   */\n    tag_154:\n        /* \"#utility.yul\":2440:2445   */\n      0x00\n        /* \"#utility.yul\":2478:2484   */\n      dup2\n        /* \"#utility.yul\":2465:2485   */\n      calldataload\n        /* \"#utility.yul\":2456:2485   */\n      swap1\n      pop\n        /* \"#utility.yul\":2494:2527   */\n      tag_207\n        /* \"#utility.yul\":2521:2526   */\n      dup2\n        /* \"#utility.yul\":2494:2527   */\n      tag_153\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":2394:2533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2539:3013   */\n    tag_21:\n        /* \"#utility.yul\":2607:2613   */\n      0x00\n        /* \"#utility.yul\":2615:2621   */\n      dup1\n        /* \"#utility.yul\":2664:2666   */\n      0x40\n        /* \"#utility.yul\":2652:2661   */\n      dup4\n        /* \"#utility.yul\":2643:2650   */\n      dup6\n        /* \"#utility.yul\":2639:2662   */\n      sub\n        /* \"#utility.yul\":2635:2667   */\n      slt\n        /* \"#utility.yul\":2632:2751   */\n      iszero\n      tag_209\n      jumpi\n        /* \"#utility.yul\":2670:2749   */\n      tag_210\n      tag_146\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":2632:2751   */\n    tag_209:\n        /* \"#utility.yul\":2790:2791   */\n      0x00\n        /* \"#utility.yul\":2815:2868   */\n      tag_211\n        /* \"#utility.yul\":2860:2867   */\n      dup6\n        /* \"#utility.yul\":2851:2857   */\n      dup3\n        /* \"#utility.yul\":2840:2849   */\n      dup7\n        /* \"#utility.yul\":2836:2858   */\n      add\n        /* \"#utility.yul\":2815:2868   */\n      tag_151\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":2805:2868   */\n      swap3\n      pop\n        /* \"#utility.yul\":2761:2878   */\n      pop\n        /* \"#utility.yul\":2917:2919   */\n      0x20\n        /* \"#utility.yul\":2943:2996   */\n      tag_212\n        /* \"#utility.yul\":2988:2995   */\n      dup6\n        /* \"#utility.yul\":2979:2985   */\n      dup3\n        /* \"#utility.yul\":2968:2977   */\n      dup7\n        /* \"#utility.yul\":2964:2986   */\n      add\n        /* \"#utility.yul\":2943:2996   */\n      tag_154\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":2933:2996   */\n      swap2\n      pop\n        /* \"#utility.yul\":2888:3006   */\n      pop\n        /* \"#utility.yul\":2539:3013   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3019:3109   */\n    tag_155:\n        /* \"#utility.yul\":3053:3060   */\n      0x00\n        /* \"#utility.yul\":3096:3101   */\n      dup2\n        /* \"#utility.yul\":3089:3102   */\n      iszero\n        /* \"#utility.yul\":3082:3103   */\n      iszero\n        /* \"#utility.yul\":3071:3103   */\n      swap1\n      pop\n        /* \"#utility.yul\":3019:3109   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3224   */\n    tag_156:\n        /* \"#utility.yul\":3196:3217   */\n      tag_215\n        /* \"#utility.yul\":3211:3216   */\n      dup2\n        /* \"#utility.yul\":3196:3217   */\n      tag_155\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":3191:3194   */\n      dup3\n        /* \"#utility.yul\":3184:3218   */\n      mstore\n        /* \"#utility.yul\":3115:3224   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3230:3440   */\n    tag_24:\n        /* \"#utility.yul\":3317:3321   */\n      0x00\n        /* \"#utility.yul\":3355:3357   */\n      0x20\n        /* \"#utility.yul\":3344:3353   */\n      dup3\n        /* \"#utility.yul\":3340:3358   */\n      add\n        /* \"#utility.yul\":3332:3358   */\n      swap1\n      pop\n        /* \"#utility.yul\":3368:3433   */\n      tag_217\n        /* \"#utility.yul\":3430:3431   */\n      0x00\n        /* \"#utility.yul\":3419:3428   */\n      dup4\n        /* \"#utility.yul\":3415:3432   */\n      add\n        /* \"#utility.yul\":3406:3412   */\n      dup5\n        /* \"#utility.yul\":3368:3433   */\n      tag_156\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":3230:3440   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3446:3564   */\n    tag_157:\n        /* \"#utility.yul\":3533:3557   */\n      tag_219\n        /* \"#utility.yul\":3551:3556   */\n      dup2\n        /* \"#utility.yul\":3533:3557   */\n      tag_152\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":3528:3531   */\n      dup3\n        /* \"#utility.yul\":3521:3558   */\n      mstore\n        /* \"#utility.yul\":3446:3564   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3570:3792   */\n    tag_28:\n        /* \"#utility.yul\":3663:3667   */\n      0x00\n        /* \"#utility.yul\":3701:3703   */\n      0x20\n        /* \"#utility.yul\":3690:3699   */\n      dup3\n        /* \"#utility.yul\":3686:3704   */\n      add\n        /* \"#utility.yul\":3678:3704   */\n      swap1\n      pop\n        /* \"#utility.yul\":3714:3785   */\n      tag_221\n        /* \"#utility.yul\":3782:3783   */\n      0x00\n        /* \"#utility.yul\":3771:3780   */\n      dup4\n        /* \"#utility.yul\":3767:3784   */\n      add\n        /* \"#utility.yul\":3758:3764   */\n      dup5\n        /* \"#utility.yul\":3714:3785   */\n      tag_157\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":3570:3792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3798:4417   */\n    tag_31:\n        /* \"#utility.yul\":3875:3881   */\n      0x00\n        /* \"#utility.yul\":3883:3889   */\n      dup1\n        /* \"#utility.yul\":3891:3897   */\n      0x00\n        /* \"#utility.yul\":3940:3942   */\n      0x60\n        /* \"#utility.yul\":3928:3937   */\n      dup5\n        /* \"#utility.yul\":3919:3926   */\n      dup7\n        /* \"#utility.yul\":3915:3938   */\n      sub\n        /* \"#utility.yul\":3911:3943   */\n      slt\n        /* \"#utility.yul\":3908:4027   */\n      iszero\n      tag_223\n      jumpi\n        /* \"#utility.yul\":3946:4025   */\n      tag_224\n      tag_146\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":3908:4027   */\n    tag_223:\n        /* \"#utility.yul\":4066:4067   */\n      0x00\n        /* \"#utility.yul\":4091:4144   */\n      tag_225\n        /* \"#utility.yul\":4136:4143   */\n      dup7\n        /* \"#utility.yul\":4127:4133   */\n      dup3\n        /* \"#utility.yul\":4116:4125   */\n      dup8\n        /* \"#utility.yul\":4112:4134   */\n      add\n        /* \"#utility.yul\":4091:4144   */\n      tag_151\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":4081:4144   */\n      swap4\n      pop\n        /* \"#utility.yul\":4037:4154   */\n      pop\n        /* \"#utility.yul\":4193:4195   */\n      0x20\n        /* \"#utility.yul\":4219:4272   */\n      tag_226\n        /* \"#utility.yul\":4264:4271   */\n      dup7\n        /* \"#utility.yul\":4255:4261   */\n      dup3\n        /* \"#utility.yul\":4244:4253   */\n      dup8\n        /* \"#utility.yul\":4240:4262   */\n      add\n        /* \"#utility.yul\":4219:4272   */\n      tag_151\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":4209:4272   */\n      swap3\n      pop\n        /* \"#utility.yul\":4164:4282   */\n      pop\n        /* \"#utility.yul\":4321:4323   */\n      0x40\n        /* \"#utility.yul\":4347:4400   */\n      tag_227\n        /* \"#utility.yul\":4392:4399   */\n      dup7\n        /* \"#utility.yul\":4383:4389   */\n      dup3\n        /* \"#utility.yul\":4372:4381   */\n      dup8\n        /* \"#utility.yul\":4368:4390   */\n      add\n        /* \"#utility.yul\":4347:4400   */\n      tag_154\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":4337:4400   */\n      swap2\n      pop\n        /* \"#utility.yul\":4292:4410   */\n      pop\n        /* \"#utility.yul\":3798:4417   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4423:4509   */\n    tag_158:\n        /* \"#utility.yul\":4458:4465   */\n      0x00\n        /* \"#utility.yul\":4498:4502   */\n      0xff\n        /* \"#utility.yul\":4491:4496   */\n      dup3\n        /* \"#utility.yul\":4487:4503   */\n      and\n        /* \"#utility.yul\":4476:4503   */\n      swap1\n      pop\n        /* \"#utility.yul\":4423:4509   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4515:4627   */\n    tag_159:\n        /* \"#utility.yul\":4598:4620   */\n      tag_230\n        /* \"#utility.yul\":4614:4619   */\n      dup2\n        /* \"#utility.yul\":4598:4620   */\n      tag_158\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":4593:4596   */\n      dup3\n        /* \"#utility.yul\":4586:4621   */\n      mstore\n        /* \"#utility.yul\":4515:4627   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4633:4847   */\n    tag_37:\n        /* \"#utility.yul\":4722:4726   */\n      0x00\n        /* \"#utility.yul\":4760:4762   */\n      0x20\n        /* \"#utility.yul\":4749:4758   */\n      dup3\n        /* \"#utility.yul\":4745:4763   */\n      add\n        /* \"#utility.yul\":4737:4763   */\n      swap1\n      pop\n        /* \"#utility.yul\":4773:4840   */\n      tag_232\n        /* \"#utility.yul\":4837:4838   */\n      0x00\n        /* \"#utility.yul\":4826:4835   */\n      dup4\n        /* \"#utility.yul\":4822:4839   */\n      add\n        /* \"#utility.yul\":4813:4819   */\n      dup5\n        /* \"#utility.yul\":4773:4840   */\n      tag_159\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":4633:4847   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4853:5182   */\n    tag_44:\n        /* \"#utility.yul\":4912:4918   */\n      0x00\n        /* \"#utility.yul\":4961:4963   */\n      0x20\n        /* \"#utility.yul\":4949:4958   */\n      dup3\n        /* \"#utility.yul\":4940:4947   */\n      dup5\n        /* \"#utility.yul\":4936:4959   */\n      sub\n        /* \"#utility.yul\":4932:4964   */\n      slt\n        /* \"#utility.yul\":4929:5048   */\n      iszero\n      tag_234\n      jumpi\n        /* \"#utility.yul\":4967:5046   */\n      tag_235\n      tag_146\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":4929:5048   */\n    tag_234:\n        /* \"#utility.yul\":5087:5088   */\n      0x00\n        /* \"#utility.yul\":5112:5165   */\n      tag_236\n        /* \"#utility.yul\":5157:5164   */\n      dup5\n        /* \"#utility.yul\":5148:5154   */\n      dup3\n        /* \"#utility.yul\":5137:5146   */\n      dup6\n        /* \"#utility.yul\":5133:5155   */\n      add\n        /* \"#utility.yul\":5112:5165   */\n      tag_151\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":5102:5165   */\n      swap2\n      pop\n        /* \"#utility.yul\":5058:5175   */\n      pop\n        /* \"#utility.yul\":4853:5182   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5188:5662   */\n    tag_60:\n        /* \"#utility.yul\":5256:5262   */\n      0x00\n        /* \"#utility.yul\":5264:5270   */\n      dup1\n        /* \"#utility.yul\":5313:5315   */\n      0x40\n        /* \"#utility.yul\":5301:5310   */\n      dup4\n        /* \"#utility.yul\":5292:5299   */\n      dup6\n        /* \"#utility.yul\":5288:5311   */\n      sub\n        /* \"#utility.yul\":5284:5316   */\n      slt\n        /* \"#utility.yul\":5281:5400   */\n      iszero\n      tag_238\n      jumpi\n        /* \"#utility.yul\":5319:5398   */\n      tag_239\n      tag_146\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":5281:5400   */\n    tag_238:\n        /* \"#utility.yul\":5439:5440   */\n      0x00\n        /* \"#utility.yul\":5464:5517   */\n      tag_240\n        /* \"#utility.yul\":5509:5516   */\n      dup6\n        /* \"#utility.yul\":5500:5506   */\n      dup3\n        /* \"#utility.yul\":5489:5498   */\n      dup7\n        /* \"#utility.yul\":5485:5507   */\n      add\n        /* \"#utility.yul\":5464:5517   */\n      tag_151\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":5454:5517   */\n      swap3\n      pop\n        /* \"#utility.yul\":5410:5527   */\n      pop\n        /* \"#utility.yul\":5566:5568   */\n      0x20\n        /* \"#utility.yul\":5592:5645   */\n      tag_241\n        /* \"#utility.yul\":5637:5644   */\n      dup6\n        /* \"#utility.yul\":5628:5634   */\n      dup3\n        /* \"#utility.yul\":5617:5626   */\n      dup7\n        /* \"#utility.yul\":5613:5635   */\n      add\n        /* \"#utility.yul\":5592:5645   */\n      tag_151\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":5582:5645   */\n      swap2\n      pop\n        /* \"#utility.yul\":5537:5655   */\n      pop\n        /* \"#utility.yul\":5188:5662   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5668:5848   */\n    tag_160:\n        /* \"#utility.yul\":5716:5793   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5713:5714   */\n      0x00\n        /* \"#utility.yul\":5706:5794   */\n      mstore\n        /* \"#utility.yul\":5813:5817   */\n      0x22\n        /* \"#utility.yul\":5810:5811   */\n      0x04\n        /* \"#utility.yul\":5803:5818   */\n      mstore\n        /* \"#utility.yul\":5837:5841   */\n      0x24\n        /* \"#utility.yul\":5834:5835   */\n      0x00\n        /* \"#utility.yul\":5827:5842   */\n      revert\n        /* \"#utility.yul\":5854:6174   */\n    tag_65:\n        /* \"#utility.yul\":5898:5904   */\n      0x00\n        /* \"#utility.yul\":5935:5936   */\n      0x02\n        /* \"#utility.yul\":5929:5933   */\n      dup3\n        /* \"#utility.yul\":5925:5937   */\n      div\n        /* \"#utility.yul\":5915:5937   */\n      swap1\n      pop\n        /* \"#utility.yul\":5982:5983   */\n      0x01\n        /* \"#utility.yul\":5976:5980   */\n      dup3\n        /* \"#utility.yul\":5972:5984   */\n      and\n        /* \"#utility.yul\":6003:6021   */\n      dup1\n        /* \"#utility.yul\":5993:6074   */\n      tag_244\n      jumpi\n        /* \"#utility.yul\":6059:6063   */\n      0x7f\n        /* \"#utility.yul\":6051:6057   */\n      dup3\n        /* \"#utility.yul\":6047:6064   */\n      and\n        /* \"#utility.yul\":6037:6064   */\n      swap2\n      pop\n        /* \"#utility.yul\":5993:6074   */\n    tag_244:\n        /* \"#utility.yul\":6121:6123   */\n      0x20\n        /* \"#utility.yul\":6113:6119   */\n      dup3\n        /* \"#utility.yul\":6110:6124   */\n      lt\n        /* \"#utility.yul\":6090:6108   */\n      dup2\n        /* \"#utility.yul\":6087:6125   */\n      sub\n        /* \"#utility.yul\":6084:6168   */\n      tag_245\n      jumpi\n        /* \"#utility.yul\":6140:6158   */\n      tag_246\n      tag_160\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":6084:6168   */\n    tag_245:\n        /* \"#utility.yul\":5905:6174   */\n      pop\n        /* \"#utility.yul\":5854:6174   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6180:6360   */\n    tag_161:\n        /* \"#utility.yul\":6228:6305   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6225:6226   */\n      0x00\n        /* \"#utility.yul\":6218:6306   */\n      mstore\n        /* \"#utility.yul\":6325:6329   */\n      0x11\n        /* \"#utility.yul\":6322:6323   */\n      0x04\n        /* \"#utility.yul\":6315:6330   */\n      mstore\n        /* \"#utility.yul\":6349:6353   */\n      0x24\n        /* \"#utility.yul\":6346:6347   */\n      0x00\n        /* \"#utility.yul\":6339:6354   */\n      revert\n        /* \"#utility.yul\":6366:6557   */\n    tag_88:\n        /* \"#utility.yul\":6406:6409   */\n      0x00\n        /* \"#utility.yul\":6425:6445   */\n      tag_249\n        /* \"#utility.yul\":6443:6444   */\n      dup3\n        /* \"#utility.yul\":6425:6445   */\n      tag_152\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":6420:6445   */\n      swap2\n      pop\n        /* \"#utility.yul\":6459:6479   */\n      tag_250\n        /* \"#utility.yul\":6477:6478   */\n      dup4\n        /* \"#utility.yul\":6459:6479   */\n      tag_152\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":6454:6479   */\n      swap3\n      pop\n        /* \"#utility.yul\":6502:6503   */\n      dup3\n        /* \"#utility.yul\":6499:6500   */\n      dup3\n        /* \"#utility.yul\":6495:6504   */\n      add\n        /* \"#utility.yul\":6488:6504   */\n      swap1\n      pop\n        /* \"#utility.yul\":6523:6526   */\n      dup1\n        /* \"#utility.yul\":6520:6521   */\n      dup3\n        /* \"#utility.yul\":6517:6527   */\n      gt\n        /* \"#utility.yul\":6514:6550   */\n      iszero\n      tag_251\n      jumpi\n        /* \"#utility.yul\":6530:6548   */\n      tag_252\n      tag_161\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":6514:6550   */\n    tag_251:\n        /* \"#utility.yul\":6366:6557   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6563:6787   */\n    tag_162:\n        /* \"#utility.yul\":6703:6737   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":6699:6700   */\n      0x00\n        /* \"#utility.yul\":6691:6697   */\n      dup3\n        /* \"#utility.yul\":6687:6701   */\n      add\n        /* \"#utility.yul\":6680:6738   */\n      mstore\n        /* \"#utility.yul\":6772:6779   */\n      0x207a65726f000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6767:6769   */\n      0x20\n        /* \"#utility.yul\":6759:6765   */\n      dup3\n        /* \"#utility.yul\":6755:6770   */\n      add\n        /* \"#utility.yul\":6748:6780   */\n      mstore\n        /* \"#utility.yul\":6563:6787   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6793:7159   */\n    tag_163:\n        /* \"#utility.yul\":6935:6938   */\n      0x00\n        /* \"#utility.yul\":6956:7023   */\n      tag_255\n        /* \"#utility.yul\":7020:7022   */\n      0x25\n        /* \"#utility.yul\":7015:7018   */\n      dup4\n        /* \"#utility.yul\":6956:7023   */\n      tag_141\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":6949:7023   */\n      swap2\n      pop\n        /* \"#utility.yul\":7032:7125   */\n      tag_256\n        /* \"#utility.yul\":7121:7124   */\n      dup3\n        /* \"#utility.yul\":7032:7125   */\n      tag_162\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":7150:7152   */\n      0x40\n        /* \"#utility.yul\":7145:7148   */\n      dup3\n        /* \"#utility.yul\":7141:7153   */\n      add\n        /* \"#utility.yul\":7134:7153   */\n      swap1\n      pop\n        /* \"#utility.yul\":6793:7159   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7165:7584   */\n    tag_101:\n        /* \"#utility.yul\":7331:7335   */\n      0x00\n        /* \"#utility.yul\":7369:7371   */\n      0x20\n        /* \"#utility.yul\":7358:7367   */\n      dup3\n        /* \"#utility.yul\":7354:7372   */\n      add\n        /* \"#utility.yul\":7346:7372   */\n      swap1\n      pop\n        /* \"#utility.yul\":7418:7427   */\n      dup2\n        /* \"#utility.yul\":7412:7416   */\n      dup2\n        /* \"#utility.yul\":7408:7428   */\n      sub\n        /* \"#utility.yul\":7404:7405   */\n      0x00\n        /* \"#utility.yul\":7393:7402   */\n      dup4\n        /* \"#utility.yul\":7389:7406   */\n      add\n        /* \"#utility.yul\":7382:7429   */\n      mstore\n        /* \"#utility.yul\":7446:7577   */\n      tag_258\n        /* \"#utility.yul\":7572:7576   */\n      dup2\n        /* \"#utility.yul\":7446:7577   */\n      tag_163\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":7438:7577   */\n      swap1\n      pop\n        /* \"#utility.yul\":7165:7584   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7590:7813   */\n    tag_164:\n        /* \"#utility.yul\":7730:7764   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":7726:7727   */\n      0x00\n        /* \"#utility.yul\":7718:7724   */\n      dup3\n        /* \"#utility.yul\":7714:7728   */\n      add\n        /* \"#utility.yul\":7707:7765   */\n      mstore\n        /* \"#utility.yul\":7799:7805   */\n      0x7265737300000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7794:7796   */\n      0x20\n        /* \"#utility.yul\":7786:7792   */\n      dup3\n        /* \"#utility.yul\":7782:7797   */\n      add\n        /* \"#utility.yul\":7775:7806   */\n      mstore\n        /* \"#utility.yul\":7590:7813   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7819:8185   */\n    tag_165:\n        /* \"#utility.yul\":7961:7964   */\n      0x00\n        /* \"#utility.yul\":7982:8049   */\n      tag_261\n        /* \"#utility.yul\":8046:8048   */\n      0x24\n        /* \"#utility.yul\":8041:8044   */\n      dup4\n        /* \"#utility.yul\":7982:8049   */\n      tag_141\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":7975:8049   */\n      swap2\n      pop\n        /* \"#utility.yul\":8058:8151   */\n      tag_262\n        /* \"#utility.yul\":8147:8150   */\n      dup3\n        /* \"#utility.yul\":8058:8151   */\n      tag_164\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":8176:8178   */\n      0x40\n        /* \"#utility.yul\":8171:8174   */\n      dup3\n        /* \"#utility.yul\":8167:8179   */\n      add\n        /* \"#utility.yul\":8160:8179   */\n      swap1\n      pop\n        /* \"#utility.yul\":7819:8185   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8191:8610   */\n    tag_111:\n        /* \"#utility.yul\":8357:8361   */\n      0x00\n        /* \"#utility.yul\":8395:8397   */\n      0x20\n        /* \"#utility.yul\":8384:8393   */\n      dup3\n        /* \"#utility.yul\":8380:8398   */\n      add\n        /* \"#utility.yul\":8372:8398   */\n      swap1\n      pop\n        /* \"#utility.yul\":8444:8453   */\n      dup2\n        /* \"#utility.yul\":8438:8442   */\n      dup2\n        /* \"#utility.yul\":8434:8454   */\n      sub\n        /* \"#utility.yul\":8430:8431   */\n      0x00\n        /* \"#utility.yul\":8419:8428   */\n      dup4\n        /* \"#utility.yul\":8415:8432   */\n      add\n        /* \"#utility.yul\":8408:8455   */\n      mstore\n        /* \"#utility.yul\":8472:8603   */\n      tag_264\n        /* \"#utility.yul\":8598:8602   */\n      dup2\n        /* \"#utility.yul\":8472:8603   */\n      tag_165\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":8464:8603   */\n      swap1\n      pop\n        /* \"#utility.yul\":8191:8610   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8616:8837   */\n    tag_166:\n        /* \"#utility.yul\":8756:8790   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":8752:8753   */\n      0x00\n        /* \"#utility.yul\":8744:8750   */\n      dup3\n        /* \"#utility.yul\":8740:8754   */\n      add\n        /* \"#utility.yul\":8733:8791   */\n      mstore\n        /* \"#utility.yul\":8825:8829   */\n      0x7373000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8820:8822   */\n      0x20\n        /* \"#utility.yul\":8812:8818   */\n      dup3\n        /* \"#utility.yul\":8808:8823   */\n      add\n        /* \"#utility.yul\":8801:8830   */\n      mstore\n        /* \"#utility.yul\":8616:8837   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8843:9209   */\n    tag_167:\n        /* \"#utility.yul\":8985:8988   */\n      0x00\n        /* \"#utility.yul\":9006:9073   */\n      tag_267\n        /* \"#utility.yul\":9070:9072   */\n      0x22\n        /* \"#utility.yul\":9065:9068   */\n      dup4\n        /* \"#utility.yul\":9006:9073   */\n      tag_141\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":8999:9073   */\n      swap2\n      pop\n        /* \"#utility.yul\":9082:9175   */\n      tag_268\n        /* \"#utility.yul\":9171:9174   */\n      dup3\n        /* \"#utility.yul\":9082:9175   */\n      tag_166\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":9200:9202   */\n      0x40\n        /* \"#utility.yul\":9195:9198   */\n      dup3\n        /* \"#utility.yul\":9191:9203   */\n      add\n        /* \"#utility.yul\":9184:9203   */\n      swap1\n      pop\n        /* \"#utility.yul\":8843:9209   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9215:9634   */\n    tag_114:\n        /* \"#utility.yul\":9381:9385   */\n      0x00\n        /* \"#utility.yul\":9419:9421   */\n      0x20\n        /* \"#utility.yul\":9408:9417   */\n      dup3\n        /* \"#utility.yul\":9404:9422   */\n      add\n        /* \"#utility.yul\":9396:9422   */\n      swap1\n      pop\n        /* \"#utility.yul\":9468:9477   */\n      dup2\n        /* \"#utility.yul\":9462:9466   */\n      dup2\n        /* \"#utility.yul\":9458:9478   */\n      sub\n        /* \"#utility.yul\":9454:9455   */\n      0x00\n        /* \"#utility.yul\":9443:9452   */\n      dup4\n        /* \"#utility.yul\":9439:9456   */\n      add\n        /* \"#utility.yul\":9432:9479   */\n      mstore\n        /* \"#utility.yul\":9496:9627   */\n      tag_270\n        /* \"#utility.yul\":9622:9626   */\n      dup2\n        /* \"#utility.yul\":9496:9627   */\n      tag_167\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":9488:9627   */\n      swap1\n      pop\n        /* \"#utility.yul\":9215:9634   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9640:9819   */\n    tag_168:\n        /* \"#utility.yul\":9780:9811   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":9776:9777   */\n      0x00\n        /* \"#utility.yul\":9768:9774   */\n      dup3\n        /* \"#utility.yul\":9764:9778   */\n      add\n        /* \"#utility.yul\":9757:9812   */\n      mstore\n        /* \"#utility.yul\":9640:9819   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9825:10191   */\n    tag_169:\n        /* \"#utility.yul\":9967:9970   */\n      0x00\n        /* \"#utility.yul\":9988:10055   */\n      tag_273\n        /* \"#utility.yul\":10052:10054   */\n      0x1d\n        /* \"#utility.yul\":10047:10050   */\n      dup4\n        /* \"#utility.yul\":9988:10055   */\n      tag_141\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":9981:10055   */\n      swap2\n      pop\n        /* \"#utility.yul\":10064:10157   */\n      tag_274\n        /* \"#utility.yul\":10153:10156   */\n      dup3\n        /* \"#utility.yul\":10064:10157   */\n      tag_168\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":10182:10184   */\n      0x20\n        /* \"#utility.yul\":10177:10180   */\n      dup3\n        /* \"#utility.yul\":10173:10185   */\n      add\n        /* \"#utility.yul\":10166:10185   */\n      swap1\n      pop\n        /* \"#utility.yul\":9825:10191   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10197:10616   */\n    tag_121:\n        /* \"#utility.yul\":10363:10367   */\n      0x00\n        /* \"#utility.yul\":10401:10403   */\n      0x20\n        /* \"#utility.yul\":10390:10399   */\n      dup3\n        /* \"#utility.yul\":10386:10404   */\n      add\n        /* \"#utility.yul\":10378:10404   */\n      swap1\n      pop\n        /* \"#utility.yul\":10450:10459   */\n      dup2\n        /* \"#utility.yul\":10444:10448   */\n      dup2\n        /* \"#utility.yul\":10440:10460   */\n      sub\n        /* \"#utility.yul\":10436:10437   */\n      0x00\n        /* \"#utility.yul\":10425:10434   */\n      dup4\n        /* \"#utility.yul\":10421:10438   */\n      add\n        /* \"#utility.yul\":10414:10461   */\n      mstore\n        /* \"#utility.yul\":10478:10609   */\n      tag_276\n        /* \"#utility.yul\":10604:10608   */\n      dup2\n        /* \"#utility.yul\":10478:10609   */\n      tag_169\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":10470:10609   */\n      swap1\n      pop\n        /* \"#utility.yul\":10197:10616   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10622:10846   */\n    tag_170:\n        /* \"#utility.yul\":10762:10796   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":10758:10759   */\n      0x00\n        /* \"#utility.yul\":10750:10756   */\n      dup3\n        /* \"#utility.yul\":10746:10760   */\n      add\n        /* \"#utility.yul\":10739:10797   */\n      mstore\n        /* \"#utility.yul\":10831:10838   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10826:10828   */\n      0x20\n        /* \"#utility.yul\":10818:10824   */\n      dup3\n        /* \"#utility.yul\":10814:10829   */\n      add\n        /* \"#utility.yul\":10807:10839   */\n      mstore\n        /* \"#utility.yul\":10622:10846   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10852:11218   */\n    tag_171:\n        /* \"#utility.yul\":10994:10997   */\n      0x00\n        /* \"#utility.yul\":11015:11082   */\n      tag_279\n        /* \"#utility.yul\":11079:11081   */\n      0x25\n        /* \"#utility.yul\":11074:11077   */\n      dup4\n        /* \"#utility.yul\":11015:11082   */\n      tag_141\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":11008:11082   */\n      swap2\n      pop\n        /* \"#utility.yul\":11091:11184   */\n      tag_280\n        /* \"#utility.yul\":11180:11183   */\n      dup3\n        /* \"#utility.yul\":11091:11184   */\n      tag_170\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":11209:11211   */\n      0x40\n        /* \"#utility.yul\":11204:11207   */\n      dup3\n        /* \"#utility.yul\":11200:11212   */\n      add\n        /* \"#utility.yul\":11193:11212   */\n      swap1\n      pop\n        /* \"#utility.yul\":10852:11218   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11224:11643   */\n    tag_126:\n        /* \"#utility.yul\":11390:11394   */\n      0x00\n        /* \"#utility.yul\":11428:11430   */\n      0x20\n        /* \"#utility.yul\":11417:11426   */\n      dup3\n        /* \"#utility.yul\":11413:11431   */\n      add\n        /* \"#utility.yul\":11405:11431   */\n      swap1\n      pop\n        /* \"#utility.yul\":11477:11486   */\n      dup2\n        /* \"#utility.yul\":11471:11475   */\n      dup2\n        /* \"#utility.yul\":11467:11487   */\n      sub\n        /* \"#utility.yul\":11463:11464   */\n      0x00\n        /* \"#utility.yul\":11452:11461   */\n      dup4\n        /* \"#utility.yul\":11448:11465   */\n      add\n        /* \"#utility.yul\":11441:11488   */\n      mstore\n        /* \"#utility.yul\":11505:11636   */\n      tag_282\n        /* \"#utility.yul\":11631:11635   */\n      dup2\n        /* \"#utility.yul\":11505:11636   */\n      tag_171\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":11497:11636   */\n      swap1\n      pop\n        /* \"#utility.yul\":11224:11643   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11649:11871   */\n    tag_172:\n        /* \"#utility.yul\":11789:11823   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":11785:11786   */\n      0x00\n        /* \"#utility.yul\":11777:11783   */\n      dup3\n        /* \"#utility.yul\":11773:11787   */\n      add\n        /* \"#utility.yul\":11766:11824   */\n      mstore\n        /* \"#utility.yul\":11858:11863   */\n      0x6573730000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11853:11855   */\n      0x20\n        /* \"#utility.yul\":11845:11851   */\n      dup3\n        /* \"#utility.yul\":11841:11856   */\n      add\n        /* \"#utility.yul\":11834:11864   */\n      mstore\n        /* \"#utility.yul\":11649:11871   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11877:12243   */\n    tag_173:\n        /* \"#utility.yul\":12019:12022   */\n      0x00\n        /* \"#utility.yul\":12040:12107   */\n      tag_285\n        /* \"#utility.yul\":12104:12106   */\n      0x23\n        /* \"#utility.yul\":12099:12102   */\n      dup4\n        /* \"#utility.yul\":12040:12107   */\n      tag_141\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":12033:12107   */\n      swap2\n      pop\n        /* \"#utility.yul\":12116:12209   */\n      tag_286\n        /* \"#utility.yul\":12205:12208   */\n      dup3\n        /* \"#utility.yul\":12116:12209   */\n      tag_172\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":12234:12236   */\n      0x40\n        /* \"#utility.yul\":12229:12232   */\n      dup3\n        /* \"#utility.yul\":12225:12237   */\n      add\n        /* \"#utility.yul\":12218:12237   */\n      swap1\n      pop\n        /* \"#utility.yul\":11877:12243   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12249:12668   */\n    tag_129:\n        /* \"#utility.yul\":12415:12419   */\n      0x00\n        /* \"#utility.yul\":12453:12455   */\n      0x20\n        /* \"#utility.yul\":12442:12451   */\n      dup3\n        /* \"#utility.yul\":12438:12456   */\n      add\n        /* \"#utility.yul\":12430:12456   */\n      swap1\n      pop\n        /* \"#utility.yul\":12502:12511   */\n      dup2\n        /* \"#utility.yul\":12496:12500   */\n      dup2\n        /* \"#utility.yul\":12492:12512   */\n      sub\n        /* \"#utility.yul\":12488:12489   */\n      0x00\n        /* \"#utility.yul\":12477:12486   */\n      dup4\n        /* \"#utility.yul\":12473:12490   */\n      add\n        /* \"#utility.yul\":12466:12513   */\n      mstore\n        /* \"#utility.yul\":12530:12661   */\n      tag_288\n        /* \"#utility.yul\":12656:12660   */\n      dup2\n        /* \"#utility.yul\":12530:12661   */\n      tag_173\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":12522:12661   */\n      swap1\n      pop\n        /* \"#utility.yul\":12249:12668   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12674:12899   */\n    tag_174:\n        /* \"#utility.yul\":12814:12848   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":12810:12811   */\n      0x00\n        /* \"#utility.yul\":12802:12808   */\n      dup3\n        /* \"#utility.yul\":12798:12812   */\n      add\n        /* \"#utility.yul\":12791:12849   */\n      mstore\n        /* \"#utility.yul\":12883:12891   */\n      0x616c616e63650000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12878:12880   */\n      0x20\n        /* \"#utility.yul\":12870:12876   */\n      dup3\n        /* \"#utility.yul\":12866:12881   */\n      add\n        /* \"#utility.yul\":12859:12892   */\n      mstore\n        /* \"#utility.yul\":12674:12899   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12905:13271   */\n    tag_175:\n        /* \"#utility.yul\":13047:13050   */\n      0x00\n        /* \"#utility.yul\":13068:13135   */\n      tag_291\n        /* \"#utility.yul\":13132:13134   */\n      0x26\n        /* \"#utility.yul\":13127:13130   */\n      dup4\n        /* \"#utility.yul\":13068:13135   */\n      tag_141\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":13061:13135   */\n      swap2\n      pop\n        /* \"#utility.yul\":13144:13237   */\n      tag_292\n        /* \"#utility.yul\":13233:13236   */\n      dup3\n        /* \"#utility.yul\":13144:13237   */\n      tag_174\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":13262:13264   */\n      0x40\n        /* \"#utility.yul\":13257:13260   */\n      dup3\n        /* \"#utility.yul\":13253:13265   */\n      add\n        /* \"#utility.yul\":13246:13265   */\n      swap1\n      pop\n        /* \"#utility.yul\":12905:13271   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13277:13696   */\n    tag_134:\n        /* \"#utility.yul\":13443:13447   */\n      0x00\n        /* \"#utility.yul\":13481:13483   */\n      0x20\n        /* \"#utility.yul\":13470:13479   */\n      dup3\n        /* \"#utility.yul\":13466:13484   */\n      add\n        /* \"#utility.yul\":13458:13484   */\n      swap1\n      pop\n        /* \"#utility.yul\":13530:13539   */\n      dup2\n        /* \"#utility.yul\":13524:13528   */\n      dup2\n        /* \"#utility.yul\":13520:13540   */\n      sub\n        /* \"#utility.yul\":13516:13517   */\n      0x00\n        /* \"#utility.yul\":13505:13514   */\n      dup4\n        /* \"#utility.yul\":13501:13518   */\n      add\n        /* \"#utility.yul\":13494:13541   */\n      mstore\n        /* \"#utility.yul\":13558:13689   */\n      tag_294\n        /* \"#utility.yul\":13684:13688   */\n      dup2\n        /* \"#utility.yul\":13558:13689   */\n      tag_175\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":13550:13689   */\n      swap1\n      pop\n        /* \"#utility.yul\":13277:13696   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220005f598b59a8ef1b830a8e6bb81db6c2d3d112539000d8e58b45a6286fcebbe164736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_44": {
									"entryPoint": null,
									"id": 44,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 376,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 451,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 502,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_memory": {
									"entryPoint": 247,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 99,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 278,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 746,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 635,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1067,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 882,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1028,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 902,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1222,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 332,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 767,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 693,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1192,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 193,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 892,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1160,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 646,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 146,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 942,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 119,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 124,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 114,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 109,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 129,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 783,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1147,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1000,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 796,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 952,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 995,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8574:6",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "423:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:12:6"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "546:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "563:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "566:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "556:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "556:12:6"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "628:54:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "638:38:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "663:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "672:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:28:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:6"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "611:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "621:6:6",
														"type": ""
													}
												],
												"src": "580:102:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "716:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "733:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "736:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "726:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "726:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "830:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "833:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "823:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "823:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "854:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "857:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "847:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "847:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "917:238:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:6",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:6"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "945:40:6"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "931:10:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1096:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:6"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:6"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1033:62:6"
															},
															"nodeType": "YulIf",
															"src": "1030:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:6",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1127:22:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:6"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "903:6:6",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "911:4:6",
														"type": ""
													}
												],
												"src": "874:281:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1202:88:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1212:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1222:20:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:6"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:6"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1251:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:6"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1186:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1195:6:6",
														"type": ""
													}
												],
												"src": "1161:129:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1363:241:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1468:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1437:30:6"
															},
															"nodeType": "YulIf",
															"src": "1434:56:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1500:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:6"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1508:29:6"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1574:23:6",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:15:6"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:6"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1347:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1358:4:6",
														"type": ""
													}
												],
												"src": "1296:308:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1672:184:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1682:10:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1691:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1686:1:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1751:63:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1776:3:6"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1781:1:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1772:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1772:11:6"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1795:3:6"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1800:1:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1791:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1791:11:6"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1785:5:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1785:18:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1765:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1765:39:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1765:39:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1712:1:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1715:6:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1709:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1709:13:6"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1723:19:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1725:15:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1734:1:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1737:2:6",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1730:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1730:10:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1725:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1705:3:6",
																"statements": []
															},
															"src": "1701:113:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1834:3:6"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1839:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1830:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1830:16:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1848:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1823:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1823:27:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1823:27:6"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1654:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1659:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1664:6:6",
														"type": ""
													}
												],
												"src": "1610:246:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1957:339:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1967:75:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2034:6:6"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "1992:41:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1992:49:6"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1976:15:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1976:66:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1967:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2065:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2051:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2051:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2051:21:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2081:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2096:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2103:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2092:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2092:16:6"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2085:3:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2146:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "2148:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2148:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2148:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2127:3:6"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2132:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2123:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2123:16:6"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2141:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2120:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2120:25:6"
															},
															"nodeType": "YulIf",
															"src": "2117:112:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2273:3:6"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2278:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2283:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "2238:34:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2238:52:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2238:52:6"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1930:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1935:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1943:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1951:5:6",
														"type": ""
													}
												],
												"src": "1862:434:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2389:282:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2438:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "2440:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2440:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2440:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2417:6:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2425:4:6",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2413:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2413:17:6"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2432:3:6"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2409:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2409:27:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2402:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2402:35:6"
															},
															"nodeType": "YulIf",
															"src": "2399:122:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2530:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2550:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2544:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2544:13:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2534:6:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2566:99:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2638:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2646:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2634:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2634:17:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2653:6:6"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2661:3:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "2575:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2575:90:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2566:5:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2367:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2375:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2383:5:6",
														"type": ""
													}
												],
												"src": "2316:355:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2791:739:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2837:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2839:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2839:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2839:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2812:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2821:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2808:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2808:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2833:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2804:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2804:32:6"
															},
															"nodeType": "YulIf",
															"src": "2801:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "2930:291:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2945:38:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2969:9:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2980:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2965:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2965:17:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2959:5:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2959:24:6"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2949:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3030:83:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3032:77:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3032:79:6"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3032:79:6"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3002:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3010:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2999:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2999:30:6"
																	},
																	"nodeType": "YulIf",
																	"src": "2996:117:6"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3127:84:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3183:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3194:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3179:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3179:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3203:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3137:41:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3137:74:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3127:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3231:292:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3246:39:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3270:9:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3281:2:6",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3266:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3266:18:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3260:5:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3260:25:6"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3250:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3332:83:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3334:77:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3334:79:6"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3334:79:6"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3304:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3312:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3301:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3301:30:6"
																	},
																	"nodeType": "YulIf",
																	"src": "3298:117:6"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3429:84:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3485:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3496:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3481:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3481:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3505:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3439:41:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3439:74:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3429:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2753:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2764:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2776:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2784:6:6",
														"type": ""
													}
												],
												"src": "2677:853:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3595:40:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3606:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3622:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3616:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3616:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3606:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3578:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3588:6:6",
														"type": ""
													}
												],
												"src": "3536:99:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3669:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3686:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3689:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3679:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3679:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3679:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3783:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3786:4:6",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3776:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3776:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3776:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3807:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3810:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3800:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3800:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3800:15:6"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "3641:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3878:269:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3888:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3902:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3908:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "3898:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3898:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3888:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3919:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3949:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3955:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3945:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3945:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "3923:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3996:51:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4010:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "4024:6:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4032:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "4020:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4020:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4010:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3976:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3969:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3969:26:6"
															},
															"nodeType": "YulIf",
															"src": "3966:81:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4099:42:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "4113:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4113:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4113:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4063:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4086:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4094:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4083:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4083:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4060:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4060:38:6"
															},
															"nodeType": "YulIf",
															"src": "4057:84:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3862:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3871:6:6",
														"type": ""
													}
												],
												"src": "3827:320:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4207:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4217:11:6",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "4225:3:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "4217:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4245:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "4248:3:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4238:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4238:14:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4238:14:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4261:26:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4279:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4282:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "4269:9:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4269:18:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "4261:4:6"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "4194:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4202:4:6",
														"type": ""
													}
												],
												"src": "4153:141:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4344:49:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4354:33:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4372:5:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4379:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4368:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4368:14:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4384:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "4364:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4364:23:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4354:6:6"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4327:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4337:6:6",
														"type": ""
													}
												],
												"src": "4300:93:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4452:54:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4462:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "4487:4:6"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4493:5:6"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "4483:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4483:16:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "4462:8:6"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "4427:4:6",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4433:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "4443:8:6",
														"type": ""
													}
												],
												"src": "4399:107:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4588:317:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4598:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "4619:10:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4631:1:6",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "4615:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4615:18:6"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "4602:9:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4642:109:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "4673:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4684:66:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "4654:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4654:97:6"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "4646:4:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4760:51:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "4791:9:6"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "4802:8:6"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "4772:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4772:39:6"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "4760:8:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4820:30:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4833:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "4844:4:6"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4840:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4840:9:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4829:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4829:21:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4820:5:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4859:40:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4872:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "4883:8:6"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "4893:4:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4879:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4879:19:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4869:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4869:30:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4859:6:6"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4549:5:6",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "4556:10:6",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "4568:8:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4581:6:6",
														"type": ""
													}
												],
												"src": "4512:393:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4956:32:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4966:16:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4977:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4966:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4938:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4948:7:6",
														"type": ""
													}
												],
												"src": "4911:77:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5026:28:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5036:12:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5043:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5036:3:6"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5012:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5022:3:6",
														"type": ""
													}
												],
												"src": "4994:60:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5120:82:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5130:66:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5188:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5170:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5170:24:6"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "5161:8:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5161:34:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5143:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5143:53:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "5130:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5100:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "5110:9:6",
														"type": ""
													}
												],
												"src": "5060:142:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5255:28:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5265:12:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5272:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5265:3:6"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5241:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5251:3:6",
														"type": ""
													}
												],
												"src": "5208:75:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5365:193:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5375:63:6",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "5430:7:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5399:30:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5399:39:6"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "5379:16:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "5454:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "5494:4:6"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "5488:5:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5488:11:6"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5501:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "5533:16:6"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5509:23:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5509:41:6"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "5460:27:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5460:91:6"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "5447:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5447:105:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5447:105:6"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "5342:4:6",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5348:6:6",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "5356:7:6",
														"type": ""
													}
												],
												"src": "5289:269:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5613:24:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5623:8:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5630:1:6",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5623:3:6"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5609:3:6",
														"type": ""
													}
												],
												"src": "5564:73:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5696:136:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5706:46:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5720:30:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5720:32:6"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "5710:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "5805:4:6"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5811:6:6"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "5819:6:6"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5761:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5761:65:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5761:65:6"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "5682:4:6",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5688:6:6",
														"type": ""
													}
												],
												"src": "5643:189:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5888:136:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5955:63:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "5999:5:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6006:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "5969:29:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5969:39:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5969:39:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "5908:5:6"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "5915:3:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5905:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5905:14:6"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5920:26:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5922:22:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "5935:5:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5942:1:6",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5931:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5931:13:6"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "5922:5:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5902:2:6",
																"statements": []
															},
															"src": "5898:120:6"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "5876:5:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5883:3:6",
														"type": ""
													}
												],
												"src": "5838:186:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6109:464:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6135:431:6",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6149:54:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "6197:5:6"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "6165:31:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6165:38:6"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "6153:8:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6216:63:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "6239:8:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "6267:10:6"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "6249:17:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6249:29:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6235:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6235:44:6"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "6220:11:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "6436:27:6",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "6438:23:6",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "6453:8:6"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "6438:11:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "6420:10:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6432:2:6",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "6417:2:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6417:18:6"
																		},
																		"nodeType": "YulIf",
																		"src": "6414:49:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "6505:11:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "6522:8:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "6550:3:6"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "6532:17:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6532:22:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6518:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6518:37:6"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "6476:28:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6476:80:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6476:80:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "6126:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6131:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6123:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6123:11:6"
															},
															"nodeType": "YulIf",
															"src": "6120:446:6"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "6085:5:6",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "6092:3:6",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "6097:10:6",
														"type": ""
													}
												],
												"src": "6030:543:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6642:54:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6652:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "6677:4:6"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6683:5:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6673:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6673:16:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "6652:8:6"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "6617:4:6",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6623:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "6633:8:6",
														"type": ""
													}
												],
												"src": "6579:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6753:118:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6763:68:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6812:1:6",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "6815:5:6"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "6808:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6808:13:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6827:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "6823:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6823:6:6"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "6779:28:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6779:51:6"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "6775:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6775:56:6"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "6767:4:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6840:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6854:4:6"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "6860:4:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6850:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6850:15:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "6840:6:6"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6730:4:6",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "6736:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "6746:6:6",
														"type": ""
													}
												],
												"src": "6702:169:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6957:214:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7090:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7117:4:6"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "7123:3:6"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "7098:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7098:29:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "7090:4:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7136:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7147:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7157:1:6",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "7160:3:6"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7153:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7153:11:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7144:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7144:21:6"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "7136:4:6"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6938:4:6",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "6944:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "6952:4:6",
														"type": ""
													}
												],
												"src": "6876:295:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7268:1303:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7279:51:6",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "7326:3:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "7293:32:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7293:37:6"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "7283:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7415:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7417:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7417:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7417:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7387:6:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7395:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7384:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7384:30:6"
															},
															"nodeType": "YulIf",
															"src": "7381:56:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7447:52:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "7493:4:6"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "7487:5:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7487:11:6"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "7461:25:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7461:38:6"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "7451:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "7592:4:6"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "7598:6:6"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7606:6:6"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "7546:45:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7546:67:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7546:67:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7623:18:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7640:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "7627:9:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7651:17:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7664:4:6",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "7651:9:6"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7715:611:6",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7729:37:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "7748:6:6"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "7760:4:6",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "7756:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7756:9:6"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "7744:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7744:22:6"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "7733:7:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7780:51:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "7826:4:6"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "7794:31:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7794:37:6"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "7784:6:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7844:10:6",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7853:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "7848:1:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "7912:163:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "7937:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "7955:3:6"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "7960:9:6"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "7951:3:6"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "7951:19:6"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "7945:5:6"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "7945:26:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "7930:6:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7930:42:6"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "7930:42:6"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "7989:24:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "8003:6:6"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8011:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7999:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7999:14:6"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "7989:6:6"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "8030:31:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "8047:9:6"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8058:2:6",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8043:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8043:18:6"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "8030:9:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "7878:1:6"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "7881:7:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "7875:2:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7875:14:6"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "7890:21:6",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "7892:17:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "7901:1:6"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7904:4:6",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7897:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7897:12:6"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "7892:1:6"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "7871:3:6",
																					"statements": []
																				},
																				"src": "7867:208:6"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8111:156:6",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "8129:43:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "8156:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "8161:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "8152:3:6"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8152:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "8146:5:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8146:26:6"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "8133:9:6",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "8196:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "8223:9:6"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "8238:6:6"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "8246:4:6",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "8234:3:6"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "8234:17:6"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "8204:18:6"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8204:48:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "8189:6:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8189:64:6"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "8189:64:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "8094:7:6"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "8103:6:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "8091:2:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8091:19:6"
																				},
																				"nodeType": "YulIf",
																				"src": "8088:179:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "8287:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "8301:6:6"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "8309:1:6",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "8297:3:6"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "8297:14:6"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "8313:1:6",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "8293:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8293:22:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "8280:6:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8280:36:6"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8280:36:6"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "7708:618:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7713:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8343:222:6",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "8357:14:6",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8370:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "8361:5:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8394:67:6",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "8412:35:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "8431:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "8436:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "8427:3:6"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8427:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "8421:5:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8421:26:6"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "8412:5:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "8387:6:6"
																				},
																				"nodeType": "YulIf",
																				"src": "8384:77:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "8481:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "8540:5:6"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "8547:6:6"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "8487:52:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8487:67:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "8474:6:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8474:81:6"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8474:81:6"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "8335:230:6",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7688:6:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7696:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7685:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7685:14:6"
															},
															"nodeType": "YulSwitch",
															"src": "7678:887:6"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "7257:4:6",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "7263:3:6",
														"type": ""
													}
												],
												"src": "7176:1395:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604051620017ec380380620017ec8339818101604052810190620000379190620001f6565b8160039081620000489190620004c6565b5080600490816200005a9190620004c6565b505050620005ad565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620000cc8262000081565b810181811067ffffffffffffffff82111715620000ee57620000ed62000092565b5b80604052505050565b60006200010362000063565b9050620001118282620000c1565b919050565b600067ffffffffffffffff82111562000134576200013362000092565b5b6200013f8262000081565b9050602081019050919050565b60005b838110156200016c5780820151818401526020810190506200014f565b60008484015250505050565b60006200018f620001898462000116565b620000f7565b905082815260208101848484011115620001ae57620001ad6200007c565b5b620001bb8482856200014c565b509392505050565b600082601f830112620001db57620001da62000077565b5b8151620001ed84826020860162000178565b91505092915050565b6000806040838503121562000210576200020f6200006d565b5b600083015167ffffffffffffffff81111562000231576200023062000072565b5b6200023f85828601620001c3565b925050602083015167ffffffffffffffff81111562000263576200026262000072565b5b6200027185828601620001c3565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620002ce57607f821691505b602082108103620002e457620002e362000286565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200034e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200030f565b6200035a86836200030f565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620003a7620003a16200039b8462000372565b6200037c565b62000372565b9050919050565b6000819050919050565b620003c38362000386565b620003db620003d282620003ae565b8484546200031c565b825550505050565b600090565b620003f2620003e3565b620003ff818484620003b8565b505050565b5b8181101562000427576200041b600082620003e8565b60018101905062000405565b5050565b601f82111562000476576200044081620002ea565b6200044b84620002ff565b810160208510156200045b578190505b620004736200046a85620002ff565b83018262000404565b50505b505050565b600082821c905092915050565b60006200049b600019846008026200047b565b1980831691505092915050565b6000620004b6838362000488565b9150826002028217905092915050565b620004d1826200027b565b67ffffffffffffffff811115620004ed57620004ec62000092565b5b620004f98254620002b5565b620005068282856200042b565b600060209050601f8311600181146200053e576000841562000529578287015190505b620005358582620004a8565b865550620005a5565b601f1984166200054e86620002ea565b60005b82811015620005785784890151825560018201915060208501945060208101905062000551565b8683101562000598578489015162000594601f89168262000488565b8355505b6001600288020188555050505b505050505050565b61122f80620005bd6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610b0c565b60405180910390f35b6100e660048036038101906100e19190610bc7565b610308565b6040516100f39190610c22565b60405180910390f35b61010461032b565b6040516101119190610c4c565b60405180910390f35b610134600480360381019061012f9190610c67565b610335565b6040516101419190610c22565b60405180910390f35b610152610364565b60405161015f9190610cd6565b60405180910390f35b610182600480360381019061017d9190610bc7565b61036d565b60405161018f9190610c22565b60405180910390f35b6101b260048036038101906101ad9190610cf1565b6103a4565b6040516101bf9190610c4c565b60405180910390f35b6101d06103ec565b6040516101dd9190610b0c565b60405180910390f35b61020060048036038101906101fb9190610bc7565b61047e565b60405161020d9190610c22565b60405180910390f35b610230600480360381019061022b9190610bc7565b6104f5565b60405161023d9190610c22565b60405180910390f35b610260600480360381019061025b9190610d1e565b610518565b60405161026d9190610c4c565b60405180910390f35b60606003805461028590610d8d565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610d8d565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b60008061031361059f565b90506103208185856105a7565b600191505092915050565b6000600254905090565b60008061034061059f565b905061034d858285610770565b6103588585856107fc565b60019150509392505050565b60006012905090565b60008061037861059f565b905061039981858561038a8589610518565b6103949190610ded565b6105a7565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546103fb90610d8d565b80601f016020809104026020016040519081016040528092919081815260200182805461042790610d8d565b80156104745780601f1061044957610100808354040283529160200191610474565b820191906000526020600020905b81548152906001019060200180831161045757829003601f168201915b5050505050905090565b60008061048961059f565b905060006104978286610518565b9050838110156104dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d390610e93565b60405180910390fd5b6104e982868684036105a7565b60019250505092915050565b60008061050061059f565b905061050d8185856107fc565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610616576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060d90610f25565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610685576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067c90610fb7565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107639190610c4c565b60405180910390a3505050565b600061077c8484610518565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f657818110156107e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107df90611023565b60405180910390fd5b6107f584848484036105a7565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361086b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610862906110b5565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d190611147565b60405180910390fd5b6108e5838383610a72565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561096b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610962906111d9565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a599190610c4c565b60405180910390a3610a6c848484610a77565b50505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ab6578082015181840152602081019050610a9b565b60008484015250505050565b6000601f19601f8301169050919050565b6000610ade82610a7c565b610ae88185610a87565b9350610af8818560208601610a98565b610b0181610ac2565b840191505092915050565b60006020820190508181036000830152610b268184610ad3565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b5e82610b33565b9050919050565b610b6e81610b53565b8114610b7957600080fd5b50565b600081359050610b8b81610b65565b92915050565b6000819050919050565b610ba481610b91565b8114610baf57600080fd5b50565b600081359050610bc181610b9b565b92915050565b60008060408385031215610bde57610bdd610b2e565b5b6000610bec85828601610b7c565b9250506020610bfd85828601610bb2565b9150509250929050565b60008115159050919050565b610c1c81610c07565b82525050565b6000602082019050610c376000830184610c13565b92915050565b610c4681610b91565b82525050565b6000602082019050610c616000830184610c3d565b92915050565b600080600060608486031215610c8057610c7f610b2e565b5b6000610c8e86828701610b7c565b9350506020610c9f86828701610b7c565b9250506040610cb086828701610bb2565b9150509250925092565b600060ff82169050919050565b610cd081610cba565b82525050565b6000602082019050610ceb6000830184610cc7565b92915050565b600060208284031215610d0757610d06610b2e565b5b6000610d1584828501610b7c565b91505092915050565b60008060408385031215610d3557610d34610b2e565b5b6000610d4385828601610b7c565b9250506020610d5485828601610b7c565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610da557607f821691505b602082108103610db857610db7610d5e565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610df882610b91565b9150610e0383610b91565b9250828201905080821115610e1b57610e1a610dbe565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000610e7d602583610a87565b9150610e8882610e21565b604082019050919050565b60006020820190508181036000830152610eac81610e70565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000610f0f602483610a87565b9150610f1a82610eb3565b604082019050919050565b60006020820190508181036000830152610f3e81610f02565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000610fa1602283610a87565b9150610fac82610f45565b604082019050919050565b60006020820190508181036000830152610fd081610f94565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b600061100d601d83610a87565b915061101882610fd7565b602082019050919050565b6000602082019050818103600083015261103c81611000565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b600061109f602583610a87565b91506110aa82611043565b604082019050919050565b600060208201905081810360008301526110ce81611092565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611131602383610a87565b915061113c826110d5565b604082019050919050565b6000602082019050818103600083015261116081611124565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006111c3602683610a87565b91506111ce82611167565b604082019050919050565b600060208201905081810360008301526111f2816111b6565b905091905056fea2646970667358221220005f598b59a8ef1b830a8e6bb81db6c2d3d112539000d8e58b45a6286fcebbe164736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x17EC CODESIZE SUB DUP1 PUSH3 0x17EC DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x1F6 JUMP JUMPDEST DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x48 SWAP2 SWAP1 PUSH3 0x4C6 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0x5A SWAP2 SWAP1 PUSH3 0x4C6 JUMP JUMPDEST POP POP POP PUSH3 0x5AD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0xCC DUP3 PUSH3 0x81 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0xEE JUMPI PUSH3 0xED PUSH3 0x92 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x103 PUSH3 0x63 JUMP JUMPDEST SWAP1 POP PUSH3 0x111 DUP3 DUP3 PUSH3 0xC1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x134 JUMPI PUSH3 0x133 PUSH3 0x92 JUMP JUMPDEST JUMPDEST PUSH3 0x13F DUP3 PUSH3 0x81 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x16C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x14F JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x18F PUSH3 0x189 DUP5 PUSH3 0x116 JUMP JUMPDEST PUSH3 0xF7 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x1AE JUMPI PUSH3 0x1AD PUSH3 0x7C JUMP JUMPDEST JUMPDEST PUSH3 0x1BB DUP5 DUP3 DUP6 PUSH3 0x14C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1DB JUMPI PUSH3 0x1DA PUSH3 0x77 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x1ED DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x178 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x210 JUMPI PUSH3 0x20F PUSH3 0x6D JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x231 JUMPI PUSH3 0x230 PUSH3 0x72 JUMP JUMPDEST JUMPDEST PUSH3 0x23F DUP6 DUP3 DUP7 ADD PUSH3 0x1C3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x263 JUMPI PUSH3 0x262 PUSH3 0x72 JUMP JUMPDEST JUMPDEST PUSH3 0x271 DUP6 DUP3 DUP7 ADD PUSH3 0x1C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2CE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2E4 JUMPI PUSH3 0x2E3 PUSH3 0x286 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x34E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x30F JUMP JUMPDEST PUSH3 0x35A DUP7 DUP4 PUSH3 0x30F JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3A7 PUSH3 0x3A1 PUSH3 0x39B DUP5 PUSH3 0x372 JUMP JUMPDEST PUSH3 0x37C JUMP JUMPDEST PUSH3 0x372 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3C3 DUP4 PUSH3 0x386 JUMP JUMPDEST PUSH3 0x3DB PUSH3 0x3D2 DUP3 PUSH3 0x3AE JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x31C JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x3F2 PUSH3 0x3E3 JUMP JUMPDEST PUSH3 0x3FF DUP2 DUP5 DUP5 PUSH3 0x3B8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x427 JUMPI PUSH3 0x41B PUSH1 0x0 DUP3 PUSH3 0x3E8 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x405 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x476 JUMPI PUSH3 0x440 DUP2 PUSH3 0x2EA JUMP JUMPDEST PUSH3 0x44B DUP5 PUSH3 0x2FF JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x45B JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x473 PUSH3 0x46A DUP6 PUSH3 0x2FF JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x404 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x49B PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x47B JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4B6 DUP4 DUP4 PUSH3 0x488 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x4D1 DUP3 PUSH3 0x27B JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x4ED JUMPI PUSH3 0x4EC PUSH3 0x92 JUMP JUMPDEST JUMPDEST PUSH3 0x4F9 DUP3 SLOAD PUSH3 0x2B5 JUMP JUMPDEST PUSH3 0x506 DUP3 DUP3 DUP6 PUSH3 0x42B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x53E JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x529 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x535 DUP6 DUP3 PUSH3 0x4A8 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x5A5 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x54E DUP7 PUSH3 0x2EA JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x578 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x551 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x598 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x594 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x488 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x122F DUP1 PUSH3 0x5BD PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xC67 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xCF1 JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xD1E JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x313 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x320 DUP2 DUP6 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x340 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x34D DUP6 DUP3 DUP6 PUSH2 0x770 JUMP JUMPDEST PUSH2 0x358 DUP6 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x378 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP2 DUP6 DUP6 PUSH2 0x38A DUP6 DUP10 PUSH2 0x518 JUMP JUMPDEST PUSH2 0x394 SWAP2 SWAP1 PUSH2 0xDED JUMP JUMPDEST PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3FB SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x427 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x474 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x449 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x474 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x457 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x489 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x497 DUP3 DUP7 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D3 SWAP1 PUSH2 0xE93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x500 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x50D DUP2 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x616 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60D SWAP1 PUSH2 0xF25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x685 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67C SWAP1 PUSH2 0xFB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x763 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77C DUP5 DUP5 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7F6 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DF SWAP1 PUSH2 0x1023 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F5 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x86B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x862 SWAP1 PUSH2 0x10B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D1 SWAP1 PUSH2 0x1147 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E5 DUP4 DUP4 DUP4 PUSH2 0xA72 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x96B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x962 SWAP1 PUSH2 0x11D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA59 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA6C DUP5 DUP5 DUP5 PUSH2 0xA77 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAB6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA9B JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xADE DUP3 PUSH2 0xA7C JUMP JUMPDEST PUSH2 0xAE8 DUP2 DUP6 PUSH2 0xA87 JUMP JUMPDEST SWAP4 POP PUSH2 0xAF8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA98 JUMP JUMPDEST PUSH2 0xB01 DUP2 PUSH2 0xAC2 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB26 DUP2 DUP5 PUSH2 0xAD3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB5E DUP3 PUSH2 0xB33 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB6E DUP2 PUSH2 0xB53 JUMP JUMPDEST DUP2 EQ PUSH2 0xB79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB8B DUP2 PUSH2 0xB65 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBA4 DUP2 PUSH2 0xB91 JUMP JUMPDEST DUP2 EQ PUSH2 0xBAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBC1 DUP2 PUSH2 0xB9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBDE JUMPI PUSH2 0xBDD PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBEC DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xBFD DUP6 DUP3 DUP7 ADD PUSH2 0xBB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC1C DUP2 PUSH2 0xC07 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC37 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC13 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC46 DUP2 PUSH2 0xB91 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC61 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC3D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC80 JUMPI PUSH2 0xC7F PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC8E DUP7 DUP3 DUP8 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC9F DUP7 DUP3 DUP8 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCB0 DUP7 DUP3 DUP8 ADD PUSH2 0xBB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCD0 DUP2 PUSH2 0xCBA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCEB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCC7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD07 JUMPI PUSH2 0xD06 PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD15 DUP5 DUP3 DUP6 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD35 JUMPI PUSH2 0xD34 PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD43 DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD54 DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xDA5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xDB8 JUMPI PUSH2 0xDB7 PUSH2 0xD5E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDF8 DUP3 PUSH2 0xB91 JUMP JUMPDEST SWAP2 POP PUSH2 0xE03 DUP4 PUSH2 0xB91 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE1B JUMPI PUSH2 0xE1A PUSH2 0xDBE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE7D PUSH1 0x25 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xE88 DUP3 PUSH2 0xE21 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEAC DUP2 PUSH2 0xE70 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF0F PUSH1 0x24 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xF1A DUP3 PUSH2 0xEB3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF3E DUP2 PUSH2 0xF02 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFA1 PUSH1 0x22 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xFAC DUP3 PUSH2 0xF45 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFD0 DUP2 PUSH2 0xF94 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100D PUSH1 0x1D DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x1018 DUP3 PUSH2 0xFD7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x103C DUP2 PUSH2 0x1000 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x109F PUSH1 0x25 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x10AA DUP3 PUSH2 0x1043 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10CE DUP2 PUSH2 0x1092 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1131 PUSH1 0x23 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x113C DUP3 PUSH2 0x10D5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1160 DUP2 PUSH2 0x1124 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11C3 PUSH1 0x26 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x11CE DUP3 PUSH2 0x1167 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11F2 DUP2 PUSH2 0x11B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP 0x5F MSIZE DUP12 MSIZE 0xA8 0xEF SHL DUP4 EXP DUP15 PUSH12 0xB81DB6C2D3D112539000D8E5 DUP12 GASLIMIT 0xA6 0x28 PUSH16 0xCEBBE164736F6C634300081200330000 ",
							"sourceMap": "1401:11610:0:-:0;;;1976:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2050:5;2042;:13;;;;;;:::i;:::-;;2075:7;2065;:17;;;;;;:::i;:::-;;1976:113;;1401:11610;;7:75:6;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:853::-;2776:6;2784;2833:2;2821:9;2812:7;2808:23;2804:32;2801:119;;;2839:79;;:::i;:::-;2801:119;2980:1;2969:9;2965:17;2959:24;3010:18;3002:6;2999:30;2996:117;;;3032:79;;:::i;:::-;2996:117;3137:74;3203:7;3194:6;3183:9;3179:22;3137:74;:::i;:::-;3127:84;;2930:291;3281:2;3270:9;3266:18;3260:25;3312:18;3304:6;3301:30;3298:117;;;3334:79;;:::i;:::-;3298:117;3439:74;3505:7;3496:6;3485:9;3481:22;3439:74;:::i;:::-;3429:84;;3231:292;2677:853;;;;;:::o;3536:99::-;3588:6;3622:5;3616:12;3606:22;;3536:99;;;:::o;3641:180::-;3689:77;3686:1;3679:88;3786:4;3783:1;3776:15;3810:4;3807:1;3800:15;3827:320;3871:6;3908:1;3902:4;3898:12;3888:22;;3955:1;3949:4;3945:12;3976:18;3966:81;;4032:4;4024:6;4020:17;4010:27;;3966:81;4094:2;4086:6;4083:14;4063:18;4060:38;4057:84;;4113:18;;:::i;:::-;4057:84;3878:269;3827:320;;;:::o;4153:141::-;4202:4;4225:3;4217:11;;4248:3;4245:1;4238:14;4282:4;4279:1;4269:18;4261:26;;4153:141;;;:::o;4300:93::-;4337:6;4384:2;4379;4372:5;4368:14;4364:23;4354:33;;4300:93;;;:::o;4399:107::-;4443:8;4493:5;4487:4;4483:16;4462:37;;4399:107;;;;:::o;4512:393::-;4581:6;4631:1;4619:10;4615:18;4654:97;4684:66;4673:9;4654:97;:::i;:::-;4772:39;4802:8;4791:9;4772:39;:::i;:::-;4760:51;;4844:4;4840:9;4833:5;4829:21;4820:30;;4893:4;4883:8;4879:19;4872:5;4869:30;4859:40;;4588:317;;4512:393;;;;;:::o;4911:77::-;4948:7;4977:5;4966:16;;4911:77;;;:::o;4994:60::-;5022:3;5043:5;5036:12;;4994:60;;;:::o;5060:142::-;5110:9;5143:53;5161:34;5170:24;5188:5;5170:24;:::i;:::-;5161:34;:::i;:::-;5143:53;:::i;:::-;5130:66;;5060:142;;;:::o;5208:75::-;5251:3;5272:5;5265:12;;5208:75;;;:::o;5289:269::-;5399:39;5430:7;5399:39;:::i;:::-;5460:91;5509:41;5533:16;5509:41;:::i;:::-;5501:6;5494:4;5488:11;5460:91;:::i;:::-;5454:4;5447:105;5365:193;5289:269;;;:::o;5564:73::-;5609:3;5564:73;:::o;5643:189::-;5720:32;;:::i;:::-;5761:65;5819:6;5811;5805:4;5761:65;:::i;:::-;5696:136;5643:189;;:::o;5838:186::-;5898:120;5915:3;5908:5;5905:14;5898:120;;;5969:39;6006:1;5999:5;5969:39;:::i;:::-;5942:1;5935:5;5931:13;5922:22;;5898:120;;;5838:186;;:::o;6030:543::-;6131:2;6126:3;6123:11;6120:446;;;6165:38;6197:5;6165:38;:::i;:::-;6249:29;6267:10;6249:29;:::i;:::-;6239:8;6235:44;6432:2;6420:10;6417:18;6414:49;;;6453:8;6438:23;;6414:49;6476:80;6532:22;6550:3;6532:22;:::i;:::-;6522:8;6518:37;6505:11;6476:80;:::i;:::-;6135:431;;6120:446;6030:543;;;:::o;6579:117::-;6633:8;6683:5;6677:4;6673:16;6652:37;;6579:117;;;;:::o;6702:169::-;6746:6;6779:51;6827:1;6823:6;6815:5;6812:1;6808:13;6779:51;:::i;:::-;6775:56;6860:4;6854;6850:15;6840:25;;6753:118;6702:169;;;;:::o;6876:295::-;6952:4;7098:29;7123:3;7117:4;7098:29;:::i;:::-;7090:37;;7160:3;7157:1;7153:11;7147:4;7144:21;7136:29;;6876:295;;;;:::o;7176:1395::-;7293:37;7326:3;7293:37;:::i;:::-;7395:18;7387:6;7384:30;7381:56;;;7417:18;;:::i;:::-;7381:56;7461:38;7493:4;7487:11;7461:38;:::i;:::-;7546:67;7606:6;7598;7592:4;7546:67;:::i;:::-;7640:1;7664:4;7651:17;;7696:2;7688:6;7685:14;7713:1;7708:618;;;;8370:1;8387:6;8384:77;;;8436:9;8431:3;8427:19;8421:26;8412:35;;8384:77;8487:67;8547:6;8540:5;8487:67;:::i;:::-;8481:4;8474:81;8343:222;7678:887;;7708:618;7760:4;7756:9;7748:6;7744:22;7794:37;7826:4;7794:37;:::i;:::-;7853:1;7867:208;7881:7;7878:1;7875:14;7867:208;;;7960:9;7955:3;7951:19;7945:26;7937:6;7930:42;8011:1;8003:6;7999:14;7989:24;;8058:2;8047:9;8043:18;8030:31;;7904:4;7901:1;7897:12;7892:17;;7867:208;;;8103:6;8094:7;8091:19;8088:179;;;8161:9;8156:3;8152:19;8146:26;8204:48;8246:4;8238:6;8234:17;8223:9;8204:48;:::i;:::-;8196:6;8189:64;8111:156;8088:179;8313:1;8309;8301:6;8297:14;8293:22;8287:4;8280:36;7715:611;;;7678:887;;7268:1303;;;7176:1395;;:::o;1401:11610:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_585": {
									"entryPoint": 2679,
									"id": 585,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_520": {
									"entryPoint": 1447,
									"id": 520,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_574": {
									"entryPoint": 2674,
									"id": 574,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_701": {
									"entryPoint": 1439,
									"id": 701,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_563": {
									"entryPoint": 1904,
									"id": 563,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_346": {
									"entryPoint": 2044,
									"id": 346,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_141": {
									"entryPoint": 1304,
									"id": 141,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_166": {
									"entryPoint": 776,
									"id": 166,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_98": {
									"entryPoint": 932,
									"id": 98,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_74": {
									"entryPoint": 868,
									"id": 74,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_269": {
									"entryPoint": 1150,
									"id": 269,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_228": {
									"entryPoint": 877,
									"id": 228,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_54": {
									"entryPoint": 630,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_64": {
									"entryPoint": 1004,
									"id": 64,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_84": {
									"entryPoint": 811,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_199": {
									"entryPoint": 821,
									"id": 199,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_123": {
									"entryPoint": 1269,
									"id": 123,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 2940,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2994,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3313,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3358,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3175,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3015,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3091,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2771,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4388,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3988,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4096,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4534,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4242,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3842,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3696,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3133,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 3271,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3106,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2828,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4423,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4023,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4131,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4569,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4277,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3877,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3731,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3148,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 3286,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2684,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2695,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3565,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2899,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3079,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2867,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2961,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 3258,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 2712,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 3469,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3518,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 3422,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2862,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 2754,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f": {
									"entryPoint": 4309,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029": {
									"entryPoint": 3909,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe": {
									"entryPoint": 4055,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6": {
									"entryPoint": 4455,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea": {
									"entryPoint": 4163,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208": {
									"entryPoint": 3763,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8": {
									"entryPoint": 3617,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2917,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2971,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:13699:6",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:40:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "87:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "49:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "59:6:6",
														"type": ""
													}
												],
												"src": "7:99:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "208:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "218:19:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "218:19:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "246:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "270:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "261:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "180:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "185:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "196:11:6",
														"type": ""
													}
												],
												"src": "112:169:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "349:184:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "359:10:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "368:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "363:1:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "428:63:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "453:3:6"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "458:1:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "449:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "449:11:6"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "472:3:6"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "477:1:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "468:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "468:11:6"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "462:5:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "462:18:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "442:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "442:39:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "442:39:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "389:1:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "392:6:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "386:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "386:13:6"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "400:19:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "402:15:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "411:1:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "414:2:6",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "407:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "407:10:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "402:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "382:3:6",
																"statements": []
															},
															"src": "378:113:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "511:3:6"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "507:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "507:16:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "525:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "500:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "500:27:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "500:27:6"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "331:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "336:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "341:6:6",
														"type": ""
													}
												],
												"src": "287:246:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "587:54:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "597:38:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "615:5:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "622:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "611:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "611:14:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "631:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "627:7:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "607:28:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:6"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "570:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "580:6:6",
														"type": ""
													}
												],
												"src": "539:102:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "739:285:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "749:53:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "796:5:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "763:32:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "763:39:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "753:6:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "811:78:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "877:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "882:6:6"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "818:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "818:71:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "937:5:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "944:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "933:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "933:16:6"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "951:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "956:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "898:34:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "898:65:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "898:65:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "972:46:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "983:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1010:6:6"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "988:21:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "988:29:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "979:39:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "972:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "720:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "727:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "735:3:6",
														"type": ""
													}
												],
												"src": "647:377:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1148:195:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1158:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1205:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1216:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1201:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1201:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1224:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1230:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1220:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1194:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1250:86:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1322:6:6"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1331:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1258:63:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1258:78:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1250:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1120:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1132:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1143:4:6",
														"type": ""
													}
												],
												"src": "1030:313:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1389:35:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1399:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1415:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1409:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1409:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1399:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1382:6:6",
														"type": ""
													}
												],
												"src": "1349:75:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1519:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1536:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1539:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1529:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1529:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1529:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1430:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1642:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1662:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1652:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1652:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1553:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1721:81:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1731:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1746:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1753:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1742:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1742:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1731:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1703:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1713:7:6",
														"type": ""
													}
												],
												"src": "1676:126:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1853:51:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1863:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1892:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1874:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1874:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1863:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1835:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1845:7:6",
														"type": ""
													}
												],
												"src": "1808:96:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1953:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2010:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2019:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2022:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2012:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2012:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2012:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1976:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2001:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1983:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1983:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1973:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1973:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1966:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1966:43:6"
															},
															"nodeType": "YulIf",
															"src": "1963:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1946:5:6",
														"type": ""
													}
												],
												"src": "1910:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2090:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2100:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2122:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2109:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2109:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2100:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2165:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2138:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2138:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2138:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2068:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2076:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2084:5:6",
														"type": ""
													}
												],
												"src": "2038:139:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2228:32:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2238:16:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2249:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2238:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2210:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2220:7:6",
														"type": ""
													}
												],
												"src": "2183:77:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2309:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2366:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2375:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2378:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2368:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2368:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2368:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2332:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2357:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2339:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2339:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2329:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2329:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2322:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2322:43:6"
															},
															"nodeType": "YulIf",
															"src": "2319:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2302:5:6",
														"type": ""
													}
												],
												"src": "2266:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2446:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2456:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2478:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2465:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2465:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2456:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2521:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2494:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2494:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2494:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2424:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2432:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2440:5:6",
														"type": ""
													}
												],
												"src": "2394:139:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2622:391:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2668:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2670:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2670:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2670:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2643:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2652:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2639:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2639:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2664:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2635:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2635:32:6"
															},
															"nodeType": "YulIf",
															"src": "2632:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "2761:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2776:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2790:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2780:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2805:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2840:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2851:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2836:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2836:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2860:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2815:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2815:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2805:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2888:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2903:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2917:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2907:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2933:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2968:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2979:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2964:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2964:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2988:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2943:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2943:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2933:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2584:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2595:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2607:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2615:6:6",
														"type": ""
													}
												],
												"src": "2539:474:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3061:48:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3071:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3096:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3089:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3089:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3082:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3082:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3071:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3043:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3053:7:6",
														"type": ""
													}
												],
												"src": "3019:90:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3174:50:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3191:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3211:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "3196:14:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3196:21:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3184:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3184:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3184:34:6"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3162:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3169:3:6",
														"type": ""
													}
												],
												"src": "3115:109:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3322:118:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3332:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3344:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3355:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3340:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3340:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3332:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3406:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3419:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3430:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3415:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3415:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3368:37:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3368:65:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3368:65:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3294:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3306:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3317:4:6",
														"type": ""
													}
												],
												"src": "3230:210:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3511:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3528:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3551:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3533:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3533:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3521:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3521:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3521:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3499:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3506:3:6",
														"type": ""
													}
												],
												"src": "3446:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3668:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3678:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3690:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3701:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3686:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3686:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3678:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3758:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3771:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3782:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3767:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3767:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3714:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3714:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3714:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3640:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3652:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3663:4:6",
														"type": ""
													}
												],
												"src": "3570:222:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3898:519:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3944:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3946:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3946:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3946:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3919:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3928:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3915:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3915:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3940:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3911:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3911:32:6"
															},
															"nodeType": "YulIf",
															"src": "3908:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "4037:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4052:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4066:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4056:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4081:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4116:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4127:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4112:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4112:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4136:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4091:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4091:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4081:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4164:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4179:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4193:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4183:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4209:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4244:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4255:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4240:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4240:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4264:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4219:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4219:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4209:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4292:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4307:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4321:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4311:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4337:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4372:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4383:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4368:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4368:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4392:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4347:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4347:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "4337:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3852:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3863:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3875:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3883:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3891:6:6",
														"type": ""
													}
												],
												"src": "3798:619:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4466:43:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4476:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4491:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4498:4:6",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4487:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4487:16:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4476:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4448:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4458:7:6",
														"type": ""
													}
												],
												"src": "4423:86:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4576:51:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4593:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4614:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "4598:15:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4598:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4586:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4586:35:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4586:35:6"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4564:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4571:3:6",
														"type": ""
													}
												],
												"src": "4515:112:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4727:120:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4737:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4749:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4760:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4745:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4745:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4737:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4813:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4826:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4837:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4822:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4822:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4773:39:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4773:67:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4773:67:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4699:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4711:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4722:4:6",
														"type": ""
													}
												],
												"src": "4633:214:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4919:263:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4965:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4967:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4967:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4967:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4940:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4949:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4936:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4936:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4961:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4932:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4932:32:6"
															},
															"nodeType": "YulIf",
															"src": "4929:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "5058:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5073:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5087:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5077:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5102:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5137:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5148:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5133:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5133:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5157:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5112:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5112:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5102:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4889:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4900:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4912:6:6",
														"type": ""
													}
												],
												"src": "4853:329:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5271:391:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5317:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5319:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5319:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5319:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5292:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5301:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5288:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5288:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5313:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5284:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5284:32:6"
															},
															"nodeType": "YulIf",
															"src": "5281:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "5410:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5425:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5439:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5429:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5454:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5489:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5500:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5485:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5485:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5509:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5464:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5464:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5454:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5537:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5552:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5566:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5556:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5582:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5617:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5628:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5613:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5613:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5637:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5592:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5592:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5582:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5233:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5244:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5256:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5264:6:6",
														"type": ""
													}
												],
												"src": "5188:474:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5696:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5713:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5716:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5706:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5706:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5706:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5810:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5813:4:6",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5803:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5803:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5803:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5834:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5837:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5827:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5827:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5827:15:6"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "5668:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5905:269:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5915:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5929:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5935:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "5925:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5925:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "5915:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5946:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5976:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5982:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5972:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5972:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "5950:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6023:51:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6037:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "6051:6:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6059:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "6047:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6047:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6037:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6003:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5996:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5996:26:6"
															},
															"nodeType": "YulIf",
															"src": "5993:81:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6126:42:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "6140:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6140:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6140:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6090:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6113:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6121:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "6110:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6110:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "6087:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6087:38:6"
															},
															"nodeType": "YulIf",
															"src": "6084:84:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "5889:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5898:6:6",
														"type": ""
													}
												],
												"src": "5854:320:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6208:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6225:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6228:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6218:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6218:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6218:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6322:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6325:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6315:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6315:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6315:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6346:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6349:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6339:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6339:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6339:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "6180:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6410:147:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6420:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6443:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6425:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6425:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "6420:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6454:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6477:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6459:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6459:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "6454:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6488:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6499:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6502:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6495:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6495:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "6488:3:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6528:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6530:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6530:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6530:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6520:1:6"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "6523:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6517:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6517:10:6"
															},
															"nodeType": "YulIf",
															"src": "6514:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6397:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6400:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "6406:3:6",
														"type": ""
													}
												],
												"src": "6366:191:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6669:118:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6691:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6699:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6687:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6687:14:6"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6703:34:6",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6680:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6680:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6680:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6759:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6767:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6755:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6755:15:6"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6772:7:6",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6748:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6748:32:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6748:32:6"
														}
													]
												},
												"name": "store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6661:6:6",
														"type": ""
													}
												],
												"src": "6563:224:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6939:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6949:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7015:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7020:2:6",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6956:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6956:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6949:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7121:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																	"nodeType": "YulIdentifier",
																	"src": "7032:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7032:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7032:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7134:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7145:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7150:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7141:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7141:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7134:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6927:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6935:3:6",
														"type": ""
													}
												],
												"src": "6793:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7336:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7346:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7358:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7369:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7354:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7354:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7346:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7393:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7404:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7389:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7389:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7412:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7418:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7408:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7408:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7382:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7382:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7382:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7438:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7572:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7446:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7446:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7438:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7316:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7331:4:6",
														"type": ""
													}
												],
												"src": "7165:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7696:117:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7718:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7726:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7714:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7714:14:6"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7730:34:6",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7707:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7707:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7707:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7786:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7794:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7782:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7782:15:6"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7799:6:6",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7775:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7775:31:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7775:31:6"
														}
													]
												},
												"name": "store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7688:6:6",
														"type": ""
													}
												],
												"src": "7590:223:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7965:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7975:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8041:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8046:2:6",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7982:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7982:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7975:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8147:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																	"nodeType": "YulIdentifier",
																	"src": "8058:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8058:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8058:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8160:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8171:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8176:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8167:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8167:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8160:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7953:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7961:3:6",
														"type": ""
													}
												],
												"src": "7819:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8362:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8372:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8384:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8395:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8380:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8380:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8372:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8419:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8430:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8415:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8415:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8438:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8444:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8434:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8434:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8408:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8408:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8408:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8464:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8598:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8472:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8472:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8464:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8342:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8357:4:6",
														"type": ""
													}
												],
												"src": "8191:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8722:115:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8744:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8752:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8740:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8740:14:6"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8756:34:6",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8733:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8733:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8733:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8812:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8820:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8808:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8808:15:6"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8825:4:6",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8801:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8801:29:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8801:29:6"
														}
													]
												},
												"name": "store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8714:6:6",
														"type": ""
													}
												],
												"src": "8616:221:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8989:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8999:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9065:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9070:2:6",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9006:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9006:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8999:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9171:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																	"nodeType": "YulIdentifier",
																	"src": "9082:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9082:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9082:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9184:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9195:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9200:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9191:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9191:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9184:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8977:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8985:3:6",
														"type": ""
													}
												],
												"src": "8843:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9386:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9396:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9408:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9419:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9404:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9404:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9396:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9443:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9454:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9439:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9439:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9462:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9468:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9458:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9458:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9432:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9432:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9432:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9488:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9622:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9496:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9496:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9488:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9366:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9381:4:6",
														"type": ""
													}
												],
												"src": "9215:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9746:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9768:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9776:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9764:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9764:14:6"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9780:31:6",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9757:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9757:55:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9757:55:6"
														}
													]
												},
												"name": "store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9738:6:6",
														"type": ""
													}
												],
												"src": "9640:179:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9971:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9981:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10047:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10052:2:6",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9988:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9988:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9981:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10153:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																	"nodeType": "YulIdentifier",
																	"src": "10064:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10064:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10064:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10166:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10177:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10182:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10173:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10173:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10166:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9959:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9967:3:6",
														"type": ""
													}
												],
												"src": "9825:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10368:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10378:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10390:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10401:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10386:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10386:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10378:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10425:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10436:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10421:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10421:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10444:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10450:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10440:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10440:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10414:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10414:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10414:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10470:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10604:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10478:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10478:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10470:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10348:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10363:4:6",
														"type": ""
													}
												],
												"src": "10197:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10728:118:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10750:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10758:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10746:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10746:14:6"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10762:34:6",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10739:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10739:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10739:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10818:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10826:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10814:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10814:15:6"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10831:7:6",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10807:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10807:32:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10807:32:6"
														}
													]
												},
												"name": "store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10720:6:6",
														"type": ""
													}
												],
												"src": "10622:224:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10998:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11008:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11074:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11079:2:6",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11015:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11015:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11008:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11180:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																	"nodeType": "YulIdentifier",
																	"src": "11091:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11091:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11091:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11193:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11204:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11209:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11200:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11200:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11193:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10986:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10994:3:6",
														"type": ""
													}
												],
												"src": "10852:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11395:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11405:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11417:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11428:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11413:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11413:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11405:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11452:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11463:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11448:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11448:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11471:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11477:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11467:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11467:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11441:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11441:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11441:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11497:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11631:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11505:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11505:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11497:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11375:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11390:4:6",
														"type": ""
													}
												],
												"src": "11224:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11755:116:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11777:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11785:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11773:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11773:14:6"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11789:34:6",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11766:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11766:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11766:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11845:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11853:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11841:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11841:15:6"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11858:5:6",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11834:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11834:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11834:30:6"
														}
													]
												},
												"name": "store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11747:6:6",
														"type": ""
													}
												],
												"src": "11649:222:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12023:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12033:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12099:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12104:2:6",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12040:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12040:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12033:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12205:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																	"nodeType": "YulIdentifier",
																	"src": "12116:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12116:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12116:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12218:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12229:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12234:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12225:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12225:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12218:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12011:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12019:3:6",
														"type": ""
													}
												],
												"src": "11877:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12420:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12430:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12442:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12453:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12438:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12438:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12430:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12477:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12488:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12473:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12473:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12496:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12502:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12492:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12492:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12466:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12466:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12466:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12522:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12656:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12530:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12530:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12522:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12400:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12415:4:6",
														"type": ""
													}
												],
												"src": "12249:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12780:119:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12802:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12810:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12798:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12798:14:6"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12814:34:6",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12791:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12791:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12791:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12870:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12878:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12866:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12866:15:6"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12883:8:6",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12859:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12859:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12859:33:6"
														}
													]
												},
												"name": "store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12772:6:6",
														"type": ""
													}
												],
												"src": "12674:225:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13051:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13061:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13127:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13132:2:6",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13068:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13068:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13061:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13233:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"nodeType": "YulIdentifier",
																	"src": "13144:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13144:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13144:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13246:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13257:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13262:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13253:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13253:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13246:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13039:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13047:3:6",
														"type": ""
													}
												],
												"src": "12905:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13448:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13458:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13470:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13481:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13466:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13466:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13458:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13505:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13516:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13501:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13501:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13524:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13530:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13520:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13520:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13494:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13494:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13494:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13550:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13684:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13558:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13558:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13550:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13428:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13443:4:6",
														"type": ""
													}
												],
												"src": "13277:419:6"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: insufficient allowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610b0c565b60405180910390f35b6100e660048036038101906100e19190610bc7565b610308565b6040516100f39190610c22565b60405180910390f35b61010461032b565b6040516101119190610c4c565b60405180910390f35b610134600480360381019061012f9190610c67565b610335565b6040516101419190610c22565b60405180910390f35b610152610364565b60405161015f9190610cd6565b60405180910390f35b610182600480360381019061017d9190610bc7565b61036d565b60405161018f9190610c22565b60405180910390f35b6101b260048036038101906101ad9190610cf1565b6103a4565b6040516101bf9190610c4c565b60405180910390f35b6101d06103ec565b6040516101dd9190610b0c565b60405180910390f35b61020060048036038101906101fb9190610bc7565b61047e565b60405161020d9190610c22565b60405180910390f35b610230600480360381019061022b9190610bc7565b6104f5565b60405161023d9190610c22565b60405180910390f35b610260600480360381019061025b9190610d1e565b610518565b60405161026d9190610c4c565b60405180910390f35b60606003805461028590610d8d565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610d8d565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b60008061031361059f565b90506103208185856105a7565b600191505092915050565b6000600254905090565b60008061034061059f565b905061034d858285610770565b6103588585856107fc565b60019150509392505050565b60006012905090565b60008061037861059f565b905061039981858561038a8589610518565b6103949190610ded565b6105a7565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546103fb90610d8d565b80601f016020809104026020016040519081016040528092919081815260200182805461042790610d8d565b80156104745780601f1061044957610100808354040283529160200191610474565b820191906000526020600020905b81548152906001019060200180831161045757829003601f168201915b5050505050905090565b60008061048961059f565b905060006104978286610518565b9050838110156104dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d390610e93565b60405180910390fd5b6104e982868684036105a7565b60019250505092915050565b60008061050061059f565b905061050d8185856107fc565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610616576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060d90610f25565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610685576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067c90610fb7565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107639190610c4c565b60405180910390a3505050565b600061077c8484610518565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f657818110156107e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107df90611023565b60405180910390fd5b6107f584848484036105a7565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361086b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610862906110b5565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d190611147565b60405180910390fd5b6108e5838383610a72565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561096b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610962906111d9565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a599190610c4c565b60405180910390a3610a6c848484610a77565b50505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ab6578082015181840152602081019050610a9b565b60008484015250505050565b6000601f19601f8301169050919050565b6000610ade82610a7c565b610ae88185610a87565b9350610af8818560208601610a98565b610b0181610ac2565b840191505092915050565b60006020820190508181036000830152610b268184610ad3565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b5e82610b33565b9050919050565b610b6e81610b53565b8114610b7957600080fd5b50565b600081359050610b8b81610b65565b92915050565b6000819050919050565b610ba481610b91565b8114610baf57600080fd5b50565b600081359050610bc181610b9b565b92915050565b60008060408385031215610bde57610bdd610b2e565b5b6000610bec85828601610b7c565b9250506020610bfd85828601610bb2565b9150509250929050565b60008115159050919050565b610c1c81610c07565b82525050565b6000602082019050610c376000830184610c13565b92915050565b610c4681610b91565b82525050565b6000602082019050610c616000830184610c3d565b92915050565b600080600060608486031215610c8057610c7f610b2e565b5b6000610c8e86828701610b7c565b9350506020610c9f86828701610b7c565b9250506040610cb086828701610bb2565b9150509250925092565b600060ff82169050919050565b610cd081610cba565b82525050565b6000602082019050610ceb6000830184610cc7565b92915050565b600060208284031215610d0757610d06610b2e565b5b6000610d1584828501610b7c565b91505092915050565b60008060408385031215610d3557610d34610b2e565b5b6000610d4385828601610b7c565b9250506020610d5485828601610b7c565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610da557607f821691505b602082108103610db857610db7610d5e565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610df882610b91565b9150610e0383610b91565b9250828201905080821115610e1b57610e1a610dbe565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000610e7d602583610a87565b9150610e8882610e21565b604082019050919050565b60006020820190508181036000830152610eac81610e70565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000610f0f602483610a87565b9150610f1a82610eb3565b604082019050919050565b60006020820190508181036000830152610f3e81610f02565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000610fa1602283610a87565b9150610fac82610f45565b604082019050919050565b60006020820190508181036000830152610fd081610f94565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b600061100d601d83610a87565b915061101882610fd7565b602082019050919050565b6000602082019050818103600083015261103c81611000565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b600061109f602583610a87565b91506110aa82611043565b604082019050919050565b600060208201905081810360008301526110ce81611092565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611131602383610a87565b915061113c826110d5565b604082019050919050565b6000602082019050818103600083015261116081611124565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006111c3602683610a87565b91506111ce82611167565b604082019050919050565b600060208201905081810360008301526111f2816111b6565b905091905056fea2646970667358221220005f598b59a8ef1b830a8e6bb81db6c2d3d112539000d8e58b45a6286fcebbe164736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xC67 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xCF1 JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xD1E JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x313 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x320 DUP2 DUP6 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x340 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x34D DUP6 DUP3 DUP6 PUSH2 0x770 JUMP JUMPDEST PUSH2 0x358 DUP6 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x378 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP2 DUP6 DUP6 PUSH2 0x38A DUP6 DUP10 PUSH2 0x518 JUMP JUMPDEST PUSH2 0x394 SWAP2 SWAP1 PUSH2 0xDED JUMP JUMPDEST PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3FB SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x427 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x474 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x449 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x474 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x457 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x489 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x497 DUP3 DUP7 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D3 SWAP1 PUSH2 0xE93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x500 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x50D DUP2 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x616 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60D SWAP1 PUSH2 0xF25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x685 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67C SWAP1 PUSH2 0xFB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x763 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77C DUP5 DUP5 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7F6 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DF SWAP1 PUSH2 0x1023 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F5 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x86B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x862 SWAP1 PUSH2 0x10B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D1 SWAP1 PUSH2 0x1147 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E5 DUP4 DUP4 DUP4 PUSH2 0xA72 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x96B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x962 SWAP1 PUSH2 0x11D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA59 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA6C DUP5 DUP5 DUP5 PUSH2 0xA77 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAB6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA9B JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xADE DUP3 PUSH2 0xA7C JUMP JUMPDEST PUSH2 0xAE8 DUP2 DUP6 PUSH2 0xA87 JUMP JUMPDEST SWAP4 POP PUSH2 0xAF8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA98 JUMP JUMPDEST PUSH2 0xB01 DUP2 PUSH2 0xAC2 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB26 DUP2 DUP5 PUSH2 0xAD3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB5E DUP3 PUSH2 0xB33 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB6E DUP2 PUSH2 0xB53 JUMP JUMPDEST DUP2 EQ PUSH2 0xB79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB8B DUP2 PUSH2 0xB65 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBA4 DUP2 PUSH2 0xB91 JUMP JUMPDEST DUP2 EQ PUSH2 0xBAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBC1 DUP2 PUSH2 0xB9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBDE JUMPI PUSH2 0xBDD PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBEC DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xBFD DUP6 DUP3 DUP7 ADD PUSH2 0xBB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC1C DUP2 PUSH2 0xC07 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC37 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC13 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC46 DUP2 PUSH2 0xB91 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC61 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC3D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC80 JUMPI PUSH2 0xC7F PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC8E DUP7 DUP3 DUP8 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC9F DUP7 DUP3 DUP8 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCB0 DUP7 DUP3 DUP8 ADD PUSH2 0xBB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCD0 DUP2 PUSH2 0xCBA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCEB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCC7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD07 JUMPI PUSH2 0xD06 PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD15 DUP5 DUP3 DUP6 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD35 JUMPI PUSH2 0xD34 PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD43 DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD54 DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xDA5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xDB8 JUMPI PUSH2 0xDB7 PUSH2 0xD5E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDF8 DUP3 PUSH2 0xB91 JUMP JUMPDEST SWAP2 POP PUSH2 0xE03 DUP4 PUSH2 0xB91 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE1B JUMPI PUSH2 0xE1A PUSH2 0xDBE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE7D PUSH1 0x25 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xE88 DUP3 PUSH2 0xE21 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEAC DUP2 PUSH2 0xE70 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF0F PUSH1 0x24 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xF1A DUP3 PUSH2 0xEB3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF3E DUP2 PUSH2 0xF02 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFA1 PUSH1 0x22 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xFAC DUP3 PUSH2 0xF45 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFD0 DUP2 PUSH2 0xF94 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100D PUSH1 0x1D DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x1018 DUP3 PUSH2 0xFD7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x103C DUP2 PUSH2 0x1000 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x109F PUSH1 0x25 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x10AA DUP3 PUSH2 0x1043 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10CE DUP2 PUSH2 0x1092 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1131 PUSH1 0x23 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x113C DUP3 PUSH2 0x10D5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1160 DUP2 PUSH2 0x1124 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11C3 PUSH1 0x26 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x11CE DUP3 PUSH2 0x1167 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11F2 DUP2 PUSH2 0x11B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP 0x5F MSIZE DUP12 MSIZE 0xA8 0xEF SHL DUP4 EXP DUP15 PUSH12 0xB81DB6C2D3D112539000D8E5 DUP12 GASLIMIT 0xA6 0x28 PUSH16 0xCEBBE164736F6C634300081200330000 ",
							"sourceMap": "1401:11610:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4431:197;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3242:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5190:286;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3091:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5871:234;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3406:125;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2365:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6592:427;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3727:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3974:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2154:98;2208:13;2240:5;2233:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98;:::o;4431:197::-;4514:4;4530:13;4546:12;:10;:12::i;:::-;4530:28;;4568:32;4577:5;4584:7;4593:6;4568:8;:32::i;:::-;4617:4;4610:11;;;4431:197;;;;:::o;3242:106::-;3303:7;3329:12;;3322:19;;3242:106;:::o;5190:286::-;5317:4;5333:15;5351:12;:10;:12::i;:::-;5333:30;;5373:38;5389:4;5395:7;5404:6;5373:15;:38::i;:::-;5421:27;5431:4;5437:2;5441:6;5421:9;:27::i;:::-;5465:4;5458:11;;;5190:286;;;;;:::o;3091:91::-;3149:5;3173:2;3166:9;;3091:91;:::o;5871:234::-;5959:4;5975:13;5991:12;:10;:12::i;:::-;5975:28;;6013:64;6022:5;6029:7;6066:10;6038:25;6048:5;6055:7;6038:9;:25::i;:::-;:38;;;;:::i;:::-;6013:8;:64::i;:::-;6094:4;6087:11;;;5871:234;;;;:::o;3406:125::-;3480:7;3506:9;:18;3516:7;3506:18;;;;;;;;;;;;;;;;3499:25;;3406:125;;;:::o;2365:102::-;2421:13;2453:7;2446:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2365:102;:::o;6592:427::-;6685:4;6701:13;6717:12;:10;:12::i;:::-;6701:28;;6739:24;6766:25;6776:5;6783:7;6766:9;:25::i;:::-;6739:52;;6829:15;6809:16;:35;;6801:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;6920:60;6929:5;6936:7;6964:15;6945:16;:34;6920:8;:60::i;:::-;7008:4;7001:11;;;;6592:427;;;;:::o;3727:189::-;3806:4;3822:13;3838:12;:10;:12::i;:::-;3822:28;;3860;3870:5;3877:2;3881:6;3860:9;:28::i;:::-;3905:4;3898:11;;;3727:189;;;;:::o;3974:149::-;4063:7;4089:11;:18;4101:5;4089:18;;;;;;;;;;;;;;;:27;4108:7;4089:27;;;;;;;;;;;;;;;;4082:34;;3974:149;;;;:::o;640:96:3:-;693:7;719:10;712:17;;640:96;:::o;10504:370:0:-;10652:1;10635:19;;:5;:19;;;10627:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10732:1;10713:21;;:7;:21;;;10705:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10814:6;10784:11;:18;10796:5;10784:18;;;;;;;;;;;;;;;:27;10803:7;10784:27;;;;;;;;;;;;;;;:36;;;;10851:7;10835:32;;10844:5;10835:32;;;10860:6;10835:32;;;;;;:::i;:::-;;;;;;;;10504:370;;;:::o;11155:441::-;11285:24;11312:25;11322:5;11329:7;11312:9;:25::i;:::-;11285:52;;11371:17;11351:16;:37;11347:243;;11432:6;11412:16;:26;;11404:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11514:51;11523:5;11530:7;11558:6;11539:16;:25;11514:8;:51::i;:::-;11347:243;11275:321;11155:441;;;:::o;7473:818::-;7615:1;7599:18;;:4;:18;;;7591:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7691:1;7677:16;;:2;:16;;;7669:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;7744:38;7765:4;7771:2;7775:6;7744:20;:38::i;:::-;7793:19;7815:9;:15;7825:4;7815:15;;;;;;;;;;;;;;;;7793:37;;7863:6;7848:11;:21;;7840:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;7978:6;7964:11;:20;7946:9;:15;7956:4;7946:15;;;;;;;;;;;;;;;:38;;;;8178:6;8161:9;:13;8171:2;8161:13;;;;;;;;;;;;;;;;:23;;;;;;;;;;;8225:2;8210:26;;8219:4;8210:26;;;8229:6;8210:26;;;;;;:::i;:::-;;;;;;;;8247:37;8267:4;8273:2;8277:6;8247:19;:37::i;:::-;7581:710;7473:818;;;:::o;12180:121::-;;;;:::o;12889:120::-;;;;:::o;7:99:6:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:329::-;4912:6;4961:2;4949:9;4940:7;4936:23;4932:32;4929:119;;;4967:79;;:::i;:::-;4929:119;5087:1;5112:53;5157:7;5148:6;5137:9;5133:22;5112:53;:::i;:::-;5102:63;;5058:117;4853:329;;;;:::o;5188:474::-;5256:6;5264;5313:2;5301:9;5292:7;5288:23;5284:32;5281:119;;;5319:79;;:::i;:::-;5281:119;5439:1;5464:53;5509:7;5500:6;5489:9;5485:22;5464:53;:::i;:::-;5454:63;;5410:117;5566:2;5592:53;5637:7;5628:6;5617:9;5613:22;5592:53;:::i;:::-;5582:63;;5537:118;5188:474;;;;;:::o;5668:180::-;5716:77;5713:1;5706:88;5813:4;5810:1;5803:15;5837:4;5834:1;5827:15;5854:320;5898:6;5935:1;5929:4;5925:12;5915:22;;5982:1;5976:4;5972:12;6003:18;5993:81;;6059:4;6051:6;6047:17;6037:27;;5993:81;6121:2;6113:6;6110:14;6090:18;6087:38;6084:84;;6140:18;;:::i;:::-;6084:84;5905:269;5854:320;;;:::o;6180:180::-;6228:77;6225:1;6218:88;6325:4;6322:1;6315:15;6349:4;6346:1;6339:15;6366:191;6406:3;6425:20;6443:1;6425:20;:::i;:::-;6420:25;;6459:20;6477:1;6459:20;:::i;:::-;6454:25;;6502:1;6499;6495:9;6488:16;;6523:3;6520:1;6517:10;6514:36;;;6530:18;;:::i;:::-;6514:36;6366:191;;;;:::o;6563:224::-;6703:34;6699:1;6691:6;6687:14;6680:58;6772:7;6767:2;6759:6;6755:15;6748:32;6563:224;:::o;6793:366::-;6935:3;6956:67;7020:2;7015:3;6956:67;:::i;:::-;6949:74;;7032:93;7121:3;7032:93;:::i;:::-;7150:2;7145:3;7141:12;7134:19;;6793:366;;;:::o;7165:419::-;7331:4;7369:2;7358:9;7354:18;7346:26;;7418:9;7412:4;7408:20;7404:1;7393:9;7389:17;7382:47;7446:131;7572:4;7446:131;:::i;:::-;7438:139;;7165:419;;;:::o;7590:223::-;7730:34;7726:1;7718:6;7714:14;7707:58;7799:6;7794:2;7786:6;7782:15;7775:31;7590:223;:::o;7819:366::-;7961:3;7982:67;8046:2;8041:3;7982:67;:::i;:::-;7975:74;;8058:93;8147:3;8058:93;:::i;:::-;8176:2;8171:3;8167:12;8160:19;;7819:366;;;:::o;8191:419::-;8357:4;8395:2;8384:9;8380:18;8372:26;;8444:9;8438:4;8434:20;8430:1;8419:9;8415:17;8408:47;8472:131;8598:4;8472:131;:::i;:::-;8464:139;;8191:419;;;:::o;8616:221::-;8756:34;8752:1;8744:6;8740:14;8733:58;8825:4;8820:2;8812:6;8808:15;8801:29;8616:221;:::o;8843:366::-;8985:3;9006:67;9070:2;9065:3;9006:67;:::i;:::-;8999:74;;9082:93;9171:3;9082:93;:::i;:::-;9200:2;9195:3;9191:12;9184:19;;8843:366;;;:::o;9215:419::-;9381:4;9419:2;9408:9;9404:18;9396:26;;9468:9;9462:4;9458:20;9454:1;9443:9;9439:17;9432:47;9496:131;9622:4;9496:131;:::i;:::-;9488:139;;9215:419;;;:::o;9640:179::-;9780:31;9776:1;9768:6;9764:14;9757:55;9640:179;:::o;9825:366::-;9967:3;9988:67;10052:2;10047:3;9988:67;:::i;:::-;9981:74;;10064:93;10153:3;10064:93;:::i;:::-;10182:2;10177:3;10173:12;10166:19;;9825:366;;;:::o;10197:419::-;10363:4;10401:2;10390:9;10386:18;10378:26;;10450:9;10444:4;10440:20;10436:1;10425:9;10421:17;10414:47;10478:131;10604:4;10478:131;:::i;:::-;10470:139;;10197:419;;;:::o;10622:224::-;10762:34;10758:1;10750:6;10746:14;10739:58;10831:7;10826:2;10818:6;10814:15;10807:32;10622:224;:::o;10852:366::-;10994:3;11015:67;11079:2;11074:3;11015:67;:::i;:::-;11008:74;;11091:93;11180:3;11091:93;:::i;:::-;11209:2;11204:3;11200:12;11193:19;;10852:366;;;:::o;11224:419::-;11390:4;11428:2;11417:9;11413:18;11405:26;;11477:9;11471:4;11467:20;11463:1;11452:9;11448:17;11441:47;11505:131;11631:4;11505:131;:::i;:::-;11497:139;;11224:419;;;:::o;11649:222::-;11789:34;11785:1;11777:6;11773:14;11766:58;11858:5;11853:2;11845:6;11841:15;11834:30;11649:222;:::o;11877:366::-;12019:3;12040:67;12104:2;12099:3;12040:67;:::i;:::-;12033:74;;12116:93;12205:3;12116:93;:::i;:::-;12234:2;12229:3;12225:12;12218:19;;11877:366;;;:::o;12249:419::-;12415:4;12453:2;12442:9;12438:18;12430:26;;12502:9;12496:4;12492:20;12488:1;12477:9;12473:17;12466:47;12530:131;12656:4;12530:131;:::i;:::-;12522:139;;12249:419;;;:::o;12674:225::-;12814:34;12810:1;12802:6;12798:14;12791:58;12883:8;12878:2;12870:6;12866:15;12859:33;12674:225;:::o;12905:366::-;13047:3;13068:67;13132:2;13127:3;13068:67;:::i;:::-;13061:74;;13144:93;13233:3;13144:93;:::i;:::-;13262:2;13257:3;13253:12;13246:19;;12905:366;;;:::o;13277:419::-;13443:4;13481:2;13470:9;13466:18;13458:26;;13530:9;13524:4;13520:20;13516:1;13505:9;13501:17;13494:47;13558:131;13684:4;13558:131;:::i;:::-;13550:139;;13277:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "931000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2863",
								"decimals()": "432",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2482",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "15",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "15",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1976,
									"end": 2089,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2050,
									"end": 2055,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2042,
									"end": 2047,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2042,
									"end": 2055,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2075,
									"end": 2082,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2065,
									"end": 2072,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2065,
									"end": 2082,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1691,
									"end": 1692,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1715,
									"end": 1721,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1712,
									"end": 1713,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1709,
									"end": 1722,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1800,
									"end": 1801,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1795,
									"end": 1798,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1791,
									"end": 1802,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1785,
									"end": 1803,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1781,
									"end": 1782,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1776,
									"end": 1779,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1772,
									"end": 1783,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1765,
									"end": 1804,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1737,
									"end": 1739,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1734,
									"end": 1735,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1730,
									"end": 1740,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1848,
									"end": 1849,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1839,
									"end": 1845,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1834,
									"end": 1837,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1830,
									"end": 1846,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1823,
									"end": 1850,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1672,
									"end": 1856,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1856,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "67"
								},
								{
									"begin": 2034,
									"end": 2040,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 1992,
									"end": 2041,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "tag",
									"source": 6,
									"value": "67"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 1976,
									"end": 2042,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "tag",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2065,
									"end": 2071,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2058,
									"end": 2063,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2051,
									"end": 2072,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2103,
									"end": 2107,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2096,
									"end": 2101,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2092,
									"end": 2108,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2141,
									"end": 2144,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2132,
									"end": 2138,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2127,
									"end": 2130,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2123,
									"end": 2139,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2120,
									"end": 2145,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "69"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 2148,
									"end": 2227,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "tag",
									"source": 6,
									"value": "69"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "tag",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 2283,
									"end": 2289,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2278,
									"end": 2281,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2273,
									"end": 2276,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2238,
									"end": 2290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "tag",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1957,
									"end": 2296,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1862,
									"end": 2296,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2383,
									"end": 2388,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2432,
									"end": 2435,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2425,
									"end": 2429,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 2417,
									"end": 2423,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2413,
									"end": 2430,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2409,
									"end": 2436,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "72"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 2440,
									"end": 2519,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "tag",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "tag",
									"source": 6,
									"value": "72"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2550,
									"end": 2556,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2544,
									"end": 2557,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "74"
								},
								{
									"begin": 2661,
									"end": 2664,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2653,
									"end": 2659,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2646,
									"end": 2650,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2638,
									"end": 2644,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 2634,
									"end": 2651,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 2575,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "tag",
									"source": 6,
									"value": "74"
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2389,
									"end": 2671,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2316,
									"end": 2671,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2776,
									"end": 2782,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2784,
									"end": 2790,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2833,
									"end": 2835,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2821,
									"end": 2830,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2812,
									"end": 2819,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2808,
									"end": 2831,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 2804,
									"end": 2836,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "76"
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "77"
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 2839,
									"end": 2918,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "tag",
									"source": 6,
									"value": "77"
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "tag",
									"source": 6,
									"value": "76"
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2980,
									"end": 2981,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2969,
									"end": 2978,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2965,
									"end": 2982,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2959,
									"end": 2983,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3010,
									"end": 3028,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3002,
									"end": 3008,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2999,
									"end": 3029,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "78"
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "79"
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 3032,
									"end": 3111,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "tag",
									"source": 6,
									"value": "79"
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "tag",
									"source": 6,
									"value": "78"
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 3203,
									"end": 3210,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3194,
									"end": 3200,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3183,
									"end": 3192,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 3179,
									"end": 3201,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 3137,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "tag",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3127,
									"end": 3211,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 3127,
									"end": 3211,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2930,
									"end": 3221,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3281,
									"end": 3283,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3270,
									"end": 3279,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3266,
									"end": 3284,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3260,
									"end": 3285,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3312,
									"end": 3330,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3304,
									"end": 3310,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3301,
									"end": 3331,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "81"
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "82"
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 3334,
									"end": 3413,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "tag",
									"source": 6,
									"value": "82"
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "tag",
									"source": 6,
									"value": "81"
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "83"
								},
								{
									"begin": 3505,
									"end": 3512,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3496,
									"end": 3502,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3485,
									"end": 3494,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 3481,
									"end": 3503,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 3439,
									"end": 3513,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "tag",
									"source": 6,
									"value": "83"
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3429,
									"end": 3513,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3429,
									"end": 3513,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3231,
									"end": 3523,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2677,
									"end": 3530,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3588,
									"end": 3594,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3622,
									"end": 3627,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3616,
									"end": 3628,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3606,
									"end": 3628,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3606,
									"end": 3628,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3536,
									"end": 3635,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3641,
									"end": 3821,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 3641,
									"end": 3821,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3689,
									"end": 3766,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3686,
									"end": 3687,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3679,
									"end": 3767,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3786,
									"end": 3790,
									"name": "PUSH",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 3783,
									"end": 3784,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 3776,
									"end": 3791,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3810,
									"end": 3814,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 3807,
									"end": 3808,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3800,
									"end": 3815,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "tag",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3871,
									"end": 3877,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3908,
									"end": 3909,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 3902,
									"end": 3906,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3898,
									"end": 3910,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 3888,
									"end": 3910,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3888,
									"end": 3910,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3955,
									"end": 3956,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3949,
									"end": 3953,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3945,
									"end": 3957,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3976,
									"end": 3994,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "87"
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4032,
									"end": 4036,
									"name": "PUSH",
									"source": 6,
									"value": "7F"
								},
								{
									"begin": 4024,
									"end": 4030,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4020,
									"end": 4037,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4010,
									"end": 4037,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4010,
									"end": 4037,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "tag",
									"source": 6,
									"value": "87"
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4094,
									"end": 4096,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4086,
									"end": 4092,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4083,
									"end": 4097,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 4063,
									"end": 4081,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4060,
									"end": 4098,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "88"
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "89"
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 4113,
									"end": 4131,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "tag",
									"source": 6,
									"value": "89"
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "tag",
									"source": 6,
									"value": "88"
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3878,
									"end": 4147,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3827,
									"end": 4147,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "tag",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4202,
									"end": 4206,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4225,
									"end": 4228,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4217,
									"end": 4228,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4217,
									"end": 4228,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4248,
									"end": 4251,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4245,
									"end": 4246,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4238,
									"end": 4252,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4282,
									"end": 4286,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4279,
									"end": 4280,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4269,
									"end": 4287,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 4261,
									"end": 4287,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4261,
									"end": 4287,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4153,
									"end": 4294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4337,
									"end": 4343,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4384,
									"end": 4386,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4379,
									"end": 4381,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 4372,
									"end": 4377,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4368,
									"end": 4382,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4364,
									"end": 4387,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 4354,
									"end": 4387,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4354,
									"end": 4387,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4300,
									"end": 4393,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4443,
									"end": 4451,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4493,
									"end": 4498,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4487,
									"end": 4491,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4483,
									"end": 4499,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 4462,
									"end": 4499,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4462,
									"end": 4499,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4399,
									"end": 4506,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4581,
									"end": 4587,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4631,
									"end": 4632,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 4619,
									"end": 4629,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4615,
									"end": 4633,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "94"
								},
								{
									"begin": 4684,
									"end": 4750,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4673,
									"end": 4682,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 4654,
									"end": 4751,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "tag",
									"source": 6,
									"value": "94"
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "95"
								},
								{
									"begin": 4802,
									"end": 4810,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 4791,
									"end": 4800,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 4772,
									"end": 4811,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "tag",
									"source": 6,
									"value": "95"
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4760,
									"end": 4811,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 4760,
									"end": 4811,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4844,
									"end": 4848,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4840,
									"end": 4849,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 4833,
									"end": 4838,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4829,
									"end": 4850,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4820,
									"end": 4850,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 4820,
									"end": 4850,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4893,
									"end": 4897,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4883,
									"end": 4891,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 4879,
									"end": 4898,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4872,
									"end": 4877,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4869,
									"end": 4899,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 4859,
									"end": 4899,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 4859,
									"end": 4899,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4588,
									"end": 4905,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4588,
									"end": 4905,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4512,
									"end": 4905,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "tag",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4948,
									"end": 4955,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4977,
									"end": 4982,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4966,
									"end": 4982,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4966,
									"end": 4982,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4911,
									"end": 4988,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "tag",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5022,
									"end": 5025,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5043,
									"end": 5048,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5036,
									"end": 5048,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5036,
									"end": 5048,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4994,
									"end": 5054,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "tag",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5110,
									"end": 5119,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "99"
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "101"
								},
								{
									"begin": 5188,
									"end": 5193,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 5170,
									"end": 5194,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "tag",
									"source": 6,
									"value": "101"
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 5161,
									"end": 5195,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "tag",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 5143,
									"end": 5196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "tag",
									"source": 6,
									"value": "99"
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5130,
									"end": 5196,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5130,
									"end": 5196,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5060,
									"end": 5202,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "tag",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5251,
									"end": 5254,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5272,
									"end": 5277,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5265,
									"end": 5277,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5265,
									"end": 5277,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5208,
									"end": 5283,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "tag",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "104"
								},
								{
									"begin": 5430,
									"end": 5437,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 5399,
									"end": 5438,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "tag",
									"source": 6,
									"value": "104"
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "105"
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "106"
								},
								{
									"begin": 5533,
									"end": 5549,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 5509,
									"end": 5550,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "tag",
									"source": 6,
									"value": "106"
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5501,
									"end": 5507,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5494,
									"end": 5498,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5488,
									"end": 5499,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 5460,
									"end": 5551,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "tag",
									"source": 6,
									"value": "105"
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5454,
									"end": 5458,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5447,
									"end": 5552,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 5365,
									"end": 5558,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5289,
									"end": 5558,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5564,
									"end": 5637,
									"name": "tag",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 5564,
									"end": 5637,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5609,
									"end": 5612,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5564,
									"end": 5637,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5564,
									"end": 5637,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "tag",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "109"
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 5720,
									"end": 5752,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "tag",
									"source": 6,
									"value": "109"
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "110"
								},
								{
									"begin": 5819,
									"end": 5825,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5811,
									"end": 5817,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5805,
									"end": 5809,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 5761,
									"end": 5826,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "tag",
									"source": 6,
									"value": "110"
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5696,
									"end": 5832,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5643,
									"end": 5832,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "tag",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "tag",
									"source": 6,
									"value": "112"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5915,
									"end": 5918,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5908,
									"end": 5913,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5905,
									"end": 5919,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "114"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "115"
								},
								{
									"begin": 6006,
									"end": 6007,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5999,
									"end": 6004,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 5969,
									"end": 6008,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "tag",
									"source": 6,
									"value": "115"
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5942,
									"end": 5943,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 5935,
									"end": 5940,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5931,
									"end": 5944,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5922,
									"end": 5944,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5922,
									"end": 5944,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "112"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "tag",
									"source": 6,
									"value": "114"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5838,
									"end": 6024,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "tag",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6131,
									"end": 6133,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 6126,
									"end": 6129,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6123,
									"end": 6134,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "117"
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "118"
								},
								{
									"begin": 6197,
									"end": 6202,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 6165,
									"end": 6203,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "tag",
									"source": 6,
									"value": "118"
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "119"
								},
								{
									"begin": 6267,
									"end": 6277,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 6249,
									"end": 6278,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "tag",
									"source": 6,
									"value": "119"
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6239,
									"end": 6247,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6235,
									"end": 6279,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6432,
									"end": 6434,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 6420,
									"end": 6430,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 6417,
									"end": 6435,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "120"
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 6453,
									"end": 6461,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6438,
									"end": 6461,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6438,
									"end": 6461,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "tag",
									"source": 6,
									"value": "120"
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "121"
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "122"
								},
								{
									"begin": 6550,
									"end": 6553,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 6532,
									"end": 6554,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "tag",
									"source": 6,
									"value": "122"
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6522,
									"end": 6530,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 6518,
									"end": 6555,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6505,
									"end": 6516,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 6476,
									"end": 6556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "tag",
									"source": 6,
									"value": "121"
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6135,
									"end": 6566,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6135,
									"end": 6566,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "tag",
									"source": 6,
									"value": "117"
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6030,
									"end": 6573,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "tag",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6633,
									"end": 6641,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6683,
									"end": 6688,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6677,
									"end": 6681,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6673,
									"end": 6689,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 6652,
									"end": 6689,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6652,
									"end": 6689,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6579,
									"end": 6696,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "tag",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6746,
									"end": 6752,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "125"
								},
								{
									"begin": 6827,
									"end": 6828,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6823,
									"end": 6829,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 6815,
									"end": 6820,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6812,
									"end": 6813,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 6808,
									"end": 6821,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 6779,
									"end": 6830,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "tag",
									"source": 6,
									"value": "125"
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6775,
									"end": 6831,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 6860,
									"end": 6864,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 6854,
									"end": 6858,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 6850,
									"end": 6865,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 6840,
									"end": 6865,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6840,
									"end": 6865,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6753,
									"end": 6871,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6702,
									"end": 6871,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "tag",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6952,
									"end": 6956,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "127"
								},
								{
									"begin": 7123,
									"end": 7126,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 7117,
									"end": 7121,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 7098,
									"end": 7127,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "tag",
									"source": 6,
									"value": "127"
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7090,
									"end": 7127,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7090,
									"end": 7127,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7160,
									"end": 7163,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7157,
									"end": 7158,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 7153,
									"end": 7164,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 7147,
									"end": 7151,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7144,
									"end": 7165,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 7136,
									"end": 7165,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7136,
									"end": 7165,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6876,
									"end": 7171,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "tag",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "129"
								},
								{
									"begin": 7326,
									"end": 7329,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 7293,
									"end": 7330,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "tag",
									"source": 6,
									"value": "129"
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7387,
									"end": 7393,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7384,
									"end": 7414,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "130"
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "131"
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 7417,
									"end": 7435,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "tag",
									"source": 6,
									"value": "131"
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "tag",
									"source": 6,
									"value": "130"
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "132"
								},
								{
									"begin": 7493,
									"end": 7497,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7487,
									"end": 7498,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 7461,
									"end": 7499,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "tag",
									"source": 6,
									"value": "132"
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "133"
								},
								{
									"begin": 7606,
									"end": 7612,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7598,
									"end": 7604,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7592,
									"end": 7596,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 7546,
									"end": 7613,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "tag",
									"source": 6,
									"value": "133"
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7640,
									"end": 7641,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7664,
									"end": 7668,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 7651,
									"end": 7668,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7651,
									"end": 7668,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7696,
									"end": 7698,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 7688,
									"end": 7694,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 7685,
									"end": 7699,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 7713,
									"end": 7714,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "135"
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 8370,
									"end": 8371,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 8387,
									"end": 8393,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "136"
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 8436,
									"end": 8445,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8431,
									"end": 8434,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 8427,
									"end": 8446,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 8421,
									"end": 8447,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 8412,
									"end": 8447,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 8412,
									"end": 8447,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "tag",
									"source": 6,
									"value": "136"
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "137"
								},
								{
									"begin": 8547,
									"end": 8553,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 8540,
									"end": 8545,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 8487,
									"end": 8554,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "tag",
									"source": 6,
									"value": "137"
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8481,
									"end": 8485,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 8474,
									"end": 8555,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 8343,
									"end": 8565,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "134"
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "tag",
									"source": 6,
									"value": "135"
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7760,
									"end": 7764,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 7756,
									"end": 7765,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 7748,
									"end": 7754,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 7744,
									"end": 7766,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "138"
								},
								{
									"begin": 7826,
									"end": 7830,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 7794,
									"end": 7831,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "tag",
									"source": 6,
									"value": "138"
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7853,
									"end": 7854,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "tag",
									"source": 6,
									"value": "139"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7881,
									"end": 7888,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7878,
									"end": 7879,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7875,
									"end": 7889,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "141"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 7960,
									"end": 7969,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 7955,
									"end": 7958,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 7951,
									"end": 7970,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7945,
									"end": 7971,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 7937,
									"end": 7943,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7930,
									"end": 7972,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 8011,
									"end": 8012,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 8003,
									"end": 8009,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7999,
									"end": 8013,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7989,
									"end": 8013,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7989,
									"end": 8013,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8058,
									"end": 8060,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 8047,
									"end": 8056,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 8043,
									"end": 8061,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 8030,
									"end": 8061,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 8030,
									"end": 8061,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7904,
									"end": 7908,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 7901,
									"end": 7902,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7897,
									"end": 7909,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7892,
									"end": 7909,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7892,
									"end": 7909,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "139"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "tag",
									"source": 6,
									"value": "141"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8103,
									"end": 8109,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 8094,
									"end": 8101,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 8091,
									"end": 8110,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "142"
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 8161,
									"end": 8170,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 8156,
									"end": 8159,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 8152,
									"end": 8171,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 8146,
									"end": 8172,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "143"
								},
								{
									"begin": 8246,
									"end": 8250,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 8238,
									"end": 8244,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 8234,
									"end": 8251,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 8223,
									"end": 8232,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 8204,
									"end": 8252,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "tag",
									"source": 6,
									"value": "143"
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8196,
									"end": 8202,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 8189,
									"end": 8253,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 8111,
									"end": 8267,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "tag",
									"source": 6,
									"value": "142"
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8313,
									"end": 8314,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 8309,
									"end": 8310,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 8301,
									"end": 8307,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 8297,
									"end": 8311,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 8293,
									"end": 8315,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 8287,
									"end": 8291,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 8280,
									"end": 8316,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 7715,
									"end": 8326,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7715,
									"end": 8326,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7715,
									"end": 8326,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "tag",
									"source": 6,
									"value": "134"
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7268,
									"end": 8571,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7268,
									"end": 8571,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7268,
									"end": 8571,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7176,
									"end": 8571,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220005f598b59a8ef1b830a8e6bb81db6c2d3d112539000d8e58b45a6286fcebbe164736f6c63430008120033",
									".code": [
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2154,
											"end": 2252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2154,
											"end": 2252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 4431,
											"end": 4628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 4431,
											"end": 4628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 4431,
											"end": 4628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3242,
											"end": 3348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 3242,
											"end": 3348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 5190,
											"end": 5476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 5190,
											"end": 5476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 5190,
											"end": 5476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3091,
											"end": 3182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 3091,
											"end": 3182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 5871,
											"end": 6105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5871,
											"end": 6105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 5871,
											"end": 6105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3406,
											"end": 3531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3406,
											"end": 3531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 3406,
											"end": 3531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2365,
											"end": 2467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2365,
											"end": 2467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 6592,
											"end": 7019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 6592,
											"end": 7019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 6592,
											"end": 7019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 3727,
											"end": 3916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3727,
											"end": 3916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 3727,
											"end": 3916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3974,
											"end": 4123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 3974,
											"end": 4123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 3974,
											"end": 4123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2208,
											"end": 2221,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2240,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2233,
											"end": 2245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2233,
											"end": 2245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2252,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4514,
											"end": 4518,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4530,
											"end": 4543,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4546,
											"end": 4558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 4546,
											"end": 4556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 4546,
											"end": 4558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4546,
											"end": 4558,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 4546,
											"end": 4558,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4530,
											"end": 4558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4530,
											"end": 4558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4568,
											"end": 4600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4577,
											"end": 4582,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4584,
											"end": 4591,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4593,
											"end": 4599,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4568,
											"end": 4576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 4568,
											"end": 4600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4568,
											"end": 4600,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4568,
											"end": 4600,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4617,
											"end": 4621,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4610,
											"end": 4621,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4610,
											"end": 4621,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4610,
											"end": 4621,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4628,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3303,
											"end": 3310,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3329,
											"end": 3341,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3329,
											"end": 3341,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3322,
											"end": 3341,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3322,
											"end": 3341,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3242,
											"end": 3348,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5317,
											"end": 5321,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5333,
											"end": 5348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5351,
											"end": 5363,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 5351,
											"end": 5361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 5351,
											"end": 5363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5351,
											"end": 5363,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 5351,
											"end": 5363,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5333,
											"end": 5363,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5333,
											"end": 5363,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5373,
											"end": 5411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 5389,
											"end": 5393,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5402,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5404,
											"end": 5410,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5373,
											"end": 5388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 5373,
											"end": 5411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5373,
											"end": 5411,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 5373,
											"end": 5411,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5448,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5431,
											"end": 5435,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5437,
											"end": 5439,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5447,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 5421,
											"end": 5448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5448,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5421,
											"end": 5448,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5465,
											"end": 5469,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5458,
											"end": 5469,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5458,
											"end": 5469,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5458,
											"end": 5469,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5190,
											"end": 5476,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3149,
											"end": 3154,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3173,
											"end": 3175,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 3166,
											"end": 3175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3166,
											"end": 3175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3091,
											"end": 3182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5959,
											"end": 5963,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5975,
											"end": 5988,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5991,
											"end": 6003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 5991,
											"end": 6001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 5991,
											"end": 6003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5991,
											"end": 6003,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 5991,
											"end": 6003,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5975,
											"end": 6003,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5975,
											"end": 6003,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6013,
											"end": 6077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 6022,
											"end": 6027,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6029,
											"end": 6036,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6066,
											"end": 6076,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 6048,
											"end": 6053,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6055,
											"end": 6062,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6047,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 6038,
											"end": 6063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6063,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 6038,
											"end": 6063,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 6038,
											"end": 6076,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6076,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 6038,
											"end": 6076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6076,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 6038,
											"end": 6076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6013,
											"end": 6021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 6013,
											"end": 6077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6013,
											"end": 6077,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 6013,
											"end": 6077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6098,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6087,
											"end": 6098,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6087,
											"end": 6098,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6087,
											"end": 6098,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 6105,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3480,
											"end": 3487,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3506,
											"end": 3515,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3516,
											"end": 3523,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3499,
											"end": 3524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3499,
											"end": 3524,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3531,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2421,
											"end": 2434,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2453,
											"end": 2460,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2446,
											"end": 2460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2446,
											"end": 2460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2365,
											"end": 2467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6685,
											"end": 6689,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6701,
											"end": 6714,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6717,
											"end": 6729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 6717,
											"end": 6727,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 6717,
											"end": 6729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6717,
											"end": 6729,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 6717,
											"end": 6729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6701,
											"end": 6729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6701,
											"end": 6729,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6739,
											"end": 6763,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6766,
											"end": 6791,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 6776,
											"end": 6781,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6783,
											"end": 6790,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6766,
											"end": 6775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 6766,
											"end": 6791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6766,
											"end": 6791,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 6766,
											"end": 6791,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6739,
											"end": 6791,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6739,
											"end": 6791,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6829,
											"end": 6844,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6809,
											"end": 6825,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6809,
											"end": 6844,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6809,
											"end": 6844,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 6801,
											"end": 6886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 6980,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 6929,
											"end": 6934,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6936,
											"end": 6943,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6964,
											"end": 6979,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6945,
											"end": 6961,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6945,
											"end": 6979,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 6928,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 6920,
											"end": 6980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 6980,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 6920,
											"end": 6980,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7008,
											"end": 7012,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7001,
											"end": 7012,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7001,
											"end": 7012,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7001,
											"end": 7012,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7001,
											"end": 7012,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 7019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3806,
											"end": 3810,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3822,
											"end": 3835,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3838,
											"end": 3850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 3838,
											"end": 3848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 3838,
											"end": 3850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3838,
											"end": 3850,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 3838,
											"end": 3850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3822,
											"end": 3850,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3822,
											"end": 3850,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3860,
											"end": 3888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 3870,
											"end": 3875,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3879,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3881,
											"end": 3887,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3860,
											"end": 3869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 3860,
											"end": 3888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3860,
											"end": 3888,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 3860,
											"end": 3888,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3905,
											"end": 3909,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3898,
											"end": 3909,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3898,
											"end": 3909,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3898,
											"end": 3909,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3727,
											"end": 3916,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4063,
											"end": 4070,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4089,
											"end": 4100,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4101,
											"end": 4106,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4108,
											"end": 4115,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4082,
											"end": 4116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4082,
											"end": 4116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 4123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 640,
											"end": 736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10504,
											"end": 10874,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 10504,
											"end": 10874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10652,
											"end": 10653,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10635,
											"end": 10654,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10635,
											"end": 10654,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10635,
											"end": 10640,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10635,
											"end": 10654,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10635,
											"end": 10654,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10635,
											"end": 10654,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 10627,
											"end": 10695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10732,
											"end": 10733,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10713,
											"end": 10734,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10713,
											"end": 10734,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10713,
											"end": 10720,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10713,
											"end": 10734,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10713,
											"end": 10734,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10713,
											"end": 10734,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 10705,
											"end": 10773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10814,
											"end": 10820,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10784,
											"end": 10795,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10796,
											"end": 10801,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10803,
											"end": 10810,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10784,
											"end": 10820,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10784,
											"end": 10820,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10784,
											"end": 10820,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10784,
											"end": 10820,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10851,
											"end": 10858,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10844,
											"end": 10849,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10860,
											"end": 10866,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 10835,
											"end": 10867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 10504,
											"end": 10874,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10504,
											"end": 10874,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10504,
											"end": 10874,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10504,
											"end": 10874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11155,
											"end": 11596,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 11155,
											"end": 11596,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11285,
											"end": 11309,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11312,
											"end": 11337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 11322,
											"end": 11327,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11329,
											"end": 11336,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11312,
											"end": 11321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 11312,
											"end": 11337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11312,
											"end": 11337,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 11312,
											"end": 11337,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11285,
											"end": 11337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11285,
											"end": 11337,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11371,
											"end": 11388,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11351,
											"end": 11367,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11351,
											"end": 11388,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11347,
											"end": 11590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 11347,
											"end": 11590,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11432,
											"end": 11438,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11412,
											"end": 11428,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11412,
											"end": 11438,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11412,
											"end": 11438,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 11404,
											"end": 11472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11514,
											"end": 11565,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 11523,
											"end": 11528,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11530,
											"end": 11537,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11558,
											"end": 11564,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11539,
											"end": 11555,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11539,
											"end": 11564,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11514,
											"end": 11522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 11514,
											"end": 11565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11514,
											"end": 11565,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 11514,
											"end": 11565,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11347,
											"end": 11590,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 11347,
											"end": 11590,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11275,
											"end": 11596,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11155,
											"end": 11596,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11155,
											"end": 11596,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11155,
											"end": 11596,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11155,
											"end": 11596,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7473,
											"end": 8291,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 7473,
											"end": 8291,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7615,
											"end": 7616,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7599,
											"end": 7617,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7599,
											"end": 7617,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7599,
											"end": 7603,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7599,
											"end": 7617,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7599,
											"end": 7617,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7599,
											"end": 7617,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 7591,
											"end": 7659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7691,
											"end": 7692,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7677,
											"end": 7693,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7677,
											"end": 7693,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7677,
											"end": 7679,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7677,
											"end": 7693,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7677,
											"end": 7693,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7677,
											"end": 7693,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 7669,
											"end": 7733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7744,
											"end": 7782,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 7765,
											"end": 7769,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7771,
											"end": 7773,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7775,
											"end": 7781,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7744,
											"end": 7764,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 7744,
											"end": 7782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7744,
											"end": 7782,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 7744,
											"end": 7782,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7793,
											"end": 7812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7815,
											"end": 7824,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7825,
											"end": 7829,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7793,
											"end": 7830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7793,
											"end": 7830,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7863,
											"end": 7869,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7848,
											"end": 7859,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7848,
											"end": 7869,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7848,
											"end": 7869,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 7840,
											"end": 7912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7978,
											"end": 7984,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7964,
											"end": 7975,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7964,
											"end": 7984,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7946,
											"end": 7955,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7956,
											"end": 7960,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7946,
											"end": 7984,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7946,
											"end": 7984,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7946,
											"end": 7984,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7946,
											"end": 7984,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8178,
											"end": 8184,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8170,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8171,
											"end": 8173,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8225,
											"end": 8227,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8219,
											"end": 8223,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8229,
											"end": 8235,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 8210,
											"end": 8236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 8247,
											"end": 8284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 8267,
											"end": 8271,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8273,
											"end": 8275,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8277,
											"end": 8283,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8247,
											"end": 8266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 8247,
											"end": 8284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8247,
											"end": 8284,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 8247,
											"end": 8284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7581,
											"end": 8291,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7473,
											"end": 8291,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7473,
											"end": 8291,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7473,
											"end": 8291,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7473,
											"end": 8291,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12180,
											"end": 12301,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 12180,
											"end": 12301,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12180,
											"end": 12301,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12180,
											"end": 12301,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12180,
											"end": 12301,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12180,
											"end": 12301,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12889,
											"end": 13009,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 12889,
											"end": 13009,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12889,
											"end": 13009,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12889,
											"end": 13009,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12889,
											"end": 13009,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12889,
											"end": 13009,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 533,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 287,
											"end": 533,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 368,
											"end": 369,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 392,
											"end": 398,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 389,
											"end": 390,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 386,
											"end": 399,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 378,
											"end": 491,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 477,
											"end": 478,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 472,
											"end": 475,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 468,
											"end": 479,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 462,
											"end": 480,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 458,
											"end": 459,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 453,
											"end": 456,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 449,
											"end": 460,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 442,
											"end": 481,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 414,
											"end": 416,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 407,
											"end": 417,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 402,
											"end": 417,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 402,
											"end": 417,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 525,
											"end": 526,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 511,
											"end": 514,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 507,
											"end": 523,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 500,
											"end": 527,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 349,
											"end": 533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 539,
											"end": 641,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 539,
											"end": 641,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 580,
											"end": 586,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 634,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 622,
											"end": 624,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 615,
											"end": 620,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 607,
											"end": 635,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 597,
											"end": 635,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 597,
											"end": 635,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 539,
											"end": 641,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 539,
											"end": 641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 735,
											"end": 738,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 796,
											"end": 801,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 763,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 763,
											"end": 802,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 877,
											"end": 880,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 818,
											"end": 889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 818,
											"end": 889,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 818,
											"end": 889,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 811,
											"end": 889,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 811,
											"end": 889,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 956,
											"end": 962,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 951,
											"end": 954,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 944,
											"end": 948,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 933,
											"end": 949,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 898,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 898,
											"end": 963,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 898,
											"end": 963,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 988,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 983,
											"end": 986,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 979,
											"end": 1018,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 739,
											"end": 1024,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 647,
											"end": 1024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1143,
											"end": 1147,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1179,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1230,
											"end": 1239,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1220,
											"end": 1240,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1216,
											"end": 1217,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1214,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 1331,
											"end": 1335,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 1258,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1030,
											"end": 1343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1539,
											"end": 1540,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1537,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1529,
											"end": 1541,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1713,
											"end": 1720,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1795,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1751,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1742,
											"end": 1796,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1676,
											"end": 1802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1845,
											"end": 1852,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 1892,
											"end": 1897,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 1874,
											"end": 1898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1808,
											"end": 1904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 2001,
											"end": 2006,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 1983,
											"end": 2007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1976,
											"end": 1981,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1973,
											"end": 2008,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2019,
											"end": 2020,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2012,
											"end": 2024,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1910,
											"end": 2032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2084,
											"end": 2089,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2128,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2109,
											"end": 2129,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 2165,
											"end": 2170,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 2138,
											"end": 2171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2227,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 2357,
											"end": 2362,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 2339,
											"end": 2363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2332,
											"end": 2337,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2329,
											"end": 2364,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2378,
											"end": 2379,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2376,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2368,
											"end": 2380,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2266,
											"end": 2388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2440,
											"end": 2445,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2478,
											"end": 2484,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 2521,
											"end": 2526,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 2494,
											"end": 2527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2607,
											"end": 2613,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2615,
											"end": 2621,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2664,
											"end": 2666,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2652,
											"end": 2661,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2643,
											"end": 2650,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2639,
											"end": 2662,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2635,
											"end": 2667,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 2670,
											"end": 2749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2790,
											"end": 2791,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 2860,
											"end": 2867,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2851,
											"end": 2857,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2840,
											"end": 2849,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2836,
											"end": 2858,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 2815,
											"end": 2868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2761,
											"end": 2878,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2917,
											"end": 2919,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 2988,
											"end": 2995,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2979,
											"end": 2985,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2968,
											"end": 2977,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2964,
											"end": 2986,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 2943,
											"end": 2996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2888,
											"end": 3006,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 3013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3060,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3101,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3102,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3082,
											"end": 3103,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 3211,
											"end": 3216,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 3196,
											"end": 3217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3194,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3184,
											"end": 3218,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3115,
											"end": 3224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3317,
											"end": 3321,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3355,
											"end": 3357,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3344,
											"end": 3353,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3340,
											"end": 3358,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 3430,
											"end": 3431,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3415,
											"end": 3432,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3406,
											"end": 3412,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 3368,
											"end": 3433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3230,
											"end": 3440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 3551,
											"end": 3556,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 3533,
											"end": 3557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "tag",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3528,
											"end": 3531,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3446,
											"end": 3564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3663,
											"end": 3667,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3701,
											"end": 3703,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3690,
											"end": 3699,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 3782,
											"end": 3783,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3780,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3767,
											"end": 3784,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3758,
											"end": 3764,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 3714,
											"end": 3785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "tag",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3570,
											"end": 3792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3875,
											"end": 3881,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3891,
											"end": 3897,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3940,
											"end": 3942,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3928,
											"end": 3937,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3919,
											"end": 3926,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3915,
											"end": 3938,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3911,
											"end": 3943,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 3946,
											"end": 4025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "tag",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "tag",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4066,
											"end": 4067,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 4136,
											"end": 4143,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4127,
											"end": 4133,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4116,
											"end": 4125,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4112,
											"end": 4134,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 4091,
											"end": 4144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "tag",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4037,
											"end": 4154,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4193,
											"end": 4195,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 4264,
											"end": 4271,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4255,
											"end": 4261,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4253,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4240,
											"end": 4262,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 4219,
											"end": 4272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "tag",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4164,
											"end": 4282,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4321,
											"end": 4323,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 4392,
											"end": 4399,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4383,
											"end": 4389,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4372,
											"end": 4381,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4368,
											"end": 4390,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 4347,
											"end": 4400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "tag",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4292,
											"end": 4410,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 4417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4458,
											"end": 4465,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4498,
											"end": 4502,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4491,
											"end": 4496,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4487,
											"end": 4503,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4423,
											"end": 4509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 4614,
											"end": 4619,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 4598,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "tag",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4593,
											"end": 4596,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4586,
											"end": 4621,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4515,
											"end": 4627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4722,
											"end": 4726,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4760,
											"end": 4762,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4749,
											"end": 4758,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4745,
											"end": 4763,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 4837,
											"end": 4838,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4826,
											"end": 4835,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4822,
											"end": 4839,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4813,
											"end": 4819,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 4773,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "tag",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4633,
											"end": 4847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4912,
											"end": 4918,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4961,
											"end": 4963,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4949,
											"end": 4958,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4940,
											"end": 4947,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4936,
											"end": 4959,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4932,
											"end": 4964,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 4967,
											"end": 5046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "tag",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "tag",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5087,
											"end": 5088,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 5157,
											"end": 5164,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5148,
											"end": 5154,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5137,
											"end": 5146,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5133,
											"end": 5155,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 5112,
											"end": 5165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "tag",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5102,
											"end": 5165,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5102,
											"end": 5165,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5058,
											"end": 5175,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4853,
											"end": 5182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5256,
											"end": 5262,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5264,
											"end": 5270,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5313,
											"end": 5315,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5301,
											"end": 5310,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5292,
											"end": 5299,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5288,
											"end": 5311,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5284,
											"end": 5316,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 5281,
											"end": 5400,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5281,
											"end": 5400,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 5281,
											"end": 5400,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5319,
											"end": 5398,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 5319,
											"end": 5398,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 5319,
											"end": 5398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5319,
											"end": 5398,
											"name": "tag",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 5319,
											"end": 5398,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5281,
											"end": 5400,
											"name": "tag",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 5281,
											"end": 5400,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5439,
											"end": 5440,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5464,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 5509,
											"end": 5516,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5500,
											"end": 5506,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5489,
											"end": 5498,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5485,
											"end": 5507,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5464,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 5464,
											"end": 5517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5464,
											"end": 5517,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 5464,
											"end": 5517,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5454,
											"end": 5517,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5454,
											"end": 5517,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5410,
											"end": 5527,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5566,
											"end": 5568,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5592,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 5637,
											"end": 5644,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5628,
											"end": 5634,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5617,
											"end": 5626,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5613,
											"end": 5635,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5592,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 5592,
											"end": 5645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5592,
											"end": 5645,
											"name": "tag",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 5592,
											"end": 5645,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5582,
											"end": 5645,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5582,
											"end": 5645,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5537,
											"end": 5655,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5188,
											"end": 5662,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5668,
											"end": 5848,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 5668,
											"end": 5848,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5716,
											"end": 5793,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5713,
											"end": 5714,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5706,
											"end": 5794,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5813,
											"end": 5817,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 5810,
											"end": 5811,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5803,
											"end": 5818,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5837,
											"end": 5841,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5834,
											"end": 5835,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5827,
											"end": 5842,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5854,
											"end": 6174,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 5854,
											"end": 6174,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5898,
											"end": 5904,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5935,
											"end": 5936,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 5929,
											"end": 5933,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5925,
											"end": 5937,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 5915,
											"end": 5937,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5915,
											"end": 5937,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 5983,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5976,
											"end": 5980,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5972,
											"end": 5984,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6003,
											"end": 6021,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5993,
											"end": 6074,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 5993,
											"end": 6074,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6059,
											"end": 6063,
											"name": "PUSH",
											"source": 6,
											"value": "7F"
										},
										{
											"begin": 6051,
											"end": 6057,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6047,
											"end": 6064,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6037,
											"end": 6064,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6037,
											"end": 6064,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5993,
											"end": 6074,
											"name": "tag",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 5993,
											"end": 6074,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6121,
											"end": 6123,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6113,
											"end": 6119,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6110,
											"end": 6124,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6090,
											"end": 6108,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6087,
											"end": 6125,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6084,
											"end": 6168,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 6084,
											"end": 6168,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6140,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 6140,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 6140,
											"end": 6158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6140,
											"end": 6158,
											"name": "tag",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 6140,
											"end": 6158,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6084,
											"end": 6168,
											"name": "tag",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 6084,
											"end": 6168,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5905,
											"end": 6174,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5854,
											"end": 6174,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5854,
											"end": 6174,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5854,
											"end": 6174,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5854,
											"end": 6174,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6180,
											"end": 6360,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 6180,
											"end": 6360,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6228,
											"end": 6305,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6225,
											"end": 6226,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6218,
											"end": 6306,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6325,
											"end": 6329,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 6322,
											"end": 6323,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6315,
											"end": 6330,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6349,
											"end": 6353,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 6346,
											"end": 6347,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6339,
											"end": 6354,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6366,
											"end": 6557,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 6366,
											"end": 6557,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6406,
											"end": 6409,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6425,
											"end": 6445,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 6443,
											"end": 6444,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6425,
											"end": 6445,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 6425,
											"end": 6445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6425,
											"end": 6445,
											"name": "tag",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 6425,
											"end": 6445,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6420,
											"end": 6445,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6420,
											"end": 6445,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6459,
											"end": 6479,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 6477,
											"end": 6478,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6459,
											"end": 6479,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 6459,
											"end": 6479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6459,
											"end": 6479,
											"name": "tag",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 6459,
											"end": 6479,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6454,
											"end": 6479,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6454,
											"end": 6479,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6502,
											"end": 6503,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6499,
											"end": 6500,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6495,
											"end": 6504,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6488,
											"end": 6504,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6488,
											"end": 6504,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6523,
											"end": 6526,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6520,
											"end": 6521,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6517,
											"end": 6527,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 6514,
											"end": 6550,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6514,
											"end": 6550,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 6514,
											"end": 6550,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6530,
											"end": 6548,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 6530,
											"end": 6548,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 6530,
											"end": 6548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6530,
											"end": 6548,
											"name": "tag",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 6530,
											"end": 6548,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6514,
											"end": 6550,
											"name": "tag",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 6514,
											"end": 6550,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6366,
											"end": 6557,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6366,
											"end": 6557,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6366,
											"end": 6557,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6366,
											"end": 6557,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6366,
											"end": 6557,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6563,
											"end": 6787,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 6563,
											"end": 6787,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6703,
											"end": 6737,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 6699,
											"end": 6700,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6691,
											"end": 6697,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6687,
											"end": 6701,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6680,
											"end": 6738,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6772,
											"end": 6779,
											"name": "PUSH",
											"source": 6,
											"value": "207A65726F000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6767,
											"end": 6769,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6759,
											"end": 6765,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6755,
											"end": 6770,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6748,
											"end": 6780,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6563,
											"end": 6787,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6563,
											"end": 6787,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6793,
											"end": 7159,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 6793,
											"end": 7159,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6935,
											"end": 6938,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6956,
											"end": 7023,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 7020,
											"end": 7022,
											"name": "PUSH",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 7015,
											"end": 7018,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6956,
											"end": 7023,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 6956,
											"end": 7023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6956,
											"end": 7023,
											"name": "tag",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 6956,
											"end": 7023,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6949,
											"end": 7023,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6949,
											"end": 7023,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7032,
											"end": 7125,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 7121,
											"end": 7124,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7032,
											"end": 7125,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 7032,
											"end": 7125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7032,
											"end": 7125,
											"name": "tag",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 7032,
											"end": 7125,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7152,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7145,
											"end": 7148,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7141,
											"end": 7153,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7134,
											"end": 7153,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7134,
											"end": 7153,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6793,
											"end": 7159,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6793,
											"end": 7159,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6793,
											"end": 7159,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6793,
											"end": 7159,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7165,
											"end": 7584,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 7165,
											"end": 7584,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7331,
											"end": 7335,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7369,
											"end": 7371,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7358,
											"end": 7367,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7354,
											"end": 7372,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7346,
											"end": 7372,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7346,
											"end": 7372,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7418,
											"end": 7427,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7412,
											"end": 7416,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7408,
											"end": 7428,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7404,
											"end": 7405,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7393,
											"end": 7402,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7389,
											"end": 7406,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7382,
											"end": 7429,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7446,
											"end": 7577,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 7572,
											"end": 7576,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7446,
											"end": 7577,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 7446,
											"end": 7577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7446,
											"end": 7577,
											"name": "tag",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 7446,
											"end": 7577,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7438,
											"end": 7577,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7438,
											"end": 7577,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7165,
											"end": 7584,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7165,
											"end": 7584,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7165,
											"end": 7584,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7165,
											"end": 7584,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7590,
											"end": 7813,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 7590,
											"end": 7813,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7730,
											"end": 7764,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 7726,
											"end": 7727,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7718,
											"end": 7724,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7714,
											"end": 7728,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7707,
											"end": 7765,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7799,
											"end": 7805,
											"name": "PUSH",
											"source": 6,
											"value": "7265737300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7794,
											"end": 7796,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7786,
											"end": 7792,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7782,
											"end": 7797,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7775,
											"end": 7806,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7590,
											"end": 7813,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7590,
											"end": 7813,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7819,
											"end": 8185,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 7819,
											"end": 8185,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7961,
											"end": 7964,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7982,
											"end": 8049,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 8046,
											"end": 8048,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 8041,
											"end": 8044,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7982,
											"end": 8049,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 7982,
											"end": 8049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7982,
											"end": 8049,
											"name": "tag",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 7982,
											"end": 8049,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7975,
											"end": 8049,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7975,
											"end": 8049,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8058,
											"end": 8151,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 8147,
											"end": 8150,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8058,
											"end": 8151,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 8058,
											"end": 8151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8058,
											"end": 8151,
											"name": "tag",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 8058,
											"end": 8151,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8176,
											"end": 8178,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8171,
											"end": 8174,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8167,
											"end": 8179,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8160,
											"end": 8179,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8160,
											"end": 8179,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7819,
											"end": 8185,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7819,
											"end": 8185,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7819,
											"end": 8185,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7819,
											"end": 8185,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8191,
											"end": 8610,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 8191,
											"end": 8610,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8357,
											"end": 8361,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8395,
											"end": 8397,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8384,
											"end": 8393,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8380,
											"end": 8398,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8372,
											"end": 8398,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8372,
											"end": 8398,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8444,
											"end": 8453,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8438,
											"end": 8442,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8434,
											"end": 8454,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8430,
											"end": 8431,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8419,
											"end": 8428,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8415,
											"end": 8432,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8408,
											"end": 8455,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8472,
											"end": 8603,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 8598,
											"end": 8602,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8472,
											"end": 8603,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 8472,
											"end": 8603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8472,
											"end": 8603,
											"name": "tag",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 8472,
											"end": 8603,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8464,
											"end": 8603,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8464,
											"end": 8603,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8191,
											"end": 8610,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8191,
											"end": 8610,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8191,
											"end": 8610,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8191,
											"end": 8610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8616,
											"end": 8837,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 8616,
											"end": 8837,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8756,
											"end": 8790,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 8752,
											"end": 8753,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8744,
											"end": 8750,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8740,
											"end": 8754,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8733,
											"end": 8791,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8825,
											"end": 8829,
											"name": "PUSH",
											"source": 6,
											"value": "7373000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8820,
											"end": 8822,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8812,
											"end": 8818,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8808,
											"end": 8823,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8801,
											"end": 8830,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8616,
											"end": 8837,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8616,
											"end": 8837,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8843,
											"end": 9209,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 8843,
											"end": 9209,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8985,
											"end": 8988,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9006,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 9070,
											"end": 9072,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 9065,
											"end": 9068,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9006,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 9006,
											"end": 9073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9006,
											"end": 9073,
											"name": "tag",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 9006,
											"end": 9073,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8999,
											"end": 9073,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8999,
											"end": 9073,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9082,
											"end": 9175,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 9171,
											"end": 9174,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9082,
											"end": 9175,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 9082,
											"end": 9175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9082,
											"end": 9175,
											"name": "tag",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 9082,
											"end": 9175,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9200,
											"end": 9202,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9195,
											"end": 9198,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9191,
											"end": 9203,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9184,
											"end": 9203,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9184,
											"end": 9203,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8843,
											"end": 9209,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8843,
											"end": 9209,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8843,
											"end": 9209,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8843,
											"end": 9209,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9215,
											"end": 9634,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 9215,
											"end": 9634,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9381,
											"end": 9385,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9419,
											"end": 9421,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9408,
											"end": 9417,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9404,
											"end": 9422,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9396,
											"end": 9422,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9396,
											"end": 9422,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9468,
											"end": 9477,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9462,
											"end": 9466,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9458,
											"end": 9478,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9454,
											"end": 9455,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9443,
											"end": 9452,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9439,
											"end": 9456,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9432,
											"end": 9479,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9496,
											"end": 9627,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 9622,
											"end": 9626,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9496,
											"end": 9627,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 9496,
											"end": 9627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9496,
											"end": 9627,
											"name": "tag",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 9496,
											"end": 9627,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9488,
											"end": 9627,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9488,
											"end": 9627,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9215,
											"end": 9634,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9215,
											"end": 9634,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9215,
											"end": 9634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9215,
											"end": 9634,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9640,
											"end": 9819,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 9640,
											"end": 9819,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9780,
											"end": 9811,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 9776,
											"end": 9777,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9768,
											"end": 9774,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9764,
											"end": 9778,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9757,
											"end": 9812,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9640,
											"end": 9819,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9640,
											"end": 9819,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9825,
											"end": 10191,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 9825,
											"end": 10191,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9967,
											"end": 9970,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9988,
											"end": 10055,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 10052,
											"end": 10054,
											"name": "PUSH",
											"source": 6,
											"value": "1D"
										},
										{
											"begin": 10047,
											"end": 10050,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9988,
											"end": 10055,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 9988,
											"end": 10055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9988,
											"end": 10055,
											"name": "tag",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 9988,
											"end": 10055,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9981,
											"end": 10055,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9981,
											"end": 10055,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10064,
											"end": 10157,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 10153,
											"end": 10156,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10064,
											"end": 10157,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 10064,
											"end": 10157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10064,
											"end": 10157,
											"name": "tag",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 10064,
											"end": 10157,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10182,
											"end": 10184,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10177,
											"end": 10180,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10173,
											"end": 10185,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10166,
											"end": 10185,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10166,
											"end": 10185,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9825,
											"end": 10191,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9825,
											"end": 10191,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9825,
											"end": 10191,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9825,
											"end": 10191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10197,
											"end": 10616,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 10197,
											"end": 10616,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10363,
											"end": 10367,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10401,
											"end": 10403,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10390,
											"end": 10399,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10386,
											"end": 10404,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10378,
											"end": 10404,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10378,
											"end": 10404,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10450,
											"end": 10459,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10444,
											"end": 10448,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10440,
											"end": 10460,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10436,
											"end": 10437,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10425,
											"end": 10434,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10421,
											"end": 10438,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10414,
											"end": 10461,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10478,
											"end": 10609,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 10604,
											"end": 10608,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10478,
											"end": 10609,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 10478,
											"end": 10609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10478,
											"end": 10609,
											"name": "tag",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 10478,
											"end": 10609,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10470,
											"end": 10609,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10470,
											"end": 10609,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10197,
											"end": 10616,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10197,
											"end": 10616,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10197,
											"end": 10616,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10197,
											"end": 10616,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10622,
											"end": 10846,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 10622,
											"end": 10846,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10762,
											"end": 10796,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 10758,
											"end": 10759,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10750,
											"end": 10756,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10746,
											"end": 10760,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10739,
											"end": 10797,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10831,
											"end": 10838,
											"name": "PUSH",
											"source": 6,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10826,
											"end": 10828,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10818,
											"end": 10824,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10814,
											"end": 10829,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10807,
											"end": 10839,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10622,
											"end": 10846,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10622,
											"end": 10846,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10852,
											"end": 11218,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 10852,
											"end": 11218,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10994,
											"end": 10997,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11015,
											"end": 11082,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 11079,
											"end": 11081,
											"name": "PUSH",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 11074,
											"end": 11077,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11015,
											"end": 11082,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 11015,
											"end": 11082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11015,
											"end": 11082,
											"name": "tag",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 11015,
											"end": 11082,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11008,
											"end": 11082,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11008,
											"end": 11082,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11091,
											"end": 11184,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 11180,
											"end": 11183,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11091,
											"end": 11184,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 11091,
											"end": 11184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11091,
											"end": 11184,
											"name": "tag",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 11091,
											"end": 11184,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11209,
											"end": 11211,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11204,
											"end": 11207,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11200,
											"end": 11212,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11193,
											"end": 11212,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11193,
											"end": 11212,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10852,
											"end": 11218,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10852,
											"end": 11218,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10852,
											"end": 11218,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10852,
											"end": 11218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11224,
											"end": 11643,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 11224,
											"end": 11643,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11390,
											"end": 11394,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11428,
											"end": 11430,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11417,
											"end": 11426,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11413,
											"end": 11431,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11405,
											"end": 11431,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11405,
											"end": 11431,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11477,
											"end": 11486,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11471,
											"end": 11475,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11467,
											"end": 11487,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11463,
											"end": 11464,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11452,
											"end": 11461,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11448,
											"end": 11465,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11441,
											"end": 11488,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11505,
											"end": 11636,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 11631,
											"end": 11635,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11505,
											"end": 11636,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 11505,
											"end": 11636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11505,
											"end": 11636,
											"name": "tag",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 11505,
											"end": 11636,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11497,
											"end": 11636,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11497,
											"end": 11636,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11224,
											"end": 11643,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11224,
											"end": 11643,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11224,
											"end": 11643,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11224,
											"end": 11643,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11649,
											"end": 11871,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 11649,
											"end": 11871,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11789,
											"end": 11823,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 11785,
											"end": 11786,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11777,
											"end": 11783,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11773,
											"end": 11787,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11766,
											"end": 11824,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11858,
											"end": 11863,
											"name": "PUSH",
											"source": 6,
											"value": "6573730000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11853,
											"end": 11855,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11845,
											"end": 11851,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11841,
											"end": 11856,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11834,
											"end": 11864,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11649,
											"end": 11871,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11649,
											"end": 11871,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11877,
											"end": 12243,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 11877,
											"end": 12243,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12019,
											"end": 12022,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12040,
											"end": 12107,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 12104,
											"end": 12106,
											"name": "PUSH",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 12099,
											"end": 12102,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12040,
											"end": 12107,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 12040,
											"end": 12107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12040,
											"end": 12107,
											"name": "tag",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 12040,
											"end": 12107,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12033,
											"end": 12107,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12033,
											"end": 12107,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12116,
											"end": 12209,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 12205,
											"end": 12208,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12116,
											"end": 12209,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 12116,
											"end": 12209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12116,
											"end": 12209,
											"name": "tag",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 12116,
											"end": 12209,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12234,
											"end": 12236,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 12229,
											"end": 12232,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12225,
											"end": 12237,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12218,
											"end": 12237,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12218,
											"end": 12237,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11877,
											"end": 12243,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11877,
											"end": 12243,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11877,
											"end": 12243,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11877,
											"end": 12243,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12249,
											"end": 12668,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 12249,
											"end": 12668,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12415,
											"end": 12419,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12453,
											"end": 12455,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12442,
											"end": 12451,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12438,
											"end": 12456,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12430,
											"end": 12456,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12430,
											"end": 12456,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12502,
											"end": 12511,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12496,
											"end": 12500,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12492,
											"end": 12512,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 12488,
											"end": 12489,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12477,
											"end": 12486,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12473,
											"end": 12490,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12466,
											"end": 12513,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12530,
											"end": 12661,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 12656,
											"end": 12660,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12530,
											"end": 12661,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 12530,
											"end": 12661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12530,
											"end": 12661,
											"name": "tag",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 12530,
											"end": 12661,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12522,
											"end": 12661,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12522,
											"end": 12661,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12249,
											"end": 12668,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12249,
											"end": 12668,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12249,
											"end": 12668,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12249,
											"end": 12668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12674,
											"end": 12899,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 12674,
											"end": 12899,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12814,
											"end": 12848,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 12810,
											"end": 12811,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12802,
											"end": 12808,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12798,
											"end": 12812,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12791,
											"end": 12849,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12883,
											"end": 12891,
											"name": "PUSH",
											"source": 6,
											"value": "616C616E63650000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12878,
											"end": 12880,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12870,
											"end": 12876,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12866,
											"end": 12881,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12859,
											"end": 12892,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12674,
											"end": 12899,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12674,
											"end": 12899,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12905,
											"end": 13271,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 12905,
											"end": 13271,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13047,
											"end": 13050,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13068,
											"end": 13135,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 13132,
											"end": 13134,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 13127,
											"end": 13130,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13068,
											"end": 13135,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 13068,
											"end": 13135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13068,
											"end": 13135,
											"name": "tag",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 13068,
											"end": 13135,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13061,
											"end": 13135,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13061,
											"end": 13135,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13144,
											"end": 13237,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 13233,
											"end": 13236,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13144,
											"end": 13237,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 13144,
											"end": 13237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13144,
											"end": 13237,
											"name": "tag",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 13144,
											"end": 13237,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13262,
											"end": 13264,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 13257,
											"end": 13260,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13253,
											"end": 13265,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13246,
											"end": 13265,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13246,
											"end": 13265,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12905,
											"end": 13271,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12905,
											"end": 13271,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12905,
											"end": 13271,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12905,
											"end": 13271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13277,
											"end": 13696,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 13277,
											"end": 13696,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13443,
											"end": 13447,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13481,
											"end": 13483,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13470,
											"end": 13479,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13466,
											"end": 13484,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13458,
											"end": 13484,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13458,
											"end": 13484,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13530,
											"end": 13539,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13524,
											"end": 13528,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13520,
											"end": 13540,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 13516,
											"end": 13517,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13505,
											"end": 13514,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13501,
											"end": 13518,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13494,
											"end": 13541,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13558,
											"end": 13689,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 13684,
											"end": 13688,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13558,
											"end": 13689,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 13558,
											"end": 13689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13558,
											"end": 13689,
											"name": "tag",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 13558,
											"end": 13689,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13550,
											"end": 13689,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13550,
											"end": 13689,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13277,
											"end": 13696,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13277,
											"end": 13696,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13277,
											"end": 13696,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13277,
											"end": 13696,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"W6/simpleAMM/src/simpleAMMV6.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 15,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 21,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 23,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 25,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 27,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:12504  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:12504  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208f63ffdaae21fc026dee9daad1bffb318e7c5b3a3259e486c6500b228f15508f64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208f63ffdaae21fc026dee9daad1bffb318e7c5b3a3259e486c6500b228f15508f64736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 PUSH4 0xFFDAAE21 0xFC MUL PUSH14 0xEE9DAAD1BFFB318E7C5B3A3259E4 DUP7 0xC6 POP SIGNEXTEND 0x22 DUP16 ISZERO POP DUP16 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "202:12302:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208f63ffdaae21fc026dee9daad1bffb318e7c5b3a3259e486c6500b228f15508f64736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 PUSH4 0xFFDAAE21 0xFC MUL PUSH14 0xEE9DAAD1BFFB318E7C5B3A3259E4 DUP7 0xC6 POP SIGNEXTEND 0x22 DUP16 ISZERO POP DUP16 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "202:12302:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208f63ffdaae21fc026dee9daad1bffb318e7c5b3a3259e486c6500b228f15508f64736f6c63430008120033",
									".code": [
										{
											"begin": 202,
											"end": 12504,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"W6/simpleAMM/src/simpleAMMV6.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"W6/simpleAMM/src/simpleAMMV6.sol": {
				"AMM": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ETH_ADDRESS",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount1",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getERCPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getETHPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "getInERCPredictOutputETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "getInETHPredictOutputERC",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "my_shars",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "removeAllLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountERC",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_shares",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountERC",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_shares",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountERC",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "reserveERC",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "reserveETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "sharesOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amountIn",
									"type": "uint256"
								}
							],
							"name": "swap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amountIn",
									"type": "uint256"
								}
							],
							"name": "swapTokenForETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_forwardOutput",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_slipLock",
									"type": "uint256"
								}
							],
							"name": "swapTokenForETH_WithSlipLock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_forwardOutput",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_slipLock",
									"type": "uint256"
								}
							],
							"name": "swap_WithSlipLock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"W6/simpleAMM/src/simpleAMMV6.sol\":639:8037  contract AMM {... */\n  mstore(0x40, 0xa0)\n    /* \"W6/simpleAMM/src/simpleAMMV6.sol\":946:1048  constructor(address _token) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"W6/simpleAMM/src/simpleAMMV6.sol\":997:1007  msg.sender */\n  caller\n    /* \"W6/simpleAMM/src/simpleAMMV6.sol\":985:994  developer */\n  0x00\n  dup1\n    /* \"W6/simpleAMM/src/simpleAMMV6.sol\":985:1007  developer = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"W6/simpleAMM/src/simpleAMMV6.sol\":1033:1039  _token */\n  dup1\n    /* \"W6/simpleAMM/src/simpleAMMV6.sol\":1018:1040  token = IERC20(_token) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"W6/simpleAMM/src/simpleAMMV6.sol\":946:1048  constructor(address _token) {... */\n  pop\n    /* \"W6/simpleAMM/src/simpleAMMV6.sol\":639:8037  contract AMM {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_20\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_22\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_23:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_25\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":932:1051   */\ntag_27:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_29\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"W6/simpleAMM/src/simpleAMMV6.sol\":639:8037  contract AMM {... */\ntag_6:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xe9ec5ebbfe521ba5a70e4c2b13332e74dda4e055153dc29723307e62e8ed0f2a\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":639:8037  contract AMM {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x9c8f9f23\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xdccc5fea\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xdccc5fea\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xe764e67c\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xf5eb42dc\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xfcc2ba08\n      eq\n      tag_21\n      jumpi\n      jump(tag_1)\n    tag_23:\n      dup1\n      0x9c8f9f23\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa201ccf6\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa607a8d9\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xa734f06e\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xdc2d845b\n      eq\n      tag_16\n      jumpi\n      jump(tag_1)\n    tag_22:\n      dup1\n      0x6cae4f84\n      gt\n      tag_24\n      jumpi\n      dup1\n      0x6cae4f84\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x6fb84b74\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x7a6a5e1b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x94b918de\n      eq\n      tag_11\n      jumpi\n      jump(tag_1)\n    tag_24:\n      dup1\n      0x100af203\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x51c6590a\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x56c1d7eb\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x62279b65\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":778:803  uint256 public reserveETH */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      pop\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":860:886  uint256 public totalSupply */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      pop\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4299:5076  function addLiquidity(uint256 _amount1) external payable returns (uint256 shares) {... */\n    tag_4:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7392:7710  function getInETHPredictOutputERC(uint256 _amount) public view returns (uint256) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      pop\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_41:\n      tag_42\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":2719:3502  function swap_WithSlipLock(uint256 _amountIn,uint256 _forwardOutput,uint256 _slipLock) public payable returns (uint256 amountOut)... */\n    tag_6:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6295:6390  function my_shars() public view returns(uint256){... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":2065:2713  function swapTokenForETH(uint256 _amountIn) public returns (uint256 amountOut) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_53\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_53:\n      pop\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":893:937  mapping(address => uint256) public balanceOf */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n      pop\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      tag_62\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":5084:5249  function removeAllLiquidity(address _user) external returns (uint256 amountETH, uint256 amountERC) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_64\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n      pop\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_66:\n      tag_67\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_68\n      swap3\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":1481:2059  function swap(uint256 _amountIn) public payable returns (uint256 amountOut) {... */\n    tag_11:\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_71:\n      tag_72\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":5255:5492  function removeLiquidity(uint256 _shares) external returns (uint256 amountETH, uint256 amountERC) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_74\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_74:\n      pop\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_76:\n      tag_77\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_78\n      swap3\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":5500:5742  function removeLiquidity(address _user, uint256 _shares) external returns (uint256 amountETH, uint256 amountERC) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_79\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_79:\n      pop\n      tag_80\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_81\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      tag_83\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      tag_84\n      swap3\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6930:7119  function getETHPrice() public view returns (uint256) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_85\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_85:\n      pop\n      tag_86\n      tag_87\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      tag_88\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":721:769  address public constant ETH_ADDRESS = address(0) */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_89\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_89:\n      pop\n      tag_90\n      tag_91\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      tag_92\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3508:4293  function swapTokenForETH_WithSlipLock(uint256 _amountIn,uint256 _forwardOutput,uint256 _slipLock) public returns (uint256 amountOut) {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_94\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_94:\n      pop\n      tag_95\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_96\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_96:\n      tag_97\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      tag_98\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7716:8032  function getInERCPredictOutputETH(uint256 _amount) public view returns (uint256) {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_99\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_99:\n      pop\n      tag_100\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_101\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_101:\n      tag_102\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      tag_103\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":817:842  uint256 public reserveERC */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_104\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_104:\n      pop\n      tag_105\n      tag_106\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      tag_107\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6396:6499  function sharesOf(address _user) public view returns(uint256){... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_108\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_108:\n      pop\n      tag_109\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_110\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_110:\n      tag_111\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      tag_112\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":685:714  IERC20 public immutable token */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_113\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_113:\n      pop\n      tag_114\n      tag_115\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      tag_116\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7125:7384  function getERCPrice() public view returns (uint256) {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_118\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_118:\n      pop\n      tag_119\n      tag_120\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      tag_121\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":778:803  uint256 public reserveETH */\n    tag_27:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":860:886  uint256 public totalSupply */\n    tag_32:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4299:5076  function addLiquidity(uint256 _amount1) external payable returns (uint256 shares) {... */\n    tag_37:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4365:4379  uint256 shares */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4392:4397  token */\n      immutable(\"0xe9ec5ebbfe521ba5a70e4c2b13332e74dda4e055153dc29723307e62e8ed0f2a\")\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4392:4410  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4411:4421  msg.sender */\n      caller\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4431:4435  this */\n      address\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4438:4446  _amount1 */\n      dup6\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4392:4447  token.transferFrom(msg.sender, address(this), _amount1) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n    tag_123:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_126\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_126:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_127\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_127:\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4460:4476  uint256 _amount0 */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4479:4488  msg.value */\n      callvalue\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4460:4488  uint256 _amount0 = msg.value */\n      swap1\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4518:4519  0 */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4505:4515  reserveETH */\n      sload(0x01)\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4505:4519  reserveETH > 0 */\n      gt\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4505:4537  reserveETH > 0 || reserveERC > 0 */\n      dup1\n      tag_129\n      jumpi\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4536:4537  0 */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4523:4533  reserveERC */\n      sload(0x02)\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4523:4537  reserveERC > 0 */\n      gt\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4505:4537  reserveETH > 0 || reserveERC > 0 */\n    tag_129:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4501:4641  if (reserveETH > 0 || reserveERC > 0) {... */\n      iszero\n      tag_130\n      jumpi\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4600:4608  _amount0 */\n      dup1\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4587:4597  reserveERC */\n      sload(0x02)\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4587:4608  reserveERC * _amount0 */\n      tag_131\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_131:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4575:4583  _amount1 */\n      dup4\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4562:4572  reserveETH */\n      sload(0x01)\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4562:4583  reserveETH * _amount1 */\n      tag_133\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_133:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4562:4608  reserveETH * _amount1 == reserveERC * _amount0 */\n      eq\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4554:4629  require(reserveETH * _amount1 == reserveERC * _amount0, \"x / y != dx / dy\") */\n      tag_134\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_135\n      swap1\n      tag_136\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_134:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4501:4641  if (reserveETH > 0 || reserveERC > 0) {... */\n    tag_130:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4672:4673  0 */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4657:4668  totalSupply */\n      sload(0x03)\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4657:4673  totalSupply == 0 */\n      sub\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4653:4914  if (totalSupply == 0) {... */\n      tag_137\n      jumpi\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4699:4725  _sqrt(_amount0 * _amount1) */\n      tag_138\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4716:4724  _amount1 */\n      dup4\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4705:4713  _amount0 */\n      dup3\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4705:4724  _amount0 * _amount1 */\n      tag_139\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_139:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4699:4704  _sqrt */\n      tag_140\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4699:4725  _sqrt(_amount0 * _amount1) */\n      jump\t// in\n    tag_138:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4690:4725  shares = _sqrt(_amount0 * _amount1) */\n      swap2\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4653:4914  if (totalSupply == 0) {... */\n      jump(tag_141)\n    tag_137:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4767:4902  Math.min(... */\n      tag_142\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4821:4831  reserveETH */\n      sload(0x01)\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4806:4817  totalSupply */\n      sload(0x03)\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4795:4803  _amount0 */\n      dup4\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4795:4817  _amount0 * totalSupply */\n      tag_143\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_143:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4794:4831  (_amount0 * totalSupply) / reserveETH */\n      tag_144\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_144:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4877:4887  reserveERC */\n      sload(0x02)\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4862:4873  totalSupply */\n      sload(0x03)\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4851:4859  _amount1 */\n      dup7\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4851:4873  _amount1 * totalSupply */\n      tag_146\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_146:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4850:4887  (_amount1 * totalSupply) / reserveERC */\n      tag_147\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_147:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4767:4775  Math.min */\n      tag_148\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4767:4902  Math.min(... */\n      jump\t// in\n    tag_142:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4758:4902  shares = Math.min(... */\n      swap2\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4653:4914  if (totalSupply == 0) {... */\n    tag_141:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4941:4942  0 */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4932:4938  shares */\n      dup3\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4932:4942  shares > 0 */\n      gt\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4924:4957  require(shares > 0, \"shares = 0\") */\n      tag_149\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_150\n      swap1\n      tag_151\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_149:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4968:4993  _mint(msg.sender, shares) */\n      tag_152\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4974:4984  msg.sender */\n      caller\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4986:4992  shares */\n      dup4\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4968:4973  _mint */\n      tag_153\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4968:4993  _mint(msg.sender, shares) */\n      jump\t// in\n    tag_152:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":5006:5068  _update(address(this).balance, token.balanceOf(address(this))) */\n      tag_154\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":5014:5035  address(this).balance */\n      selfbalance\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":5037:5042  token */\n      immutable(\"0xe9ec5ebbfe521ba5a70e4c2b13332e74dda4e055153dc29723307e62e8ed0f2a\")\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":5037:5052  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":5061:5065  this */\n      address\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":5037:5067  token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_155\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_155:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_157\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_157:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_158\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_158:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":5006:5013  _update */\n      tag_160\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":5006:5068  _update(address(this).balance, token.balanceOf(address(this))) */\n      jump\t// in\n    tag_154:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4381:5076  {... */\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4299:5076  function addLiquidity(uint256 _amount1) external payable returns (uint256 shares) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7392:7710  function getInETHPredictOutputERC(uint256 _amount) public view returns (uint256) {... */\n    tag_42:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7464:7471  uint256 */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7505:7506  0 */\n      dup1\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7492:7502  reserveETH */\n      sload(0x01)\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7492:7506  reserveETH > 0 */\n      gt\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7492:7524  reserveETH > 0 && reserveERC > 0 */\n      dup1\n      iszero\n      tag_162\n      jumpi\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7523:7524  0 */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7510:7520  reserveERC */\n      sload(0x02)\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7510:7524  reserveERC > 0 */\n      gt\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7492:7524  reserveETH > 0 && reserveERC > 0 */\n    tag_162:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7492:7537  reserveETH > 0 && reserveERC > 0 && _amount>0 */\n      dup1\n      iszero\n      tag_163\n      jumpi\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7536:7537  0 */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7528:7535  _amount */\n      dup3\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7528:7537  _amount>0 */\n      gt\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7492:7537  reserveETH > 0 && reserveERC > 0 && _amount>0 */\n    tag_163:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7484:7564  require(reserveETH > 0 && reserveERC > 0 && _amount>0, \"Invalid ERC20 reserves\") */\n      tag_164\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_165\n      swap1\n      tag_166\n      jump\t// in\n    tag_165:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_164:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7575:7598  uint256 amountInWithFee */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7617:7621  1000 */\n      0x03e8\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7610:7613  997 */\n      0x03e5\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7600:7607  _amount */\n      dup5\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7600:7613  _amount * 997 */\n      tag_167\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_167:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7599:7621  (_amount * 997) / 1000 */\n      tag_168\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_168:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7575:7621  uint256 amountInWithFee=(_amount * 997) / 1000 */\n      swap1\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7686:7701  amountInWithFee */\n      dup1\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7673:7683  reserveETH */\n      sload(0x01)\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7673:7701  reserveETH + amountInWithFee */\n      tag_169\n      swap2\n      swap1\n      tag_170\n      jump\t// in\n    tag_169:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7653:7668  amountInWithFee */\n      dup2\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7640:7650  reserveERC */\n      sload(0x02)\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7640:7668  reserveERC * amountInWithFee */\n      tag_171\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_171:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7639:7702  (reserveERC * amountInWithFee) / (reserveETH + amountInWithFee) */\n      tag_172\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_172:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7632:7702  return (reserveERC * amountInWithFee) / (reserveETH + amountInWithFee) */\n      swap2\n      pop\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7392:7710  function getInETHPredictOutputERC(uint256 _amount) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":2719:3502  function swap_WithSlipLock(uint256 _amountIn,uint256 _forwardOutput,uint256 _slipLock) public payable returns (uint256 amountOut)... */\n    tag_47:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":2830:2847  uint256 amountOut */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":2886:2895  _amountIn */\n      dup4\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":2873:2882  msg.value */\n      callvalue\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":2873:2895  msg.value == _amountIn */\n      eq\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":2865:2919  require(msg.value == _amountIn, \"ETH amount mismatch\") */\n      tag_174\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_175\n      swap1\n      tag_176\n      jump\t// in\n    tag_175:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_174:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":2932:2955  uint256 amountInWithFee */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":2978:2982  1000 */\n      0x03e8\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":2971:2974  997 */\n      0x03e5\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":2959:2968  _amountIn */\n      dup7\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":2959:2974  _amountIn * 997 */\n      tag_177\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_177:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":2958:2982  (_amountIn * 997) / 1000 */\n      tag_178\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_178:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":2932:2982  uint256 amountInWithFee = (_amountIn * 997) / 1000 */\n      swap1\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3052:3067  amountInWithFee */\n      dup1\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3039:3049  reserveETH */\n      sload(0x01)\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3039:3067  reserveETH + amountInWithFee */\n      tag_179\n      swap2\n      swap1\n      tag_170\n      jump\t// in\n    tag_179:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3019:3034  amountInWithFee */\n      dup2\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3006:3016  reserveERC */\n      sload(0x02)\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3006:3034  reserveERC * amountInWithFee */\n      tag_180\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_180:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3005:3068  (reserveERC * amountInWithFee) / (reserveETH + amountInWithFee) */\n      tag_181\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_181:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":2993:3068  amountOut = (reserveERC * amountInWithFee) / (reserveETH + amountInWithFee) */\n      swap2\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3099:3100  0 */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3087:3096  amountOut */\n      dup3\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3087:3100  amountOut > 0 */\n      gt\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3079:3131  require(amountOut > 0, \"Insufficient output amount\") */\n      tag_182\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_183\n      swap1\n      tag_184\n      jump\t// in\n    tag_183:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_182:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3196:3200  1000 */\n      0x03e8\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3185:3194  _slipLock */\n      dup4\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3180:3184  1000 */\n      0x03e8\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3180:3194  1000-_slipLock */\n      tag_185\n      swap2\n      swap1\n      tag_186\n      jump\t// in\n    tag_185:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3164:3178  _forwardOutput */\n      dup6\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3164:3195  _forwardOutput*(1000-_slipLock) */\n      tag_187\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_187:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3164:3200  _forwardOutput*(1000-_slipLock)/1000 */\n      tag_188\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_188:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3150:3159  amountOut */\n      dup3\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3150:3201  amountOut >= (_forwardOutput*(1000-_slipLock)/1000) */\n      lt\n      iszero\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3142:3214  require(amountOut >= (_forwardOutput*(1000-_slipLock)/1000), \"SlipLock\") */\n      tag_189\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_190\n      swap1\n      tag_191\n      jump\t// in\n    tag_190:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_189:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3225:3247  uint256 feeToDeveloper */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3288:3292  2000 */\n      0x07d0\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3277:3287  reserveETH */\n      sload(0x01)\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3277:3292  reserveETH*2000 */\n      tag_192\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_192:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3264:3275  totalSupply */\n      sload(0x03)\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3262:3263  3 */\n      0x03\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3250:3259  _amountIn */\n      dup9\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3250:3263  _amountIn * 3 */\n      tag_193\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_193:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3250:3275  _amountIn * 3*totalSupply */\n      tag_194\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_194:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3250:3293  _amountIn * 3*totalSupply/(reserveETH*2000) */\n      tag_195\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_195:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3225:3293  uint256 feeToDeveloper = _amountIn * 3*totalSupply/(reserveETH*2000) */\n      swap1\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3304:3335  _mint(developer,feeToDeveloper) */\n      tag_196\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3310:3319  developer */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3320:3334  feeToDeveloper */\n      dup3\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3304:3309  _mint */\n      tag_153\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3304:3335  _mint(developer,feeToDeveloper) */\n      jump\t// in\n    tag_196:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3382:3387  token */\n      immutable(\"0xe9ec5ebbfe521ba5a70e4c2b13332e74dda4e055153dc29723307e62e8ed0f2a\")\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3382:3396  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3397:3407  msg.sender */\n      caller\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3409:3418  amountOut */\n      dup6\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3382:3419  token.transfer(msg.sender, amountOut) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_197\n      swap3\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_197:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_200\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_200:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_201\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_201:\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3432:3494  _update(address(this).balance, token.balanceOf(address(this))) */\n      tag_202\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3440:3461  address(this).balance */\n      selfbalance\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3463:3468  token */\n      immutable(\"0xe9ec5ebbfe521ba5a70e4c2b13332e74dda4e055153dc29723307e62e8ed0f2a\")\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3463:3478  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3487:3491  this */\n      address\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3463:3493  token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_203\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_203:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_205\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_205:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_206\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_206:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3432:3439  _update */\n      tag_160\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3432:3494  _update(address(this).balance, token.balanceOf(address(this))) */\n      jump\t// in\n    tag_202:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":2854:3502  {... */\n      pop\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":2719:3502  function swap_WithSlipLock(uint256 _amountIn,uint256 _forwardOutput,uint256 _slipLock) public payable returns (uint256 amountOut)... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6295:6390  function my_shars() public view returns(uint256){... */\n    tag_51:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6335:6342  uint256 */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6361:6370  balanceOf */\n      0x04\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6361:6382  balanceOf[msg.sender] */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6371:6381  msg.sender */\n      caller\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6361:6382  balanceOf[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6354:6382  return balanceOf[msg.sender] */\n      swap1\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6295:6390  function my_shars() public view returns(uint256){... */\n      swap1\n      jump\t// out\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":2065:2713  function swapTokenForETH(uint256 _amountIn) public returns (uint256 amountOut) {... */\n    tag_56:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":2125:2142  uint256 amountOut */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":2155:2178  uint256 amountInWithFee */\n      dup1\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":2201:2205  1000 */\n      0x03e8\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":2194:2197  997 */\n      0x03e5\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":2182:2191  _amountIn */\n      dup5\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":2182:2197  _amountIn * 997 */\n      tag_209\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_209:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":2181:2205  (_amountIn * 997) / 1000 */\n      tag_210\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_210:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":2155:2205  uint256 amountInWithFee = (_amountIn * 997) / 1000 */\n      swap1\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":2277:2292  amountInWithFee */\n      dup1\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":2264:2274  reserveERC */\n      sload(0x02)\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":2264:2292  reserveERC + amountInWithFee */\n      tag_211\n      swap2\n      swap1\n      tag_170\n      jump\t// in\n    tag_211:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":2244:2259  amountInWithFee */\n      dup2\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":2231:2241  reserveETH */\n      sload(0x01)\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":2231:2259  reserveETH * amountInWithFee */\n      tag_212\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_212:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":2230:2293  (reserveETH * amountInWithFee) / (reserveERC + amountInWithFee) */\n      tag_213\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_213:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":2218:2293  amountOut = (reserveETH * amountInWithFee) / (reserveERC + amountInWithFee) */\n      swap2\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":2324:2325  0 */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":2312:2321  amountOut */\n      dup3\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":2312:2325  amountOut > 0 */\n      gt\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":2304:2356  require(amountOut > 0, \"Insufficient output amount\") */\n      tag_214\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_215\n      swap1\n      tag_184\n      jump\t// in\n    tag_215:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_214:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":2367:2389  uint256 feeToDeveloper */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":2430:2434  2000 */\n      0x07d0\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":2419:2429  reserveERC */\n      sload(0x02)\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":2419:2434  reserveERC*2000 */\n      tag_216\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_216:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":2406:2417  totalSupply */\n      sload(0x03)\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":2404:2405  3 */\n      0x03\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":2392:2401  _amountIn */\n      dup7\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":2392:2405  _amountIn * 3 */\n      tag_217\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_217:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":2392:2417  _amountIn * 3*totalSupply */\n      tag_218\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_218:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":2392:2435  _amountIn * 3*totalSupply/(reserveERC*2000) */\n      tag_219\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_219:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":2367:2435  uint256 feeToDeveloper = _amountIn * 3*totalSupply/(reserveERC*2000) */\n      swap1\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":2446:2477  _mint(developer,feeToDeveloper) */\n      tag_220\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":2452:2461  developer */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":2462:2476  feeToDeveloper */\n      dup3\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":2446:2451  _mint */\n      tag_153\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":2446:2477  _mint(developer,feeToDeveloper) */\n      jump\t// in\n    tag_220:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":2524:2529  token */\n      immutable(\"0xe9ec5ebbfe521ba5a70e4c2b13332e74dda4e055153dc29723307e62e8ed0f2a\")\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":2524:2542  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":2543:2553  msg.sender */\n      caller\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":2563:2567  this */\n      address\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":2570:2579  _amountIn */\n      dup8\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":2524:2580  token.transferFrom(msg.sender, address(this), _amountIn) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_221\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n    tag_221:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_223\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_223:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_224\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_224:\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":2599:2609  msg.sender */\n      caller\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":2591:2619  payable(msg.sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":2591:2630  payable(msg.sender).transfer(amountOut) */\n      0x08fc\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":2620:2629  amountOut */\n      dup5\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":2591:2630  payable(msg.sender).transfer(amountOut) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_226\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_226:\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":2643:2705  _update(address(this).balance, token.balanceOf(address(this))) */\n      tag_227\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":2651:2672  address(this).balance */\n      selfbalance\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":2674:2679  token */\n      immutable(\"0xe9ec5ebbfe521ba5a70e4c2b13332e74dda4e055153dc29723307e62e8ed0f2a\")\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":2674:2689  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":2698:2702  this */\n      address\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":2674:2704  token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_228\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_228:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_230\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_230:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_231\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_231:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":2643:2650  _update */\n      tag_160\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":2643:2705  _update(address(this).balance, token.balanceOf(address(this))) */\n      jump\t// in\n    tag_227:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":2144:2713  {... */\n      pop\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":2065:2713  function swapTokenForETH(uint256 _amountIn) public returns (uint256 amountOut) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":893:937  mapping(address => uint256) public balanceOf */\n    tag_62:\n      mstore(0x20, 0x04)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":5084:5249  function removeAllLiquidity(address _user) external returns (uint256 amountETH, uint256 amountERC) {... */\n    tag_67:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":5145:5162  uint256 amountETH */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":5164:5181  uint256 amountERC */\n      dup1\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":5201:5241  _removeLiquidity(_user,balanceOf[_user]) */\n      tag_233\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":5218:5223  _user */\n      dup4\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":5224:5233  balanceOf */\n      0x04\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":5224:5240  balanceOf[_user] */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":5234:5239  _user */\n      dup7\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":5224:5240  balanceOf[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":5201:5217  _removeLiquidity */\n      tag_234\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":5201:5241  _removeLiquidity(_user,balanceOf[_user]) */\n      jump\t// in\n    tag_233:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":5194:5241  return _removeLiquidity(_user,balanceOf[_user]) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":5084:5249  function removeAllLiquidity(address _user) external returns (uint256 amountETH, uint256 amountERC) {... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":1481:2059  function swap(uint256 _amountIn) public payable returns (uint256 amountOut) {... */\n    tag_72:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":1538:1555  uint256 amountOut */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":1589:1598  _amountIn */\n      dup2\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":1576:1585  msg.value */\n      callvalue\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":1576:1598  msg.value == _amountIn */\n      eq\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":1568:1622  require(msg.value == _amountIn, \"ETH amount mismatch\") */\n      tag_236\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_237\n      swap1\n      tag_176\n      jump\t// in\n    tag_237:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_236:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":1635:1658  uint256 amountInWithFee */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":1681:1685  1000 */\n      0x03e8\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":1674:1677  997 */\n      0x03e5\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":1662:1671  _amountIn */\n      dup5\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":1662:1677  _amountIn * 997 */\n      tag_238\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_238:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":1661:1685  (_amountIn * 997) / 1000 */\n      tag_239\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_239:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":1635:1685  uint256 amountInWithFee = (_amountIn * 997) / 1000 */\n      swap1\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":1755:1770  amountInWithFee */\n      dup1\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":1742:1752  reserveETH */\n      sload(0x01)\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":1742:1770  reserveETH + amountInWithFee */\n      tag_240\n      swap2\n      swap1\n      tag_170\n      jump\t// in\n    tag_240:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":1722:1737  amountInWithFee */\n      dup2\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":1709:1719  reserveERC */\n      sload(0x02)\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":1709:1737  reserveERC * amountInWithFee */\n      tag_241\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_241:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":1708:1771  (reserveERC * amountInWithFee) / (reserveETH + amountInWithFee) */\n      tag_242\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_242:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":1696:1771  amountOut = (reserveERC * amountInWithFee) / (reserveETH + amountInWithFee) */\n      swap2\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":1782:1804  uint256 feeToDeveloper */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":1845:1849  2000 */\n      0x07d0\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":1834:1844  reserveETH */\n      sload(0x01)\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":1834:1849  reserveETH*2000 */\n      tag_243\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_243:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":1821:1832  totalSupply */\n      sload(0x03)\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":1819:1820  3 */\n      0x03\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":1807:1816  _amountIn */\n      dup7\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":1807:1820  _amountIn * 3 */\n      tag_244\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_244:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":1807:1832  _amountIn * 3*totalSupply */\n      tag_245\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_245:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":1807:1850  _amountIn * 3*totalSupply/(reserveETH*2000) */\n      tag_246\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_246:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":1782:1850  uint256 feeToDeveloper = _amountIn * 3*totalSupply/(reserveETH*2000) */\n      swap1\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":1861:1892  _mint(developer,feeToDeveloper) */\n      tag_247\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":1867:1876  developer */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":1877:1891  feeToDeveloper */\n      dup3\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":1861:1866  _mint */\n      tag_153\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":1861:1892  _mint(developer,feeToDeveloper) */\n      jump\t// in\n    tag_247:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":1939:1944  token */\n      immutable(\"0xe9ec5ebbfe521ba5a70e4c2b13332e74dda4e055153dc29723307e62e8ed0f2a\")\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":1939:1953  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":1954:1964  msg.sender */\n      caller\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":1966:1975  amountOut */\n      dup6\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":1939:1976  token.transfer(msg.sender, amountOut) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_248\n      swap3\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_248:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_250\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_250:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_251\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_251:\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":1989:2051  _update(address(this).balance, token.balanceOf(address(this))) */\n      tag_252\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":1997:2018  address(this).balance */\n      selfbalance\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":2020:2025  token */\n      immutable(\"0xe9ec5ebbfe521ba5a70e4c2b13332e74dda4e055153dc29723307e62e8ed0f2a\")\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":2020:2035  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":2044:2048  this */\n      address\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":2020:2050  token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_253\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_253:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_255\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_255:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_256\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_256:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":1989:1996  _update */\n      tag_160\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":1989:2051  _update(address(this).balance, token.balanceOf(address(this))) */\n      jump\t// in\n    tag_252:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":1557:2059  {... */\n      pop\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":1481:2059  function swap(uint256 _amountIn) public payable returns (uint256 amountOut) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":5255:5492  function removeLiquidity(uint256 _shares) external returns (uint256 amountETH, uint256 amountERC) {... */\n    tag_77:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":5315:5332  uint256 amountETH */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":5334:5351  uint256 amountERC */\n      dup1\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":5383:5392  balanceOf */\n      0x04\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":5383:5404  balanceOf[msg.sender] */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":5393:5403  msg.sender */\n      caller\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":5383:5404  balanceOf[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":5372:5379  _shares */\n      dup4\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":5372:5404  _shares <= balanceOf[msg.sender] */\n      gt\n      iszero\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":5364:5429  require(_shares <= balanceOf[msg.sender], \"Insufficient balance\") */\n      tag_258\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_259\n      swap1\n      tag_260\n      jump\t// in\n    tag_259:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_258:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":5447:5484  _removeLiquidity(msg.sender, _shares) */\n      tag_261\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":5464:5474  msg.sender */\n      caller\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":5476:5483  _shares */\n      dup5\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":5447:5463  _removeLiquidity */\n      tag_234\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":5447:5484  _removeLiquidity(msg.sender, _shares) */\n      jump\t// in\n    tag_261:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":5440:5484  return _removeLiquidity(msg.sender, _shares) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":5255:5492  function removeLiquidity(uint256 _shares) external returns (uint256 amountETH, uint256 amountERC) {... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":5500:5742  function removeLiquidity(address _user, uint256 _shares) external returns (uint256 amountETH, uint256 amountERC) {... */\n    tag_83:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":5575:5592  uint256 amountETH */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":5594:5611  uint256 amountERC */\n      dup1\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":5643:5652  balanceOf */\n      0x04\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":5643:5659  balanceOf[_user] */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":5653:5658  _user */\n      dup6\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":5643:5659  balanceOf[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":5632:5639  _shares */\n      dup4\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":5632:5659  _shares <= balanceOf[_user] */\n      gt\n      iszero\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":5624:5684  require(_shares <= balanceOf[_user], \"Insufficient balance\") */\n      tag_263\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_264\n      swap1\n      tag_260\n      jump\t// in\n    tag_264:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_263:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":5702:5734  _removeLiquidity(_user, _shares) */\n      tag_265\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":5719:5724  _user */\n      dup5\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":5726:5733  _shares */\n      dup5\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":5702:5718  _removeLiquidity */\n      tag_234\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":5702:5734  _removeLiquidity(_user, _shares) */\n      jump\t// in\n    tag_265:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":5695:5734  return _removeLiquidity(_user, _shares) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":5500:5742  function removeLiquidity(address _user, uint256 _shares) external returns (uint256 amountETH, uint256 amountERC) {... */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6930:7119  function getETHPrice() public view returns (uint256) {... */\n    tag_87:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6974:6981  uint256 */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7015:7016  0 */\n      dup1\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7002:7012  reserveETH */\n      sload(0x01)\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7002:7016  reserveETH > 0 */\n      gt\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7002:7034  reserveETH > 0 && reserveERC > 0 */\n      dup1\n      iszero\n      tag_267\n      jumpi\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7033:7034  0 */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7020:7030  reserveERC */\n      sload(0x02)\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7020:7034  reserveERC > 0 */\n      gt\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7002:7034  reserveETH > 0 && reserveERC > 0 */\n    tag_267:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6994:7059  require(reserveETH > 0 && reserveERC > 0, \"Invalid ETH reserves\") */\n      tag_268\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_269\n      swap1\n      tag_270\n      jump\t// in\n    tag_269:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_268:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7101:7111  reserveETH */\n      sload(0x01)\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7091:7097  10**18 */\n      0x0de0b6b3a7640000\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7078:7088  reserveERC */\n      sload(0x02)\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7078:7097  reserveERC * 10**18 */\n      tag_271\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_271:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7077:7111  (reserveERC * 10**18) / reserveETH */\n      tag_272\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_272:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7070:7111  return (reserveERC * 10**18) / reserveETH */\n      swap1\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6930:7119  function getETHPrice() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":721:769  address public constant ETH_ADDRESS = address(0) */\n    tag_91:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":767:768  0 */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":721:769  address public constant ETH_ADDRESS = address(0) */\n      dup2\n      jump\t// out\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3508:4293  function swapTokenForETH_WithSlipLock(uint256 _amountIn,uint256 _forwardOutput,uint256 _slipLock) public returns (uint256 amountOut) {... */\n    tag_97:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3622:3639  uint256 amountOut */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3652:3675  uint256 amountInWithFee */\n      dup1\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3698:3702  1000 */\n      0x03e8\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3691:3694  997 */\n      0x03e5\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3679:3688  _amountIn */\n      dup7\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3679:3694  _amountIn * 997 */\n      tag_274\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_274:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3678:3702  (_amountIn * 997) / 1000 */\n      tag_275\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_275:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3652:3702  uint256 amountInWithFee = (_amountIn * 997) / 1000 */\n      swap1\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3774:3789  amountInWithFee */\n      dup1\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3761:3771  reserveERC */\n      sload(0x02)\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3761:3789  reserveERC + amountInWithFee */\n      tag_276\n      swap2\n      swap1\n      tag_170\n      jump\t// in\n    tag_276:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3741:3756  amountInWithFee */\n      dup2\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3728:3738  reserveETH */\n      sload(0x01)\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3728:3756  reserveETH * amountInWithFee */\n      tag_277\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_277:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3727:3790  (reserveETH * amountInWithFee) / (reserveERC + amountInWithFee) */\n      tag_278\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_278:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3715:3790  amountOut = (reserveETH * amountInWithFee) / (reserveERC + amountInWithFee) */\n      swap2\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3821:3822  0 */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3809:3818  amountOut */\n      dup3\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3809:3822  amountOut > 0 */\n      gt\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3801:3853  require(amountOut > 0, \"Insufficient output amount\") */\n      tag_279\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_280\n      swap1\n      tag_184\n      jump\t// in\n    tag_280:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_279:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3918:3922  1000 */\n      0x03e8\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3907:3916  _slipLock */\n      dup4\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3902:3906  1000 */\n      0x03e8\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3902:3916  1000-_slipLock */\n      tag_281\n      swap2\n      swap1\n      tag_186\n      jump\t// in\n    tag_281:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3886:3900  _forwardOutput */\n      dup6\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3886:3917  _forwardOutput*(1000-_slipLock) */\n      tag_282\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_282:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3886:3922  _forwardOutput*(1000-_slipLock)/1000 */\n      tag_283\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_283:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3872:3881  amountOut */\n      dup3\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3872:3923  amountOut >= (_forwardOutput*(1000-_slipLock)/1000) */\n      lt\n      iszero\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3864:3936  require(amountOut >= (_forwardOutput*(1000-_slipLock)/1000), \"SlipLock\") */\n      tag_284\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_285\n      swap1\n      tag_191\n      jump\t// in\n    tag_285:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_284:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3947:3969  uint256 feeToDeveloper */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4010:4014  2000 */\n      0x07d0\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3999:4009  reserveERC */\n      sload(0x02)\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3999:4014  reserveERC*2000 */\n      tag_286\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_286:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3986:3997  totalSupply */\n      sload(0x03)\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3984:3985  3 */\n      0x03\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3972:3981  _amountIn */\n      dup9\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3972:3985  _amountIn * 3 */\n      tag_287\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_287:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3972:3997  _amountIn * 3*totalSupply */\n      tag_288\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_288:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3972:4015  _amountIn * 3*totalSupply/(reserveERC*2000) */\n      tag_289\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_289:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3947:4015  uint256 feeToDeveloper = _amountIn * 3*totalSupply/(reserveERC*2000) */\n      swap1\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4026:4057  _mint(developer,feeToDeveloper) */\n      tag_290\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4032:4041  developer */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4042:4056  feeToDeveloper */\n      dup3\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4026:4031  _mint */\n      tag_153\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4026:4057  _mint(developer,feeToDeveloper) */\n      jump\t// in\n    tag_290:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4104:4109  token */\n      immutable(\"0xe9ec5ebbfe521ba5a70e4c2b13332e74dda4e055153dc29723307e62e8ed0f2a\")\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4104:4122  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4123:4133  msg.sender */\n      caller\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4143:4147  this */\n      address\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4150:4159  _amountIn */\n      dup10\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4104:4160  token.transferFrom(msg.sender, address(this), _amountIn) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_291\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n    tag_291:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_293\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_293:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_294\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_294:\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4179:4189  msg.sender */\n      caller\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4171:4199  payable(msg.sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4171:4210  payable(msg.sender).transfer(amountOut) */\n      0x08fc\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4200:4209  amountOut */\n      dup5\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4171:4210  payable(msg.sender).transfer(amountOut) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_296\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_296:\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4223:4285  _update(address(this).balance, token.balanceOf(address(this))) */\n      tag_297\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4231:4252  address(this).balance */\n      selfbalance\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4254:4259  token */\n      immutable(\"0xe9ec5ebbfe521ba5a70e4c2b13332e74dda4e055153dc29723307e62e8ed0f2a\")\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4254:4269  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4278:4282  this */\n      address\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4254:4284  token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_298\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_298:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_300\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_300:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_301\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_301:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4223:4230  _update */\n      tag_160\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":4223:4285  _update(address(this).balance, token.balanceOf(address(this))) */\n      jump\t// in\n    tag_297:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3641:4293  {... */\n      pop\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":3508:4293  function swapTokenForETH_WithSlipLock(uint256 _amountIn,uint256 _forwardOutput,uint256 _slipLock) public returns (uint256 amountOut) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7716:8032  function getInERCPredictOutputETH(uint256 _amount) public view returns (uint256) {... */\n    tag_102:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7788:7795  uint256 */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7829:7830  0 */\n      dup1\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7816:7826  reserveETH */\n      sload(0x01)\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7816:7830  reserveETH > 0 */\n      gt\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7816:7848  reserveETH > 0 && reserveERC > 0 */\n      dup1\n      iszero\n      tag_303\n      jumpi\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7847:7848  0 */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7834:7844  reserveERC */\n      sload(0x02)\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7834:7848  reserveERC > 0 */\n      gt\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7816:7848  reserveETH > 0 && reserveERC > 0 */\n    tag_303:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7816:7861  reserveETH > 0 && reserveERC > 0 && _amount>0 */\n      dup1\n      iszero\n      tag_304\n      jumpi\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7860:7861  0 */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7852:7859  _amount */\n      dup3\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7852:7861  _amount>0 */\n      gt\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7816:7861  reserveETH > 0 && reserveERC > 0 && _amount>0 */\n    tag_304:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7808:7886  require(reserveETH > 0 && reserveERC > 0 && _amount>0, \"Invalid ETH reserves\") */\n      tag_305\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_306\n      swap1\n      tag_270\n      jump\t// in\n    tag_306:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_305:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7897:7920  uint256 amountInWithFee */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7939:7943  1000 */\n      0x03e8\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7932:7935  997 */\n      0x03e5\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7922:7929  _amount */\n      dup5\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7922:7935  _amount * 997 */\n      tag_307\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_307:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7921:7943  (_amount * 997) / 1000 */\n      tag_308\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_308:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7897:7943  uint256 amountInWithFee=(_amount * 997) / 1000 */\n      swap1\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":8008:8023  amountInWithFee */\n      dup1\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7995:8005  reserveERC */\n      sload(0x02)\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7995:8023  reserveERC + amountInWithFee */\n      tag_309\n      swap2\n      swap1\n      tag_170\n      jump\t// in\n    tag_309:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7975:7990  amountInWithFee */\n      dup2\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7962:7972  reserveETH */\n      sload(0x01)\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7962:7990  reserveETH * amountInWithFee */\n      tag_310\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_310:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7961:8024  (reserveETH * amountInWithFee) / (reserveERC + amountInWithFee) */\n      tag_311\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_311:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7954:8024  return (reserveETH * amountInWithFee) / (reserveERC + amountInWithFee) */\n      swap2\n      pop\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7716:8032  function getInERCPredictOutputETH(uint256 _amount) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":817:842  uint256 public reserveERC */\n    tag_106:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6396:6499  function sharesOf(address _user) public view returns(uint256){... */\n    tag_111:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6449:6456  uint256 */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6475:6484  balanceOf */\n      0x04\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6475:6491  balanceOf[_user] */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6485:6490  _user */\n      dup4\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6475:6491  balanceOf[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6468:6491  return balanceOf[_user] */\n      swap1\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6396:6499  function sharesOf(address _user) public view returns(uint256){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":685:714  IERC20 public immutable token */\n    tag_115:\n      immutable(\"0xe9ec5ebbfe521ba5a70e4c2b13332e74dda4e055153dc29723307e62e8ed0f2a\")\n      dup2\n      jump\t// out\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7125:7384  function getERCPrice() public view returns (uint256) {... */\n    tag_120:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7169:7176  uint256 */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7210:7211  0 */\n      dup1\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7197:7207  reserveETH */\n      sload(0x01)\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7197:7211  reserveETH > 0 */\n      gt\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7197:7229  reserveETH > 0 && reserveERC > 0 */\n      dup1\n      iszero\n      tag_314\n      jumpi\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7228:7229  0 */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7215:7225  reserveERC */\n      sload(0x02)\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7215:7229  reserveERC > 0 */\n      gt\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7197:7229  reserveETH > 0 && reserveERC > 0 */\n    tag_314:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7189:7256  require(reserveETH > 0 && reserveERC > 0, \"Invalid ERC20 reserves\") */\n      tag_315\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_316\n      swap1\n      tag_166\n      jump\t// in\n    tag_316:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_315:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7267:7283  uint256 decimals */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7300:7305  token */\n      immutable(\"0xe9ec5ebbfe521ba5a70e4c2b13332e74dda4e055153dc29723307e62e8ed0f2a\")\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7286:7316  ERC20(address(token)).decimals */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x313ce567\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7286:7318  ERC20(address(token)).decimals() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_318\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_318:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_319\n      swap2\n      swap1\n      tag_320\n      jump\t// in\n    tag_319:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7267:7318  uint256 decimals = ERC20(address(token)).decimals() */\n      0xff\n      and\n      swap1\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7366:7376  reserveERC */\n      sload(0x02)\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7354:7362  decimals */\n      dup2\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7350:7352  10 */\n      0x0a\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7350:7362  10**decimals */\n      tag_321\n      swap2\n      swap1\n      tag_322\n      jump\t// in\n    tag_321:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7337:7347  reserveETH */\n      sload(0x01)\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7337:7362  reserveETH * 10**decimals */\n      tag_323\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_323:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7336:7376  (reserveETH * 10**decimals) / reserveERC */\n      tag_324\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_324:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7329:7376  return (reserveETH * 10**decimals) / reserveERC */\n      swap2\n      pop\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":7125:7384  function getERCPrice() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6507:6811  function _sqrt(uint y) internal pure returns (uint z) {... */\n    tag_140:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6553:6559  uint z */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6580:6581  3 */\n      0x03\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6576:6577  y */\n      dup3\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6576:6581  y > 3 */\n      gt\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6572:6804  if (y > 3) {... */\n      iszero\n      tag_326\n      jumpi\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6602:6603  y */\n      dup2\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6598:6603  z = y */\n      swap1\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6618:6624  uint x */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6635:6636  1 */\n      0x01\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6631:6632  2 */\n      0x02\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6627:6628  y */\n      dup5\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6627:6632  y / 2 */\n      tag_327\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_327:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6627:6636  y / 2 + 1 */\n      tag_328\n      swap2\n      swap1\n      tag_170\n      jump\t// in\n    tag_328:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6618:6636  uint x = y / 2 + 1 */\n      swap1\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6651:6743  while (x < z) {... */\n    tag_329:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6662:6663  z */\n      dup2\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6658:6659  x */\n      dup2\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6658:6663  x < z */\n      lt\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6651:6743  while (x < z) {... */\n      iszero\n      tag_330\n      jumpi\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6688:6689  x */\n      dup1\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6684:6689  z = x */\n      swap2\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6726:6727  2 */\n      0x02\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6721:6722  x */\n      dup2\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6717:6718  x */\n      dup3\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6713:6714  y */\n      dup6\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6713:6718  y / x */\n      tag_331\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_331:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6713:6722  y / x + x */\n      tag_332\n      swap2\n      swap1\n      tag_170\n      jump\t// in\n    tag_332:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6712:6727  (y / x + x) / 2 */\n      tag_333\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_333:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6708:6727  x = (y / x + x) / 2 */\n      swap1\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6651:6743  while (x < z) {... */\n      jump(tag_329)\n    tag_330:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6583:6754  {... */\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6572:6804  if (y > 3) {... */\n      jump(tag_334)\n    tag_326:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6769:6770  0 */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6764:6765  y */\n      dup3\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6764:6770  y != 0 */\n      eq\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6760:6804  if (y != 0) {... */\n      tag_335\n      jumpi\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6791:6792  1 */\n      0x01\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6787:6792  z = 1 */\n      swap1\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6760:6804  if (y != 0) {... */\n    tag_335:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6572:6804  if (y > 3) {... */\n    tag_334:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6507:6811  function _sqrt(uint y) internal pure returns (uint z) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":588:692  function min(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_148:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":646:653  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":676:677  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":672:673  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":672:677  a < b */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":672:685  a < b ? a : b */\n      tag_337\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":684:685  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":672:685  a < b ? a : b */\n      jump(tag_338)\n    tag_337:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":680:681  a */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":672:685  a < b ? a : b */\n    tag_338:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":665:685  return a < b ? a : b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":588:692  function min(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":1056:1186  function _mint(address _to, uint256 _amount) private {... */\n    tag_153:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":1138:1145  _amount */\n      dup1\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":1120:1129  balanceOf */\n      0x04\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":1120:1134  balanceOf[_to] */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":1130:1133  _to */\n      dup5\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":1120:1134  balanceOf[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":1120:1145  balanceOf[_to] += _amount */\n      dup3\n      dup3\n      sload\n      tag_340\n      swap2\n      swap1\n      tag_170\n      jump\t// in\n    tag_340:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":1171:1178  _amount */\n      dup1\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":1156:1167  totalSupply */\n      0x03\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":1156:1178  totalSupply += _amount */\n      dup3\n      dup3\n      sload\n      tag_341\n      swap2\n      swap1\n      tag_170\n      jump\t// in\n    tag_341:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":1056:1186  function _mint(address _to, uint256 _amount) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":1336:1473  function _update(uint256 _reserve0, uint256 _reserve1) private {... */\n    tag_160:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":1423:1432  _reserve0 */\n      dup2\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":1410:1420  reserveETH */\n      0x01\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":1410:1432  reserveETH = _reserve0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":1456:1465  _reserve1 */\n      dup1\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":1443:1453  reserveERC */\n      0x02\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":1443:1465  reserveERC = _reserve1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":1336:1473  function _update(uint256 _reserve0, uint256 _reserve1) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":5748:6289  function _removeLiquidity(address _user, uint256 _shares) internal returns (uint256 amountETH, uint256 amountERC) {... */\n    tag_234:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":5824:5841  uint256 amountETH */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":5843:5860  uint256 amountERC */\n      dup1\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":5910:5921  totalSupply */\n      sload(0x03)\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":5896:5906  reserveETH */\n      sload(0x01)\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":5886:5893  _shares */\n      dup5\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":5886:5906  _shares * reserveETH */\n      tag_344\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_344:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":5885:5921  (_shares * reserveETH) / totalSupply */\n      tag_345\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_345:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":5873:5921  amountETH = (_shares * reserveETH) / totalSupply */\n      swap2\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":5969:5980  totalSupply */\n      sload(0x03)\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":5955:5965  reserveERC */\n      sload(0x02)\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":5945:5952  _shares */\n      dup5\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":5945:5965  _shares * reserveERC */\n      tag_346\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_346:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":5944:5980  (_shares * reserveERC) / totalSupply */\n      tag_347\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_347:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":5932:5980  amountERC = (_shares * reserveERC) / totalSupply */\n      swap1\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6011:6012  0 */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":5999:6008  amountETH */\n      dup3\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":5999:6012  amountETH > 0 */\n      gt\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":5999:6029  amountETH > 0 && amountERC > 0 */\n      dup1\n      iszero\n      tag_348\n      jumpi\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6028:6029  0 */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6016:6025  amountERC */\n      dup2\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6016:6029  amountERC > 0 */\n      gt\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":5999:6029  amountETH > 0 && amountERC > 0 */\n    tag_348:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":5991:6060  require(amountETH > 0 && amountERC > 0, \"amountETH or amountERC = 0\") */\n      tag_349\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_350\n      swap1\n      tag_351\n      jump\t// in\n    tag_350:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_349:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6073:6094  _burn(_user, _shares) */\n      tag_352\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6079:6084  _user */\n      dup5\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6086:6093  _shares */\n      dup5\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6073:6078  _burn */\n      tag_353\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6073:6094  _burn(_user, _shares) */\n      jump\t// in\n    tag_352:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6105:6191  _update(address(this).balance - amountETH, token.balanceOf(address(this)) - amountERC) */\n      tag_354\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6137:6146  amountETH */\n      dup3\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6113:6134  address(this).balance */\n      selfbalance\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6113:6146  address(this).balance - amountETH */\n      tag_355\n      swap2\n      swap1\n      tag_186\n      jump\t// in\n    tag_355:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6181:6190  amountERC */\n      dup3\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6148:6153  token */\n      immutable(\"0xe9ec5ebbfe521ba5a70e4c2b13332e74dda4e055153dc29723307e62e8ed0f2a\")\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6148:6163  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6172:6176  this */\n      address\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6148:6178  token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_356\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_356:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_358\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_358:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_359\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_359:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6148:6190  token.balanceOf(address(this)) - amountERC */\n      tag_360\n      swap2\n      swap1\n      tag_186\n      jump\t// in\n    tag_360:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6105:6112  _update */\n      tag_160\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6105:6191  _update(address(this).balance - amountETH, token.balanceOf(address(this)) - amountERC) */\n      jump\t// in\n    tag_354:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6212:6217  _user */\n      dup4\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6204:6227  payable(_user).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6204:6238  payable(_user).transfer(amountETH) */\n      0x08fc\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6228:6237  amountETH */\n      dup4\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6204:6238  payable(_user).transfer(amountETH) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_362\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_362:\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6249:6254  token */\n      immutable(\"0xe9ec5ebbfe521ba5a70e4c2b13332e74dda4e055153dc29723307e62e8ed0f2a\")\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6249:6263  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6264:6269  _user */\n      dup6\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6271:6280  amountERC */\n      dup4\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":6249:6281  token.transfer(_user, amountERC) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_363\n      swap3\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_363:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_365\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_365:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_366\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_366:\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":5748:6289  function _removeLiquidity(address _user, uint256 _shares) internal returns (uint256 amountETH, uint256 amountERC) {... */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":1194:1328  function _burn(address _from, uint256 _amount) private {... */\n    tag_353:\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":1280:1287  _amount */\n      dup1\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":1260:1269  balanceOf */\n      0x04\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":1260:1276  balanceOf[_from] */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":1270:1275  _from */\n      dup5\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":1260:1276  balanceOf[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":1260:1287  balanceOf[_from] -= _amount */\n      dup3\n      dup3\n      sload\n      tag_368\n      swap2\n      swap1\n      tag_186\n      jump\t// in\n    tag_368:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":1313:1320  _amount */\n      dup1\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":1298:1309  totalSupply */\n      0x03\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":1298:1320  totalSupply -= _amount */\n      dup3\n      dup3\n      sload\n      tag_369\n      swap2\n      swap1\n      tag_186\n      jump\t// in\n    tag_369:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6.sol\":1194:1328  function _burn(address _from, uint256 _amount) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_370:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_371:\n        /* \"#utility.yul\":177:201   */\n      tag_421\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_370\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_29:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_423\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_371\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":523:640   */\n    tag_373:\n        /* \"#utility.yul\":632:633   */\n      0x00\n        /* \"#utility.yul\":629:630   */\n      dup1\n        /* \"#utility.yul\":622:634   */\n      revert\n        /* \"#utility.yul\":769:891   */\n    tag_375:\n        /* \"#utility.yul\":842:866   */\n      tag_428\n        /* \"#utility.yul\":860:865   */\n      dup2\n        /* \"#utility.yul\":842:866   */\n      tag_370\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":835:840   */\n      dup2\n        /* \"#utility.yul\":832:867   */\n      eq\n        /* \"#utility.yul\":822:885   */\n      tag_429\n      jumpi\n        /* \"#utility.yul\":881:882   */\n      0x00\n        /* \"#utility.yul\":878:879   */\n      dup1\n        /* \"#utility.yul\":871:883   */\n      revert\n        /* \"#utility.yul\":822:885   */\n    tag_429:\n        /* \"#utility.yul\":769:891   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":897:1036   */\n    tag_376:\n        /* \"#utility.yul\":943:948   */\n      0x00\n        /* \"#utility.yul\":981:987   */\n      dup2\n        /* \"#utility.yul\":968:988   */\n      calldataload\n        /* \"#utility.yul\":959:988   */\n      swap1\n      pop\n        /* \"#utility.yul\":997:1030   */\n      tag_431\n        /* \"#utility.yul\":1024:1029   */\n      dup2\n        /* \"#utility.yul\":997:1030   */\n      tag_375\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":897:1036   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1042:1371   */\n    tag_36:\n        /* \"#utility.yul\":1101:1107   */\n      0x00\n        /* \"#utility.yul\":1150:1152   */\n      0x20\n        /* \"#utility.yul\":1138:1147   */\n      dup3\n        /* \"#utility.yul\":1129:1136   */\n      dup5\n        /* \"#utility.yul\":1125:1148   */\n      sub\n        /* \"#utility.yul\":1121:1153   */\n      slt\n        /* \"#utility.yul\":1118:1237   */\n      iszero\n      tag_433\n      jumpi\n        /* \"#utility.yul\":1156:1235   */\n      tag_434\n      tag_373\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":1118:1237   */\n    tag_433:\n        /* \"#utility.yul\":1276:1277   */\n      0x00\n        /* \"#utility.yul\":1301:1354   */\n      tag_435\n        /* \"#utility.yul\":1346:1353   */\n      dup5\n        /* \"#utility.yul\":1337:1343   */\n      dup3\n        /* \"#utility.yul\":1326:1335   */\n      dup6\n        /* \"#utility.yul\":1322:1344   */\n      add\n        /* \"#utility.yul\":1301:1354   */\n      tag_376\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":1291:1354   */\n      swap2\n      pop\n        /* \"#utility.yul\":1247:1364   */\n      pop\n        /* \"#utility.yul\":1042:1371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1377:1996   */\n    tag_46:\n        /* \"#utility.yul\":1454:1460   */\n      0x00\n        /* \"#utility.yul\":1462:1468   */\n      dup1\n        /* \"#utility.yul\":1470:1476   */\n      0x00\n        /* \"#utility.yul\":1519:1521   */\n      0x60\n        /* \"#utility.yul\":1507:1516   */\n      dup5\n        /* \"#utility.yul\":1498:1505   */\n      dup7\n        /* \"#utility.yul\":1494:1517   */\n      sub\n        /* \"#utility.yul\":1490:1522   */\n      slt\n        /* \"#utility.yul\":1487:1606   */\n      iszero\n      tag_437\n      jumpi\n        /* \"#utility.yul\":1525:1604   */\n      tag_438\n      tag_373\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":1487:1606   */\n    tag_437:\n        /* \"#utility.yul\":1645:1646   */\n      0x00\n        /* \"#utility.yul\":1670:1723   */\n      tag_439\n        /* \"#utility.yul\":1715:1722   */\n      dup7\n        /* \"#utility.yul\":1706:1712   */\n      dup3\n        /* \"#utility.yul\":1695:1704   */\n      dup8\n        /* \"#utility.yul\":1691:1713   */\n      add\n        /* \"#utility.yul\":1670:1723   */\n      tag_376\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":1660:1723   */\n      swap4\n      pop\n        /* \"#utility.yul\":1616:1733   */\n      pop\n        /* \"#utility.yul\":1772:1774   */\n      0x20\n        /* \"#utility.yul\":1798:1851   */\n      tag_440\n        /* \"#utility.yul\":1843:1850   */\n      dup7\n        /* \"#utility.yul\":1834:1840   */\n      dup3\n        /* \"#utility.yul\":1823:1832   */\n      dup8\n        /* \"#utility.yul\":1819:1841   */\n      add\n        /* \"#utility.yul\":1798:1851   */\n      tag_376\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":1788:1851   */\n      swap3\n      pop\n        /* \"#utility.yul\":1743:1861   */\n      pop\n        /* \"#utility.yul\":1900:1902   */\n      0x40\n        /* \"#utility.yul\":1926:1979   */\n      tag_441\n        /* \"#utility.yul\":1971:1978   */\n      dup7\n        /* \"#utility.yul\":1962:1968   */\n      dup3\n        /* \"#utility.yul\":1951:1960   */\n      dup8\n        /* \"#utility.yul\":1947:1969   */\n      add\n        /* \"#utility.yul\":1926:1979   */\n      tag_376\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":1916:1979   */\n      swap2\n      pop\n        /* \"#utility.yul\":1871:1989   */\n      pop\n        /* \"#utility.yul\":1377:1996   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2002:2128   */\n    tag_377:\n        /* \"#utility.yul\":2039:2046   */\n      0x00\n        /* \"#utility.yul\":2079:2121   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2072:2077   */\n      dup3\n        /* \"#utility.yul\":2068:2122   */\n      and\n        /* \"#utility.yul\":2057:2122   */\n      swap1\n      pop\n        /* \"#utility.yul\":2002:2128   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2134:2230   */\n    tag_378:\n        /* \"#utility.yul\":2171:2178   */\n      0x00\n        /* \"#utility.yul\":2200:2224   */\n      tag_444\n        /* \"#utility.yul\":2218:2223   */\n      dup3\n        /* \"#utility.yul\":2200:2224   */\n      tag_377\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":2189:2224   */\n      swap1\n      pop\n        /* \"#utility.yul\":2134:2230   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2236:2358   */\n    tag_379:\n        /* \"#utility.yul\":2309:2333   */\n      tag_446\n        /* \"#utility.yul\":2327:2332   */\n      dup2\n        /* \"#utility.yul\":2309:2333   */\n      tag_378\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":2302:2307   */\n      dup2\n        /* \"#utility.yul\":2299:2334   */\n      eq\n        /* \"#utility.yul\":2289:2352   */\n      tag_447\n      jumpi\n        /* \"#utility.yul\":2348:2349   */\n      0x00\n        /* \"#utility.yul\":2345:2346   */\n      dup1\n        /* \"#utility.yul\":2338:2350   */\n      revert\n        /* \"#utility.yul\":2289:2352   */\n    tag_447:\n        /* \"#utility.yul\":2236:2358   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2364:2503   */\n    tag_380:\n        /* \"#utility.yul\":2410:2415   */\n      0x00\n        /* \"#utility.yul\":2448:2454   */\n      dup2\n        /* \"#utility.yul\":2435:2455   */\n      calldataload\n        /* \"#utility.yul\":2426:2455   */\n      swap1\n      pop\n        /* \"#utility.yul\":2464:2497   */\n      tag_449\n        /* \"#utility.yul\":2491:2496   */\n      dup2\n        /* \"#utility.yul\":2464:2497   */\n      tag_379\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":2364:2503   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2509:2838   */\n    tag_61:\n        /* \"#utility.yul\":2568:2574   */\n      0x00\n        /* \"#utility.yul\":2617:2619   */\n      0x20\n        /* \"#utility.yul\":2605:2614   */\n      dup3\n        /* \"#utility.yul\":2596:2603   */\n      dup5\n        /* \"#utility.yul\":2592:2615   */\n      sub\n        /* \"#utility.yul\":2588:2620   */\n      slt\n        /* \"#utility.yul\":2585:2704   */\n      iszero\n      tag_451\n      jumpi\n        /* \"#utility.yul\":2623:2702   */\n      tag_452\n      tag_373\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":2585:2704   */\n    tag_451:\n        /* \"#utility.yul\":2743:2744   */\n      0x00\n        /* \"#utility.yul\":2768:2821   */\n      tag_453\n        /* \"#utility.yul\":2813:2820   */\n      dup5\n        /* \"#utility.yul\":2804:2810   */\n      dup3\n        /* \"#utility.yul\":2793:2802   */\n      dup6\n        /* \"#utility.yul\":2789:2811   */\n      add\n        /* \"#utility.yul\":2768:2821   */\n      tag_380\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":2758:2821   */\n      swap2\n      pop\n        /* \"#utility.yul\":2714:2831   */\n      pop\n        /* \"#utility.yul\":2509:2838   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2844:3176   */\n    tag_69:\n        /* \"#utility.yul\":2965:2969   */\n      0x00\n        /* \"#utility.yul\":3003:3005   */\n      0x40\n        /* \"#utility.yul\":2992:3001   */\n      dup3\n        /* \"#utility.yul\":2988:3006   */\n      add\n        /* \"#utility.yul\":2980:3006   */\n      swap1\n      pop\n        /* \"#utility.yul\":3016:3087   */\n      tag_455\n        /* \"#utility.yul\":3084:3085   */\n      0x00\n        /* \"#utility.yul\":3073:3082   */\n      dup4\n        /* \"#utility.yul\":3069:3086   */\n      add\n        /* \"#utility.yul\":3060:3066   */\n      dup6\n        /* \"#utility.yul\":3016:3087   */\n      tag_371\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":3097:3169   */\n      tag_456\n        /* \"#utility.yul\":3165:3167   */\n      0x20\n        /* \"#utility.yul\":3154:3163   */\n      dup4\n        /* \"#utility.yul\":3150:3168   */\n      add\n        /* \"#utility.yul\":3141:3147   */\n      dup5\n        /* \"#utility.yul\":3097:3169   */\n      tag_371\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":2844:3176   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3182:3656   */\n    tag_82:\n        /* \"#utility.yul\":3250:3256   */\n      0x00\n        /* \"#utility.yul\":3258:3264   */\n      dup1\n        /* \"#utility.yul\":3307:3309   */\n      0x40\n        /* \"#utility.yul\":3295:3304   */\n      dup4\n        /* \"#utility.yul\":3286:3293   */\n      dup6\n        /* \"#utility.yul\":3282:3305   */\n      sub\n        /* \"#utility.yul\":3278:3310   */\n      slt\n        /* \"#utility.yul\":3275:3394   */\n      iszero\n      tag_458\n      jumpi\n        /* \"#utility.yul\":3313:3392   */\n      tag_459\n      tag_373\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":3275:3394   */\n    tag_458:\n        /* \"#utility.yul\":3433:3434   */\n      0x00\n        /* \"#utility.yul\":3458:3511   */\n      tag_460\n        /* \"#utility.yul\":3503:3510   */\n      dup6\n        /* \"#utility.yul\":3494:3500   */\n      dup3\n        /* \"#utility.yul\":3483:3492   */\n      dup7\n        /* \"#utility.yul\":3479:3501   */\n      add\n        /* \"#utility.yul\":3458:3511   */\n      tag_380\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":3448:3511   */\n      swap3\n      pop\n        /* \"#utility.yul\":3404:3521   */\n      pop\n        /* \"#utility.yul\":3560:3562   */\n      0x20\n        /* \"#utility.yul\":3586:3639   */\n      tag_461\n        /* \"#utility.yul\":3631:3638   */\n      dup6\n        /* \"#utility.yul\":3622:3628   */\n      dup3\n        /* \"#utility.yul\":3611:3620   */\n      dup7\n        /* \"#utility.yul\":3607:3629   */\n      add\n        /* \"#utility.yul\":3586:3639   */\n      tag_376\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":3576:3639   */\n      swap2\n      pop\n        /* \"#utility.yul\":3531:3649   */\n      pop\n        /* \"#utility.yul\":3182:3656   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3662:3780   */\n    tag_381:\n        /* \"#utility.yul\":3749:3773   */\n      tag_463\n        /* \"#utility.yul\":3767:3772   */\n      dup2\n        /* \"#utility.yul\":3749:3773   */\n      tag_378\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":3744:3747   */\n      dup3\n        /* \"#utility.yul\":3737:3774   */\n      mstore\n        /* \"#utility.yul\":3662:3780   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3786:4008   */\n    tag_93:\n        /* \"#utility.yul\":3879:3883   */\n      0x00\n        /* \"#utility.yul\":3917:3919   */\n      0x20\n        /* \"#utility.yul\":3906:3915   */\n      dup3\n        /* \"#utility.yul\":3902:3920   */\n      add\n        /* \"#utility.yul\":3894:3920   */\n      swap1\n      pop\n        /* \"#utility.yul\":3930:4001   */\n      tag_465\n        /* \"#utility.yul\":3998:3999   */\n      0x00\n        /* \"#utility.yul\":3987:3996   */\n      dup4\n        /* \"#utility.yul\":3983:4000   */\n      add\n        /* \"#utility.yul\":3974:3980   */\n      dup5\n        /* \"#utility.yul\":3930:4001   */\n      tag_381\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":3786:4008   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4014:4074   */\n    tag_382:\n        /* \"#utility.yul\":4042:4045   */\n      0x00\n        /* \"#utility.yul\":4063:4068   */\n      dup2\n        /* \"#utility.yul\":4056:4068   */\n      swap1\n      pop\n        /* \"#utility.yul\":4014:4074   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4080:4222   */\n    tag_383:\n        /* \"#utility.yul\":4130:4139   */\n      0x00\n        /* \"#utility.yul\":4163:4216   */\n      tag_468\n        /* \"#utility.yul\":4181:4215   */\n      tag_469\n        /* \"#utility.yul\":4190:4214   */\n      tag_470\n        /* \"#utility.yul\":4208:4213   */\n      dup5\n        /* \"#utility.yul\":4190:4214   */\n      tag_377\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":4181:4215   */\n      tag_382\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":4163:4216   */\n      tag_377\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":4150:4216   */\n      swap1\n      pop\n        /* \"#utility.yul\":4080:4222   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4228:4354   */\n    tag_384:\n        /* \"#utility.yul\":4278:4287   */\n      0x00\n        /* \"#utility.yul\":4311:4348   */\n      tag_472\n        /* \"#utility.yul\":4342:4347   */\n      dup3\n        /* \"#utility.yul\":4311:4348   */\n      tag_383\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":4298:4348   */\n      swap1\n      pop\n        /* \"#utility.yul\":4228:4354   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4360:4500   */\n    tag_385:\n        /* \"#utility.yul\":4424:4433   */\n      0x00\n        /* \"#utility.yul\":4457:4494   */\n      tag_474\n        /* \"#utility.yul\":4488:4493   */\n      dup3\n        /* \"#utility.yul\":4457:4494   */\n      tag_384\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":4444:4494   */\n      swap1\n      pop\n        /* \"#utility.yul\":4360:4500   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4506:4665   */\n    tag_386:\n        /* \"#utility.yul\":4607:4658   */\n      tag_476\n        /* \"#utility.yul\":4652:4657   */\n      dup2\n        /* \"#utility.yul\":4607:4658   */\n      tag_385\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":4602:4605   */\n      dup3\n        /* \"#utility.yul\":4595:4659   */\n      mstore\n        /* \"#utility.yul\":4506:4665   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4671:4921   */\n    tag_117:\n        /* \"#utility.yul\":4778:4782   */\n      0x00\n        /* \"#utility.yul\":4816:4818   */\n      0x20\n        /* \"#utility.yul\":4805:4814   */\n      dup3\n        /* \"#utility.yul\":4801:4819   */\n      add\n        /* \"#utility.yul\":4793:4819   */\n      swap1\n      pop\n        /* \"#utility.yul\":4829:4914   */\n      tag_478\n        /* \"#utility.yul\":4911:4912   */\n      0x00\n        /* \"#utility.yul\":4900:4909   */\n      dup4\n        /* \"#utility.yul\":4896:4913   */\n      add\n        /* \"#utility.yul\":4887:4893   */\n      dup5\n        /* \"#utility.yul\":4829:4914   */\n      tag_386\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":4671:4921   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4927:5369   */\n    tag_124:\n        /* \"#utility.yul\":5076:5080   */\n      0x00\n        /* \"#utility.yul\":5114:5116   */\n      0x60\n        /* \"#utility.yul\":5103:5112   */\n      dup3\n        /* \"#utility.yul\":5099:5117   */\n      add\n        /* \"#utility.yul\":5091:5117   */\n      swap1\n      pop\n        /* \"#utility.yul\":5127:5198   */\n      tag_480\n        /* \"#utility.yul\":5195:5196   */\n      0x00\n        /* \"#utility.yul\":5184:5193   */\n      dup4\n        /* \"#utility.yul\":5180:5197   */\n      add\n        /* \"#utility.yul\":5171:5177   */\n      dup7\n        /* \"#utility.yul\":5127:5198   */\n      tag_381\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":5208:5280   */\n      tag_481\n        /* \"#utility.yul\":5276:5278   */\n      0x20\n        /* \"#utility.yul\":5265:5274   */\n      dup4\n        /* \"#utility.yul\":5261:5279   */\n      add\n        /* \"#utility.yul\":5252:5258   */\n      dup6\n        /* \"#utility.yul\":5208:5280   */\n      tag_381\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":5290:5362   */\n      tag_482\n        /* \"#utility.yul\":5358:5360   */\n      0x40\n        /* \"#utility.yul\":5347:5356   */\n      dup4\n        /* \"#utility.yul\":5343:5361   */\n      add\n        /* \"#utility.yul\":5334:5340   */\n      dup5\n        /* \"#utility.yul\":5290:5362   */\n      tag_371\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":4927:5369   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5375:5465   */\n    tag_387:\n        /* \"#utility.yul\":5409:5416   */\n      0x00\n        /* \"#utility.yul\":5452:5457   */\n      dup2\n        /* \"#utility.yul\":5445:5458   */\n      iszero\n        /* \"#utility.yul\":5438:5459   */\n      iszero\n        /* \"#utility.yul\":5427:5459   */\n      swap1\n      pop\n        /* \"#utility.yul\":5375:5465   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5471:5587   */\n    tag_388:\n        /* \"#utility.yul\":5541:5562   */\n      tag_485\n        /* \"#utility.yul\":5556:5561   */\n      dup2\n        /* \"#utility.yul\":5541:5562   */\n      tag_387\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":5534:5539   */\n      dup2\n        /* \"#utility.yul\":5531:5563   */\n      eq\n        /* \"#utility.yul\":5521:5581   */\n      tag_486\n      jumpi\n        /* \"#utility.yul\":5577:5578   */\n      0x00\n        /* \"#utility.yul\":5574:5575   */\n      dup1\n        /* \"#utility.yul\":5567:5579   */\n      revert\n        /* \"#utility.yul\":5521:5581   */\n    tag_486:\n        /* \"#utility.yul\":5471:5587   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5593:5730   */\n    tag_389:\n        /* \"#utility.yul\":5647:5652   */\n      0x00\n        /* \"#utility.yul\":5678:5684   */\n      dup2\n        /* \"#utility.yul\":5672:5685   */\n      mload\n        /* \"#utility.yul\":5663:5685   */\n      swap1\n      pop\n        /* \"#utility.yul\":5694:5724   */\n      tag_488\n        /* \"#utility.yul\":5718:5723   */\n      dup2\n        /* \"#utility.yul\":5694:5724   */\n      tag_388\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":5593:5730   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5736:6081   */\n    tag_128:\n        /* \"#utility.yul\":5803:5809   */\n      0x00\n        /* \"#utility.yul\":5852:5854   */\n      0x20\n        /* \"#utility.yul\":5840:5849   */\n      dup3\n        /* \"#utility.yul\":5831:5838   */\n      dup5\n        /* \"#utility.yul\":5827:5850   */\n      sub\n        /* \"#utility.yul\":5823:5855   */\n      slt\n        /* \"#utility.yul\":5820:5939   */\n      iszero\n      tag_490\n      jumpi\n        /* \"#utility.yul\":5858:5937   */\n      tag_491\n      tag_373\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":5820:5939   */\n    tag_490:\n        /* \"#utility.yul\":5978:5979   */\n      0x00\n        /* \"#utility.yul\":6003:6064   */\n      tag_492\n        /* \"#utility.yul\":6056:6063   */\n      dup5\n        /* \"#utility.yul\":6047:6053   */\n      dup3\n        /* \"#utility.yul\":6036:6045   */\n      dup6\n        /* \"#utility.yul\":6032:6054   */\n      add\n        /* \"#utility.yul\":6003:6064   */\n      tag_389\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":5993:6064   */\n      swap2\n      pop\n        /* \"#utility.yul\":5949:6074   */\n      pop\n        /* \"#utility.yul\":5736:6081   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6087:6267   */\n    tag_390:\n        /* \"#utility.yul\":6135:6212   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6132:6133   */\n      0x00\n        /* \"#utility.yul\":6125:6213   */\n      mstore\n        /* \"#utility.yul\":6232:6236   */\n      0x11\n        /* \"#utility.yul\":6229:6230   */\n      0x04\n        /* \"#utility.yul\":6222:6237   */\n      mstore\n        /* \"#utility.yul\":6256:6260   */\n      0x24\n        /* \"#utility.yul\":6253:6254   */\n      0x00\n        /* \"#utility.yul\":6246:6261   */\n      revert\n        /* \"#utility.yul\":6273:6683   */\n    tag_132:\n        /* \"#utility.yul\":6313:6320   */\n      0x00\n        /* \"#utility.yul\":6336:6356   */\n      tag_495\n        /* \"#utility.yul\":6354:6355   */\n      dup3\n        /* \"#utility.yul\":6336:6356   */\n      tag_370\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":6331:6356   */\n      swap2\n      pop\n        /* \"#utility.yul\":6370:6390   */\n      tag_496\n        /* \"#utility.yul\":6388:6389   */\n      dup4\n        /* \"#utility.yul\":6370:6390   */\n      tag_370\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":6365:6390   */\n      swap3\n      pop\n        /* \"#utility.yul\":6425:6426   */\n      dup3\n        /* \"#utility.yul\":6422:6423   */\n      dup3\n        /* \"#utility.yul\":6418:6427   */\n      mul\n        /* \"#utility.yul\":6447:6477   */\n      tag_497\n        /* \"#utility.yul\":6465:6476   */\n      dup2\n        /* \"#utility.yul\":6447:6477   */\n      tag_370\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":6436:6477   */\n      swap2\n      pop\n        /* \"#utility.yul\":6626:6627   */\n      dup3\n        /* \"#utility.yul\":6617:6624   */\n      dup3\n        /* \"#utility.yul\":6613:6628   */\n      div\n        /* \"#utility.yul\":6610:6611   */\n      dup5\n        /* \"#utility.yul\":6607:6629   */\n      eq\n        /* \"#utility.yul\":6587:6588   */\n      dup4\n        /* \"#utility.yul\":6580:6589   */\n      iszero\n        /* \"#utility.yul\":6560:6643   */\n      or\n        /* \"#utility.yul\":6537:6676   */\n      tag_498\n      jumpi\n        /* \"#utility.yul\":6656:6674   */\n      tag_499\n      tag_390\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":6537:6676   */\n    tag_498:\n        /* \"#utility.yul\":6321:6683   */\n      pop\n        /* \"#utility.yul\":6273:6683   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6689:6858   */\n    tag_391:\n        /* \"#utility.yul\":6773:6784   */\n      0x00\n        /* \"#utility.yul\":6807:6813   */\n      dup3\n        /* \"#utility.yul\":6802:6805   */\n      dup3\n        /* \"#utility.yul\":6795:6814   */\n      mstore\n        /* \"#utility.yul\":6847:6851   */\n      0x20\n        /* \"#utility.yul\":6842:6845   */\n      dup3\n        /* \"#utility.yul\":6838:6852   */\n      add\n        /* \"#utility.yul\":6823:6852   */\n      swap1\n      pop\n        /* \"#utility.yul\":6689:6858   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6864:7030   */\n    tag_392:\n        /* \"#utility.yul\":7004:7022   */\n      0x78202f207920213d206478202f20647900000000000000000000000000000000\n        /* \"#utility.yul\":7000:7001   */\n      0x00\n        /* \"#utility.yul\":6992:6998   */\n      dup3\n        /* \"#utility.yul\":6988:7002   */\n      add\n        /* \"#utility.yul\":6981:7023   */\n      mstore\n        /* \"#utility.yul\":6864:7030   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7036:7402   */\n    tag_393:\n        /* \"#utility.yul\":7178:7181   */\n      0x00\n        /* \"#utility.yul\":7199:7266   */\n      tag_503\n        /* \"#utility.yul\":7263:7265   */\n      0x10\n        /* \"#utility.yul\":7258:7261   */\n      dup4\n        /* \"#utility.yul\":7199:7266   */\n      tag_391\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":7192:7266   */\n      swap2\n      pop\n        /* \"#utility.yul\":7275:7368   */\n      tag_504\n        /* \"#utility.yul\":7364:7367   */\n      dup3\n        /* \"#utility.yul\":7275:7368   */\n      tag_392\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":7393:7395   */\n      0x20\n        /* \"#utility.yul\":7388:7391   */\n      dup3\n        /* \"#utility.yul\":7384:7396   */\n      add\n        /* \"#utility.yul\":7377:7396   */\n      swap1\n      pop\n        /* \"#utility.yul\":7036:7402   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7408:7827   */\n    tag_136:\n        /* \"#utility.yul\":7574:7578   */\n      0x00\n        /* \"#utility.yul\":7612:7614   */\n      0x20\n        /* \"#utility.yul\":7601:7610   */\n      dup3\n        /* \"#utility.yul\":7597:7615   */\n      add\n        /* \"#utility.yul\":7589:7615   */\n      swap1\n      pop\n        /* \"#utility.yul\":7661:7670   */\n      dup2\n        /* \"#utility.yul\":7655:7659   */\n      dup2\n        /* \"#utility.yul\":7651:7671   */\n      sub\n        /* \"#utility.yul\":7647:7648   */\n      0x00\n        /* \"#utility.yul\":7636:7645   */\n      dup4\n        /* \"#utility.yul\":7632:7649   */\n      add\n        /* \"#utility.yul\":7625:7672   */\n      mstore\n        /* \"#utility.yul\":7689:7820   */\n      tag_506\n        /* \"#utility.yul\":7815:7819   */\n      dup2\n        /* \"#utility.yul\":7689:7820   */\n      tag_393\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":7681:7820   */\n      swap1\n      pop\n        /* \"#utility.yul\":7408:7827   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7833:8013   */\n    tag_394:\n        /* \"#utility.yul\":7881:7958   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7878:7879   */\n      0x00\n        /* \"#utility.yul\":7871:7959   */\n      mstore\n        /* \"#utility.yul\":7978:7982   */\n      0x12\n        /* \"#utility.yul\":7975:7976   */\n      0x04\n        /* \"#utility.yul\":7968:7983   */\n      mstore\n        /* \"#utility.yul\":8002:8006   */\n      0x24\n        /* \"#utility.yul\":7999:8000   */\n      0x00\n        /* \"#utility.yul\":7992:8007   */\n      revert\n        /* \"#utility.yul\":8019:8204   */\n    tag_145:\n        /* \"#utility.yul\":8059:8060   */\n      0x00\n        /* \"#utility.yul\":8076:8096   */\n      tag_509\n        /* \"#utility.yul\":8094:8095   */\n      dup3\n        /* \"#utility.yul\":8076:8096   */\n      tag_370\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":8071:8096   */\n      swap2\n      pop\n        /* \"#utility.yul\":8110:8130   */\n      tag_510\n        /* \"#utility.yul\":8128:8129   */\n      dup4\n        /* \"#utility.yul\":8110:8130   */\n      tag_370\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":8105:8130   */\n      swap3\n      pop\n        /* \"#utility.yul\":8149:8150   */\n      dup3\n        /* \"#utility.yul\":8139:8174   */\n      tag_511\n      jumpi\n        /* \"#utility.yul\":8154:8172   */\n      tag_512\n      tag_394\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":8139:8174   */\n    tag_511:\n        /* \"#utility.yul\":8196:8197   */\n      dup3\n        /* \"#utility.yul\":8193:8194   */\n      dup3\n        /* \"#utility.yul\":8189:8198   */\n      div\n        /* \"#utility.yul\":8184:8198   */\n      swap1\n      pop\n        /* \"#utility.yul\":8019:8204   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8210:8370   */\n    tag_395:\n        /* \"#utility.yul\":8350:8362   */\n      0x736861726573203d203000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8346:8347   */\n      0x00\n        /* \"#utility.yul\":8338:8344   */\n      dup3\n        /* \"#utility.yul\":8334:8348   */\n      add\n        /* \"#utility.yul\":8327:8363   */\n      mstore\n        /* \"#utility.yul\":8210:8370   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8376:8742   */\n    tag_396:\n        /* \"#utility.yul\":8518:8521   */\n      0x00\n        /* \"#utility.yul\":8539:8606   */\n      tag_515\n        /* \"#utility.yul\":8603:8605   */\n      0x0a\n        /* \"#utility.yul\":8598:8601   */\n      dup4\n        /* \"#utility.yul\":8539:8606   */\n      tag_391\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":8532:8606   */\n      swap2\n      pop\n        /* \"#utility.yul\":8615:8708   */\n      tag_516\n        /* \"#utility.yul\":8704:8707   */\n      dup3\n        /* \"#utility.yul\":8615:8708   */\n      tag_395\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":8733:8735   */\n      0x20\n        /* \"#utility.yul\":8728:8731   */\n      dup3\n        /* \"#utility.yul\":8724:8736   */\n      add\n        /* \"#utility.yul\":8717:8736   */\n      swap1\n      pop\n        /* \"#utility.yul\":8376:8742   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8748:9167   */\n    tag_151:\n        /* \"#utility.yul\":8914:8918   */\n      0x00\n        /* \"#utility.yul\":8952:8954   */\n      0x20\n        /* \"#utility.yul\":8941:8950   */\n      dup3\n        /* \"#utility.yul\":8937:8955   */\n      add\n        /* \"#utility.yul\":8929:8955   */\n      swap1\n      pop\n        /* \"#utility.yul\":9001:9010   */\n      dup2\n        /* \"#utility.yul\":8995:8999   */\n      dup2\n        /* \"#utility.yul\":8991:9011   */\n      sub\n        /* \"#utility.yul\":8987:8988   */\n      0x00\n        /* \"#utility.yul\":8976:8985   */\n      dup4\n        /* \"#utility.yul\":8972:8989   */\n      add\n        /* \"#utility.yul\":8965:9012   */\n      mstore\n        /* \"#utility.yul\":9029:9160   */\n      tag_518\n        /* \"#utility.yul\":9155:9159   */\n      dup2\n        /* \"#utility.yul\":9029:9160   */\n      tag_396\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":9021:9160   */\n      swap1\n      pop\n        /* \"#utility.yul\":8748:9167   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9173:9316   */\n    tag_397:\n        /* \"#utility.yul\":9230:9235   */\n      0x00\n        /* \"#utility.yul\":9261:9267   */\n      dup2\n        /* \"#utility.yul\":9255:9268   */\n      mload\n        /* \"#utility.yul\":9246:9268   */\n      swap1\n      pop\n        /* \"#utility.yul\":9277:9310   */\n      tag_520\n        /* \"#utility.yul\":9304:9309   */\n      dup2\n        /* \"#utility.yul\":9277:9310   */\n      tag_375\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":9173:9316   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9322:9673   */\n    tag_159:\n        /* \"#utility.yul\":9392:9398   */\n      0x00\n        /* \"#utility.yul\":9441:9443   */\n      0x20\n        /* \"#utility.yul\":9429:9438   */\n      dup3\n        /* \"#utility.yul\":9420:9427   */\n      dup5\n        /* \"#utility.yul\":9416:9439   */\n      sub\n        /* \"#utility.yul\":9412:9444   */\n      slt\n        /* \"#utility.yul\":9409:9528   */\n      iszero\n      tag_522\n      jumpi\n        /* \"#utility.yul\":9447:9526   */\n      tag_523\n      tag_373\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":9409:9528   */\n    tag_522:\n        /* \"#utility.yul\":9567:9568   */\n      0x00\n        /* \"#utility.yul\":9592:9656   */\n      tag_524\n        /* \"#utility.yul\":9648:9655   */\n      dup5\n        /* \"#utility.yul\":9639:9645   */\n      dup3\n        /* \"#utility.yul\":9628:9637   */\n      dup6\n        /* \"#utility.yul\":9624:9646   */\n      add\n        /* \"#utility.yul\":9592:9656   */\n      tag_397\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":9582:9656   */\n      swap2\n      pop\n        /* \"#utility.yul\":9538:9666   */\n      pop\n        /* \"#utility.yul\":9322:9673   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9679:9851   */\n    tag_398:\n        /* \"#utility.yul\":9819:9843   */\n      0x496e76616c696420455243323020726573657276657300000000000000000000\n        /* \"#utility.yul\":9815:9816   */\n      0x00\n        /* \"#utility.yul\":9807:9813   */\n      dup3\n        /* \"#utility.yul\":9803:9817   */\n      add\n        /* \"#utility.yul\":9796:9844   */\n      mstore\n        /* \"#utility.yul\":9679:9851   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9857:10223   */\n    tag_399:\n        /* \"#utility.yul\":9999:10002   */\n      0x00\n        /* \"#utility.yul\":10020:10087   */\n      tag_527\n        /* \"#utility.yul\":10084:10086   */\n      0x16\n        /* \"#utility.yul\":10079:10082   */\n      dup4\n        /* \"#utility.yul\":10020:10087   */\n      tag_391\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":10013:10087   */\n      swap2\n      pop\n        /* \"#utility.yul\":10096:10189   */\n      tag_528\n        /* \"#utility.yul\":10185:10188   */\n      dup3\n        /* \"#utility.yul\":10096:10189   */\n      tag_398\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":10214:10216   */\n      0x20\n        /* \"#utility.yul\":10209:10212   */\n      dup3\n        /* \"#utility.yul\":10205:10217   */\n      add\n        /* \"#utility.yul\":10198:10217   */\n      swap1\n      pop\n        /* \"#utility.yul\":9857:10223   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10229:10648   */\n    tag_166:\n        /* \"#utility.yul\":10395:10399   */\n      0x00\n        /* \"#utility.yul\":10433:10435   */\n      0x20\n        /* \"#utility.yul\":10422:10431   */\n      dup3\n        /* \"#utility.yul\":10418:10436   */\n      add\n        /* \"#utility.yul\":10410:10436   */\n      swap1\n      pop\n        /* \"#utility.yul\":10482:10491   */\n      dup2\n        /* \"#utility.yul\":10476:10480   */\n      dup2\n        /* \"#utility.yul\":10472:10492   */\n      sub\n        /* \"#utility.yul\":10468:10469   */\n      0x00\n        /* \"#utility.yul\":10457:10466   */\n      dup4\n        /* \"#utility.yul\":10453:10470   */\n      add\n        /* \"#utility.yul\":10446:10493   */\n      mstore\n        /* \"#utility.yul\":10510:10641   */\n      tag_530\n        /* \"#utility.yul\":10636:10640   */\n      dup2\n        /* \"#utility.yul\":10510:10641   */\n      tag_399\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":10502:10641   */\n      swap1\n      pop\n        /* \"#utility.yul\":10229:10648   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10654:10845   */\n    tag_170:\n        /* \"#utility.yul\":10694:10697   */\n      0x00\n        /* \"#utility.yul\":10713:10733   */\n      tag_532\n        /* \"#utility.yul\":10731:10732   */\n      dup3\n        /* \"#utility.yul\":10713:10733   */\n      tag_370\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":10708:10733   */\n      swap2\n      pop\n        /* \"#utility.yul\":10747:10767   */\n      tag_533\n        /* \"#utility.yul\":10765:10766   */\n      dup4\n        /* \"#utility.yul\":10747:10767   */\n      tag_370\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":10742:10767   */\n      swap3\n      pop\n        /* \"#utility.yul\":10790:10791   */\n      dup3\n        /* \"#utility.yul\":10787:10788   */\n      dup3\n        /* \"#utility.yul\":10783:10792   */\n      add\n        /* \"#utility.yul\":10776:10792   */\n      swap1\n      pop\n        /* \"#utility.yul\":10811:10814   */\n      dup1\n        /* \"#utility.yul\":10808:10809   */\n      dup3\n        /* \"#utility.yul\":10805:10815   */\n      gt\n        /* \"#utility.yul\":10802:10838   */\n      iszero\n      tag_534\n      jumpi\n        /* \"#utility.yul\":10818:10836   */\n      tag_535\n      tag_390\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":10802:10838   */\n    tag_534:\n        /* \"#utility.yul\":10654:10845   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10851:11020   */\n    tag_400:\n        /* \"#utility.yul\":10991:11012   */\n      0x45544820616d6f756e74206d69736d6174636800000000000000000000000000\n        /* \"#utility.yul\":10987:10988   */\n      0x00\n        /* \"#utility.yul\":10979:10985   */\n      dup3\n        /* \"#utility.yul\":10975:10989   */\n      add\n        /* \"#utility.yul\":10968:11013   */\n      mstore\n        /* \"#utility.yul\":10851:11020   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11026:11392   */\n    tag_401:\n        /* \"#utility.yul\":11168:11171   */\n      0x00\n        /* \"#utility.yul\":11189:11256   */\n      tag_538\n        /* \"#utility.yul\":11253:11255   */\n      0x13\n        /* \"#utility.yul\":11248:11251   */\n      dup4\n        /* \"#utility.yul\":11189:11256   */\n      tag_391\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":11182:11256   */\n      swap2\n      pop\n        /* \"#utility.yul\":11265:11358   */\n      tag_539\n        /* \"#utility.yul\":11354:11357   */\n      dup3\n        /* \"#utility.yul\":11265:11358   */\n      tag_400\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":11383:11385   */\n      0x20\n        /* \"#utility.yul\":11378:11381   */\n      dup3\n        /* \"#utility.yul\":11374:11386   */\n      add\n        /* \"#utility.yul\":11367:11386   */\n      swap1\n      pop\n        /* \"#utility.yul\":11026:11392   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11398:11817   */\n    tag_176:\n        /* \"#utility.yul\":11564:11568   */\n      0x00\n        /* \"#utility.yul\":11602:11604   */\n      0x20\n        /* \"#utility.yul\":11591:11600   */\n      dup3\n        /* \"#utility.yul\":11587:11605   */\n      add\n        /* \"#utility.yul\":11579:11605   */\n      swap1\n      pop\n        /* \"#utility.yul\":11651:11660   */\n      dup2\n        /* \"#utility.yul\":11645:11649   */\n      dup2\n        /* \"#utility.yul\":11641:11661   */\n      sub\n        /* \"#utility.yul\":11637:11638   */\n      0x00\n        /* \"#utility.yul\":11626:11635   */\n      dup4\n        /* \"#utility.yul\":11622:11639   */\n      add\n        /* \"#utility.yul\":11615:11662   */\n      mstore\n        /* \"#utility.yul\":11679:11810   */\n      tag_541\n        /* \"#utility.yul\":11805:11809   */\n      dup2\n        /* \"#utility.yul\":11679:11810   */\n      tag_401\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":11671:11810   */\n      swap1\n      pop\n        /* \"#utility.yul\":11398:11817   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11823:11999   */\n    tag_402:\n        /* \"#utility.yul\":11963:11991   */\n      0x496e73756666696369656e74206f757470757420616d6f756e74000000000000\n        /* \"#utility.yul\":11959:11960   */\n      0x00\n        /* \"#utility.yul\":11951:11957   */\n      dup3\n        /* \"#utility.yul\":11947:11961   */\n      add\n        /* \"#utility.yul\":11940:11992   */\n      mstore\n        /* \"#utility.yul\":11823:11999   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12005:12371   */\n    tag_403:\n        /* \"#utility.yul\":12147:12150   */\n      0x00\n        /* \"#utility.yul\":12168:12235   */\n      tag_544\n        /* \"#utility.yul\":12232:12234   */\n      0x1a\n        /* \"#utility.yul\":12227:12230   */\n      dup4\n        /* \"#utility.yul\":12168:12235   */\n      tag_391\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":12161:12235   */\n      swap2\n      pop\n        /* \"#utility.yul\":12244:12337   */\n      tag_545\n        /* \"#utility.yul\":12333:12336   */\n      dup3\n        /* \"#utility.yul\":12244:12337   */\n      tag_402\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":12362:12364   */\n      0x20\n        /* \"#utility.yul\":12357:12360   */\n      dup3\n        /* \"#utility.yul\":12353:12365   */\n      add\n        /* \"#utility.yul\":12346:12365   */\n      swap1\n      pop\n        /* \"#utility.yul\":12005:12371   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12377:12796   */\n    tag_184:\n        /* \"#utility.yul\":12543:12547   */\n      0x00\n        /* \"#utility.yul\":12581:12583   */\n      0x20\n        /* \"#utility.yul\":12570:12579   */\n      dup3\n        /* \"#utility.yul\":12566:12584   */\n      add\n        /* \"#utility.yul\":12558:12584   */\n      swap1\n      pop\n        /* \"#utility.yul\":12630:12639   */\n      dup2\n        /* \"#utility.yul\":12624:12628   */\n      dup2\n        /* \"#utility.yul\":12620:12640   */\n      sub\n        /* \"#utility.yul\":12616:12617   */\n      0x00\n        /* \"#utility.yul\":12605:12614   */\n      dup4\n        /* \"#utility.yul\":12601:12618   */\n      add\n        /* \"#utility.yul\":12594:12641   */\n      mstore\n        /* \"#utility.yul\":12658:12789   */\n      tag_547\n        /* \"#utility.yul\":12784:12788   */\n      dup2\n        /* \"#utility.yul\":12658:12789   */\n      tag_403\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":12650:12789   */\n      swap1\n      pop\n        /* \"#utility.yul\":12377:12796   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12802:12996   */\n    tag_186:\n        /* \"#utility.yul\":12842:12846   */\n      0x00\n        /* \"#utility.yul\":12862:12882   */\n      tag_549\n        /* \"#utility.yul\":12880:12881   */\n      dup3\n        /* \"#utility.yul\":12862:12882   */\n      tag_370\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":12857:12882   */\n      swap2\n      pop\n        /* \"#utility.yul\":12896:12916   */\n      tag_550\n        /* \"#utility.yul\":12914:12915   */\n      dup4\n        /* \"#utility.yul\":12896:12916   */\n      tag_370\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":12891:12916   */\n      swap3\n      pop\n        /* \"#utility.yul\":12940:12941   */\n      dup3\n        /* \"#utility.yul\":12937:12938   */\n      dup3\n        /* \"#utility.yul\":12933:12942   */\n      sub\n        /* \"#utility.yul\":12925:12942   */\n      swap1\n      pop\n        /* \"#utility.yul\":12964:12965   */\n      dup2\n        /* \"#utility.yul\":12958:12962   */\n      dup2\n        /* \"#utility.yul\":12955:12966   */\n      gt\n        /* \"#utility.yul\":12952:12989   */\n      iszero\n      tag_551\n      jumpi\n        /* \"#utility.yul\":12969:12987   */\n      tag_552\n      tag_390\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":12952:12989   */\n    tag_551:\n        /* \"#utility.yul\":12802:12996   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13002:13160   */\n    tag_404:\n        /* \"#utility.yul\":13142:13152   */\n      0x536c69704c6f636b000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13138:13139   */\n      0x00\n        /* \"#utility.yul\":13130:13136   */\n      dup3\n        /* \"#utility.yul\":13126:13140   */\n      add\n        /* \"#utility.yul\":13119:13153   */\n      mstore\n        /* \"#utility.yul\":13002:13160   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13166:13531   */\n    tag_405:\n        /* \"#utility.yul\":13308:13311   */\n      0x00\n        /* \"#utility.yul\":13329:13395   */\n      tag_555\n        /* \"#utility.yul\":13393:13394   */\n      0x08\n        /* \"#utility.yul\":13388:13391   */\n      dup4\n        /* \"#utility.yul\":13329:13395   */\n      tag_391\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":13322:13395   */\n      swap2\n      pop\n        /* \"#utility.yul\":13404:13497   */\n      tag_556\n        /* \"#utility.yul\":13493:13496   */\n      dup3\n        /* \"#utility.yul\":13404:13497   */\n      tag_404\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":13522:13524   */\n      0x20\n        /* \"#utility.yul\":13517:13520   */\n      dup3\n        /* \"#utility.yul\":13513:13525   */\n      add\n        /* \"#utility.yul\":13506:13525   */\n      swap1\n      pop\n        /* \"#utility.yul\":13166:13531   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13537:13956   */\n    tag_191:\n        /* \"#utility.yul\":13703:13707   */\n      0x00\n        /* \"#utility.yul\":13741:13743   */\n      0x20\n        /* \"#utility.yul\":13730:13739   */\n      dup3\n        /* \"#utility.yul\":13726:13744   */\n      add\n        /* \"#utility.yul\":13718:13744   */\n      swap1\n      pop\n        /* \"#utility.yul\":13790:13799   */\n      dup2\n        /* \"#utility.yul\":13784:13788   */\n      dup2\n        /* \"#utility.yul\":13780:13800   */\n      sub\n        /* \"#utility.yul\":13776:13777   */\n      0x00\n        /* \"#utility.yul\":13765:13774   */\n      dup4\n        /* \"#utility.yul\":13761:13778   */\n      add\n        /* \"#utility.yul\":13754:13801   */\n      mstore\n        /* \"#utility.yul\":13818:13949   */\n      tag_558\n        /* \"#utility.yul\":13944:13948   */\n      dup2\n        /* \"#utility.yul\":13818:13949   */\n      tag_405\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":13810:13949   */\n      swap1\n      pop\n        /* \"#utility.yul\":13537:13956   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13962:14294   */\n    tag_198:\n        /* \"#utility.yul\":14083:14087   */\n      0x00\n        /* \"#utility.yul\":14121:14123   */\n      0x40\n        /* \"#utility.yul\":14110:14119   */\n      dup3\n        /* \"#utility.yul\":14106:14124   */\n      add\n        /* \"#utility.yul\":14098:14124   */\n      swap1\n      pop\n        /* \"#utility.yul\":14134:14205   */\n      tag_560\n        /* \"#utility.yul\":14202:14203   */\n      0x00\n        /* \"#utility.yul\":14191:14200   */\n      dup4\n        /* \"#utility.yul\":14187:14204   */\n      add\n        /* \"#utility.yul\":14178:14184   */\n      dup6\n        /* \"#utility.yul\":14134:14205   */\n      tag_381\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":14215:14287   */\n      tag_561\n        /* \"#utility.yul\":14283:14285   */\n      0x20\n        /* \"#utility.yul\":14272:14281   */\n      dup4\n        /* \"#utility.yul\":14268:14286   */\n      add\n        /* \"#utility.yul\":14259:14265   */\n      dup5\n        /* \"#utility.yul\":14215:14287   */\n      tag_371\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":13962:14294   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14300:14470   */\n    tag_406:\n        /* \"#utility.yul\":14440:14462   */\n      0x496e73756666696369656e742062616c616e6365000000000000000000000000\n        /* \"#utility.yul\":14436:14437   */\n      0x00\n        /* \"#utility.yul\":14428:14434   */\n      dup3\n        /* \"#utility.yul\":14424:14438   */\n      add\n        /* \"#utility.yul\":14417:14463   */\n      mstore\n        /* \"#utility.yul\":14300:14470   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14476:14842   */\n    tag_407:\n        /* \"#utility.yul\":14618:14621   */\n      0x00\n        /* \"#utility.yul\":14639:14706   */\n      tag_564\n        /* \"#utility.yul\":14703:14705   */\n      0x14\n        /* \"#utility.yul\":14698:14701   */\n      dup4\n        /* \"#utility.yul\":14639:14706   */\n      tag_391\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":14632:14706   */\n      swap2\n      pop\n        /* \"#utility.yul\":14715:14808   */\n      tag_565\n        /* \"#utility.yul\":14804:14807   */\n      dup3\n        /* \"#utility.yul\":14715:14808   */\n      tag_406\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":14833:14835   */\n      0x20\n        /* \"#utility.yul\":14828:14831   */\n      dup3\n        /* \"#utility.yul\":14824:14836   */\n      add\n        /* \"#utility.yul\":14817:14836   */\n      swap1\n      pop\n        /* \"#utility.yul\":14476:14842   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14848:15267   */\n    tag_260:\n        /* \"#utility.yul\":15014:15018   */\n      0x00\n        /* \"#utility.yul\":15052:15054   */\n      0x20\n        /* \"#utility.yul\":15041:15050   */\n      dup3\n        /* \"#utility.yul\":15037:15055   */\n      add\n        /* \"#utility.yul\":15029:15055   */\n      swap1\n      pop\n        /* \"#utility.yul\":15101:15110   */\n      dup2\n        /* \"#utility.yul\":15095:15099   */\n      dup2\n        /* \"#utility.yul\":15091:15111   */\n      sub\n        /* \"#utility.yul\":15087:15088   */\n      0x00\n        /* \"#utility.yul\":15076:15085   */\n      dup4\n        /* \"#utility.yul\":15072:15089   */\n      add\n        /* \"#utility.yul\":15065:15112   */\n      mstore\n        /* \"#utility.yul\":15129:15260   */\n      tag_567\n        /* \"#utility.yul\":15255:15259   */\n      dup2\n        /* \"#utility.yul\":15129:15260   */\n      tag_407\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":15121:15260   */\n      swap1\n      pop\n        /* \"#utility.yul\":14848:15267   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15273:15443   */\n    tag_408:\n        /* \"#utility.yul\":15413:15435   */\n      0x496e76616c696420455448207265736572766573000000000000000000000000\n        /* \"#utility.yul\":15409:15410   */\n      0x00\n        /* \"#utility.yul\":15401:15407   */\n      dup3\n        /* \"#utility.yul\":15397:15411   */\n      add\n        /* \"#utility.yul\":15390:15436   */\n      mstore\n        /* \"#utility.yul\":15273:15443   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15449:15815   */\n    tag_409:\n        /* \"#utility.yul\":15591:15594   */\n      0x00\n        /* \"#utility.yul\":15612:15679   */\n      tag_570\n        /* \"#utility.yul\":15676:15678   */\n      0x14\n        /* \"#utility.yul\":15671:15674   */\n      dup4\n        /* \"#utility.yul\":15612:15679   */\n      tag_391\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":15605:15679   */\n      swap2\n      pop\n        /* \"#utility.yul\":15688:15781   */\n      tag_571\n        /* \"#utility.yul\":15777:15780   */\n      dup3\n        /* \"#utility.yul\":15688:15781   */\n      tag_408\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":15806:15808   */\n      0x20\n        /* \"#utility.yul\":15801:15804   */\n      dup3\n        /* \"#utility.yul\":15797:15809   */\n      add\n        /* \"#utility.yul\":15790:15809   */\n      swap1\n      pop\n        /* \"#utility.yul\":15449:15815   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15821:16240   */\n    tag_270:\n        /* \"#utility.yul\":15987:15991   */\n      0x00\n        /* \"#utility.yul\":16025:16027   */\n      0x20\n        /* \"#utility.yul\":16014:16023   */\n      dup3\n        /* \"#utility.yul\":16010:16028   */\n      add\n        /* \"#utility.yul\":16002:16028   */\n      swap1\n      pop\n        /* \"#utility.yul\":16074:16083   */\n      dup2\n        /* \"#utility.yul\":16068:16072   */\n      dup2\n        /* \"#utility.yul\":16064:16084   */\n      sub\n        /* \"#utility.yul\":16060:16061   */\n      0x00\n        /* \"#utility.yul\":16049:16058   */\n      dup4\n        /* \"#utility.yul\":16045:16062   */\n      add\n        /* \"#utility.yul\":16038:16085   */\n      mstore\n        /* \"#utility.yul\":16102:16233   */\n      tag_573\n        /* \"#utility.yul\":16228:16232   */\n      dup2\n        /* \"#utility.yul\":16102:16233   */\n      tag_409\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":16094:16233   */\n      swap1\n      pop\n        /* \"#utility.yul\":15821:16240   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16246:16332   */\n    tag_410:\n        /* \"#utility.yul\":16281:16288   */\n      0x00\n        /* \"#utility.yul\":16321:16325   */\n      0xff\n        /* \"#utility.yul\":16314:16319   */\n      dup3\n        /* \"#utility.yul\":16310:16326   */\n      and\n        /* \"#utility.yul\":16299:16326   */\n      swap1\n      pop\n        /* \"#utility.yul\":16246:16332   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16338:16456   */\n    tag_411:\n        /* \"#utility.yul\":16409:16431   */\n      tag_576\n        /* \"#utility.yul\":16425:16430   */\n      dup2\n        /* \"#utility.yul\":16409:16431   */\n      tag_410\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":16402:16407   */\n      dup2\n        /* \"#utility.yul\":16399:16432   */\n      eq\n        /* \"#utility.yul\":16389:16450   */\n      tag_577\n      jumpi\n        /* \"#utility.yul\":16446:16447   */\n      0x00\n        /* \"#utility.yul\":16443:16444   */\n      dup1\n        /* \"#utility.yul\":16436:16448   */\n      revert\n        /* \"#utility.yul\":16389:16450   */\n    tag_577:\n        /* \"#utility.yul\":16338:16456   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16462:16601   */\n    tag_412:\n        /* \"#utility.yul\":16517:16522   */\n      0x00\n        /* \"#utility.yul\":16548:16554   */\n      dup2\n        /* \"#utility.yul\":16542:16555   */\n      mload\n        /* \"#utility.yul\":16533:16555   */\n      swap1\n      pop\n        /* \"#utility.yul\":16564:16595   */\n      tag_579\n        /* \"#utility.yul\":16589:16594   */\n      dup2\n        /* \"#utility.yul\":16564:16595   */\n      tag_411\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":16462:16601   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16607:16954   */\n    tag_320:\n        /* \"#utility.yul\":16675:16681   */\n      0x00\n        /* \"#utility.yul\":16724:16726   */\n      0x20\n        /* \"#utility.yul\":16712:16721   */\n      dup3\n        /* \"#utility.yul\":16703:16710   */\n      dup5\n        /* \"#utility.yul\":16699:16722   */\n      sub\n        /* \"#utility.yul\":16695:16727   */\n      slt\n        /* \"#utility.yul\":16692:16811   */\n      iszero\n      tag_581\n      jumpi\n        /* \"#utility.yul\":16730:16809   */\n      tag_582\n      tag_373\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":16692:16811   */\n    tag_581:\n        /* \"#utility.yul\":16850:16851   */\n      0x00\n        /* \"#utility.yul\":16875:16937   */\n      tag_583\n        /* \"#utility.yul\":16929:16936   */\n      dup5\n        /* \"#utility.yul\":16920:16926   */\n      dup3\n        /* \"#utility.yul\":16909:16918   */\n      dup6\n        /* \"#utility.yul\":16905:16927   */\n      add\n        /* \"#utility.yul\":16875:16937   */\n      tag_412\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":16865:16937   */\n      swap2\n      pop\n        /* \"#utility.yul\":16821:16947   */\n      pop\n        /* \"#utility.yul\":16607:16954   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16960:17062   */\n    tag_413:\n        /* \"#utility.yul\":17002:17010   */\n      0x00\n        /* \"#utility.yul\":17049:17054   */\n      dup2\n        /* \"#utility.yul\":17046:17047   */\n      0x01\n        /* \"#utility.yul\":17042:17055   */\n      shr\n        /* \"#utility.yul\":17021:17055   */\n      swap1\n      pop\n        /* \"#utility.yul\":16960:17062   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17068:17916   */\n    tag_414:\n        /* \"#utility.yul\":17129:17134   */\n      0x00\n        /* \"#utility.yul\":17136:17140   */\n      dup1\n        /* \"#utility.yul\":17160:17166   */\n      dup3\n        /* \"#utility.yul\":17151:17166   */\n      swap2\n      pop\n        /* \"#utility.yul\":17184:17189   */\n      dup4\n        /* \"#utility.yul\":17175:17189   */\n      swap1\n      pop\n        /* \"#utility.yul\":17198:17910   */\n    tag_586:\n        /* \"#utility.yul\":17219:17220   */\n      0x01\n        /* \"#utility.yul\":17209:17217   */\n      dup6\n        /* \"#utility.yul\":17206:17221   */\n      gt\n        /* \"#utility.yul\":17198:17910   */\n      iszero\n      tag_588\n      jumpi\n        /* \"#utility.yul\":17314:17318   */\n      dup1\n        /* \"#utility.yul\":17309:17312   */\n      dup7\n        /* \"#utility.yul\":17305:17319   */\n      div\n        /* \"#utility.yul\":17299:17303   */\n      dup2\n        /* \"#utility.yul\":17296:17320   */\n      gt\n        /* \"#utility.yul\":17293:17343   */\n      iszero\n      tag_589\n      jumpi\n        /* \"#utility.yul\":17323:17341   */\n      tag_590\n      tag_390\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":17293:17343   */\n    tag_589:\n        /* \"#utility.yul\":17373:17374   */\n      0x01\n        /* \"#utility.yul\":17363:17371   */\n      dup6\n        /* \"#utility.yul\":17359:17375   */\n      and\n        /* \"#utility.yul\":17356:17807   */\n      iszero\n      tag_591\n      jumpi\n        /* \"#utility.yul\":17788:17792   */\n      dup1\n        /* \"#utility.yul\":17781:17786   */\n      dup3\n        /* \"#utility.yul\":17777:17793   */\n      mul\n        /* \"#utility.yul\":17768:17793   */\n      swap2\n      pop\n        /* \"#utility.yul\":17356:17807   */\n    tag_591:\n        /* \"#utility.yul\":17838:17842   */\n      dup1\n        /* \"#utility.yul\":17832:17836   */\n      dup2\n        /* \"#utility.yul\":17828:17843   */\n      mul\n        /* \"#utility.yul\":17820:17843   */\n      swap1\n      pop\n        /* \"#utility.yul\":17868:17900   */\n      tag_592\n        /* \"#utility.yul\":17891:17899   */\n      dup6\n        /* \"#utility.yul\":17868:17900   */\n      tag_413\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":17856:17900   */\n      swap5\n      pop\n        /* \"#utility.yul\":17198:17910   */\n      jump(tag_586)\n    tag_588:\n        /* \"#utility.yul\":17068:17916   */\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17922:18995   */\n    tag_415:\n        /* \"#utility.yul\":17976:17981   */\n      0x00\n        /* \"#utility.yul\":18167:18175   */\n      dup3\n        /* \"#utility.yul\":18157:18197   */\n      tag_594\n      jumpi\n        /* \"#utility.yul\":18188:18189   */\n      0x01\n        /* \"#utility.yul\":18179:18189   */\n      swap1\n      pop\n        /* \"#utility.yul\":18190:18195   */\n      jump(tag_593)\n        /* \"#utility.yul\":18157:18197   */\n    tag_594:\n        /* \"#utility.yul\":18216:18220   */\n      dup2\n        /* \"#utility.yul\":18206:18242   */\n      tag_595\n      jumpi\n        /* \"#utility.yul\":18233:18234   */\n      0x00\n        /* \"#utility.yul\":18224:18234   */\n      swap1\n      pop\n        /* \"#utility.yul\":18235:18240   */\n      jump(tag_593)\n        /* \"#utility.yul\":18206:18242   */\n    tag_595:\n        /* \"#utility.yul\":18302:18306   */\n      dup2\n        /* \"#utility.yul\":18350:18351   */\n      0x01\n        /* \"#utility.yul\":18345:18372   */\n      dup2\n      eq\n      tag_597\n      jumpi\n        /* \"#utility.yul\":18386:18387   */\n      0x02\n        /* \"#utility.yul\":18381:18572   */\n      dup2\n      eq\n      tag_598\n      jumpi\n        /* \"#utility.yul\":18295:18572   */\n      jump(tag_596)\n        /* \"#utility.yul\":18345:18372   */\n    tag_597:\n        /* \"#utility.yul\":18363:18364   */\n      0x01\n        /* \"#utility.yul\":18354:18364   */\n      swap2\n      pop\n        /* \"#utility.yul\":18365:18370   */\n      pop\n      jump(tag_593)\n        /* \"#utility.yul\":18381:18572   */\n    tag_598:\n        /* \"#utility.yul\":18426:18429   */\n      0xff\n        /* \"#utility.yul\":18416:18424   */\n      dup5\n        /* \"#utility.yul\":18413:18430   */\n      gt\n        /* \"#utility.yul\":18410:18453   */\n      iszero\n      tag_599\n      jumpi\n        /* \"#utility.yul\":18433:18451   */\n      tag_600\n      tag_390\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":18410:18453   */\n    tag_599:\n        /* \"#utility.yul\":18482:18490   */\n      dup4\n        /* \"#utility.yul\":18479:18480   */\n      0x02\n        /* \"#utility.yul\":18475:18491   */\n      exp\n        /* \"#utility.yul\":18466:18491   */\n      swap2\n      pop\n        /* \"#utility.yul\":18517:18520   */\n      dup5\n        /* \"#utility.yul\":18510:18515   */\n      dup3\n        /* \"#utility.yul\":18507:18521   */\n      gt\n        /* \"#utility.yul\":18504:18544   */\n      iszero\n      tag_601\n      jumpi\n        /* \"#utility.yul\":18524:18542   */\n      tag_602\n      tag_390\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":18504:18544   */\n    tag_601:\n        /* \"#utility.yul\":18557:18562   */\n      pop\n      jump(tag_593)\n        /* \"#utility.yul\":18295:18572   */\n    tag_596:\n      pop\n        /* \"#utility.yul\":18681:18683   */\n      0x20\n        /* \"#utility.yul\":18671:18679   */\n      dup4\n        /* \"#utility.yul\":18668:18684   */\n      lt\n        /* \"#utility.yul\":18662:18665   */\n      0x0133\n        /* \"#utility.yul\":18656:18660   */\n      dup4\n        /* \"#utility.yul\":18653:18666   */\n      lt\n        /* \"#utility.yul\":18649:18685   */\n      and\n        /* \"#utility.yul\":18631:18633   */\n      0x4e\n        /* \"#utility.yul\":18621:18629   */\n      dup5\n        /* \"#utility.yul\":18618:18634   */\n      lt\n        /* \"#utility.yul\":18613:18615   */\n      0x0b\n        /* \"#utility.yul\":18607:18611   */\n      dup5\n        /* \"#utility.yul\":18604:18616   */\n      lt\n        /* \"#utility.yul\":18600:18635   */\n      and\n        /* \"#utility.yul\":18584:18695   */\n      or\n        /* \"#utility.yul\":18581:18827   */\n      iszero\n      tag_603\n      jumpi\n        /* \"#utility.yul\":18737:18745   */\n      dup3\n        /* \"#utility.yul\":18731:18735   */\n      dup3\n        /* \"#utility.yul\":18727:18746   */\n      exp\n        /* \"#utility.yul\":18718:18746   */\n      swap1\n      pop\n        /* \"#utility.yul\":18772:18775   */\n      dup4\n        /* \"#utility.yul\":18765:18770   */\n      dup2\n        /* \"#utility.yul\":18762:18776   */\n      gt\n        /* \"#utility.yul\":18759:18799   */\n      iszero\n      tag_604\n      jumpi\n        /* \"#utility.yul\":18779:18797   */\n      tag_605\n      tag_390\n      jump\t// in\n    tag_605:\n        /* \"#utility.yul\":18759:18799   */\n    tag_604:\n        /* \"#utility.yul\":18812:18817   */\n      jump(tag_593)\n        /* \"#utility.yul\":18581:18827   */\n    tag_603:\n        /* \"#utility.yul\":18852:18894   */\n      tag_606\n        /* \"#utility.yul\":18890:18893   */\n      dup5\n        /* \"#utility.yul\":18880:18888   */\n      dup5\n        /* \"#utility.yul\":18874:18878   */\n      dup5\n        /* \"#utility.yul\":18871:18872   */\n      0x01\n        /* \"#utility.yul\":18852:18894   */\n      tag_414\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":18837:18894   */\n      swap3\n      pop\n      swap1\n      pop\n        /* \"#utility.yul\":18926:18930   */\n      dup2\n        /* \"#utility.yul\":18921:18924   */\n      dup5\n        /* \"#utility.yul\":18917:18931   */\n      div\n        /* \"#utility.yul\":18910:18915   */\n      dup2\n        /* \"#utility.yul\":18907:18932   */\n      gt\n        /* \"#utility.yul\":18904:18955   */\n      iszero\n      tag_607\n      jumpi\n        /* \"#utility.yul\":18935:18953   */\n      tag_608\n      tag_390\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":18904:18955   */\n    tag_607:\n        /* \"#utility.yul\":18984:18988   */\n      dup2\n        /* \"#utility.yul\":18977:18982   */\n      dup2\n        /* \"#utility.yul\":18973:18989   */\n      mul\n        /* \"#utility.yul\":18964:18989   */\n      swap1\n      pop\n        /* \"#utility.yul\":17922:18995   */\n    tag_593:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19001:19286   */\n    tag_322:\n        /* \"#utility.yul\":19061:19066   */\n      0x00\n        /* \"#utility.yul\":19085:19108   */\n      tag_610\n        /* \"#utility.yul\":19103:19107   */\n      dup3\n        /* \"#utility.yul\":19085:19108   */\n      tag_370\n      jump\t// in\n    tag_610:\n        /* \"#utility.yul\":19077:19108   */\n      swap2\n      pop\n        /* \"#utility.yul\":19129:19156   */\n      tag_611\n        /* \"#utility.yul\":19147:19155   */\n      dup4\n        /* \"#utility.yul\":19129:19156   */\n      tag_370\n      jump\t// in\n    tag_611:\n        /* \"#utility.yul\":19117:19156   */\n      swap3\n      pop\n        /* \"#utility.yul\":19175:19279   */\n      tag_612\n        /* \"#utility.yul\":19212:19278   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":19202:19210   */\n      dup5\n        /* \"#utility.yul\":19196:19200   */\n      dup5\n        /* \"#utility.yul\":19175:19279   */\n      tag_415\n      jump\t// in\n    tag_612:\n        /* \"#utility.yul\":19166:19279   */\n      swap1\n      pop\n        /* \"#utility.yul\":19001:19286   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19292:19468   */\n    tag_416:\n        /* \"#utility.yul\":19432:19460   */\n      0x616d6f756e74455448206f7220616d6f756e74455243203d2030000000000000\n        /* \"#utility.yul\":19428:19429   */\n      0x00\n        /* \"#utility.yul\":19420:19426   */\n      dup3\n        /* \"#utility.yul\":19416:19430   */\n      add\n        /* \"#utility.yul\":19409:19461   */\n      mstore\n        /* \"#utility.yul\":19292:19468   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19474:19840   */\n    tag_417:\n        /* \"#utility.yul\":19616:19619   */\n      0x00\n        /* \"#utility.yul\":19637:19704   */\n      tag_615\n        /* \"#utility.yul\":19701:19703   */\n      0x1a\n        /* \"#utility.yul\":19696:19699   */\n      dup4\n        /* \"#utility.yul\":19637:19704   */\n      tag_391\n      jump\t// in\n    tag_615:\n        /* \"#utility.yul\":19630:19704   */\n      swap2\n      pop\n        /* \"#utility.yul\":19713:19806   */\n      tag_616\n        /* \"#utility.yul\":19802:19805   */\n      dup3\n        /* \"#utility.yul\":19713:19806   */\n      tag_416\n      jump\t// in\n    tag_616:\n        /* \"#utility.yul\":19831:19833   */\n      0x20\n        /* \"#utility.yul\":19826:19829   */\n      dup3\n        /* \"#utility.yul\":19822:19834   */\n      add\n        /* \"#utility.yul\":19815:19834   */\n      swap1\n      pop\n        /* \"#utility.yul\":19474:19840   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19846:20265   */\n    tag_351:\n        /* \"#utility.yul\":20012:20016   */\n      0x00\n        /* \"#utility.yul\":20050:20052   */\n      0x20\n        /* \"#utility.yul\":20039:20048   */\n      dup3\n        /* \"#utility.yul\":20035:20053   */\n      add\n        /* \"#utility.yul\":20027:20053   */\n      swap1\n      pop\n        /* \"#utility.yul\":20099:20108   */\n      dup2\n        /* \"#utility.yul\":20093:20097   */\n      dup2\n        /* \"#utility.yul\":20089:20109   */\n      sub\n        /* \"#utility.yul\":20085:20086   */\n      0x00\n        /* \"#utility.yul\":20074:20083   */\n      dup4\n        /* \"#utility.yul\":20070:20087   */\n      add\n        /* \"#utility.yul\":20063:20110   */\n      mstore\n        /* \"#utility.yul\":20127:20258   */\n      tag_618\n        /* \"#utility.yul\":20253:20257   */\n      dup2\n        /* \"#utility.yul\":20127:20258   */\n      tag_417\n      jump\t// in\n    tag_618:\n        /* \"#utility.yul\":20119:20258   */\n      swap1\n      pop\n        /* \"#utility.yul\":19846:20265   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220cc4aba3704f8080799e44995698b45df3320985c83a1f9e00d654d788da93a9a64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1619": {
									"entryPoint": null,
									"id": 1619,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 261,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 284,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 215,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 183,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 178,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 235,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1199:6",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:6",
														"type": ""
													}
												],
												"src": "334:126:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:6",
														"type": ""
													}
												],
												"src": "466:96:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:6"
															},
															"nodeType": "YulIf",
															"src": "621:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:6",
														"type": ""
													}
												],
												"src": "568:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:6"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:6",
														"type": ""
													}
												],
												"src": "696:143:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "922:274:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "968:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "964:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:32:6"
															},
															"nodeType": "YulIf",
															"src": "932:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "1061:128:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1105:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "892:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "903:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "915:6:6",
														"type": ""
													}
												],
												"src": "845:351:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a06040523480156200001157600080fd5b50604051620027c5380380620027c583398181016040528101906200003791906200011c565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050506200014e565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e482620000b7565b9050919050565b620000f681620000d7565b81146200010257600080fd5b50565b6000815190506200011681620000eb565b92915050565b600060208284031215620001355762000134620000b2565b5b6000620001458482850162000105565b91505092915050565b608051612600620001c5600039600081816105440152818161071601528181610a0001528181610aa301528181610c7f01528181610d6b01528181610f6b0152818161100e015281816113bc015281816114a80152818161164c015281816116c6015281816119450152611a3501526126006000f3fe60806040526004361061011f5760003560e01c80639c8f9f23116100a0578063dccc5fea11610064578063dccc5fea14610439578063e764e67c14610476578063f5eb42dc146104a1578063fc0c546a146104de578063fcc2ba08146105095761011f565b80639c8f9f231461032a578063a201ccf614610368578063a607a8d9146103a6578063a734f06e146103d1578063dc2d845b146103fc5761011f565b80636cae4f84116100e75780636cae4f84146102175780636fb84b741461024257806370a082311461027f5780637a6a5e1b146102bc57806394b918de146102fa5761011f565b8063100af2031461012457806318160ddd1461014f57806351c6590a1461017a57806356c1d7eb146101aa57806362279b65146101e7575b600080fd5b34801561013057600080fd5b50610139610534565b6040516101469190611b65565b60405180910390f35b34801561015b57600080fd5b5061016461053a565b6040516101719190611b65565b60405180910390f35b610194600480360381019061018f9190611bb1565b610540565b6040516101a19190611b65565b60405180910390f35b3480156101b657600080fd5b506101d160048036038101906101cc9190611bb1565b6107b9565b6040516101de9190611b65565b60405180910390f35b61020160048036038101906101fc9190611bde565b610866565b60405161020e9190611b65565b60405180910390f35b34801561022357600080fd5b5061022c610b49565b6040516102399190611b65565b60405180910390f35b34801561024e57600080fd5b5061026960048036038101906102649190611bb1565b610b90565b6040516102769190611b65565b60405180910390f35b34801561028b57600080fd5b506102a660048036038101906102a19190611c8f565b610e0f565b6040516102b39190611b65565b60405180910390f35b3480156102c857600080fd5b506102e360048036038101906102de9190611c8f565b610e27565b6040516102f1929190611cbc565b60405180910390f35b610314600480360381019061030f9190611bb1565b610e7c565b6040516103219190611b65565b60405180910390f35b34801561033657600080fd5b50610351600480360381019061034c9190611bb1565b6110b2565b60405161035f929190611cbc565b60405180910390f35b34801561037457600080fd5b5061038f600480360381019061038a9190611ce5565b61114a565b60405161039d929190611cbc565b60405180910390f35b3480156103b257600080fd5b506103bb6111e4565b6040516103c89190611b65565b60405180910390f35b3480156103dd57600080fd5b506103e6611260565b6040516103f39190611d34565b60405180910390f35b34801561040857600080fd5b50610423600480360381019061041e9190611bde565b611265565b6040516104309190611b65565b60405180910390f35b34801561044557600080fd5b50610460600480360381019061045b9190611bb1565b61154e565b60405161046d9190611b65565b60405180910390f35b34801561048257600080fd5b5061048b6115fb565b6040516104989190611b65565b60405180910390f35b3480156104ad57600080fd5b506104c860048036038101906104c39190611c8f565b611601565b6040516104d59190611b65565b60405180910390f35b3480156104ea57600080fd5b506104f361164a565b6040516105009190611dae565b60405180910390f35b34801561051557600080fd5b5061051e61166e565b60405161052b9190611b65565b60405180910390f35b60015481565b60035481565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161059f93929190611dc9565b6020604051808303816000875af11580156105be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e29190611e38565b506000349050600060015411806105fb57506000600254115b1561065d578060025461060e9190611e94565b8360015461061c9190611e94565b1461065c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065390611f33565b60405180910390fd5b5b6000600354036106825761067b83826106769190611e94565b611785565b91506106c3565b6106c0600154600354836106969190611e94565b6106a09190611f82565b600254600354866106b19190611e94565b6106bb9190611f82565b6117ff565b91505b60008211610706576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106fd90611fff565b60405180910390fd5b6107103383611818565b6107b3477f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161076d9190611d34565b602060405180830381865afa15801561078a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ae9190612034565b61188b565b50919050565b6000806001541180156107ce57506000600254115b80156107da5750600082115b610819576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610810906120ad565b60405180910390fd5b60006103e86103e58461082c9190611e94565b6108369190611f82565b90508060015461084691906120cd565b816002546108549190611e94565b61085e9190611f82565b915050919050565b60008334146108aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a19061214d565b60405180910390fd5b60006103e86103e5866108bd9190611e94565b6108c79190611f82565b9050806001546108d791906120cd565b816002546108e59190611e94565b6108ef9190611f82565b915060008211610934576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092b906121b9565b60405180910390fd5b6103e8836103e861094591906121d9565b856109509190611e94565b61095a9190611f82565b82101561099c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099390612259565b60405180910390fd5b60006107d06001546109ae9190611e94565b6003546003886109be9190611e94565b6109c89190611e94565b6109d29190611f82565b90506109fe60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682611818565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b8152600401610a59929190612279565b6020604051808303816000875af1158015610a78573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9c9190611e38565b50610b40477f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610afa9190611d34565b602060405180830381865afa158015610b17573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b3b9190612034565b61188b565b50509392505050565b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b6000806103e86103e584610ba49190611e94565b610bae9190611f82565b905080600254610bbe91906120cd565b81600154610bcc9190611e94565b610bd69190611f82565b915060008211610c1b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c12906121b9565b60405180910390fd5b60006107d0600254610c2d9190611e94565b600354600386610c3d9190611e94565b610c479190611e94565b610c519190611f82565b9050610c7d60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682611818565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b8152600401610cda93929190611dc9565b6020604051808303816000875af1158015610cf9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d1d9190611e38565b503373ffffffffffffffffffffffffffffffffffffffff166108fc849081150290604051600060405180830381858888f19350505050158015610d64573d6000803e3d6000fd5b50610e08477f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610dc29190611d34565b602060405180830381865afa158015610ddf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e039190612034565b61188b565b5050919050565b60046020528060005260406000206000915090505481565b600080610e7383600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461189d565b91509150915091565b6000813414610ec0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eb79061214d565b60405180910390fd5b60006103e86103e584610ed39190611e94565b610edd9190611f82565b905080600154610eed91906120cd565b81600254610efb9190611e94565b610f059190611f82565b915060006107d0600154610f199190611e94565b600354600386610f299190611e94565b610f339190611e94565b610f3d9190611f82565b9050610f6960008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682611818565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b8152600401610fc4929190612279565b6020604051808303816000875af1158015610fe3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110079190611e38565b506110ab477f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016110659190611d34565b602060405180830381865afa158015611082573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110a69190612034565b61188b565b5050919050565b600080600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054831115611137576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161112e906122ee565b60405180910390fd5b611141338461189d565b91509150915091565b600080600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548311156111cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111c6906122ee565b60405180910390fd5b6111d9848461189d565b915091509250929050565b6000806001541180156111f957506000600254115b611238576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161122f9061235a565b60405180910390fd5b600154670de0b6b3a76400006002546112519190611e94565b61125b9190611f82565b905090565b600081565b6000806103e86103e5866112799190611e94565b6112839190611f82565b90508060025461129391906120cd565b816001546112a19190611e94565b6112ab9190611f82565b9150600082116112f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112e7906121b9565b60405180910390fd5b6103e8836103e861130191906121d9565b8561130c9190611e94565b6113169190611f82565b821015611358576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161134f90612259565b60405180910390fd5b60006107d060025461136a9190611e94565b60035460038861137a9190611e94565b6113849190611e94565b61138e9190611f82565b90506113ba60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682611818565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330896040518463ffffffff1660e01b815260040161141793929190611dc9565b6020604051808303816000875af1158015611436573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061145a9190611e38565b503373ffffffffffffffffffffffffffffffffffffffff166108fc849081150290604051600060405180830381858888f193505050501580156114a1573d6000803e3d6000fd5b50611545477f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016114ff9190611d34565b602060405180830381865afa15801561151c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115409190612034565b61188b565b50509392505050565b60008060015411801561156357506000600254115b801561156f5750600082115b6115ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115a59061235a565b60405180910390fd5b60006103e86103e5846115c19190611e94565b6115cb9190611f82565b9050806002546115db91906120cd565b816001546115e99190611e94565b6115f39190611f82565b915050919050565b60025481565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008060015411801561168357506000600254115b6116c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116b9906120ad565b60405180910390fd5b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561172f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061175391906123b3565b60ff16905060025481600a6117689190612513565b6001546117759190611e94565b61177f9190611f82565b91505090565b600060038211156117ec57819050600060016002846117a49190611f82565b6117ae91906120cd565b90505b818110156117e65780915060028182856117cb9190611f82565b6117d591906120cd565b6117df9190611f82565b90506117b1565b506117fa565b600082146117f957600190505b5b919050565b600081831061180e5781611810565b825b905092915050565b80600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461186791906120cd565b92505081905550806003600082825461188091906120cd565b925050819055505050565b81600181905550806002819055505050565b600080600354600154846118b19190611e94565b6118bb9190611f82565b9150600354600254846118ce9190611e94565b6118d89190611f82565b90506000821180156118ea5750600081115b611929576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611920906125aa565b60405180910390fd5b6119338484611ad9565b6119ec824761194291906121d9565b827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161199c9190611d34565b602060405180830381865afa1580156119b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119dd9190612034565b6119e791906121d9565b61188b565b8373ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015611a32573d6000803e3d6000fd5b507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85836040518363ffffffff1660e01b8152600401611a8e929190612279565b6020604051808303816000875af1158015611aad573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ad19190611e38565b509250929050565b80600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611b2891906121d9565b925050819055508060036000828254611b4191906121d9565b925050819055505050565b6000819050919050565b611b5f81611b4c565b82525050565b6000602082019050611b7a6000830184611b56565b92915050565b600080fd5b611b8e81611b4c565b8114611b9957600080fd5b50565b600081359050611bab81611b85565b92915050565b600060208284031215611bc757611bc6611b80565b5b6000611bd584828501611b9c565b91505092915050565b600080600060608486031215611bf757611bf6611b80565b5b6000611c0586828701611b9c565b9350506020611c1686828701611b9c565b9250506040611c2786828701611b9c565b9150509250925092565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611c5c82611c31565b9050919050565b611c6c81611c51565b8114611c7757600080fd5b50565b600081359050611c8981611c63565b92915050565b600060208284031215611ca557611ca4611b80565b5b6000611cb384828501611c7a565b91505092915050565b6000604082019050611cd16000830185611b56565b611cde6020830184611b56565b9392505050565b60008060408385031215611cfc57611cfb611b80565b5b6000611d0a85828601611c7a565b9250506020611d1b85828601611b9c565b9150509250929050565b611d2e81611c51565b82525050565b6000602082019050611d496000830184611d25565b92915050565b6000819050919050565b6000611d74611d6f611d6a84611c31565b611d4f565b611c31565b9050919050565b6000611d8682611d59565b9050919050565b6000611d9882611d7b565b9050919050565b611da881611d8d565b82525050565b6000602082019050611dc36000830184611d9f565b92915050565b6000606082019050611dde6000830186611d25565b611deb6020830185611d25565b611df86040830184611b56565b949350505050565b60008115159050919050565b611e1581611e00565b8114611e2057600080fd5b50565b600081519050611e3281611e0c565b92915050565b600060208284031215611e4e57611e4d611b80565b5b6000611e5c84828501611e23565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611e9f82611b4c565b9150611eaa83611b4c565b9250828202611eb881611b4c565b91508282048414831517611ecf57611ece611e65565b5b5092915050565b600082825260208201905092915050565b7f78202f207920213d206478202f20647900000000000000000000000000000000600082015250565b6000611f1d601083611ed6565b9150611f2882611ee7565b602082019050919050565b60006020820190508181036000830152611f4c81611f10565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611f8d82611b4c565b9150611f9883611b4c565b925082611fa857611fa7611f53565b5b828204905092915050565b7f736861726573203d203000000000000000000000000000000000000000000000600082015250565b6000611fe9600a83611ed6565b9150611ff482611fb3565b602082019050919050565b6000602082019050818103600083015261201881611fdc565b9050919050565b60008151905061202e81611b85565b92915050565b60006020828403121561204a57612049611b80565b5b60006120588482850161201f565b91505092915050565b7f496e76616c696420455243323020726573657276657300000000000000000000600082015250565b6000612097601683611ed6565b91506120a282612061565b602082019050919050565b600060208201905081810360008301526120c68161208a565b9050919050565b60006120d882611b4c565b91506120e383611b4c565b92508282019050808211156120fb576120fa611e65565b5b92915050565b7f45544820616d6f756e74206d69736d6174636800000000000000000000000000600082015250565b6000612137601383611ed6565b915061214282612101565b602082019050919050565b600060208201905081810360008301526121668161212a565b9050919050565b7f496e73756666696369656e74206f757470757420616d6f756e74000000000000600082015250565b60006121a3601a83611ed6565b91506121ae8261216d565b602082019050919050565b600060208201905081810360008301526121d281612196565b9050919050565b60006121e482611b4c565b91506121ef83611b4c565b925082820390508181111561220757612206611e65565b5b92915050565b7f536c69704c6f636b000000000000000000000000000000000000000000000000600082015250565b6000612243600883611ed6565b915061224e8261220d565b602082019050919050565b6000602082019050818103600083015261227281612236565b9050919050565b600060408201905061228e6000830185611d25565b61229b6020830184611b56565b9392505050565b7f496e73756666696369656e742062616c616e6365000000000000000000000000600082015250565b60006122d8601483611ed6565b91506122e3826122a2565b602082019050919050565b60006020820190508181036000830152612307816122cb565b9050919050565b7f496e76616c696420455448207265736572766573000000000000000000000000600082015250565b6000612344601483611ed6565b915061234f8261230e565b602082019050919050565b6000602082019050818103600083015261237381612337565b9050919050565b600060ff82169050919050565b6123908161237a565b811461239b57600080fd5b50565b6000815190506123ad81612387565b92915050565b6000602082840312156123c9576123c8611b80565b5b60006123d78482850161239e565b91505092915050565b60008160011c9050919050565b6000808291508390505b60018511156124375780860481111561241357612412611e65565b5b60018516156124225780820291505b8081029050612430856123e0565b94506123f7565b94509492505050565b600082612450576001905061250c565b8161245e576000905061250c565b8160018114612474576002811461247e576124ad565b600191505061250c565b60ff8411156124905761248f611e65565b5b8360020a9150848211156124a7576124a6611e65565b5b5061250c565b5060208310610133831016604e8410600b84101617156124e25782820a9050838111156124dd576124dc611e65565b5b61250c565b6124ef84848460016123ed565b9250905081840481111561250657612505611e65565b5b81810290505b9392505050565b600061251e82611b4c565b915061252983611b4c565b92506125567fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484612440565b905092915050565b7f616d6f756e74455448206f7220616d6f756e74455243203d2030000000000000600082015250565b6000612594601a83611ed6565b915061259f8261255e565b602082019050919050565b600060208201905081810360008301526125c381612587565b905091905056fea2646970667358221220cc4aba3704f8080799e44995698b45df3320985c83a1f9e00d654d788da93a9a64736f6c63430008120033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x27C5 CODESIZE SUB DUP1 PUSH3 0x27C5 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x11C JUMP JUMPDEST CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP PUSH3 0x14E JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xE4 DUP3 PUSH3 0xB7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xF6 DUP2 PUSH3 0xD7 JUMP JUMPDEST DUP2 EQ PUSH3 0x102 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x116 DUP2 PUSH3 0xEB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x135 JUMPI PUSH3 0x134 PUSH3 0xB2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x145 DUP5 DUP3 DUP6 ADD PUSH3 0x105 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x2600 PUSH3 0x1C5 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x544 ADD MSTORE DUP2 DUP2 PUSH2 0x716 ADD MSTORE DUP2 DUP2 PUSH2 0xA00 ADD MSTORE DUP2 DUP2 PUSH2 0xAA3 ADD MSTORE DUP2 DUP2 PUSH2 0xC7F ADD MSTORE DUP2 DUP2 PUSH2 0xD6B ADD MSTORE DUP2 DUP2 PUSH2 0xF6B ADD MSTORE DUP2 DUP2 PUSH2 0x100E ADD MSTORE DUP2 DUP2 PUSH2 0x13BC ADD MSTORE DUP2 DUP2 PUSH2 0x14A8 ADD MSTORE DUP2 DUP2 PUSH2 0x164C ADD MSTORE DUP2 DUP2 PUSH2 0x16C6 ADD MSTORE DUP2 DUP2 PUSH2 0x1945 ADD MSTORE PUSH2 0x1A35 ADD MSTORE PUSH2 0x2600 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9C8F9F23 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xDCCC5FEA GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xDCCC5FEA EQ PUSH2 0x439 JUMPI DUP1 PUSH4 0xE764E67C EQ PUSH2 0x476 JUMPI DUP1 PUSH4 0xF5EB42DC EQ PUSH2 0x4A1 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x4DE JUMPI DUP1 PUSH4 0xFCC2BA08 EQ PUSH2 0x509 JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x9C8F9F23 EQ PUSH2 0x32A JUMPI DUP1 PUSH4 0xA201CCF6 EQ PUSH2 0x368 JUMPI DUP1 PUSH4 0xA607A8D9 EQ PUSH2 0x3A6 JUMPI DUP1 PUSH4 0xA734F06E EQ PUSH2 0x3D1 JUMPI DUP1 PUSH4 0xDC2D845B EQ PUSH2 0x3FC JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x6CAE4F84 GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x6CAE4F84 EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0x6FB84B74 EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0x7A6A5E1B EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0x94B918DE EQ PUSH2 0x2FA JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x100AF203 EQ PUSH2 0x124 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x51C6590A EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0x56C1D7EB EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x62279B65 EQ PUSH2 0x1E7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x130 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x139 PUSH2 0x534 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x1B65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x164 PUSH2 0x53A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x171 SWAP2 SWAP1 PUSH2 0x1B65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x194 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18F SWAP2 SWAP1 PUSH2 0x1BB1 JUMP JUMPDEST PUSH2 0x540 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A1 SWAP2 SWAP1 PUSH2 0x1B65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CC SWAP2 SWAP1 PUSH2 0x1BB1 JUMP JUMPDEST PUSH2 0x7B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DE SWAP2 SWAP1 PUSH2 0x1B65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x201 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0x1BDE JUMP JUMPDEST PUSH2 0x866 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20E SWAP2 SWAP1 PUSH2 0x1B65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x223 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22C PUSH2 0xB49 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x1B65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x269 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x264 SWAP2 SWAP1 PUSH2 0x1BB1 JUMP JUMPDEST PUSH2 0xB90 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x276 SWAP2 SWAP1 PUSH2 0x1B65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x1C8F JUMP JUMPDEST PUSH2 0xE0F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x1B65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DE SWAP2 SWAP1 PUSH2 0x1C8F JUMP JUMPDEST PUSH2 0xE27 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F1 SWAP3 SWAP2 SWAP1 PUSH2 0x1CBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x314 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30F SWAP2 SWAP1 PUSH2 0x1BB1 JUMP JUMPDEST PUSH2 0xE7C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x321 SWAP2 SWAP1 PUSH2 0x1B65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x336 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x351 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34C SWAP2 SWAP1 PUSH2 0x1BB1 JUMP JUMPDEST PUSH2 0x10B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35F SWAP3 SWAP2 SWAP1 PUSH2 0x1CBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x374 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x38F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38A SWAP2 SWAP1 PUSH2 0x1CE5 JUMP JUMPDEST PUSH2 0x114A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39D SWAP3 SWAP2 SWAP1 PUSH2 0x1CBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3BB PUSH2 0x11E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C8 SWAP2 SWAP1 PUSH2 0x1B65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E6 PUSH2 0x1260 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F3 SWAP2 SWAP1 PUSH2 0x1D34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x408 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x423 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x41E SWAP2 SWAP1 PUSH2 0x1BDE JUMP JUMPDEST PUSH2 0x1265 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x430 SWAP2 SWAP1 PUSH2 0x1B65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x445 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x460 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45B SWAP2 SWAP1 PUSH2 0x1BB1 JUMP JUMPDEST PUSH2 0x154E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x46D SWAP2 SWAP1 PUSH2 0x1B65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x482 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x48B PUSH2 0x15FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x498 SWAP2 SWAP1 PUSH2 0x1B65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C3 SWAP2 SWAP1 PUSH2 0x1C8F JUMP JUMPDEST PUSH2 0x1601 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D5 SWAP2 SWAP1 PUSH2 0x1B65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4F3 PUSH2 0x164A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x500 SWAP2 SWAP1 PUSH2 0x1DAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x515 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x51E PUSH2 0x166E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x52B SWAP2 SWAP1 PUSH2 0x1B65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DC9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5BE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5E2 SWAP2 SWAP1 PUSH2 0x1E38 JUMP JUMPDEST POP PUSH1 0x0 CALLVALUE SWAP1 POP PUSH1 0x0 PUSH1 0x1 SLOAD GT DUP1 PUSH2 0x5FB JUMPI POP PUSH1 0x0 PUSH1 0x2 SLOAD GT JUMPDEST ISZERO PUSH2 0x65D JUMPI DUP1 PUSH1 0x2 SLOAD PUSH2 0x60E SWAP2 SWAP1 PUSH2 0x1E94 JUMP JUMPDEST DUP4 PUSH1 0x1 SLOAD PUSH2 0x61C SWAP2 SWAP1 PUSH2 0x1E94 JUMP JUMPDEST EQ PUSH2 0x65C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x653 SWAP1 PUSH2 0x1F33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SUB PUSH2 0x682 JUMPI PUSH2 0x67B DUP4 DUP3 PUSH2 0x676 SWAP2 SWAP1 PUSH2 0x1E94 JUMP JUMPDEST PUSH2 0x1785 JUMP JUMPDEST SWAP2 POP PUSH2 0x6C3 JUMP JUMPDEST PUSH2 0x6C0 PUSH1 0x1 SLOAD PUSH1 0x3 SLOAD DUP4 PUSH2 0x696 SWAP2 SWAP1 PUSH2 0x1E94 JUMP JUMPDEST PUSH2 0x6A0 SWAP2 SWAP1 PUSH2 0x1F82 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD DUP7 PUSH2 0x6B1 SWAP2 SWAP1 PUSH2 0x1E94 JUMP JUMPDEST PUSH2 0x6BB SWAP2 SWAP1 PUSH2 0x1F82 JUMP JUMPDEST PUSH2 0x17FF JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x706 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FD SWAP1 PUSH2 0x1FFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x710 CALLER DUP4 PUSH2 0x1818 JUMP JUMPDEST PUSH2 0x7B3 SELFBALANCE PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x76D SWAP2 SWAP1 PUSH2 0x1D34 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x78A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7AE SWAP2 SWAP1 PUSH2 0x2034 JUMP JUMPDEST PUSH2 0x188B JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SLOAD GT DUP1 ISZERO PUSH2 0x7CE JUMPI POP PUSH1 0x0 PUSH1 0x2 SLOAD GT JUMPDEST DUP1 ISZERO PUSH2 0x7DA JUMPI POP PUSH1 0x0 DUP3 GT JUMPDEST PUSH2 0x819 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x810 SWAP1 PUSH2 0x20AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3E8 PUSH2 0x3E5 DUP5 PUSH2 0x82C SWAP2 SWAP1 PUSH2 0x1E94 JUMP JUMPDEST PUSH2 0x836 SWAP2 SWAP1 PUSH2 0x1F82 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 SLOAD PUSH2 0x846 SWAP2 SWAP1 PUSH2 0x20CD JUMP JUMPDEST DUP2 PUSH1 0x2 SLOAD PUSH2 0x854 SWAP2 SWAP1 PUSH2 0x1E94 JUMP JUMPDEST PUSH2 0x85E SWAP2 SWAP1 PUSH2 0x1F82 JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP4 CALLVALUE EQ PUSH2 0x8AA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A1 SWAP1 PUSH2 0x214D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3E8 PUSH2 0x3E5 DUP7 PUSH2 0x8BD SWAP2 SWAP1 PUSH2 0x1E94 JUMP JUMPDEST PUSH2 0x8C7 SWAP2 SWAP1 PUSH2 0x1F82 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 SLOAD PUSH2 0x8D7 SWAP2 SWAP1 PUSH2 0x20CD JUMP JUMPDEST DUP2 PUSH1 0x2 SLOAD PUSH2 0x8E5 SWAP2 SWAP1 PUSH2 0x1E94 JUMP JUMPDEST PUSH2 0x8EF SWAP2 SWAP1 PUSH2 0x1F82 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 GT PUSH2 0x934 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x92B SWAP1 PUSH2 0x21B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3E8 DUP4 PUSH2 0x3E8 PUSH2 0x945 SWAP2 SWAP1 PUSH2 0x21D9 JUMP JUMPDEST DUP6 PUSH2 0x950 SWAP2 SWAP1 PUSH2 0x1E94 JUMP JUMPDEST PUSH2 0x95A SWAP2 SWAP1 PUSH2 0x1F82 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x99C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x993 SWAP1 PUSH2 0x2259 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x7D0 PUSH1 0x1 SLOAD PUSH2 0x9AE SWAP2 SWAP1 PUSH2 0x1E94 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x3 DUP9 PUSH2 0x9BE SWAP2 SWAP1 PUSH2 0x1E94 JUMP JUMPDEST PUSH2 0x9C8 SWAP2 SWAP1 PUSH2 0x1E94 JUMP JUMPDEST PUSH2 0x9D2 SWAP2 SWAP1 PUSH2 0x1F82 JUMP JUMPDEST SWAP1 POP PUSH2 0x9FE PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH2 0x1818 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA59 SWAP3 SWAP2 SWAP1 PUSH2 0x2279 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA78 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA9C SWAP2 SWAP1 PUSH2 0x1E38 JUMP JUMPDEST POP PUSH2 0xB40 SELFBALANCE PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAFA SWAP2 SWAP1 PUSH2 0x1D34 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB17 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB3B SWAP2 SWAP1 PUSH2 0x2034 JUMP JUMPDEST PUSH2 0x188B JUMP JUMPDEST POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3E8 PUSH2 0x3E5 DUP5 PUSH2 0xBA4 SWAP2 SWAP1 PUSH2 0x1E94 JUMP JUMPDEST PUSH2 0xBAE SWAP2 SWAP1 PUSH2 0x1F82 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 SLOAD PUSH2 0xBBE SWAP2 SWAP1 PUSH2 0x20CD JUMP JUMPDEST DUP2 PUSH1 0x1 SLOAD PUSH2 0xBCC SWAP2 SWAP1 PUSH2 0x1E94 JUMP JUMPDEST PUSH2 0xBD6 SWAP2 SWAP1 PUSH2 0x1F82 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 GT PUSH2 0xC1B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC12 SWAP1 PUSH2 0x21B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x7D0 PUSH1 0x2 SLOAD PUSH2 0xC2D SWAP2 SWAP1 PUSH2 0x1E94 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x3 DUP7 PUSH2 0xC3D SWAP2 SWAP1 PUSH2 0x1E94 JUMP JUMPDEST PUSH2 0xC47 SWAP2 SWAP1 PUSH2 0x1E94 JUMP JUMPDEST PUSH2 0xC51 SWAP2 SWAP1 PUSH2 0x1F82 JUMP JUMPDEST SWAP1 POP PUSH2 0xC7D PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH2 0x1818 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCDA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DC9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCF9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD1D SWAP2 SWAP1 PUSH2 0x1E38 JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP5 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xD64 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0xE08 SELFBALANCE PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDC2 SWAP2 SWAP1 PUSH2 0x1D34 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDDF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE03 SWAP2 SWAP1 PUSH2 0x2034 JUMP JUMPDEST PUSH2 0x188B JUMP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xE73 DUP4 PUSH1 0x4 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x189D JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLVALUE EQ PUSH2 0xEC0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEB7 SWAP1 PUSH2 0x214D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3E8 PUSH2 0x3E5 DUP5 PUSH2 0xED3 SWAP2 SWAP1 PUSH2 0x1E94 JUMP JUMPDEST PUSH2 0xEDD SWAP2 SWAP1 PUSH2 0x1F82 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 SLOAD PUSH2 0xEED SWAP2 SWAP1 PUSH2 0x20CD JUMP JUMPDEST DUP2 PUSH1 0x2 SLOAD PUSH2 0xEFB SWAP2 SWAP1 PUSH2 0x1E94 JUMP JUMPDEST PUSH2 0xF05 SWAP2 SWAP1 PUSH2 0x1F82 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 PUSH2 0x7D0 PUSH1 0x1 SLOAD PUSH2 0xF19 SWAP2 SWAP1 PUSH2 0x1E94 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x3 DUP7 PUSH2 0xF29 SWAP2 SWAP1 PUSH2 0x1E94 JUMP JUMPDEST PUSH2 0xF33 SWAP2 SWAP1 PUSH2 0x1E94 JUMP JUMPDEST PUSH2 0xF3D SWAP2 SWAP1 PUSH2 0x1F82 JUMP JUMPDEST SWAP1 POP PUSH2 0xF69 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH2 0x1818 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFC4 SWAP3 SWAP2 SWAP1 PUSH2 0x2279 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFE3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1007 SWAP2 SWAP1 PUSH2 0x1E38 JUMP JUMPDEST POP PUSH2 0x10AB SELFBALANCE PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1065 SWAP2 SWAP1 PUSH2 0x1D34 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1082 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10A6 SWAP2 SWAP1 PUSH2 0x2034 JUMP JUMPDEST PUSH2 0x188B JUMP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP4 GT ISZERO PUSH2 0x1137 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x112E SWAP1 PUSH2 0x22EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1141 CALLER DUP5 PUSH2 0x189D JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP4 GT ISZERO PUSH2 0x11CF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11C6 SWAP1 PUSH2 0x22EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11D9 DUP5 DUP5 PUSH2 0x189D JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SLOAD GT DUP1 ISZERO PUSH2 0x11F9 JUMPI POP PUSH1 0x0 PUSH1 0x2 SLOAD GT JUMPDEST PUSH2 0x1238 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x122F SWAP1 PUSH2 0x235A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH8 0xDE0B6B3A7640000 PUSH1 0x2 SLOAD PUSH2 0x1251 SWAP2 SWAP1 PUSH2 0x1E94 JUMP JUMPDEST PUSH2 0x125B SWAP2 SWAP1 PUSH2 0x1F82 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3E8 PUSH2 0x3E5 DUP7 PUSH2 0x1279 SWAP2 SWAP1 PUSH2 0x1E94 JUMP JUMPDEST PUSH2 0x1283 SWAP2 SWAP1 PUSH2 0x1F82 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 SLOAD PUSH2 0x1293 SWAP2 SWAP1 PUSH2 0x20CD JUMP JUMPDEST DUP2 PUSH1 0x1 SLOAD PUSH2 0x12A1 SWAP2 SWAP1 PUSH2 0x1E94 JUMP JUMPDEST PUSH2 0x12AB SWAP2 SWAP1 PUSH2 0x1F82 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 GT PUSH2 0x12F0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12E7 SWAP1 PUSH2 0x21B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3E8 DUP4 PUSH2 0x3E8 PUSH2 0x1301 SWAP2 SWAP1 PUSH2 0x21D9 JUMP JUMPDEST DUP6 PUSH2 0x130C SWAP2 SWAP1 PUSH2 0x1E94 JUMP JUMPDEST PUSH2 0x1316 SWAP2 SWAP1 PUSH2 0x1F82 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x1358 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x134F SWAP1 PUSH2 0x2259 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x7D0 PUSH1 0x2 SLOAD PUSH2 0x136A SWAP2 SWAP1 PUSH2 0x1E94 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x3 DUP9 PUSH2 0x137A SWAP2 SWAP1 PUSH2 0x1E94 JUMP JUMPDEST PUSH2 0x1384 SWAP2 SWAP1 PUSH2 0x1E94 JUMP JUMPDEST PUSH2 0x138E SWAP2 SWAP1 PUSH2 0x1F82 JUMP JUMPDEST SWAP1 POP PUSH2 0x13BA PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH2 0x1818 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP10 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1417 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DC9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1436 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x145A SWAP2 SWAP1 PUSH2 0x1E38 JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP5 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x14A1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x1545 SELFBALANCE PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14FF SWAP2 SWAP1 PUSH2 0x1D34 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x151C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1540 SWAP2 SWAP1 PUSH2 0x2034 JUMP JUMPDEST PUSH2 0x188B JUMP JUMPDEST POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SLOAD GT DUP1 ISZERO PUSH2 0x1563 JUMPI POP PUSH1 0x0 PUSH1 0x2 SLOAD GT JUMPDEST DUP1 ISZERO PUSH2 0x156F JUMPI POP PUSH1 0x0 DUP3 GT JUMPDEST PUSH2 0x15AE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15A5 SWAP1 PUSH2 0x235A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3E8 PUSH2 0x3E5 DUP5 PUSH2 0x15C1 SWAP2 SWAP1 PUSH2 0x1E94 JUMP JUMPDEST PUSH2 0x15CB SWAP2 SWAP1 PUSH2 0x1F82 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 SLOAD PUSH2 0x15DB SWAP2 SWAP1 PUSH2 0x20CD JUMP JUMPDEST DUP2 PUSH1 0x1 SLOAD PUSH2 0x15E9 SWAP2 SWAP1 PUSH2 0x1E94 JUMP JUMPDEST PUSH2 0x15F3 SWAP2 SWAP1 PUSH2 0x1F82 JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SLOAD GT DUP1 ISZERO PUSH2 0x1683 JUMPI POP PUSH1 0x0 PUSH1 0x2 SLOAD GT JUMPDEST PUSH2 0x16C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16B9 SWAP1 PUSH2 0x20AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x172F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1753 SWAP2 SWAP1 PUSH2 0x23B3 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH1 0x2 SLOAD DUP2 PUSH1 0xA PUSH2 0x1768 SWAP2 SWAP1 PUSH2 0x2513 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x1775 SWAP2 SWAP1 PUSH2 0x1E94 JUMP JUMPDEST PUSH2 0x177F SWAP2 SWAP1 PUSH2 0x1F82 JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP3 GT ISZERO PUSH2 0x17EC JUMPI DUP2 SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 DUP5 PUSH2 0x17A4 SWAP2 SWAP1 PUSH2 0x1F82 JUMP JUMPDEST PUSH2 0x17AE SWAP2 SWAP1 PUSH2 0x20CD JUMP JUMPDEST SWAP1 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x17E6 JUMPI DUP1 SWAP2 POP PUSH1 0x2 DUP2 DUP3 DUP6 PUSH2 0x17CB SWAP2 SWAP1 PUSH2 0x1F82 JUMP JUMPDEST PUSH2 0x17D5 SWAP2 SWAP1 PUSH2 0x20CD JUMP JUMPDEST PUSH2 0x17DF SWAP2 SWAP1 PUSH2 0x1F82 JUMP JUMPDEST SWAP1 POP PUSH2 0x17B1 JUMP JUMPDEST POP PUSH2 0x17FA JUMP JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x17F9 JUMPI PUSH1 0x1 SWAP1 POP JUMPDEST JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x180E JUMPI DUP2 PUSH2 0x1810 JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1867 SWAP2 SWAP1 PUSH2 0x20CD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1880 SWAP2 SWAP1 PUSH2 0x20CD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 SLOAD PUSH1 0x1 SLOAD DUP5 PUSH2 0x18B1 SWAP2 SWAP1 PUSH2 0x1E94 JUMP JUMPDEST PUSH2 0x18BB SWAP2 SWAP1 PUSH2 0x1F82 JUMP JUMPDEST SWAP2 POP PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD DUP5 PUSH2 0x18CE SWAP2 SWAP1 PUSH2 0x1E94 JUMP JUMPDEST PUSH2 0x18D8 SWAP2 SWAP1 PUSH2 0x1F82 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0x18EA JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST PUSH2 0x1929 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1920 SWAP1 PUSH2 0x25AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1933 DUP5 DUP5 PUSH2 0x1AD9 JUMP JUMPDEST PUSH2 0x19EC DUP3 SELFBALANCE PUSH2 0x1942 SWAP2 SWAP1 PUSH2 0x21D9 JUMP JUMPDEST DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x199C SWAP2 SWAP1 PUSH2 0x1D34 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x19B9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x19DD SWAP2 SWAP1 PUSH2 0x2034 JUMP JUMPDEST PUSH2 0x19E7 SWAP2 SWAP1 PUSH2 0x21D9 JUMP JUMPDEST PUSH2 0x188B JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1A32 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A8E SWAP3 SWAP2 SWAP1 PUSH2 0x2279 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1AAD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1AD1 SWAP2 SWAP1 PUSH2 0x1E38 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1B28 SWAP2 SWAP1 PUSH2 0x21D9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1B41 SWAP2 SWAP1 PUSH2 0x21D9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B5F DUP2 PUSH2 0x1B4C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B7A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B56 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B8E DUP2 PUSH2 0x1B4C JUMP JUMPDEST DUP2 EQ PUSH2 0x1B99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BAB DUP2 PUSH2 0x1B85 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BC7 JUMPI PUSH2 0x1BC6 PUSH2 0x1B80 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1BD5 DUP5 DUP3 DUP6 ADD PUSH2 0x1B9C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1BF7 JUMPI PUSH2 0x1BF6 PUSH2 0x1B80 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C05 DUP7 DUP3 DUP8 ADD PUSH2 0x1B9C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1C16 DUP7 DUP3 DUP8 ADD PUSH2 0x1B9C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1C27 DUP7 DUP3 DUP8 ADD PUSH2 0x1B9C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C5C DUP3 PUSH2 0x1C31 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C6C DUP2 PUSH2 0x1C51 JUMP JUMPDEST DUP2 EQ PUSH2 0x1C77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C89 DUP2 PUSH2 0x1C63 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CA5 JUMPI PUSH2 0x1CA4 PUSH2 0x1B80 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CB3 DUP5 DUP3 DUP6 ADD PUSH2 0x1C7A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1CD1 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1B56 JUMP JUMPDEST PUSH2 0x1CDE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B56 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CFC JUMPI PUSH2 0x1CFB PUSH2 0x1B80 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D0A DUP6 DUP3 DUP7 ADD PUSH2 0x1C7A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1D1B DUP6 DUP3 DUP7 ADD PUSH2 0x1B9C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D2E DUP2 PUSH2 0x1C51 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D49 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D25 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D74 PUSH2 0x1D6F PUSH2 0x1D6A DUP5 PUSH2 0x1C31 JUMP JUMPDEST PUSH2 0x1D4F JUMP JUMPDEST PUSH2 0x1C31 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D86 DUP3 PUSH2 0x1D59 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D98 DUP3 PUSH2 0x1D7B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DA8 DUP2 PUSH2 0x1D8D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DC3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D9F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1DDE PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1D25 JUMP JUMPDEST PUSH2 0x1DEB PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1D25 JUMP JUMPDEST PUSH2 0x1DF8 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1B56 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E15 DUP2 PUSH2 0x1E00 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1E32 DUP2 PUSH2 0x1E0C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E4E JUMPI PUSH2 0x1E4D PUSH2 0x1B80 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E5C DUP5 DUP3 DUP6 ADD PUSH2 0x1E23 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1E9F DUP3 PUSH2 0x1B4C JUMP JUMPDEST SWAP2 POP PUSH2 0x1EAA DUP4 PUSH2 0x1B4C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1EB8 DUP2 PUSH2 0x1B4C JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1ECF JUMPI PUSH2 0x1ECE PUSH2 0x1E65 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x78202F207920213D206478202F20647900000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F1D PUSH1 0x10 DUP4 PUSH2 0x1ED6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F28 DUP3 PUSH2 0x1EE7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F4C DUP2 PUSH2 0x1F10 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1F8D DUP3 PUSH2 0x1B4C JUMP JUMPDEST SWAP2 POP PUSH2 0x1F98 DUP4 PUSH2 0x1B4C JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1FA8 JUMPI PUSH2 0x1FA7 PUSH2 0x1F53 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x736861726573203D203000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FE9 PUSH1 0xA DUP4 PUSH2 0x1ED6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FF4 DUP3 PUSH2 0x1FB3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2018 DUP2 PUSH2 0x1FDC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x202E DUP2 PUSH2 0x1B85 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x204A JUMPI PUSH2 0x2049 PUSH2 0x1B80 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2058 DUP5 DUP3 DUP6 ADD PUSH2 0x201F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420455243323020726573657276657300000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2097 PUSH1 0x16 DUP4 PUSH2 0x1ED6 JUMP JUMPDEST SWAP2 POP PUSH2 0x20A2 DUP3 PUSH2 0x2061 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20C6 DUP2 PUSH2 0x208A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20D8 DUP3 PUSH2 0x1B4C JUMP JUMPDEST SWAP2 POP PUSH2 0x20E3 DUP4 PUSH2 0x1B4C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x20FB JUMPI PUSH2 0x20FA PUSH2 0x1E65 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45544820616D6F756E74206D69736D6174636800000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2137 PUSH1 0x13 DUP4 PUSH2 0x1ED6 JUMP JUMPDEST SWAP2 POP PUSH2 0x2142 DUP3 PUSH2 0x2101 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2166 DUP2 PUSH2 0x212A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74206F757470757420616D6F756E74000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21A3 PUSH1 0x1A DUP4 PUSH2 0x1ED6 JUMP JUMPDEST SWAP2 POP PUSH2 0x21AE DUP3 PUSH2 0x216D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21D2 DUP2 PUSH2 0x2196 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21E4 DUP3 PUSH2 0x1B4C JUMP JUMPDEST SWAP2 POP PUSH2 0x21EF DUP4 PUSH2 0x1B4C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2207 JUMPI PUSH2 0x2206 PUSH2 0x1E65 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x536C69704C6F636B000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2243 PUSH1 0x8 DUP4 PUSH2 0x1ED6 JUMP JUMPDEST SWAP2 POP PUSH2 0x224E DUP3 PUSH2 0x220D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2272 DUP2 PUSH2 0x2236 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x228E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1D25 JUMP JUMPDEST PUSH2 0x229B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B56 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22D8 PUSH1 0x14 DUP4 PUSH2 0x1ED6 JUMP JUMPDEST SWAP2 POP PUSH2 0x22E3 DUP3 PUSH2 0x22A2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2307 DUP2 PUSH2 0x22CB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420455448207265736572766573000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2344 PUSH1 0x14 DUP4 PUSH2 0x1ED6 JUMP JUMPDEST SWAP2 POP PUSH2 0x234F DUP3 PUSH2 0x230E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2373 DUP2 PUSH2 0x2337 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2390 DUP2 PUSH2 0x237A JUMP JUMPDEST DUP2 EQ PUSH2 0x239B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x23AD DUP2 PUSH2 0x2387 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23C9 JUMPI PUSH2 0x23C8 PUSH2 0x1B80 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x23D7 DUP5 DUP3 DUP6 ADD PUSH2 0x239E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x2437 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x2413 JUMPI PUSH2 0x2412 PUSH2 0x1E65 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x2422 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x2430 DUP6 PUSH2 0x23E0 JUMP JUMPDEST SWAP5 POP PUSH2 0x23F7 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2450 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x250C JUMP JUMPDEST DUP2 PUSH2 0x245E JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x250C JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x2474 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x247E JUMPI PUSH2 0x24AD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x250C JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x2490 JUMPI PUSH2 0x248F PUSH2 0x1E65 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x24A7 JUMPI PUSH2 0x24A6 PUSH2 0x1E65 JUMP JUMPDEST JUMPDEST POP PUSH2 0x250C JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x24E2 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x24DD JUMPI PUSH2 0x24DC PUSH2 0x1E65 JUMP JUMPDEST JUMPDEST PUSH2 0x250C JUMP JUMPDEST PUSH2 0x24EF DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x23ED JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x2506 JUMPI PUSH2 0x2505 PUSH2 0x1E65 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x251E DUP3 PUSH2 0x1B4C JUMP JUMPDEST SWAP2 POP PUSH2 0x2529 DUP4 PUSH2 0x1B4C JUMP JUMPDEST SWAP3 POP PUSH2 0x2556 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x2440 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x616D6F756E74455448206F7220616D6F756E74455243203D2030000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2594 PUSH1 0x1A DUP4 PUSH2 0x1ED6 JUMP JUMPDEST SWAP2 POP PUSH2 0x259F DUP3 PUSH2 0x255E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x25C3 DUP2 PUSH2 0x2587 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCC 0x4A 0xBA CALLDATACOPY DIV 0xF8 ADDMOD SMOD SWAP10 0xE4 0x49 SWAP6 PUSH10 0x8B45DF3320985C83A1F9 0xE0 0xD PUSH6 0x4D788DA93A9A PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "639:7398:5:-:0;;;946:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;997:10;985:9;;:22;;;;;;;;;;;;;;;;;;1033:6;1018:22;;;;;;;;;;946:102;639:7398;;88:117:6;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;639:7398:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@ETH_ADDRESS_1592": {
									"entryPoint": 4704,
									"id": 1592,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_burn_1655": {
									"entryPoint": 6873,
									"id": 1655,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_1637": {
									"entryPoint": 6168,
									"id": 1637,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_removeLiquidity_2306": {
									"entryPoint": 6301,
									"id": 2306,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@_sqrt_2383": {
									"entryPoint": 6021,
									"id": 2383,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_update_1671": {
									"entryPoint": 6283,
									"id": 1671,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@addLiquidity_2157": {
									"entryPoint": 1344,
									"id": 2157,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@balanceOf_1602": {
									"entryPoint": 3599,
									"id": 1602,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getERCPrice_2463": {
									"entryPoint": 5742,
									"id": 2463,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getETHPrice_2426": {
									"entryPoint": 4580,
									"id": 2426,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getInERCPredictOutputETH_2547": {
									"entryPoint": 5454,
									"id": 2547,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getInETHPredictOutputERC_2505": {
									"entryPoint": 1977,
									"id": 2505,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@min_754": {
									"entryPoint": 6143,
									"id": 754,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@my_shars_2317": {
									"entryPoint": 2889,
									"id": 2317,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@removeAllLiquidity_2174": {
									"entryPoint": 3623,
									"id": 2174,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@removeLiquidity_2200": {
									"entryPoint": 4274,
									"id": 2200,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@removeLiquidity_2226": {
									"entryPoint": 4426,
									"id": 2226,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@reserveERC_1596": {
									"entryPoint": 5627,
									"id": 1596,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@reserveETH_1594": {
									"entryPoint": 1332,
									"id": 1594,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sharesOf_2329": {
									"entryPoint": 5633,
									"id": 2329,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@swapTokenForETH_1839": {
									"entryPoint": 2960,
									"id": 1839,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@swapTokenForETH_WithSlipLock_2052": {
									"entryPoint": 4709,
									"id": 2052,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@swap_1749": {
									"entryPoint": 3708,
									"id": 1749,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@swap_WithSlipLock_1943": {
									"entryPoint": 2150,
									"id": 1943,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@token_1586": {
									"entryPoint": 5706,
									"id": 1586,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_1598": {
									"entryPoint": 1338,
									"id": 1598,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 7290,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 7715,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 7068,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 8223,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint8_fromMemory": {
									"entryPoint": 9118,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7311,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 7397,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 7736,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7089,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 8244,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256t_uint256": {
									"entryPoint": 7134,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint8_fromMemory": {
									"entryPoint": 9139,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7461,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$664_to_t_address_fromStack": {
									"entryPoint": 7583,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_146985345a2b79e4aa6c7e4844006bcfe53a437d612514d7098dbcbad9d449dc_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8758,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8907,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4e208da9c6252e844e3faafb4bce1ac6103358d48cc8ab07bbca5bb9ee4b2f37_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8156,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_566f651deaeea8c25a941d91fbb0f5e9c3369b38f11c210c3771f472a2325999_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7952,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_645e873b9eee12b063db2eb84e35e8b51facdf3f28a2eaef195a9a9f115f5fc7_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8490,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8598,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8bee210d366cd2b27b1161c9026bdc5bed94ded5e21d4fa73eebfa740985ec8d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9015,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8fbbf13eaa0f99fedfb95019d5a776171dee7ddf977738a210d4bc90e02974f3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8330,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9c894b8dcc00872f571c4039113c5e02c9533569797042897c1f8e6dc7fb1350_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9607,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6998,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7476,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 7625,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8825,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$664__to_t_address__fromStack_reversed": {
									"entryPoint": 7598,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_146985345a2b79e4aa6c7e4844006bcfe53a437d612514d7098dbcbad9d449dc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8793,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8942,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4e208da9c6252e844e3faafb4bce1ac6103358d48cc8ab07bbca5bb9ee4b2f37__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8191,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_566f651deaeea8c25a941d91fbb0f5e9c3369b38f11c210c3771f472a2325999__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7987,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_645e873b9eee12b063db2eb84e35e8b51facdf3f28a2eaef195a9a9f115f5fc7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8525,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8633,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8bee210d366cd2b27b1161c9026bdc5bed94ded5e21d4fa73eebfa740985ec8d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9050,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8fbbf13eaa0f99fedfb95019d5a776171dee7ddf977738a210d4bc90e02974f3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8365,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9c894b8dcc00872f571c4039113c5e02c9533569797042897c1f8e6dc7fb1350__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9642,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 7013,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7356,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 7894,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8397,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 8066,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 9197,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint256": {
									"entryPoint": 9491,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 9280,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 7828,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 8665,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 7249,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 7680,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 7217,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6988,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 9082,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$664_to_t_address": {
									"entryPoint": 7565,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 7547,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 7513,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 7503,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7781,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 8019,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 7040,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_right_1_unsigned": {
									"entryPoint": 9184,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_146985345a2b79e4aa6c7e4844006bcfe53a437d612514d7098dbcbad9d449dc": {
									"entryPoint": 8717,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5": {
									"entryPoint": 8866,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4e208da9c6252e844e3faafb4bce1ac6103358d48cc8ab07bbca5bb9ee4b2f37": {
									"entryPoint": 8115,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_566f651deaeea8c25a941d91fbb0f5e9c3369b38f11c210c3771f472a2325999": {
									"entryPoint": 7911,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_645e873b9eee12b063db2eb84e35e8b51facdf3f28a2eaef195a9a9f115f5fc7": {
									"entryPoint": 8449,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90": {
									"entryPoint": 8557,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8bee210d366cd2b27b1161c9026bdc5bed94ded5e21d4fa73eebfa740985ec8d": {
									"entryPoint": 8974,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8fbbf13eaa0f99fedfb95019d5a776171dee7ddf977738a210d4bc90e02974f3": {
									"entryPoint": 8289,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9c894b8dcc00872f571c4039113c5e02c9533569797042897c1f8e6dc7fb1350": {
									"entryPoint": 9566,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 7267,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 7692,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 7045,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 9095,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:20268:6",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:6",
														"type": ""
													}
												],
												"src": "7:77:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "155:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "165:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "143:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "150:3:6",
														"type": ""
													}
												],
												"src": "90:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "312:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "322:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "345:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "330:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "426:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "358:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "358:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "284:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "296:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "307:4:6",
														"type": ""
													}
												],
												"src": "214:222:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "482:35:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "492:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "508:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "502:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "502:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "492:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "475:6:6",
														"type": ""
													}
												],
												"src": "442:75:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "612:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "629:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "632:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "622:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "622:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "622:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "523:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "735:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "752:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "755:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "745:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "745:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "646:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "812:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "869:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "878:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "881:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "871:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "871:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "871:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "835:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "860:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "842:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "842:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "832:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "832:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "825:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "825:43:6"
															},
															"nodeType": "YulIf",
															"src": "822:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "805:5:6",
														"type": ""
													}
												],
												"src": "769:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "949:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "959:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "981:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "968:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "968:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "959:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1024:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "997:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "997:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "997:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "927:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "935:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "943:5:6",
														"type": ""
													}
												],
												"src": "897:139:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1108:263:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1154:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1156:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1156:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1156:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1129:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1138:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1125:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1125:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1150:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1121:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1121:32:6"
															},
															"nodeType": "YulIf",
															"src": "1118:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "1247:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1262:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1276:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1266:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1291:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1326:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1337:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1322:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1322:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1346:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1301:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1301:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1291:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1078:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1089:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1101:6:6",
														"type": ""
													}
												],
												"src": "1042:329:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1477:519:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1523:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1525:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1525:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1525:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1498:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1507:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1494:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1494:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1519:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1490:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1490:32:6"
															},
															"nodeType": "YulIf",
															"src": "1487:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "1616:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1631:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1645:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1635:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1660:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1695:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1706:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1691:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1691:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1715:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1670:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1670:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1660:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1743:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1758:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1772:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1762:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1788:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1823:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1834:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1819:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1819:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1843:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1798:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1798:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1788:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1871:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1886:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1900:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1890:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1916:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1951:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1962:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1947:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1947:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1971:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1926:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1926:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1916:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1431:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1442:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1454:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1462:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1470:6:6",
														"type": ""
													}
												],
												"src": "1377:619:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2047:81:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2057:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2072:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2079:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2068:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2068:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2057:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2029:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2039:7:6",
														"type": ""
													}
												],
												"src": "2002:126:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2179:51:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2189:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2218:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2200:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2200:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2189:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2161:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2171:7:6",
														"type": ""
													}
												],
												"src": "2134:96:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2279:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2336:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2345:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2348:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2338:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2338:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2338:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2302:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2327:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "2309:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2309:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2299:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2299:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2292:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2292:43:6"
															},
															"nodeType": "YulIf",
															"src": "2289:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2272:5:6",
														"type": ""
													}
												],
												"src": "2236:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2416:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2426:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2448:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2435:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2435:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2426:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2491:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2464:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2464:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2464:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2394:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2402:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2410:5:6",
														"type": ""
													}
												],
												"src": "2364:139:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2575:263:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2621:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2623:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2623:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2623:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2596:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2605:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2592:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2592:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2617:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2588:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2588:32:6"
															},
															"nodeType": "YulIf",
															"src": "2585:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "2714:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2729:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2743:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2733:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2758:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2793:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2804:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2789:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2789:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2813:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2768:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2768:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2758:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2545:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2556:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2568:6:6",
														"type": ""
													}
												],
												"src": "2509:329:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2970:206:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2980:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2992:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3003:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2988:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2988:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2980:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3060:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3073:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3084:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3069:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3069:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3016:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3016:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3016:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3141:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3154:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3165:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3150:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3150:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3097:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3097:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3097:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2934:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2946:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2954:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2965:4:6",
														"type": ""
													}
												],
												"src": "2844:332:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3265:391:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3311:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3313:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3313:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3313:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3286:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3295:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3282:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3282:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3307:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3278:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3278:32:6"
															},
															"nodeType": "YulIf",
															"src": "3275:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "3404:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3419:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3433:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3423:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3448:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3483:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3494:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3479:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3479:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3503:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3458:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3458:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3448:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3531:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3546:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3560:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3550:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3576:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3611:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3622:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3607:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3607:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3631:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3586:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3586:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3576:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3227:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3238:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3250:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3258:6:6",
														"type": ""
													}
												],
												"src": "3182:474:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3727:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3744:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3767:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3749:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3749:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3737:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3737:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3737:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3715:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3722:3:6",
														"type": ""
													}
												],
												"src": "3662:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3884:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3894:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3906:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3917:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3902:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3902:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3894:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3974:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3987:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3998:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3983:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3983:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3930:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3930:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3930:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3856:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3868:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3879:4:6",
														"type": ""
													}
												],
												"src": "3786:222:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4046:28:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4056:12:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4063:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "4056:3:6"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4032:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "4042:3:6",
														"type": ""
													}
												],
												"src": "4014:60:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4140:82:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4150:66:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4208:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "4190:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4190:24:6"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "4181:8:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4181:34:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "4163:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4163:53:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "4150:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4120:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "4130:9:6",
														"type": ""
													}
												],
												"src": "4080:142:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4288:66:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4298:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4342:5:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "4311:30:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4311:37:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "4298:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4268:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "4278:9:6",
														"type": ""
													}
												],
												"src": "4228:126:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4434:66:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4444:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4488:5:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4457:30:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4457:37:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "4444:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$664_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4414:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "4424:9:6",
														"type": ""
													}
												],
												"src": "4360:140:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4585:80:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4602:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4652:5:6"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$664_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4607:44:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4607:51:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4595:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4595:64:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4595:64:6"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$664_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4573:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4580:3:6",
														"type": ""
													}
												],
												"src": "4506:159:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4783:138:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4793:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4805:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4816:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4801:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4801:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4793:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4887:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4900:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4911:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4896:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4896:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$664_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4829:57:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4829:85:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4829:85:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$664__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4755:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4767:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4778:4:6",
														"type": ""
													}
												],
												"src": "4671:250:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5081:288:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5091:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5103:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5114:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5099:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5099:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5091:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5171:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5184:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5195:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5180:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5180:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5127:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5127:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5127:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5252:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5265:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5276:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5261:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5261:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5208:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5208:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5208:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "5334:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5347:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5358:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5343:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5343:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5290:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5290:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5290:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5037:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5049:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5057:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5065:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5076:4:6",
														"type": ""
													}
												],
												"src": "4927:442:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5417:48:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5427:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5452:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "5445:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5445:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5438:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5438:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5427:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5399:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5409:7:6",
														"type": ""
													}
												],
												"src": "5375:90:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5511:76:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5565:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5574:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5577:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5567:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5567:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5567:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5534:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5556:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "5541:14:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5541:21:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5531:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5531:32:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5524:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5524:40:6"
															},
															"nodeType": "YulIf",
															"src": "5521:60:6"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5504:5:6",
														"type": ""
													}
												],
												"src": "5471:116:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5653:77:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5663:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5678:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5672:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5672:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "5663:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5718:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "5694:23:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5694:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5694:30:6"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5631:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5639:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5647:5:6",
														"type": ""
													}
												],
												"src": "5593:137:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5810:271:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5856:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5858:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5858:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5858:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5831:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5840:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5827:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5827:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5852:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5823:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5823:32:6"
															},
															"nodeType": "YulIf",
															"src": "5820:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "5949:125:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5964:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5978:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5968:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5993:71:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6036:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6047:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6032:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6032:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6056:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "6003:28:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6003:61:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5993:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5780:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5791:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5803:6:6",
														"type": ""
													}
												],
												"src": "5736:345:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6115:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6132:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6135:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6125:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6125:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6125:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6229:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6232:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6222:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6222:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6222:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6253:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6256:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6246:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6246:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6246:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "6087:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6321:362:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6331:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6354:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6336:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6336:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "6331:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6365:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6388:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6370:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6370:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "6365:1:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6399:28:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6422:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6425:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "6418:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6418:9:6"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "6403:11:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6436:41:6",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "6465:11:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6447:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6447:30:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "6436:7:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6654:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6656:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6656:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6656:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "6587:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "6580:6:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6580:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "6610:1:6"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "6617:7:6"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "6626:1:6"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "6613:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6613:15:6"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "6607:2:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6607:22:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "6560:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6560:83:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6540:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6540:113:6"
															},
															"nodeType": "YulIf",
															"src": "6537:139:6"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6304:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6307:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "6313:7:6",
														"type": ""
													}
												],
												"src": "6273:410:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6785:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6802:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6807:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6795:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6795:19:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6795:19:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6823:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6842:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6847:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6838:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6838:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "6823:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6757:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6762:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "6773:11:6",
														"type": ""
													}
												],
												"src": "6689:169:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6970:60:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6992:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7000:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6988:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6988:14:6"
																	},
																	{
																		"hexValue": "78202f207920213d206478202f206479",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7004:18:6",
																		"type": "",
																		"value": "x / y != dx / dy"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6981:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6981:42:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6981:42:6"
														}
													]
												},
												"name": "store_literal_in_memory_566f651deaeea8c25a941d91fbb0f5e9c3369b38f11c210c3771f472a2325999",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6962:6:6",
														"type": ""
													}
												],
												"src": "6864:166:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7182:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7192:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7258:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7263:2:6",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7199:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7199:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7192:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7364:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_566f651deaeea8c25a941d91fbb0f5e9c3369b38f11c210c3771f472a2325999",
																	"nodeType": "YulIdentifier",
																	"src": "7275:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7275:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7275:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7377:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7388:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7393:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7384:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7384:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7377:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_566f651deaeea8c25a941d91fbb0f5e9c3369b38f11c210c3771f472a2325999_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7170:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7178:3:6",
														"type": ""
													}
												],
												"src": "7036:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7579:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7589:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7601:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7612:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7597:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7597:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7589:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7636:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7647:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7632:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7632:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7655:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7661:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7651:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7651:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7625:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7625:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7625:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7681:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7815:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_566f651deaeea8c25a941d91fbb0f5e9c3369b38f11c210c3771f472a2325999_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7689:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7689:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7681:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_566f651deaeea8c25a941d91fbb0f5e9c3369b38f11c210c3771f472a2325999__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7559:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7574:4:6",
														"type": ""
													}
												],
												"src": "7408:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7861:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7878:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7881:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7871:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7871:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7871:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7975:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7978:4:6",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7968:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7968:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7968:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7999:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8002:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7992:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7992:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7992:15:6"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "7833:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8061:143:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8071:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8094:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8076:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8076:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "8071:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8105:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8128:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8110:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8110:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "8105:1:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8152:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "8154:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8154:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8154:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8149:1:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8142:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8142:9:6"
															},
															"nodeType": "YulIf",
															"src": "8139:35:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8184:14:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8193:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8196:1:6"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "8189:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8189:9:6"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "8184:1:6"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8050:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8053:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "8059:1:6",
														"type": ""
													}
												],
												"src": "8019:185:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8316:54:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8338:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8346:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8334:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8334:14:6"
																	},
																	{
																		"hexValue": "736861726573203d2030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8350:12:6",
																		"type": "",
																		"value": "shares = 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8327:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8327:36:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8327:36:6"
														}
													]
												},
												"name": "store_literal_in_memory_4e208da9c6252e844e3faafb4bce1ac6103358d48cc8ab07bbca5bb9ee4b2f37",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8308:6:6",
														"type": ""
													}
												],
												"src": "8210:160:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8522:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8532:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8598:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8603:2:6",
																		"type": "",
																		"value": "10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8539:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8539:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8532:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8704:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4e208da9c6252e844e3faafb4bce1ac6103358d48cc8ab07bbca5bb9ee4b2f37",
																	"nodeType": "YulIdentifier",
																	"src": "8615:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8615:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8615:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8717:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8728:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8733:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8724:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8724:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8717:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4e208da9c6252e844e3faafb4bce1ac6103358d48cc8ab07bbca5bb9ee4b2f37_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8510:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8518:3:6",
														"type": ""
													}
												],
												"src": "8376:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8919:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8929:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8941:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8952:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8937:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8937:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8929:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8976:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8987:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8972:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8972:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8995:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9001:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8991:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8991:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8965:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8965:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8965:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9021:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9155:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4e208da9c6252e844e3faafb4bce1ac6103358d48cc8ab07bbca5bb9ee4b2f37_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9029:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9029:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9021:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4e208da9c6252e844e3faafb4bce1ac6103358d48cc8ab07bbca5bb9ee4b2f37__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8899:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8914:4:6",
														"type": ""
													}
												],
												"src": "8748:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9236:80:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9246:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "9261:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9255:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9255:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "9246:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9304:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9277:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9277:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9277:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "9214:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9222:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9230:5:6",
														"type": ""
													}
												],
												"src": "9173:143:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9399:274:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9445:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "9447:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9447:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9447:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9420:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9429:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9416:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9416:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9441:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9412:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9412:32:6"
															},
															"nodeType": "YulIf",
															"src": "9409:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "9538:128:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9553:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9567:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9557:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9582:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9628:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9639:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9624:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9624:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9648:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "9592:31:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9592:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9582:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9369:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9380:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9392:6:6",
														"type": ""
													}
												],
												"src": "9322:351:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9785:66:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9807:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9815:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9803:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9803:14:6"
																	},
																	{
																		"hexValue": "496e76616c6964204552433230207265736572766573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9819:24:6",
																		"type": "",
																		"value": "Invalid ERC20 reserves"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9796:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9796:48:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9796:48:6"
														}
													]
												},
												"name": "store_literal_in_memory_8fbbf13eaa0f99fedfb95019d5a776171dee7ddf977738a210d4bc90e02974f3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9777:6:6",
														"type": ""
													}
												],
												"src": "9679:172:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10003:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10013:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10079:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10084:2:6",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10020:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10020:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10013:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10185:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8fbbf13eaa0f99fedfb95019d5a776171dee7ddf977738a210d4bc90e02974f3",
																	"nodeType": "YulIdentifier",
																	"src": "10096:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10096:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10096:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10198:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10209:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10214:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10205:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10205:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10198:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8fbbf13eaa0f99fedfb95019d5a776171dee7ddf977738a210d4bc90e02974f3_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9991:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9999:3:6",
														"type": ""
													}
												],
												"src": "9857:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10400:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10410:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10422:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10433:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10418:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10418:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10410:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10457:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10468:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10453:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10453:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10476:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10482:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10472:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10472:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10446:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10446:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10446:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10502:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10636:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8fbbf13eaa0f99fedfb95019d5a776171dee7ddf977738a210d4bc90e02974f3_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10510:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10510:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10502:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8fbbf13eaa0f99fedfb95019d5a776171dee7ddf977738a210d4bc90e02974f3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10380:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10395:4:6",
														"type": ""
													}
												],
												"src": "10229:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10698:147:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10708:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10731:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10713:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10713:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "10708:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10742:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10765:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10747:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10747:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "10742:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10776:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10787:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10790:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10783:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10783:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "10776:3:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10816:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10818:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10818:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10818:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10808:1:6"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "10811:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10805:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10805:10:6"
															},
															"nodeType": "YulIf",
															"src": "10802:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10685:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10688:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "10694:3:6",
														"type": ""
													}
												],
												"src": "10654:191:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10957:63:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10979:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10987:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10975:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10975:14:6"
																	},
																	{
																		"hexValue": "45544820616d6f756e74206d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10991:21:6",
																		"type": "",
																		"value": "ETH amount mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10968:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10968:45:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10968:45:6"
														}
													]
												},
												"name": "store_literal_in_memory_645e873b9eee12b063db2eb84e35e8b51facdf3f28a2eaef195a9a9f115f5fc7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10949:6:6",
														"type": ""
													}
												],
												"src": "10851:169:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11172:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11182:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11248:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11253:2:6",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11189:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11189:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11182:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11354:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_645e873b9eee12b063db2eb84e35e8b51facdf3f28a2eaef195a9a9f115f5fc7",
																	"nodeType": "YulIdentifier",
																	"src": "11265:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11265:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11265:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11367:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11378:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11383:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11374:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11374:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11367:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_645e873b9eee12b063db2eb84e35e8b51facdf3f28a2eaef195a9a9f115f5fc7_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11160:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11168:3:6",
														"type": ""
													}
												],
												"src": "11026:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11569:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11579:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11591:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11602:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11587:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11587:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11579:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11626:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11637:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11622:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11622:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11645:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11651:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11641:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11641:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11615:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11615:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11615:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11671:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11805:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_645e873b9eee12b063db2eb84e35e8b51facdf3f28a2eaef195a9a9f115f5fc7_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11679:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11679:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11671:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_645e873b9eee12b063db2eb84e35e8b51facdf3f28a2eaef195a9a9f115f5fc7__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11549:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11564:4:6",
														"type": ""
													}
												],
												"src": "11398:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11929:70:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11951:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11959:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11947:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11947:14:6"
																	},
																	{
																		"hexValue": "496e73756666696369656e74206f757470757420616d6f756e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11963:28:6",
																		"type": "",
																		"value": "Insufficient output amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11940:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11940:52:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11940:52:6"
														}
													]
												},
												"name": "store_literal_in_memory_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11921:6:6",
														"type": ""
													}
												],
												"src": "11823:176:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12151:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12161:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12227:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12232:2:6",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12168:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12168:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12161:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12333:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90",
																	"nodeType": "YulIdentifier",
																	"src": "12244:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12244:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12244:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12346:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12357:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12362:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12353:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12353:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12346:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12139:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12147:3:6",
														"type": ""
													}
												],
												"src": "12005:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12548:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12558:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12570:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12581:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12566:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12566:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12558:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12605:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12616:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12601:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12601:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12624:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12630:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12620:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12620:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12594:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12594:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12594:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12650:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12784:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12658:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12658:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12650:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12528:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12543:4:6",
														"type": ""
													}
												],
												"src": "12377:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12847:149:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12857:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12880:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12862:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12862:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "12857:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12891:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12914:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12896:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12896:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "12891:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12925:17:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12937:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12940:1:6"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "12933:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12933:9:6"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "12925:4:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12967:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12969:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12969:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12969:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "12958:4:6"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12964:1:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12955:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12955:11:6"
															},
															"nodeType": "YulIf",
															"src": "12952:37:6"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12833:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12836:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "12842:4:6",
														"type": ""
													}
												],
												"src": "12802:194:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13108:52:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13130:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13138:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13126:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13126:14:6"
																	},
																	{
																		"hexValue": "536c69704c6f636b",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13142:10:6",
																		"type": "",
																		"value": "SlipLock"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13119:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13119:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13119:34:6"
														}
													]
												},
												"name": "store_literal_in_memory_146985345a2b79e4aa6c7e4844006bcfe53a437d612514d7098dbcbad9d449dc",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13100:6:6",
														"type": ""
													}
												],
												"src": "13002:158:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13312:219:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13322:73:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13388:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13393:1:6",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13329:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13329:66:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13322:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13493:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_146985345a2b79e4aa6c7e4844006bcfe53a437d612514d7098dbcbad9d449dc",
																	"nodeType": "YulIdentifier",
																	"src": "13404:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13404:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13404:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13506:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13517:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13522:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13513:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13513:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13506:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_146985345a2b79e4aa6c7e4844006bcfe53a437d612514d7098dbcbad9d449dc_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13300:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13308:3:6",
														"type": ""
													}
												],
												"src": "13166:365:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13708:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13718:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13730:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13741:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13726:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13726:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13718:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13765:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13776:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13761:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13761:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13784:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13790:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13780:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13780:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13754:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13754:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13754:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13810:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13944:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_146985345a2b79e4aa6c7e4844006bcfe53a437d612514d7098dbcbad9d449dc_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13818:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13818:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13810:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_146985345a2b79e4aa6c7e4844006bcfe53a437d612514d7098dbcbad9d449dc__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13688:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13703:4:6",
														"type": ""
													}
												],
												"src": "13537:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14088:206:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14098:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14110:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14121:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14106:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14106:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14098:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14178:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14191:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14202:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14187:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14187:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14134:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14134:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14134:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "14259:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14272:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14283:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14268:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14268:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14215:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14215:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14215:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14052:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14064:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14072:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14083:4:6",
														"type": ""
													}
												],
												"src": "13962:332:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14406:64:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14428:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14436:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14424:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14424:14:6"
																	},
																	{
																		"hexValue": "496e73756666696369656e742062616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14440:22:6",
																		"type": "",
																		"value": "Insufficient balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14417:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14417:46:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14417:46:6"
														}
													]
												},
												"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14398:6:6",
														"type": ""
													}
												],
												"src": "14300:170:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14622:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14632:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14698:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14703:2:6",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14639:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14639:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14632:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14804:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																	"nodeType": "YulIdentifier",
																	"src": "14715:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14715:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14715:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14817:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14828:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14833:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14824:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14824:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14817:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14610:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14618:3:6",
														"type": ""
													}
												],
												"src": "14476:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15019:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15029:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15041:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15052:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15037:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "15037:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15029:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15076:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15087:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15072:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15072:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15095:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15101:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15091:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15091:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15065:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "15065:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15065:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15121:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15255:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15129:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "15129:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15121:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14999:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15014:4:6",
														"type": ""
													}
												],
												"src": "14848:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15379:64:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15401:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15409:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15397:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15397:14:6"
																	},
																	{
																		"hexValue": "496e76616c696420455448207265736572766573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15413:22:6",
																		"type": "",
																		"value": "Invalid ETH reserves"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15390:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "15390:46:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15390:46:6"
														}
													]
												},
												"name": "store_literal_in_memory_8bee210d366cd2b27b1161c9026bdc5bed94ded5e21d4fa73eebfa740985ec8d",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15371:6:6",
														"type": ""
													}
												],
												"src": "15273:170:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15595:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15605:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15671:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15676:2:6",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15612:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "15612:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15605:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15777:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8bee210d366cd2b27b1161c9026bdc5bed94ded5e21d4fa73eebfa740985ec8d",
																	"nodeType": "YulIdentifier",
																	"src": "15688:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "15688:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15688:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15790:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15801:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15806:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15797:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "15797:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15790:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8bee210d366cd2b27b1161c9026bdc5bed94ded5e21d4fa73eebfa740985ec8d_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15583:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15591:3:6",
														"type": ""
													}
												],
												"src": "15449:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15992:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16002:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16014:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16025:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16010:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "16010:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16002:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16049:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16060:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16045:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16045:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16068:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16074:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16064:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16064:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16038:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "16038:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16038:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16094:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16228:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8bee210d366cd2b27b1161c9026bdc5bed94ded5e21d4fa73eebfa740985ec8d_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16102:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "16102:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16094:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8bee210d366cd2b27b1161c9026bdc5bed94ded5e21d4fa73eebfa740985ec8d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15972:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15987:4:6",
														"type": ""
													}
												],
												"src": "15821:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16289:43:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16299:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16314:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16321:4:6",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "16310:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "16310:16:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "16299:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16271:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "16281:7:6",
														"type": ""
													}
												],
												"src": "16246:86:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16379:77:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16434:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16443:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16446:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "16436:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16436:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16436:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "16402:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "16425:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nodeType": "YulIdentifier",
																					"src": "16409:15:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16409:22:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "16399:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16399:33:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "16392:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "16392:41:6"
															},
															"nodeType": "YulIf",
															"src": "16389:61:6"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16372:5:6",
														"type": ""
													}
												],
												"src": "16338:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16523:78:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16533:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "16548:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "16542:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "16542:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "16533:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16589:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "16564:24:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "16564:31:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16564:31:6"
														}
													]
												},
												"name": "abi_decode_t_uint8_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "16501:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16509:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16517:5:6",
														"type": ""
													}
												],
												"src": "16462:139:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16682:272:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16728:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "16730:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16730:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16730:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16703:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16712:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16699:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16699:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16724:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "16695:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "16695:32:6"
															},
															"nodeType": "YulIf",
															"src": "16692:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "16821:126:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "16836:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16850:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "16840:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "16865:72:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "16909:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "16920:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16905:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16905:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16929:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "16875:29:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16875:62:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "16865:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint8_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16652:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "16663:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16675:6:6",
														"type": ""
													}
												],
												"src": "16607:347:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17011:51:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17021:34:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17046:1:6",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "17049:5:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "17042:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "17042:13:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "17021:8:6"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16992:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "17002:8:6",
														"type": ""
													}
												],
												"src": "16960:102:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17141:775:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17151:15:6",
															"value": {
																"name": "_power",
																"nodeType": "YulIdentifier",
																"src": "17160:6:6"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "17151:5:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "17175:14:6",
															"value": {
																"name": "_base",
																"nodeType": "YulIdentifier",
																"src": "17184:5:6"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "17175:4:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17233:677:6",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "17321:22:6",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "17323:16:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "17323:18:6"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "17323:18:6"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "17299:4:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nodeType": "YulIdentifier",
																							"src": "17309:3:6"
																						},
																						{
																							"name": "base",
																							"nodeType": "YulIdentifier",
																							"src": "17314:4:6"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "17305:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "17305:14:6"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "17296:2:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17296:24:6"
																		},
																		"nodeType": "YulIf",
																		"src": "17293:50:6"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "17388:419:6",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "17768:25:6",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nodeType": "YulIdentifier",
																								"src": "17781:5:6"
																							},
																							{
																								"name": "base",
																								"nodeType": "YulIdentifier",
																								"src": "17788:4:6"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "17777:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "17777:16:6"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "17768:5:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "17363:8:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17373:1:6",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "17359:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17359:16:6"
																		},
																		"nodeType": "YulIf",
																		"src": "17356:451:6"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "17820:23:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "17832:4:6"
																				},
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "17838:4:6"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nodeType": "YulIdentifier",
																				"src": "17828:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17828:15:6"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "17820:4:6"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "17856:44:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "17891:8:6"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nodeType": "YulIdentifier",
																				"src": "17868:22:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17868:32:6"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "17856:8:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "17209:8:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17219:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "17206:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "17206:15:6"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "17222:2:6",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "17202:3:6",
																"statements": []
															},
															"src": "17198:712:6"
														}
													]
												},
												"name": "checked_exp_helper",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nodeType": "YulTypedName",
														"src": "17096:6:6",
														"type": ""
													},
													{
														"name": "_base",
														"nodeType": "YulTypedName",
														"src": "17104:5:6",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "17111:8:6",
														"type": ""
													},
													{
														"name": "max",
														"nodeType": "YulTypedName",
														"src": "17121:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "17129:5:6",
														"type": ""
													},
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "17136:4:6",
														"type": ""
													}
												],
												"src": "17068:848:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17982:1013:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18177:20:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "18179:10:6",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "18188:1:6",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "18179:5:6"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "18190:5:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "18167:8:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "18160:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "18160:16:6"
															},
															"nodeType": "YulIf",
															"src": "18157:40:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18222:20:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "18224:10:6",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "18233:1:6",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "18224:5:6"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "18235:5:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "18216:4:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "18209:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "18209:12:6"
															},
															"nodeType": "YulIf",
															"src": "18206:36:6"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "18352:20:6",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "18354:10:6",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18363:1:6",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "18354:5:6"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "18365:5:6"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "18345:27:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18350:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "18396:176:6",
																		"statements": [
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "18431:22:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "18433:16:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "18433:18:6"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "18433:18:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "18416:8:6"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "18426:3:6",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "18413:2:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "18413:17:6"
																				},
																				"nodeType": "YulIf",
																				"src": "18410:43:6"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "18466:25:6",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "18479:1:6",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "18482:8:6"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nodeType": "YulIdentifier",
																						"src": "18475:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "18475:16:6"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "18466:5:6"
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "18522:22:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "18524:16:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "18524:18:6"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "18524:18:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "18510:5:6"
																						},
																						{
																							"name": "max",
																							"nodeType": "YulIdentifier",
																							"src": "18517:3:6"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "18507:2:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "18507:14:6"
																				},
																				"nodeType": "YulIf",
																				"src": "18504:40:6"
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "18557:5:6"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "18381:191:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18386:1:6",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "18302:4:6"
															},
															"nodeType": "YulSwitch",
															"src": "18295:277:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18704:123:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "18718:28:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "18731:4:6"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "18737:8:6"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nodeType": "YulIdentifier",
																				"src": "18727:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18727:19:6"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "18718:5:6"
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "18777:22:6",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "18779:16:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "18779:18:6"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "18779:18:6"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nodeType": "YulIdentifier",
																					"src": "18765:5:6"
																				},
																				{
																					"name": "max",
																					"nodeType": "YulIdentifier",
																					"src": "18772:3:6"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "18762:2:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18762:14:6"
																		},
																		"nodeType": "YulIf",
																		"src": "18759:40:6"
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "18812:5:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "18607:4:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "18613:2:6",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "18604:2:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18604:12:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "18621:8:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "18631:2:6",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "18618:2:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18618:16:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "18600:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18600:35:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "18656:4:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "18662:3:6",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "18653:2:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18653:13:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "18671:8:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "18681:2:6",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "18668:2:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18668:16:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "18649:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18649:36:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "18584:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "18584:111:6"
															},
															"nodeType": "YulIf",
															"src": "18581:246:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18837:57:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18871:1:6",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "18874:4:6"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "18880:8:6"
																	},
																	{
																		"name": "max",
																		"nodeType": "YulIdentifier",
																		"src": "18890:3:6"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nodeType": "YulIdentifier",
																	"src": "18852:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "18852:42:6"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "18837:5:6"
																},
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "18844:4:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18933:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "18935:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18935:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18935:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nodeType": "YulIdentifier",
																		"src": "18910:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nodeType": "YulIdentifier",
																				"src": "18921:3:6"
																			},
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "18926:4:6"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "18917:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18917:14:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "18907:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "18907:25:6"
															},
															"nodeType": "YulIf",
															"src": "18904:51:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18964:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nodeType": "YulIdentifier",
																		"src": "18977:5:6"
																	},
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "18984:4:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "18973:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "18973:16:6"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "18964:5:6"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "17952:4:6",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "17958:8:6",
														"type": ""
													},
													{
														"name": "max",
														"nodeType": "YulTypedName",
														"src": "17968:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "17976:5:6",
														"type": ""
													}
												],
												"src": "17922:1073:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19067:219:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19077:31:6",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "19103:4:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19085:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "19085:23:6"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "19077:4:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19117:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "19147:8:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19129:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "19129:27:6"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nodeType": "YulIdentifier",
																	"src": "19117:8:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19166:113:6",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "19196:4:6"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "19202:8:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19212:66:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nodeType": "YulIdentifier",
																	"src": "19175:20:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "19175:104:6"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "19166:5:6"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "19042:4:6",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "19048:8:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "19061:5:6",
														"type": ""
													}
												],
												"src": "19001:285:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19398:70:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19420:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19428:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19416:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19416:14:6"
																	},
																	{
																		"hexValue": "616d6f756e74455448206f7220616d6f756e74455243203d2030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19432:28:6",
																		"type": "",
																		"value": "amountETH or amountERC = 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19409:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "19409:52:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19409:52:6"
														}
													]
												},
												"name": "store_literal_in_memory_9c894b8dcc00872f571c4039113c5e02c9533569797042897c1f8e6dc7fb1350",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "19390:6:6",
														"type": ""
													}
												],
												"src": "19292:176:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19620:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19630:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19696:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19701:2:6",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19637:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "19637:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "19630:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19802:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9c894b8dcc00872f571c4039113c5e02c9533569797042897c1f8e6dc7fb1350",
																	"nodeType": "YulIdentifier",
																	"src": "19713:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "19713:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19713:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19815:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19826:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19831:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19822:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "19822:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "19815:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9c894b8dcc00872f571c4039113c5e02c9533569797042897c1f8e6dc7fb1350_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "19608:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "19616:3:6",
														"type": ""
													}
												],
												"src": "19474:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20017:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20027:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20039:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20050:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20035:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "20035:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20027:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20074:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20085:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20070:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20070:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20093:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20099:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20089:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20089:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20063:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "20063:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20063:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20119:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "20253:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9c894b8dcc00872f571c4039113c5e02c9533569797042897c1f8e6dc7fb1350_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20127:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "20127:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20119:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9c894b8dcc00872f571c4039113c5e02c9533569797042897c1f8e6dc7fb1350__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19997:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20012:4:6",
														"type": ""
													}
												],
												"src": "19846:419:6"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$664_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$664_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$664_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$664__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$664_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_566f651deaeea8c25a941d91fbb0f5e9c3369b38f11c210c3771f472a2325999(memPtr) {\n\n        mstore(add(memPtr, 0), \"x / y != dx / dy\")\n\n    }\n\n    function abi_encode_t_stringliteral_566f651deaeea8c25a941d91fbb0f5e9c3369b38f11c210c3771f472a2325999_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_566f651deaeea8c25a941d91fbb0f5e9c3369b38f11c210c3771f472a2325999(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_566f651deaeea8c25a941d91fbb0f5e9c3369b38f11c210c3771f472a2325999__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_566f651deaeea8c25a941d91fbb0f5e9c3369b38f11c210c3771f472a2325999_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_4e208da9c6252e844e3faafb4bce1ac6103358d48cc8ab07bbca5bb9ee4b2f37(memPtr) {\n\n        mstore(add(memPtr, 0), \"shares = 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_4e208da9c6252e844e3faafb4bce1ac6103358d48cc8ab07bbca5bb9ee4b2f37_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 10)\n        store_literal_in_memory_4e208da9c6252e844e3faafb4bce1ac6103358d48cc8ab07bbca5bb9ee4b2f37(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4e208da9c6252e844e3faafb4bce1ac6103358d48cc8ab07bbca5bb9ee4b2f37__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4e208da9c6252e844e3faafb4bce1ac6103358d48cc8ab07bbca5bb9ee4b2f37_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_8fbbf13eaa0f99fedfb95019d5a776171dee7ddf977738a210d4bc90e02974f3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid ERC20 reserves\")\n\n    }\n\n    function abi_encode_t_stringliteral_8fbbf13eaa0f99fedfb95019d5a776171dee7ddf977738a210d4bc90e02974f3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_8fbbf13eaa0f99fedfb95019d5a776171dee7ddf977738a210d4bc90e02974f3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8fbbf13eaa0f99fedfb95019d5a776171dee7ddf977738a210d4bc90e02974f3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8fbbf13eaa0f99fedfb95019d5a776171dee7ddf977738a210d4bc90e02974f3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_645e873b9eee12b063db2eb84e35e8b51facdf3f28a2eaef195a9a9f115f5fc7(memPtr) {\n\n        mstore(add(memPtr, 0), \"ETH amount mismatch\")\n\n    }\n\n    function abi_encode_t_stringliteral_645e873b9eee12b063db2eb84e35e8b51facdf3f28a2eaef195a9a9f115f5fc7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_645e873b9eee12b063db2eb84e35e8b51facdf3f28a2eaef195a9a9f115f5fc7(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_645e873b9eee12b063db2eb84e35e8b51facdf3f28a2eaef195a9a9f115f5fc7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_645e873b9eee12b063db2eb84e35e8b51facdf3f28a2eaef195a9a9f115f5fc7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient output amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_146985345a2b79e4aa6c7e4844006bcfe53a437d612514d7098dbcbad9d449dc(memPtr) {\n\n        mstore(add(memPtr, 0), \"SlipLock\")\n\n    }\n\n    function abi_encode_t_stringliteral_146985345a2b79e4aa6c7e4844006bcfe53a437d612514d7098dbcbad9d449dc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 8)\n        store_literal_in_memory_146985345a2b79e4aa6c7e4844006bcfe53a437d612514d7098dbcbad9d449dc(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_146985345a2b79e4aa6c7e4844006bcfe53a437d612514d7098dbcbad9d449dc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_146985345a2b79e4aa6c7e4844006bcfe53a437d612514d7098dbcbad9d449dc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8bee210d366cd2b27b1161c9026bdc5bed94ded5e21d4fa73eebfa740985ec8d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid ETH reserves\")\n\n    }\n\n    function abi_encode_t_stringliteral_8bee210d366cd2b27b1161c9026bdc5bed94ded5e21d4fa73eebfa740985ec8d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_8bee210d366cd2b27b1161c9026bdc5bed94ded5e21d4fa73eebfa740985ec8d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8bee210d366cd2b27b1161c9026bdc5bed94ded5e21d4fa73eebfa740985ec8d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8bee210d366cd2b27b1161c9026bdc5bed94ded5e21d4fa73eebfa740985ec8d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint8_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint256(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function store_literal_in_memory_9c894b8dcc00872f571c4039113c5e02c9533569797042897c1f8e6dc7fb1350(memPtr) {\n\n        mstore(add(memPtr, 0), \"amountETH or amountERC = 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_9c894b8dcc00872f571c4039113c5e02c9533569797042897c1f8e6dc7fb1350_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_9c894b8dcc00872f571c4039113c5e02c9533569797042897c1f8e6dc7fb1350(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9c894b8dcc00872f571c4039113c5e02c9533569797042897c1f8e6dc7fb1350__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9c894b8dcc00872f571c4039113c5e02c9533569797042897c1f8e6dc7fb1350_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"1586": [
									{
										"length": 32,
										"start": 1348
									},
									{
										"length": 32,
										"start": 1814
									},
									{
										"length": 32,
										"start": 2560
									},
									{
										"length": 32,
										"start": 2723
									},
									{
										"length": 32,
										"start": 3199
									},
									{
										"length": 32,
										"start": 3435
									},
									{
										"length": 32,
										"start": 3947
									},
									{
										"length": 32,
										"start": 4110
									},
									{
										"length": 32,
										"start": 5052
									},
									{
										"length": 32,
										"start": 5288
									},
									{
										"length": 32,
										"start": 5708
									},
									{
										"length": 32,
										"start": 5830
									},
									{
										"length": 32,
										"start": 6469
									},
									{
										"length": 32,
										"start": 6709
									}
								]
							},
							"linkReferences": {},
							"object": "60806040526004361061011f5760003560e01c80639c8f9f23116100a0578063dccc5fea11610064578063dccc5fea14610439578063e764e67c14610476578063f5eb42dc146104a1578063fc0c546a146104de578063fcc2ba08146105095761011f565b80639c8f9f231461032a578063a201ccf614610368578063a607a8d9146103a6578063a734f06e146103d1578063dc2d845b146103fc5761011f565b80636cae4f84116100e75780636cae4f84146102175780636fb84b741461024257806370a082311461027f5780637a6a5e1b146102bc57806394b918de146102fa5761011f565b8063100af2031461012457806318160ddd1461014f57806351c6590a1461017a57806356c1d7eb146101aa57806362279b65146101e7575b600080fd5b34801561013057600080fd5b50610139610534565b6040516101469190611b65565b60405180910390f35b34801561015b57600080fd5b5061016461053a565b6040516101719190611b65565b60405180910390f35b610194600480360381019061018f9190611bb1565b610540565b6040516101a19190611b65565b60405180910390f35b3480156101b657600080fd5b506101d160048036038101906101cc9190611bb1565b6107b9565b6040516101de9190611b65565b60405180910390f35b61020160048036038101906101fc9190611bde565b610866565b60405161020e9190611b65565b60405180910390f35b34801561022357600080fd5b5061022c610b49565b6040516102399190611b65565b60405180910390f35b34801561024e57600080fd5b5061026960048036038101906102649190611bb1565b610b90565b6040516102769190611b65565b60405180910390f35b34801561028b57600080fd5b506102a660048036038101906102a19190611c8f565b610e0f565b6040516102b39190611b65565b60405180910390f35b3480156102c857600080fd5b506102e360048036038101906102de9190611c8f565b610e27565b6040516102f1929190611cbc565b60405180910390f35b610314600480360381019061030f9190611bb1565b610e7c565b6040516103219190611b65565b60405180910390f35b34801561033657600080fd5b50610351600480360381019061034c9190611bb1565b6110b2565b60405161035f929190611cbc565b60405180910390f35b34801561037457600080fd5b5061038f600480360381019061038a9190611ce5565b61114a565b60405161039d929190611cbc565b60405180910390f35b3480156103b257600080fd5b506103bb6111e4565b6040516103c89190611b65565b60405180910390f35b3480156103dd57600080fd5b506103e6611260565b6040516103f39190611d34565b60405180910390f35b34801561040857600080fd5b50610423600480360381019061041e9190611bde565b611265565b6040516104309190611b65565b60405180910390f35b34801561044557600080fd5b50610460600480360381019061045b9190611bb1565b61154e565b60405161046d9190611b65565b60405180910390f35b34801561048257600080fd5b5061048b6115fb565b6040516104989190611b65565b60405180910390f35b3480156104ad57600080fd5b506104c860048036038101906104c39190611c8f565b611601565b6040516104d59190611b65565b60405180910390f35b3480156104ea57600080fd5b506104f361164a565b6040516105009190611dae565b60405180910390f35b34801561051557600080fd5b5061051e61166e565b60405161052b9190611b65565b60405180910390f35b60015481565b60035481565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161059f93929190611dc9565b6020604051808303816000875af11580156105be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e29190611e38565b506000349050600060015411806105fb57506000600254115b1561065d578060025461060e9190611e94565b8360015461061c9190611e94565b1461065c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065390611f33565b60405180910390fd5b5b6000600354036106825761067b83826106769190611e94565b611785565b91506106c3565b6106c0600154600354836106969190611e94565b6106a09190611f82565b600254600354866106b19190611e94565b6106bb9190611f82565b6117ff565b91505b60008211610706576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106fd90611fff565b60405180910390fd5b6107103383611818565b6107b3477f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161076d9190611d34565b602060405180830381865afa15801561078a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ae9190612034565b61188b565b50919050565b6000806001541180156107ce57506000600254115b80156107da5750600082115b610819576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610810906120ad565b60405180910390fd5b60006103e86103e58461082c9190611e94565b6108369190611f82565b90508060015461084691906120cd565b816002546108549190611e94565b61085e9190611f82565b915050919050565b60008334146108aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a19061214d565b60405180910390fd5b60006103e86103e5866108bd9190611e94565b6108c79190611f82565b9050806001546108d791906120cd565b816002546108e59190611e94565b6108ef9190611f82565b915060008211610934576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092b906121b9565b60405180910390fd5b6103e8836103e861094591906121d9565b856109509190611e94565b61095a9190611f82565b82101561099c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099390612259565b60405180910390fd5b60006107d06001546109ae9190611e94565b6003546003886109be9190611e94565b6109c89190611e94565b6109d29190611f82565b90506109fe60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682611818565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b8152600401610a59929190612279565b6020604051808303816000875af1158015610a78573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9c9190611e38565b50610b40477f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610afa9190611d34565b602060405180830381865afa158015610b17573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b3b9190612034565b61188b565b50509392505050565b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b6000806103e86103e584610ba49190611e94565b610bae9190611f82565b905080600254610bbe91906120cd565b81600154610bcc9190611e94565b610bd69190611f82565b915060008211610c1b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c12906121b9565b60405180910390fd5b60006107d0600254610c2d9190611e94565b600354600386610c3d9190611e94565b610c479190611e94565b610c519190611f82565b9050610c7d60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682611818565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b8152600401610cda93929190611dc9565b6020604051808303816000875af1158015610cf9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d1d9190611e38565b503373ffffffffffffffffffffffffffffffffffffffff166108fc849081150290604051600060405180830381858888f19350505050158015610d64573d6000803e3d6000fd5b50610e08477f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610dc29190611d34565b602060405180830381865afa158015610ddf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e039190612034565b61188b565b5050919050565b60046020528060005260406000206000915090505481565b600080610e7383600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461189d565b91509150915091565b6000813414610ec0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eb79061214d565b60405180910390fd5b60006103e86103e584610ed39190611e94565b610edd9190611f82565b905080600154610eed91906120cd565b81600254610efb9190611e94565b610f059190611f82565b915060006107d0600154610f199190611e94565b600354600386610f299190611e94565b610f339190611e94565b610f3d9190611f82565b9050610f6960008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682611818565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b8152600401610fc4929190612279565b6020604051808303816000875af1158015610fe3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110079190611e38565b506110ab477f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016110659190611d34565b602060405180830381865afa158015611082573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110a69190612034565b61188b565b5050919050565b600080600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054831115611137576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161112e906122ee565b60405180910390fd5b611141338461189d565b91509150915091565b600080600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548311156111cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111c6906122ee565b60405180910390fd5b6111d9848461189d565b915091509250929050565b6000806001541180156111f957506000600254115b611238576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161122f9061235a565b60405180910390fd5b600154670de0b6b3a76400006002546112519190611e94565b61125b9190611f82565b905090565b600081565b6000806103e86103e5866112799190611e94565b6112839190611f82565b90508060025461129391906120cd565b816001546112a19190611e94565b6112ab9190611f82565b9150600082116112f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112e7906121b9565b60405180910390fd5b6103e8836103e861130191906121d9565b8561130c9190611e94565b6113169190611f82565b821015611358576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161134f90612259565b60405180910390fd5b60006107d060025461136a9190611e94565b60035460038861137a9190611e94565b6113849190611e94565b61138e9190611f82565b90506113ba60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682611818565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330896040518463ffffffff1660e01b815260040161141793929190611dc9565b6020604051808303816000875af1158015611436573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061145a9190611e38565b503373ffffffffffffffffffffffffffffffffffffffff166108fc849081150290604051600060405180830381858888f193505050501580156114a1573d6000803e3d6000fd5b50611545477f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016114ff9190611d34565b602060405180830381865afa15801561151c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115409190612034565b61188b565b50509392505050565b60008060015411801561156357506000600254115b801561156f5750600082115b6115ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115a59061235a565b60405180910390fd5b60006103e86103e5846115c19190611e94565b6115cb9190611f82565b9050806002546115db91906120cd565b816001546115e99190611e94565b6115f39190611f82565b915050919050565b60025481565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008060015411801561168357506000600254115b6116c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116b9906120ad565b60405180910390fd5b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561172f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061175391906123b3565b60ff16905060025481600a6117689190612513565b6001546117759190611e94565b61177f9190611f82565b91505090565b600060038211156117ec57819050600060016002846117a49190611f82565b6117ae91906120cd565b90505b818110156117e65780915060028182856117cb9190611f82565b6117d591906120cd565b6117df9190611f82565b90506117b1565b506117fa565b600082146117f957600190505b5b919050565b600081831061180e5781611810565b825b905092915050565b80600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461186791906120cd565b92505081905550806003600082825461188091906120cd565b925050819055505050565b81600181905550806002819055505050565b600080600354600154846118b19190611e94565b6118bb9190611f82565b9150600354600254846118ce9190611e94565b6118d89190611f82565b90506000821180156118ea5750600081115b611929576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611920906125aa565b60405180910390fd5b6119338484611ad9565b6119ec824761194291906121d9565b827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161199c9190611d34565b602060405180830381865afa1580156119b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119dd9190612034565b6119e791906121d9565b61188b565b8373ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015611a32573d6000803e3d6000fd5b507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85836040518363ffffffff1660e01b8152600401611a8e929190612279565b6020604051808303816000875af1158015611aad573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ad19190611e38565b509250929050565b80600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611b2891906121d9565b925050819055508060036000828254611b4191906121d9565b925050819055505050565b6000819050919050565b611b5f81611b4c565b82525050565b6000602082019050611b7a6000830184611b56565b92915050565b600080fd5b611b8e81611b4c565b8114611b9957600080fd5b50565b600081359050611bab81611b85565b92915050565b600060208284031215611bc757611bc6611b80565b5b6000611bd584828501611b9c565b91505092915050565b600080600060608486031215611bf757611bf6611b80565b5b6000611c0586828701611b9c565b9350506020611c1686828701611b9c565b9250506040611c2786828701611b9c565b9150509250925092565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611c5c82611c31565b9050919050565b611c6c81611c51565b8114611c7757600080fd5b50565b600081359050611c8981611c63565b92915050565b600060208284031215611ca557611ca4611b80565b5b6000611cb384828501611c7a565b91505092915050565b6000604082019050611cd16000830185611b56565b611cde6020830184611b56565b9392505050565b60008060408385031215611cfc57611cfb611b80565b5b6000611d0a85828601611c7a565b9250506020611d1b85828601611b9c565b9150509250929050565b611d2e81611c51565b82525050565b6000602082019050611d496000830184611d25565b92915050565b6000819050919050565b6000611d74611d6f611d6a84611c31565b611d4f565b611c31565b9050919050565b6000611d8682611d59565b9050919050565b6000611d9882611d7b565b9050919050565b611da881611d8d565b82525050565b6000602082019050611dc36000830184611d9f565b92915050565b6000606082019050611dde6000830186611d25565b611deb6020830185611d25565b611df86040830184611b56565b949350505050565b60008115159050919050565b611e1581611e00565b8114611e2057600080fd5b50565b600081519050611e3281611e0c565b92915050565b600060208284031215611e4e57611e4d611b80565b5b6000611e5c84828501611e23565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611e9f82611b4c565b9150611eaa83611b4c565b9250828202611eb881611b4c565b91508282048414831517611ecf57611ece611e65565b5b5092915050565b600082825260208201905092915050565b7f78202f207920213d206478202f20647900000000000000000000000000000000600082015250565b6000611f1d601083611ed6565b9150611f2882611ee7565b602082019050919050565b60006020820190508181036000830152611f4c81611f10565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611f8d82611b4c565b9150611f9883611b4c565b925082611fa857611fa7611f53565b5b828204905092915050565b7f736861726573203d203000000000000000000000000000000000000000000000600082015250565b6000611fe9600a83611ed6565b9150611ff482611fb3565b602082019050919050565b6000602082019050818103600083015261201881611fdc565b9050919050565b60008151905061202e81611b85565b92915050565b60006020828403121561204a57612049611b80565b5b60006120588482850161201f565b91505092915050565b7f496e76616c696420455243323020726573657276657300000000000000000000600082015250565b6000612097601683611ed6565b91506120a282612061565b602082019050919050565b600060208201905081810360008301526120c68161208a565b9050919050565b60006120d882611b4c565b91506120e383611b4c565b92508282019050808211156120fb576120fa611e65565b5b92915050565b7f45544820616d6f756e74206d69736d6174636800000000000000000000000000600082015250565b6000612137601383611ed6565b915061214282612101565b602082019050919050565b600060208201905081810360008301526121668161212a565b9050919050565b7f496e73756666696369656e74206f757470757420616d6f756e74000000000000600082015250565b60006121a3601a83611ed6565b91506121ae8261216d565b602082019050919050565b600060208201905081810360008301526121d281612196565b9050919050565b60006121e482611b4c565b91506121ef83611b4c565b925082820390508181111561220757612206611e65565b5b92915050565b7f536c69704c6f636b000000000000000000000000000000000000000000000000600082015250565b6000612243600883611ed6565b915061224e8261220d565b602082019050919050565b6000602082019050818103600083015261227281612236565b9050919050565b600060408201905061228e6000830185611d25565b61229b6020830184611b56565b9392505050565b7f496e73756666696369656e742062616c616e6365000000000000000000000000600082015250565b60006122d8601483611ed6565b91506122e3826122a2565b602082019050919050565b60006020820190508181036000830152612307816122cb565b9050919050565b7f496e76616c696420455448207265736572766573000000000000000000000000600082015250565b6000612344601483611ed6565b915061234f8261230e565b602082019050919050565b6000602082019050818103600083015261237381612337565b9050919050565b600060ff82169050919050565b6123908161237a565b811461239b57600080fd5b50565b6000815190506123ad81612387565b92915050565b6000602082840312156123c9576123c8611b80565b5b60006123d78482850161239e565b91505092915050565b60008160011c9050919050565b6000808291508390505b60018511156124375780860481111561241357612412611e65565b5b60018516156124225780820291505b8081029050612430856123e0565b94506123f7565b94509492505050565b600082612450576001905061250c565b8161245e576000905061250c565b8160018114612474576002811461247e576124ad565b600191505061250c565b60ff8411156124905761248f611e65565b5b8360020a9150848211156124a7576124a6611e65565b5b5061250c565b5060208310610133831016604e8410600b84101617156124e25782820a9050838111156124dd576124dc611e65565b5b61250c565b6124ef84848460016123ed565b9250905081840481111561250657612505611e65565b5b81810290505b9392505050565b600061251e82611b4c565b915061252983611b4c565b92506125567fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484612440565b905092915050565b7f616d6f756e74455448206f7220616d6f756e74455243203d2030000000000000600082015250565b6000612594601a83611ed6565b915061259f8261255e565b602082019050919050565b600060208201905081810360008301526125c381612587565b905091905056fea2646970667358221220cc4aba3704f8080799e44995698b45df3320985c83a1f9e00d654d788da93a9a64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9C8F9F23 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xDCCC5FEA GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xDCCC5FEA EQ PUSH2 0x439 JUMPI DUP1 PUSH4 0xE764E67C EQ PUSH2 0x476 JUMPI DUP1 PUSH4 0xF5EB42DC EQ PUSH2 0x4A1 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x4DE JUMPI DUP1 PUSH4 0xFCC2BA08 EQ PUSH2 0x509 JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x9C8F9F23 EQ PUSH2 0x32A JUMPI DUP1 PUSH4 0xA201CCF6 EQ PUSH2 0x368 JUMPI DUP1 PUSH4 0xA607A8D9 EQ PUSH2 0x3A6 JUMPI DUP1 PUSH4 0xA734F06E EQ PUSH2 0x3D1 JUMPI DUP1 PUSH4 0xDC2D845B EQ PUSH2 0x3FC JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x6CAE4F84 GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x6CAE4F84 EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0x6FB84B74 EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0x7A6A5E1B EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0x94B918DE EQ PUSH2 0x2FA JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x100AF203 EQ PUSH2 0x124 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x51C6590A EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0x56C1D7EB EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x62279B65 EQ PUSH2 0x1E7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x130 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x139 PUSH2 0x534 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x1B65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x164 PUSH2 0x53A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x171 SWAP2 SWAP1 PUSH2 0x1B65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x194 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18F SWAP2 SWAP1 PUSH2 0x1BB1 JUMP JUMPDEST PUSH2 0x540 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A1 SWAP2 SWAP1 PUSH2 0x1B65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CC SWAP2 SWAP1 PUSH2 0x1BB1 JUMP JUMPDEST PUSH2 0x7B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DE SWAP2 SWAP1 PUSH2 0x1B65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x201 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0x1BDE JUMP JUMPDEST PUSH2 0x866 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20E SWAP2 SWAP1 PUSH2 0x1B65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x223 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22C PUSH2 0xB49 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x1B65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x269 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x264 SWAP2 SWAP1 PUSH2 0x1BB1 JUMP JUMPDEST PUSH2 0xB90 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x276 SWAP2 SWAP1 PUSH2 0x1B65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x1C8F JUMP JUMPDEST PUSH2 0xE0F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x1B65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DE SWAP2 SWAP1 PUSH2 0x1C8F JUMP JUMPDEST PUSH2 0xE27 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F1 SWAP3 SWAP2 SWAP1 PUSH2 0x1CBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x314 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30F SWAP2 SWAP1 PUSH2 0x1BB1 JUMP JUMPDEST PUSH2 0xE7C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x321 SWAP2 SWAP1 PUSH2 0x1B65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x336 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x351 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34C SWAP2 SWAP1 PUSH2 0x1BB1 JUMP JUMPDEST PUSH2 0x10B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35F SWAP3 SWAP2 SWAP1 PUSH2 0x1CBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x374 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x38F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38A SWAP2 SWAP1 PUSH2 0x1CE5 JUMP JUMPDEST PUSH2 0x114A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39D SWAP3 SWAP2 SWAP1 PUSH2 0x1CBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3BB PUSH2 0x11E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C8 SWAP2 SWAP1 PUSH2 0x1B65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E6 PUSH2 0x1260 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F3 SWAP2 SWAP1 PUSH2 0x1D34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x408 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x423 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x41E SWAP2 SWAP1 PUSH2 0x1BDE JUMP JUMPDEST PUSH2 0x1265 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x430 SWAP2 SWAP1 PUSH2 0x1B65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x445 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x460 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45B SWAP2 SWAP1 PUSH2 0x1BB1 JUMP JUMPDEST PUSH2 0x154E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x46D SWAP2 SWAP1 PUSH2 0x1B65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x482 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x48B PUSH2 0x15FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x498 SWAP2 SWAP1 PUSH2 0x1B65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C3 SWAP2 SWAP1 PUSH2 0x1C8F JUMP JUMPDEST PUSH2 0x1601 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D5 SWAP2 SWAP1 PUSH2 0x1B65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4F3 PUSH2 0x164A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x500 SWAP2 SWAP1 PUSH2 0x1DAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x515 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x51E PUSH2 0x166E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x52B SWAP2 SWAP1 PUSH2 0x1B65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DC9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5BE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5E2 SWAP2 SWAP1 PUSH2 0x1E38 JUMP JUMPDEST POP PUSH1 0x0 CALLVALUE SWAP1 POP PUSH1 0x0 PUSH1 0x1 SLOAD GT DUP1 PUSH2 0x5FB JUMPI POP PUSH1 0x0 PUSH1 0x2 SLOAD GT JUMPDEST ISZERO PUSH2 0x65D JUMPI DUP1 PUSH1 0x2 SLOAD PUSH2 0x60E SWAP2 SWAP1 PUSH2 0x1E94 JUMP JUMPDEST DUP4 PUSH1 0x1 SLOAD PUSH2 0x61C SWAP2 SWAP1 PUSH2 0x1E94 JUMP JUMPDEST EQ PUSH2 0x65C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x653 SWAP1 PUSH2 0x1F33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SUB PUSH2 0x682 JUMPI PUSH2 0x67B DUP4 DUP3 PUSH2 0x676 SWAP2 SWAP1 PUSH2 0x1E94 JUMP JUMPDEST PUSH2 0x1785 JUMP JUMPDEST SWAP2 POP PUSH2 0x6C3 JUMP JUMPDEST PUSH2 0x6C0 PUSH1 0x1 SLOAD PUSH1 0x3 SLOAD DUP4 PUSH2 0x696 SWAP2 SWAP1 PUSH2 0x1E94 JUMP JUMPDEST PUSH2 0x6A0 SWAP2 SWAP1 PUSH2 0x1F82 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD DUP7 PUSH2 0x6B1 SWAP2 SWAP1 PUSH2 0x1E94 JUMP JUMPDEST PUSH2 0x6BB SWAP2 SWAP1 PUSH2 0x1F82 JUMP JUMPDEST PUSH2 0x17FF JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x706 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FD SWAP1 PUSH2 0x1FFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x710 CALLER DUP4 PUSH2 0x1818 JUMP JUMPDEST PUSH2 0x7B3 SELFBALANCE PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x76D SWAP2 SWAP1 PUSH2 0x1D34 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x78A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7AE SWAP2 SWAP1 PUSH2 0x2034 JUMP JUMPDEST PUSH2 0x188B JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SLOAD GT DUP1 ISZERO PUSH2 0x7CE JUMPI POP PUSH1 0x0 PUSH1 0x2 SLOAD GT JUMPDEST DUP1 ISZERO PUSH2 0x7DA JUMPI POP PUSH1 0x0 DUP3 GT JUMPDEST PUSH2 0x819 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x810 SWAP1 PUSH2 0x20AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3E8 PUSH2 0x3E5 DUP5 PUSH2 0x82C SWAP2 SWAP1 PUSH2 0x1E94 JUMP JUMPDEST PUSH2 0x836 SWAP2 SWAP1 PUSH2 0x1F82 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 SLOAD PUSH2 0x846 SWAP2 SWAP1 PUSH2 0x20CD JUMP JUMPDEST DUP2 PUSH1 0x2 SLOAD PUSH2 0x854 SWAP2 SWAP1 PUSH2 0x1E94 JUMP JUMPDEST PUSH2 0x85E SWAP2 SWAP1 PUSH2 0x1F82 JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP4 CALLVALUE EQ PUSH2 0x8AA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A1 SWAP1 PUSH2 0x214D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3E8 PUSH2 0x3E5 DUP7 PUSH2 0x8BD SWAP2 SWAP1 PUSH2 0x1E94 JUMP JUMPDEST PUSH2 0x8C7 SWAP2 SWAP1 PUSH2 0x1F82 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 SLOAD PUSH2 0x8D7 SWAP2 SWAP1 PUSH2 0x20CD JUMP JUMPDEST DUP2 PUSH1 0x2 SLOAD PUSH2 0x8E5 SWAP2 SWAP1 PUSH2 0x1E94 JUMP JUMPDEST PUSH2 0x8EF SWAP2 SWAP1 PUSH2 0x1F82 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 GT PUSH2 0x934 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x92B SWAP1 PUSH2 0x21B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3E8 DUP4 PUSH2 0x3E8 PUSH2 0x945 SWAP2 SWAP1 PUSH2 0x21D9 JUMP JUMPDEST DUP6 PUSH2 0x950 SWAP2 SWAP1 PUSH2 0x1E94 JUMP JUMPDEST PUSH2 0x95A SWAP2 SWAP1 PUSH2 0x1F82 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x99C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x993 SWAP1 PUSH2 0x2259 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x7D0 PUSH1 0x1 SLOAD PUSH2 0x9AE SWAP2 SWAP1 PUSH2 0x1E94 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x3 DUP9 PUSH2 0x9BE SWAP2 SWAP1 PUSH2 0x1E94 JUMP JUMPDEST PUSH2 0x9C8 SWAP2 SWAP1 PUSH2 0x1E94 JUMP JUMPDEST PUSH2 0x9D2 SWAP2 SWAP1 PUSH2 0x1F82 JUMP JUMPDEST SWAP1 POP PUSH2 0x9FE PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH2 0x1818 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA59 SWAP3 SWAP2 SWAP1 PUSH2 0x2279 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA78 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA9C SWAP2 SWAP1 PUSH2 0x1E38 JUMP JUMPDEST POP PUSH2 0xB40 SELFBALANCE PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAFA SWAP2 SWAP1 PUSH2 0x1D34 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB17 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB3B SWAP2 SWAP1 PUSH2 0x2034 JUMP JUMPDEST PUSH2 0x188B JUMP JUMPDEST POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3E8 PUSH2 0x3E5 DUP5 PUSH2 0xBA4 SWAP2 SWAP1 PUSH2 0x1E94 JUMP JUMPDEST PUSH2 0xBAE SWAP2 SWAP1 PUSH2 0x1F82 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 SLOAD PUSH2 0xBBE SWAP2 SWAP1 PUSH2 0x20CD JUMP JUMPDEST DUP2 PUSH1 0x1 SLOAD PUSH2 0xBCC SWAP2 SWAP1 PUSH2 0x1E94 JUMP JUMPDEST PUSH2 0xBD6 SWAP2 SWAP1 PUSH2 0x1F82 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 GT PUSH2 0xC1B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC12 SWAP1 PUSH2 0x21B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x7D0 PUSH1 0x2 SLOAD PUSH2 0xC2D SWAP2 SWAP1 PUSH2 0x1E94 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x3 DUP7 PUSH2 0xC3D SWAP2 SWAP1 PUSH2 0x1E94 JUMP JUMPDEST PUSH2 0xC47 SWAP2 SWAP1 PUSH2 0x1E94 JUMP JUMPDEST PUSH2 0xC51 SWAP2 SWAP1 PUSH2 0x1F82 JUMP JUMPDEST SWAP1 POP PUSH2 0xC7D PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH2 0x1818 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCDA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DC9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCF9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD1D SWAP2 SWAP1 PUSH2 0x1E38 JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP5 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xD64 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0xE08 SELFBALANCE PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDC2 SWAP2 SWAP1 PUSH2 0x1D34 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDDF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE03 SWAP2 SWAP1 PUSH2 0x2034 JUMP JUMPDEST PUSH2 0x188B JUMP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xE73 DUP4 PUSH1 0x4 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x189D JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLVALUE EQ PUSH2 0xEC0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEB7 SWAP1 PUSH2 0x214D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3E8 PUSH2 0x3E5 DUP5 PUSH2 0xED3 SWAP2 SWAP1 PUSH2 0x1E94 JUMP JUMPDEST PUSH2 0xEDD SWAP2 SWAP1 PUSH2 0x1F82 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 SLOAD PUSH2 0xEED SWAP2 SWAP1 PUSH2 0x20CD JUMP JUMPDEST DUP2 PUSH1 0x2 SLOAD PUSH2 0xEFB SWAP2 SWAP1 PUSH2 0x1E94 JUMP JUMPDEST PUSH2 0xF05 SWAP2 SWAP1 PUSH2 0x1F82 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 PUSH2 0x7D0 PUSH1 0x1 SLOAD PUSH2 0xF19 SWAP2 SWAP1 PUSH2 0x1E94 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x3 DUP7 PUSH2 0xF29 SWAP2 SWAP1 PUSH2 0x1E94 JUMP JUMPDEST PUSH2 0xF33 SWAP2 SWAP1 PUSH2 0x1E94 JUMP JUMPDEST PUSH2 0xF3D SWAP2 SWAP1 PUSH2 0x1F82 JUMP JUMPDEST SWAP1 POP PUSH2 0xF69 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH2 0x1818 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFC4 SWAP3 SWAP2 SWAP1 PUSH2 0x2279 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFE3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1007 SWAP2 SWAP1 PUSH2 0x1E38 JUMP JUMPDEST POP PUSH2 0x10AB SELFBALANCE PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1065 SWAP2 SWAP1 PUSH2 0x1D34 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1082 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10A6 SWAP2 SWAP1 PUSH2 0x2034 JUMP JUMPDEST PUSH2 0x188B JUMP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP4 GT ISZERO PUSH2 0x1137 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x112E SWAP1 PUSH2 0x22EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1141 CALLER DUP5 PUSH2 0x189D JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP4 GT ISZERO PUSH2 0x11CF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11C6 SWAP1 PUSH2 0x22EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11D9 DUP5 DUP5 PUSH2 0x189D JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SLOAD GT DUP1 ISZERO PUSH2 0x11F9 JUMPI POP PUSH1 0x0 PUSH1 0x2 SLOAD GT JUMPDEST PUSH2 0x1238 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x122F SWAP1 PUSH2 0x235A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH8 0xDE0B6B3A7640000 PUSH1 0x2 SLOAD PUSH2 0x1251 SWAP2 SWAP1 PUSH2 0x1E94 JUMP JUMPDEST PUSH2 0x125B SWAP2 SWAP1 PUSH2 0x1F82 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3E8 PUSH2 0x3E5 DUP7 PUSH2 0x1279 SWAP2 SWAP1 PUSH2 0x1E94 JUMP JUMPDEST PUSH2 0x1283 SWAP2 SWAP1 PUSH2 0x1F82 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 SLOAD PUSH2 0x1293 SWAP2 SWAP1 PUSH2 0x20CD JUMP JUMPDEST DUP2 PUSH1 0x1 SLOAD PUSH2 0x12A1 SWAP2 SWAP1 PUSH2 0x1E94 JUMP JUMPDEST PUSH2 0x12AB SWAP2 SWAP1 PUSH2 0x1F82 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 GT PUSH2 0x12F0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12E7 SWAP1 PUSH2 0x21B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3E8 DUP4 PUSH2 0x3E8 PUSH2 0x1301 SWAP2 SWAP1 PUSH2 0x21D9 JUMP JUMPDEST DUP6 PUSH2 0x130C SWAP2 SWAP1 PUSH2 0x1E94 JUMP JUMPDEST PUSH2 0x1316 SWAP2 SWAP1 PUSH2 0x1F82 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x1358 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x134F SWAP1 PUSH2 0x2259 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x7D0 PUSH1 0x2 SLOAD PUSH2 0x136A SWAP2 SWAP1 PUSH2 0x1E94 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x3 DUP9 PUSH2 0x137A SWAP2 SWAP1 PUSH2 0x1E94 JUMP JUMPDEST PUSH2 0x1384 SWAP2 SWAP1 PUSH2 0x1E94 JUMP JUMPDEST PUSH2 0x138E SWAP2 SWAP1 PUSH2 0x1F82 JUMP JUMPDEST SWAP1 POP PUSH2 0x13BA PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH2 0x1818 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP10 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1417 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DC9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1436 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x145A SWAP2 SWAP1 PUSH2 0x1E38 JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP5 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x14A1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x1545 SELFBALANCE PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14FF SWAP2 SWAP1 PUSH2 0x1D34 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x151C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1540 SWAP2 SWAP1 PUSH2 0x2034 JUMP JUMPDEST PUSH2 0x188B JUMP JUMPDEST POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SLOAD GT DUP1 ISZERO PUSH2 0x1563 JUMPI POP PUSH1 0x0 PUSH1 0x2 SLOAD GT JUMPDEST DUP1 ISZERO PUSH2 0x156F JUMPI POP PUSH1 0x0 DUP3 GT JUMPDEST PUSH2 0x15AE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15A5 SWAP1 PUSH2 0x235A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3E8 PUSH2 0x3E5 DUP5 PUSH2 0x15C1 SWAP2 SWAP1 PUSH2 0x1E94 JUMP JUMPDEST PUSH2 0x15CB SWAP2 SWAP1 PUSH2 0x1F82 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 SLOAD PUSH2 0x15DB SWAP2 SWAP1 PUSH2 0x20CD JUMP JUMPDEST DUP2 PUSH1 0x1 SLOAD PUSH2 0x15E9 SWAP2 SWAP1 PUSH2 0x1E94 JUMP JUMPDEST PUSH2 0x15F3 SWAP2 SWAP1 PUSH2 0x1F82 JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SLOAD GT DUP1 ISZERO PUSH2 0x1683 JUMPI POP PUSH1 0x0 PUSH1 0x2 SLOAD GT JUMPDEST PUSH2 0x16C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16B9 SWAP1 PUSH2 0x20AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x172F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1753 SWAP2 SWAP1 PUSH2 0x23B3 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH1 0x2 SLOAD DUP2 PUSH1 0xA PUSH2 0x1768 SWAP2 SWAP1 PUSH2 0x2513 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x1775 SWAP2 SWAP1 PUSH2 0x1E94 JUMP JUMPDEST PUSH2 0x177F SWAP2 SWAP1 PUSH2 0x1F82 JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP3 GT ISZERO PUSH2 0x17EC JUMPI DUP2 SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 DUP5 PUSH2 0x17A4 SWAP2 SWAP1 PUSH2 0x1F82 JUMP JUMPDEST PUSH2 0x17AE SWAP2 SWAP1 PUSH2 0x20CD JUMP JUMPDEST SWAP1 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x17E6 JUMPI DUP1 SWAP2 POP PUSH1 0x2 DUP2 DUP3 DUP6 PUSH2 0x17CB SWAP2 SWAP1 PUSH2 0x1F82 JUMP JUMPDEST PUSH2 0x17D5 SWAP2 SWAP1 PUSH2 0x20CD JUMP JUMPDEST PUSH2 0x17DF SWAP2 SWAP1 PUSH2 0x1F82 JUMP JUMPDEST SWAP1 POP PUSH2 0x17B1 JUMP JUMPDEST POP PUSH2 0x17FA JUMP JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x17F9 JUMPI PUSH1 0x1 SWAP1 POP JUMPDEST JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x180E JUMPI DUP2 PUSH2 0x1810 JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1867 SWAP2 SWAP1 PUSH2 0x20CD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1880 SWAP2 SWAP1 PUSH2 0x20CD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 SLOAD PUSH1 0x1 SLOAD DUP5 PUSH2 0x18B1 SWAP2 SWAP1 PUSH2 0x1E94 JUMP JUMPDEST PUSH2 0x18BB SWAP2 SWAP1 PUSH2 0x1F82 JUMP JUMPDEST SWAP2 POP PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD DUP5 PUSH2 0x18CE SWAP2 SWAP1 PUSH2 0x1E94 JUMP JUMPDEST PUSH2 0x18D8 SWAP2 SWAP1 PUSH2 0x1F82 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0x18EA JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST PUSH2 0x1929 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1920 SWAP1 PUSH2 0x25AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1933 DUP5 DUP5 PUSH2 0x1AD9 JUMP JUMPDEST PUSH2 0x19EC DUP3 SELFBALANCE PUSH2 0x1942 SWAP2 SWAP1 PUSH2 0x21D9 JUMP JUMPDEST DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x199C SWAP2 SWAP1 PUSH2 0x1D34 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x19B9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x19DD SWAP2 SWAP1 PUSH2 0x2034 JUMP JUMPDEST PUSH2 0x19E7 SWAP2 SWAP1 PUSH2 0x21D9 JUMP JUMPDEST PUSH2 0x188B JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1A32 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A8E SWAP3 SWAP2 SWAP1 PUSH2 0x2279 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1AAD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1AD1 SWAP2 SWAP1 PUSH2 0x1E38 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1B28 SWAP2 SWAP1 PUSH2 0x21D9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1B41 SWAP2 SWAP1 PUSH2 0x21D9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B5F DUP2 PUSH2 0x1B4C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B7A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B56 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B8E DUP2 PUSH2 0x1B4C JUMP JUMPDEST DUP2 EQ PUSH2 0x1B99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BAB DUP2 PUSH2 0x1B85 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BC7 JUMPI PUSH2 0x1BC6 PUSH2 0x1B80 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1BD5 DUP5 DUP3 DUP6 ADD PUSH2 0x1B9C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1BF7 JUMPI PUSH2 0x1BF6 PUSH2 0x1B80 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C05 DUP7 DUP3 DUP8 ADD PUSH2 0x1B9C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1C16 DUP7 DUP3 DUP8 ADD PUSH2 0x1B9C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1C27 DUP7 DUP3 DUP8 ADD PUSH2 0x1B9C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C5C DUP3 PUSH2 0x1C31 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C6C DUP2 PUSH2 0x1C51 JUMP JUMPDEST DUP2 EQ PUSH2 0x1C77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C89 DUP2 PUSH2 0x1C63 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CA5 JUMPI PUSH2 0x1CA4 PUSH2 0x1B80 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CB3 DUP5 DUP3 DUP6 ADD PUSH2 0x1C7A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1CD1 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1B56 JUMP JUMPDEST PUSH2 0x1CDE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B56 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CFC JUMPI PUSH2 0x1CFB PUSH2 0x1B80 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D0A DUP6 DUP3 DUP7 ADD PUSH2 0x1C7A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1D1B DUP6 DUP3 DUP7 ADD PUSH2 0x1B9C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D2E DUP2 PUSH2 0x1C51 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D49 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D25 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D74 PUSH2 0x1D6F PUSH2 0x1D6A DUP5 PUSH2 0x1C31 JUMP JUMPDEST PUSH2 0x1D4F JUMP JUMPDEST PUSH2 0x1C31 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D86 DUP3 PUSH2 0x1D59 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D98 DUP3 PUSH2 0x1D7B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DA8 DUP2 PUSH2 0x1D8D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DC3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D9F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1DDE PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1D25 JUMP JUMPDEST PUSH2 0x1DEB PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1D25 JUMP JUMPDEST PUSH2 0x1DF8 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1B56 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E15 DUP2 PUSH2 0x1E00 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1E32 DUP2 PUSH2 0x1E0C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E4E JUMPI PUSH2 0x1E4D PUSH2 0x1B80 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E5C DUP5 DUP3 DUP6 ADD PUSH2 0x1E23 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1E9F DUP3 PUSH2 0x1B4C JUMP JUMPDEST SWAP2 POP PUSH2 0x1EAA DUP4 PUSH2 0x1B4C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1EB8 DUP2 PUSH2 0x1B4C JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1ECF JUMPI PUSH2 0x1ECE PUSH2 0x1E65 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x78202F207920213D206478202F20647900000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F1D PUSH1 0x10 DUP4 PUSH2 0x1ED6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F28 DUP3 PUSH2 0x1EE7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F4C DUP2 PUSH2 0x1F10 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1F8D DUP3 PUSH2 0x1B4C JUMP JUMPDEST SWAP2 POP PUSH2 0x1F98 DUP4 PUSH2 0x1B4C JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1FA8 JUMPI PUSH2 0x1FA7 PUSH2 0x1F53 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x736861726573203D203000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FE9 PUSH1 0xA DUP4 PUSH2 0x1ED6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FF4 DUP3 PUSH2 0x1FB3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2018 DUP2 PUSH2 0x1FDC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x202E DUP2 PUSH2 0x1B85 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x204A JUMPI PUSH2 0x2049 PUSH2 0x1B80 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2058 DUP5 DUP3 DUP6 ADD PUSH2 0x201F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420455243323020726573657276657300000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2097 PUSH1 0x16 DUP4 PUSH2 0x1ED6 JUMP JUMPDEST SWAP2 POP PUSH2 0x20A2 DUP3 PUSH2 0x2061 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20C6 DUP2 PUSH2 0x208A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20D8 DUP3 PUSH2 0x1B4C JUMP JUMPDEST SWAP2 POP PUSH2 0x20E3 DUP4 PUSH2 0x1B4C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x20FB JUMPI PUSH2 0x20FA PUSH2 0x1E65 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45544820616D6F756E74206D69736D6174636800000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2137 PUSH1 0x13 DUP4 PUSH2 0x1ED6 JUMP JUMPDEST SWAP2 POP PUSH2 0x2142 DUP3 PUSH2 0x2101 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2166 DUP2 PUSH2 0x212A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74206F757470757420616D6F756E74000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21A3 PUSH1 0x1A DUP4 PUSH2 0x1ED6 JUMP JUMPDEST SWAP2 POP PUSH2 0x21AE DUP3 PUSH2 0x216D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21D2 DUP2 PUSH2 0x2196 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21E4 DUP3 PUSH2 0x1B4C JUMP JUMPDEST SWAP2 POP PUSH2 0x21EF DUP4 PUSH2 0x1B4C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2207 JUMPI PUSH2 0x2206 PUSH2 0x1E65 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x536C69704C6F636B000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2243 PUSH1 0x8 DUP4 PUSH2 0x1ED6 JUMP JUMPDEST SWAP2 POP PUSH2 0x224E DUP3 PUSH2 0x220D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2272 DUP2 PUSH2 0x2236 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x228E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1D25 JUMP JUMPDEST PUSH2 0x229B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B56 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22D8 PUSH1 0x14 DUP4 PUSH2 0x1ED6 JUMP JUMPDEST SWAP2 POP PUSH2 0x22E3 DUP3 PUSH2 0x22A2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2307 DUP2 PUSH2 0x22CB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420455448207265736572766573000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2344 PUSH1 0x14 DUP4 PUSH2 0x1ED6 JUMP JUMPDEST SWAP2 POP PUSH2 0x234F DUP3 PUSH2 0x230E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2373 DUP2 PUSH2 0x2337 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2390 DUP2 PUSH2 0x237A JUMP JUMPDEST DUP2 EQ PUSH2 0x239B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x23AD DUP2 PUSH2 0x2387 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23C9 JUMPI PUSH2 0x23C8 PUSH2 0x1B80 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x23D7 DUP5 DUP3 DUP6 ADD PUSH2 0x239E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x2437 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x2413 JUMPI PUSH2 0x2412 PUSH2 0x1E65 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x2422 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x2430 DUP6 PUSH2 0x23E0 JUMP JUMPDEST SWAP5 POP PUSH2 0x23F7 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2450 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x250C JUMP JUMPDEST DUP2 PUSH2 0x245E JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x250C JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x2474 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x247E JUMPI PUSH2 0x24AD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x250C JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x2490 JUMPI PUSH2 0x248F PUSH2 0x1E65 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x24A7 JUMPI PUSH2 0x24A6 PUSH2 0x1E65 JUMP JUMPDEST JUMPDEST POP PUSH2 0x250C JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x24E2 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x24DD JUMPI PUSH2 0x24DC PUSH2 0x1E65 JUMP JUMPDEST JUMPDEST PUSH2 0x250C JUMP JUMPDEST PUSH2 0x24EF DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x23ED JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x2506 JUMPI PUSH2 0x2505 PUSH2 0x1E65 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x251E DUP3 PUSH2 0x1B4C JUMP JUMPDEST SWAP2 POP PUSH2 0x2529 DUP4 PUSH2 0x1B4C JUMP JUMPDEST SWAP3 POP PUSH2 0x2556 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x2440 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x616D6F756E74455448206F7220616D6F756E74455243203D2030000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2594 PUSH1 0x1A DUP4 PUSH2 0x1ED6 JUMP JUMPDEST SWAP2 POP PUSH2 0x259F DUP3 PUSH2 0x255E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x25C3 DUP2 PUSH2 0x2587 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCC 0x4A 0xBA CALLDATACOPY DIV 0xF8 ADDMOD SMOD SWAP10 0xE4 0x49 SWAP6 PUSH10 0x8B45DF3320985C83A1F9 0xE0 0xD PUSH6 0x4D788DA93A9A PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "639:7398:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;778:25;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;860:26;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4299:777;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7392:318;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2719:783;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6295:95;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2065:648;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;893:44;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5084:165;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1481:578;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5255:237;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;5500:242;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;6930:189;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;721:48;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3508:785;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7716:316;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;817:25;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6396:103;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;685:29;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7125:259;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;778:25;;;;:::o;860:26::-;;;;:::o;4299:777::-;4365:14;4392:5;:18;;;4411:10;4431:4;4438:8;4392:55;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4460:16;4479:9;4460:28;;4518:1;4505:10;;:14;:32;;;;4536:1;4523:10;;:14;4505:32;4501:140;;;4600:8;4587:10;;:21;;;;:::i;:::-;4575:8;4562:10;;:21;;;;:::i;:::-;:46;4554:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;4501:140;4672:1;4657:11;;:16;4653:261;;4699:26;4716:8;4705;:19;;;;:::i;:::-;4699:5;:26::i;:::-;4690:35;;4653:261;;;4767:135;4821:10;;4806:11;;4795:8;:22;;;;:::i;:::-;4794:37;;;;:::i;:::-;4877:10;;4862:11;;4851:8;:22;;;;:::i;:::-;4850:37;;;;:::i;:::-;4767:8;:135::i;:::-;4758:144;;4653:261;4941:1;4932:6;:10;4924:33;;;;;;;;;;;;:::i;:::-;;;;;;;;;4968:25;4974:10;4986:6;4968:5;:25::i;:::-;5006:62;5014:21;5037:5;:15;;;5061:4;5037:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5006:7;:62::i;:::-;4381:695;4299:777;;;:::o;7392:318::-;7464:7;7505:1;7492:10;;:14;:32;;;;;7523:1;7510:10;;:14;7492:32;:45;;;;;7536:1;7528:7;:9;7492:45;7484:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;7575:23;7617:4;7610:3;7600:7;:13;;;;:::i;:::-;7599:22;;;;:::i;:::-;7575:46;;7686:15;7673:10;;:28;;;;:::i;:::-;7653:15;7640:10;;:28;;;;:::i;:::-;7639:63;;;;:::i;:::-;7632:70;;;7392:318;;;:::o;2719:783::-;2830:17;2886:9;2873;:22;2865:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;2932:23;2978:4;2971:3;2959:9;:15;;;;:::i;:::-;2958:24;;;;:::i;:::-;2932:50;;3052:15;3039:10;;:28;;;;:::i;:::-;3019:15;3006:10;;:28;;;;:::i;:::-;3005:63;;;;:::i;:::-;2993:75;;3099:1;3087:9;:13;3079:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;3196:4;3185:9;3180:4;:14;;;;:::i;:::-;3164;:31;;;;:::i;:::-;:36;;;;:::i;:::-;3150:9;:51;;3142:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;3225:22;3288:4;3277:10;;:15;;;;:::i;:::-;3264:11;;3262:1;3250:9;:13;;;;:::i;:::-;:25;;;;:::i;:::-;:43;;;;:::i;:::-;3225:68;;3304:31;3310:9;;;;;;;;;;3320:14;3304:5;:31::i;:::-;3382:5;:14;;;3397:10;3409:9;3382:37;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3432:62;3440:21;3463:5;:15;;;3487:4;3463:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3432:7;:62::i;:::-;2854:648;;2719:783;;;;;:::o;6295:95::-;6335:7;6361:9;:21;6371:10;6361:21;;;;;;;;;;;;;;;;6354:28;;6295:95;:::o;2065:648::-;2125:17;2155:23;2201:4;2194:3;2182:9;:15;;;;:::i;:::-;2181:24;;;;:::i;:::-;2155:50;;2277:15;2264:10;;:28;;;;:::i;:::-;2244:15;2231:10;;:28;;;;:::i;:::-;2230:63;;;;:::i;:::-;2218:75;;2324:1;2312:9;:13;2304:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;2367:22;2430:4;2419:10;;:15;;;;:::i;:::-;2406:11;;2404:1;2392:9;:13;;;;:::i;:::-;:25;;;;:::i;:::-;:43;;;;:::i;:::-;2367:68;;2446:31;2452:9;;;;;;;;;;2462:14;2446:5;:31::i;:::-;2524:5;:18;;;2543:10;2563:4;2570:9;2524:56;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2599:10;2591:28;;:39;2620:9;2591:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2643:62;2651:21;2674:5;:15;;;2698:4;2674:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2643:7;:62::i;:::-;2144:569;;2065:648;;;:::o;893:44::-;;;;;;;;;;;;;;;;;:::o;5084:165::-;5145:17;5164;5201:40;5218:5;5224:9;:16;5234:5;5224:16;;;;;;;;;;;;;;;;5201;:40::i;:::-;5194:47;;;;5084:165;;;:::o;1481:578::-;1538:17;1589:9;1576;:22;1568:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;1635:23;1681:4;1674:3;1662:9;:15;;;;:::i;:::-;1661:24;;;;:::i;:::-;1635:50;;1755:15;1742:10;;:28;;;;:::i;:::-;1722:15;1709:10;;:28;;;;:::i;:::-;1708:63;;;;:::i;:::-;1696:75;;1782:22;1845:4;1834:10;;:15;;;;:::i;:::-;1821:11;;1819:1;1807:9;:13;;;;:::i;:::-;:25;;;;:::i;:::-;:43;;;;:::i;:::-;1782:68;;1861:31;1867:9;;;;;;;;;;1877:14;1861:5;:31::i;:::-;1939:5;:14;;;1954:10;1966:9;1939:37;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1989:62;1997:21;2020:5;:15;;;2044:4;2020:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1989:7;:62::i;:::-;1557:502;;1481:578;;;:::o;5255:237::-;5315:17;5334;5383:9;:21;5393:10;5383:21;;;;;;;;;;;;;;;;5372:7;:32;;5364:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;5447:37;5464:10;5476:7;5447:16;:37::i;:::-;5440:44;;;;5255:237;;;:::o;5500:242::-;5575:17;5594;5643:9;:16;5653:5;5643:16;;;;;;;;;;;;;;;;5632:7;:27;;5624:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;5702:32;5719:5;5726:7;5702:16;:32::i;:::-;5695:39;;;;5500:242;;;;;:::o;6930:189::-;6974:7;7015:1;7002:10;;:14;:32;;;;;7033:1;7020:10;;:14;7002:32;6994:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;7101:10;;7091:6;7078:10;;:19;;;;:::i;:::-;7077:34;;;;:::i;:::-;7070:41;;6930:189;:::o;721:48::-;767:1;721:48;:::o;3508:785::-;3622:17;3652:23;3698:4;3691:3;3679:9;:15;;;;:::i;:::-;3678:24;;;;:::i;:::-;3652:50;;3774:15;3761:10;;:28;;;;:::i;:::-;3741:15;3728:10;;:28;;;;:::i;:::-;3727:63;;;;:::i;:::-;3715:75;;3821:1;3809:9;:13;3801:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;3918:4;3907:9;3902:4;:14;;;;:::i;:::-;3886;:31;;;;:::i;:::-;:36;;;;:::i;:::-;3872:9;:51;;3864:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;3947:22;4010:4;3999:10;;:15;;;;:::i;:::-;3986:11;;3984:1;3972:9;:13;;;;:::i;:::-;:25;;;;:::i;:::-;:43;;;;:::i;:::-;3947:68;;4026:31;4032:9;;;;;;;;;;4042:14;4026:5;:31::i;:::-;4104:5;:18;;;4123:10;4143:4;4150:9;4104:56;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4179:10;4171:28;;:39;4200:9;4171:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4223:62;4231:21;4254:5;:15;;;4278:4;4254:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4223:7;:62::i;:::-;3641:652;;3508:785;;;;;:::o;7716:316::-;7788:7;7829:1;7816:10;;:14;:32;;;;;7847:1;7834:10;;:14;7816:32;:45;;;;;7860:1;7852:7;:9;7816:45;7808:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;7897:23;7939:4;7932:3;7922:7;:13;;;;:::i;:::-;7921:22;;;;:::i;:::-;7897:46;;8008:15;7995:10;;:28;;;;:::i;:::-;7975:15;7962:10;;:28;;;;:::i;:::-;7961:63;;;;:::i;:::-;7954:70;;;7716:316;;;:::o;817:25::-;;;;:::o;6396:103::-;6449:7;6475:9;:16;6485:5;6475:16;;;;;;;;;;;;;;;;6468:23;;6396:103;;;:::o;685:29::-;;;:::o;7125:259::-;7169:7;7210:1;7197:10;;:14;:32;;;;;7228:1;7215:10;;:14;7197:32;7189:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;7267:16;7300:5;7286:30;;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7267:51;;;;7366:10;;7354:8;7350:2;:12;;;;:::i;:::-;7337:10;;:25;;;;:::i;:::-;7336:40;;;;:::i;:::-;7329:47;;;7125:259;:::o;6507:304::-;6553:6;6580:1;6576;:5;6572:232;;;6602:1;6598:5;;6618:6;6635:1;6631;6627;:5;;;;:::i;:::-;:9;;;;:::i;:::-;6618:18;;6651:92;6662:1;6658;:5;6651:92;;;6688:1;6684:5;;6726:1;6721;6717;6713;:5;;;;:::i;:::-;:9;;;;:::i;:::-;6712:15;;;;:::i;:::-;6708:19;;6651:92;;;6583:171;6572:232;;;6769:1;6764;:6;6760:44;;6791:1;6787:5;;6760:44;6572:232;6507:304;;;:::o;588:104:4:-;646:7;676:1;672;:5;:13;;684:1;672:13;;;680:1;672:13;665:20;;588:104;;;;:::o;1056:130:5:-;1138:7;1120:9;:14;1130:3;1120:14;;;;;;;;;;;;;;;;:25;;;;;;;:::i;:::-;;;;;;;;1171:7;1156:11;;:22;;;;;;;:::i;:::-;;;;;;;;1056:130;;:::o;1336:137::-;1423:9;1410:10;:22;;;;1456:9;1443:10;:22;;;;1336:137;;:::o;5748:541::-;5824:17;5843;5910:11;;5896:10;;5886:7;:20;;;;:::i;:::-;5885:36;;;;:::i;:::-;5873:48;;5969:11;;5955:10;;5945:7;:20;;;;:::i;:::-;5944:36;;;;:::i;:::-;5932:48;;6011:1;5999:9;:13;:30;;;;;6028:1;6016:9;:13;5999:30;5991:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;6073:21;6079:5;6086:7;6073:5;:21::i;:::-;6105:86;6137:9;6113:21;:33;;;;:::i;:::-;6181:9;6148:5;:15;;;6172:4;6148:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:42;;;;:::i;:::-;6105:7;:86::i;:::-;6212:5;6204:23;;:34;6228:9;6204:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6249:5;:14;;;6264:5;6271:9;6249:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5748:541;;;;;:::o;1194:134::-;1280:7;1260:9;:16;1270:5;1260:16;;;;;;;;;;;;;;;;:27;;;;;;;:::i;:::-;;;;;;;;1313:7;1298:11;;:22;;;;;;;:::i;:::-;;;;;;;;1194:134;;:::o;7:77:6:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;769:122;842:24;860:5;842:24;:::i;:::-;835:5;832:35;822:63;;881:1;878;871:12;822:63;769:122;:::o;897:139::-;943:5;981:6;968:20;959:29;;997:33;1024:5;997:33;:::i;:::-;897:139;;;;:::o;1042:329::-;1101:6;1150:2;1138:9;1129:7;1125:23;1121:32;1118:119;;;1156:79;;:::i;:::-;1118:119;1276:1;1301:53;1346:7;1337:6;1326:9;1322:22;1301:53;:::i;:::-;1291:63;;1247:117;1042:329;;;;:::o;1377:619::-;1454:6;1462;1470;1519:2;1507:9;1498:7;1494:23;1490:32;1487:119;;;1525:79;;:::i;:::-;1487:119;1645:1;1670:53;1715:7;1706:6;1695:9;1691:22;1670:53;:::i;:::-;1660:63;;1616:117;1772:2;1798:53;1843:7;1834:6;1823:9;1819:22;1798:53;:::i;:::-;1788:63;;1743:118;1900:2;1926:53;1971:7;1962:6;1951:9;1947:22;1926:53;:::i;:::-;1916:63;;1871:118;1377:619;;;;;:::o;2002:126::-;2039:7;2079:42;2072:5;2068:54;2057:65;;2002:126;;;:::o;2134:96::-;2171:7;2200:24;2218:5;2200:24;:::i;:::-;2189:35;;2134:96;;;:::o;2236:122::-;2309:24;2327:5;2309:24;:::i;:::-;2302:5;2299:35;2289:63;;2348:1;2345;2338:12;2289:63;2236:122;:::o;2364:139::-;2410:5;2448:6;2435:20;2426:29;;2464:33;2491:5;2464:33;:::i;:::-;2364:139;;;;:::o;2509:329::-;2568:6;2617:2;2605:9;2596:7;2592:23;2588:32;2585:119;;;2623:79;;:::i;:::-;2585:119;2743:1;2768:53;2813:7;2804:6;2793:9;2789:22;2768:53;:::i;:::-;2758:63;;2714:117;2509:329;;;;:::o;2844:332::-;2965:4;3003:2;2992:9;2988:18;2980:26;;3016:71;3084:1;3073:9;3069:17;3060:6;3016:71;:::i;:::-;3097:72;3165:2;3154:9;3150:18;3141:6;3097:72;:::i;:::-;2844:332;;;;;:::o;3182:474::-;3250:6;3258;3307:2;3295:9;3286:7;3282:23;3278:32;3275:119;;;3313:79;;:::i;:::-;3275:119;3433:1;3458:53;3503:7;3494:6;3483:9;3479:22;3458:53;:::i;:::-;3448:63;;3404:117;3560:2;3586:53;3631:7;3622:6;3611:9;3607:22;3586:53;:::i;:::-;3576:63;;3531:118;3182:474;;;;;:::o;3662:118::-;3749:24;3767:5;3749:24;:::i;:::-;3744:3;3737:37;3662:118;;:::o;3786:222::-;3879:4;3917:2;3906:9;3902:18;3894:26;;3930:71;3998:1;3987:9;3983:17;3974:6;3930:71;:::i;:::-;3786:222;;;;:::o;4014:60::-;4042:3;4063:5;4056:12;;4014:60;;;:::o;4080:142::-;4130:9;4163:53;4181:34;4190:24;4208:5;4190:24;:::i;:::-;4181:34;:::i;:::-;4163:53;:::i;:::-;4150:66;;4080:142;;;:::o;4228:126::-;4278:9;4311:37;4342:5;4311:37;:::i;:::-;4298:50;;4228:126;;;:::o;4360:140::-;4424:9;4457:37;4488:5;4457:37;:::i;:::-;4444:50;;4360:140;;;:::o;4506:159::-;4607:51;4652:5;4607:51;:::i;:::-;4602:3;4595:64;4506:159;;:::o;4671:250::-;4778:4;4816:2;4805:9;4801:18;4793:26;;4829:85;4911:1;4900:9;4896:17;4887:6;4829:85;:::i;:::-;4671:250;;;;:::o;4927:442::-;5076:4;5114:2;5103:9;5099:18;5091:26;;5127:71;5195:1;5184:9;5180:17;5171:6;5127:71;:::i;:::-;5208:72;5276:2;5265:9;5261:18;5252:6;5208:72;:::i;:::-;5290;5358:2;5347:9;5343:18;5334:6;5290:72;:::i;:::-;4927:442;;;;;;:::o;5375:90::-;5409:7;5452:5;5445:13;5438:21;5427:32;;5375:90;;;:::o;5471:116::-;5541:21;5556:5;5541:21;:::i;:::-;5534:5;5531:32;5521:60;;5577:1;5574;5567:12;5521:60;5471:116;:::o;5593:137::-;5647:5;5678:6;5672:13;5663:22;;5694:30;5718:5;5694:30;:::i;:::-;5593:137;;;;:::o;5736:345::-;5803:6;5852:2;5840:9;5831:7;5827:23;5823:32;5820:119;;;5858:79;;:::i;:::-;5820:119;5978:1;6003:61;6056:7;6047:6;6036:9;6032:22;6003:61;:::i;:::-;5993:71;;5949:125;5736:345;;;;:::o;6087:180::-;6135:77;6132:1;6125:88;6232:4;6229:1;6222:15;6256:4;6253:1;6246:15;6273:410;6313:7;6336:20;6354:1;6336:20;:::i;:::-;6331:25;;6370:20;6388:1;6370:20;:::i;:::-;6365:25;;6425:1;6422;6418:9;6447:30;6465:11;6447:30;:::i;:::-;6436:41;;6626:1;6617:7;6613:15;6610:1;6607:22;6587:1;6580:9;6560:83;6537:139;;6656:18;;:::i;:::-;6537:139;6321:362;6273:410;;;;:::o;6689:169::-;6773:11;6807:6;6802:3;6795:19;6847:4;6842:3;6838:14;6823:29;;6689:169;;;;:::o;6864:166::-;7004:18;7000:1;6992:6;6988:14;6981:42;6864:166;:::o;7036:366::-;7178:3;7199:67;7263:2;7258:3;7199:67;:::i;:::-;7192:74;;7275:93;7364:3;7275:93;:::i;:::-;7393:2;7388:3;7384:12;7377:19;;7036:366;;;:::o;7408:419::-;7574:4;7612:2;7601:9;7597:18;7589:26;;7661:9;7655:4;7651:20;7647:1;7636:9;7632:17;7625:47;7689:131;7815:4;7689:131;:::i;:::-;7681:139;;7408:419;;;:::o;7833:180::-;7881:77;7878:1;7871:88;7978:4;7975:1;7968:15;8002:4;7999:1;7992:15;8019:185;8059:1;8076:20;8094:1;8076:20;:::i;:::-;8071:25;;8110:20;8128:1;8110:20;:::i;:::-;8105:25;;8149:1;8139:35;;8154:18;;:::i;:::-;8139:35;8196:1;8193;8189:9;8184:14;;8019:185;;;;:::o;8210:160::-;8350:12;8346:1;8338:6;8334:14;8327:36;8210:160;:::o;8376:366::-;8518:3;8539:67;8603:2;8598:3;8539:67;:::i;:::-;8532:74;;8615:93;8704:3;8615:93;:::i;:::-;8733:2;8728:3;8724:12;8717:19;;8376:366;;;:::o;8748:419::-;8914:4;8952:2;8941:9;8937:18;8929:26;;9001:9;8995:4;8991:20;8987:1;8976:9;8972:17;8965:47;9029:131;9155:4;9029:131;:::i;:::-;9021:139;;8748:419;;;:::o;9173:143::-;9230:5;9261:6;9255:13;9246:22;;9277:33;9304:5;9277:33;:::i;:::-;9173:143;;;;:::o;9322:351::-;9392:6;9441:2;9429:9;9420:7;9416:23;9412:32;9409:119;;;9447:79;;:::i;:::-;9409:119;9567:1;9592:64;9648:7;9639:6;9628:9;9624:22;9592:64;:::i;:::-;9582:74;;9538:128;9322:351;;;;:::o;9679:172::-;9819:24;9815:1;9807:6;9803:14;9796:48;9679:172;:::o;9857:366::-;9999:3;10020:67;10084:2;10079:3;10020:67;:::i;:::-;10013:74;;10096:93;10185:3;10096:93;:::i;:::-;10214:2;10209:3;10205:12;10198:19;;9857:366;;;:::o;10229:419::-;10395:4;10433:2;10422:9;10418:18;10410:26;;10482:9;10476:4;10472:20;10468:1;10457:9;10453:17;10446:47;10510:131;10636:4;10510:131;:::i;:::-;10502:139;;10229:419;;;:::o;10654:191::-;10694:3;10713:20;10731:1;10713:20;:::i;:::-;10708:25;;10747:20;10765:1;10747:20;:::i;:::-;10742:25;;10790:1;10787;10783:9;10776:16;;10811:3;10808:1;10805:10;10802:36;;;10818:18;;:::i;:::-;10802:36;10654:191;;;;:::o;10851:169::-;10991:21;10987:1;10979:6;10975:14;10968:45;10851:169;:::o;11026:366::-;11168:3;11189:67;11253:2;11248:3;11189:67;:::i;:::-;11182:74;;11265:93;11354:3;11265:93;:::i;:::-;11383:2;11378:3;11374:12;11367:19;;11026:366;;;:::o;11398:419::-;11564:4;11602:2;11591:9;11587:18;11579:26;;11651:9;11645:4;11641:20;11637:1;11626:9;11622:17;11615:47;11679:131;11805:4;11679:131;:::i;:::-;11671:139;;11398:419;;;:::o;11823:176::-;11963:28;11959:1;11951:6;11947:14;11940:52;11823:176;:::o;12005:366::-;12147:3;12168:67;12232:2;12227:3;12168:67;:::i;:::-;12161:74;;12244:93;12333:3;12244:93;:::i;:::-;12362:2;12357:3;12353:12;12346:19;;12005:366;;;:::o;12377:419::-;12543:4;12581:2;12570:9;12566:18;12558:26;;12630:9;12624:4;12620:20;12616:1;12605:9;12601:17;12594:47;12658:131;12784:4;12658:131;:::i;:::-;12650:139;;12377:419;;;:::o;12802:194::-;12842:4;12862:20;12880:1;12862:20;:::i;:::-;12857:25;;12896:20;12914:1;12896:20;:::i;:::-;12891:25;;12940:1;12937;12933:9;12925:17;;12964:1;12958:4;12955:11;12952:37;;;12969:18;;:::i;:::-;12952:37;12802:194;;;;:::o;13002:158::-;13142:10;13138:1;13130:6;13126:14;13119:34;13002:158;:::o;13166:365::-;13308:3;13329:66;13393:1;13388:3;13329:66;:::i;:::-;13322:73;;13404:93;13493:3;13404:93;:::i;:::-;13522:2;13517:3;13513:12;13506:19;;13166:365;;;:::o;13537:419::-;13703:4;13741:2;13730:9;13726:18;13718:26;;13790:9;13784:4;13780:20;13776:1;13765:9;13761:17;13754:47;13818:131;13944:4;13818:131;:::i;:::-;13810:139;;13537:419;;;:::o;13962:332::-;14083:4;14121:2;14110:9;14106:18;14098:26;;14134:71;14202:1;14191:9;14187:17;14178:6;14134:71;:::i;:::-;14215:72;14283:2;14272:9;14268:18;14259:6;14215:72;:::i;:::-;13962:332;;;;;:::o;14300:170::-;14440:22;14436:1;14428:6;14424:14;14417:46;14300:170;:::o;14476:366::-;14618:3;14639:67;14703:2;14698:3;14639:67;:::i;:::-;14632:74;;14715:93;14804:3;14715:93;:::i;:::-;14833:2;14828:3;14824:12;14817:19;;14476:366;;;:::o;14848:419::-;15014:4;15052:2;15041:9;15037:18;15029:26;;15101:9;15095:4;15091:20;15087:1;15076:9;15072:17;15065:47;15129:131;15255:4;15129:131;:::i;:::-;15121:139;;14848:419;;;:::o;15273:170::-;15413:22;15409:1;15401:6;15397:14;15390:46;15273:170;:::o;15449:366::-;15591:3;15612:67;15676:2;15671:3;15612:67;:::i;:::-;15605:74;;15688:93;15777:3;15688:93;:::i;:::-;15806:2;15801:3;15797:12;15790:19;;15449:366;;;:::o;15821:419::-;15987:4;16025:2;16014:9;16010:18;16002:26;;16074:9;16068:4;16064:20;16060:1;16049:9;16045:17;16038:47;16102:131;16228:4;16102:131;:::i;:::-;16094:139;;15821:419;;;:::o;16246:86::-;16281:7;16321:4;16314:5;16310:16;16299:27;;16246:86;;;:::o;16338:118::-;16409:22;16425:5;16409:22;:::i;:::-;16402:5;16399:33;16389:61;;16446:1;16443;16436:12;16389:61;16338:118;:::o;16462:139::-;16517:5;16548:6;16542:13;16533:22;;16564:31;16589:5;16564:31;:::i;:::-;16462:139;;;;:::o;16607:347::-;16675:6;16724:2;16712:9;16703:7;16699:23;16695:32;16692:119;;;16730:79;;:::i;:::-;16692:119;16850:1;16875:62;16929:7;16920:6;16909:9;16905:22;16875:62;:::i;:::-;16865:72;;16821:126;16607:347;;;;:::o;16960:102::-;17002:8;17049:5;17046:1;17042:13;17021:34;;16960:102;;;:::o;17068:848::-;17129:5;17136:4;17160:6;17151:15;;17184:5;17175:14;;17198:712;17219:1;17209:8;17206:15;17198:712;;;17314:4;17309:3;17305:14;17299:4;17296:24;17293:50;;;17323:18;;:::i;:::-;17293:50;17373:1;17363:8;17359:16;17356:451;;;17788:4;17781:5;17777:16;17768:25;;17356:451;17838:4;17832;17828:15;17820:23;;17868:32;17891:8;17868:32;:::i;:::-;17856:44;;17198:712;;;17068:848;;;;;;;:::o;17922:1073::-;17976:5;18167:8;18157:40;;18188:1;18179:10;;18190:5;;18157:40;18216:4;18206:36;;18233:1;18224:10;;18235:5;;18206:36;18302:4;18350:1;18345:27;;;;18386:1;18381:191;;;;18295:277;;18345:27;18363:1;18354:10;;18365:5;;;18381:191;18426:3;18416:8;18413:17;18410:43;;;18433:18;;:::i;:::-;18410:43;18482:8;18479:1;18475:16;18466:25;;18517:3;18510:5;18507:14;18504:40;;;18524:18;;:::i;:::-;18504:40;18557:5;;;18295:277;;18681:2;18671:8;18668:16;18662:3;18656:4;18653:13;18649:36;18631:2;18621:8;18618:16;18613:2;18607:4;18604:12;18600:35;18584:111;18581:246;;;18737:8;18731:4;18727:19;18718:28;;18772:3;18765:5;18762:14;18759:40;;;18779:18;;:::i;:::-;18759:40;18812:5;;18581:246;18852:42;18890:3;18880:8;18874:4;18871:1;18852:42;:::i;:::-;18837:57;;;;18926:4;18921:3;18917:14;18910:5;18907:25;18904:51;;;18935:18;;:::i;:::-;18904:51;18984:4;18977:5;18973:16;18964:25;;17922:1073;;;;;;:::o;19001:285::-;19061:5;19085:23;19103:4;19085:23;:::i;:::-;19077:31;;19129:27;19147:8;19129:27;:::i;:::-;19117:39;;19175:104;19212:66;19202:8;19196:4;19175:104;:::i;:::-;19166:113;;19001:285;;;;:::o;19292:176::-;19432:28;19428:1;19420:6;19416:14;19409:52;19292:176;:::o;19474:366::-;19616:3;19637:67;19701:2;19696:3;19637:67;:::i;:::-;19630:74;;19713:93;19802:3;19713:93;:::i;:::-;19831:2;19826:3;19822:12;19815:19;;19474:366;;;:::o;19846:419::-;20012:4;20050:2;20039:9;20035:18;20027:26;;20099:9;20093:4;20089:20;20085:1;20074:9;20070:17;20063:47;20127:131;20253:4;20127:131;:::i;:::-;20119:139;;19846:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1945600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"ETH_ADDRESS()": "467",
								"addLiquidity(uint256)": "infinite",
								"balanceOf(address)": "2881",
								"getERCPrice()": "infinite",
								"getETHPrice()": "infinite",
								"getInERCPredictOutputETH(uint256)": "infinite",
								"getInETHPredictOutputERC(uint256)": "infinite",
								"my_shars()": "2549",
								"removeAllLiquidity(address)": "infinite",
								"removeLiquidity(address,uint256)": "infinite",
								"removeLiquidity(uint256)": "infinite",
								"reserveERC()": "2473",
								"reserveETH()": "2453",
								"sharesOf(address)": "2907",
								"swap(uint256)": "infinite",
								"swapTokenForETH(uint256)": "infinite",
								"swapTokenForETH_WithSlipLock(uint256,uint256,uint256)": "infinite",
								"swap_WithSlipLock(uint256,uint256,uint256)": "infinite",
								"token()": "infinite",
								"totalSupply()": "2475"
							},
							"internal": {
								"_burn(address,uint256)": "infinite",
								"_min(uint256,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_removeLiquidity(address,uint256)": "infinite",
								"_sqrt(uint256)": "infinite",
								"_update(uint256,uint256)": "44241"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 639,
									"end": 8037,
									"name": "PUSH",
									"source": 5,
									"value": "A0"
								},
								{
									"begin": 639,
									"end": 8037,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 639,
									"end": 8037,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 946,
									"end": 1048,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 946,
									"end": 1048,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 946,
									"end": 1048,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 946,
									"end": 1048,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 946,
									"end": 1048,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 946,
									"end": 1048,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 946,
									"end": 1048,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 946,
									"end": 1048,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 946,
									"end": 1048,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 946,
									"end": 1048,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 946,
									"end": 1048,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 946,
									"end": 1048,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 946,
									"end": 1048,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 946,
									"end": 1048,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 946,
									"end": 1048,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 946,
									"end": 1048,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 946,
									"end": 1048,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 946,
									"end": 1048,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 946,
									"end": 1048,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 946,
									"end": 1048,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 946,
									"end": 1048,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 946,
									"end": 1048,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 946,
									"end": 1048,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 946,
									"end": 1048,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 946,
									"end": 1048,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 946,
									"end": 1048,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 946,
									"end": 1048,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 946,
									"end": 1048,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 946,
									"end": 1048,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 946,
									"end": 1048,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 946,
									"end": 1048,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 946,
									"end": 1048,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 946,
									"end": 1048,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 946,
									"end": 1048,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 946,
									"end": 1048,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 997,
									"end": 1007,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": 985,
									"end": 994,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 985,
									"end": 994,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 985,
									"end": 1007,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 985,
									"end": 1007,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 985,
									"end": 1007,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 985,
									"end": 1007,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 985,
									"end": 1007,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 985,
									"end": 1007,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 985,
									"end": 1007,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 985,
									"end": 1007,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 985,
									"end": 1007,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 985,
									"end": 1007,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 985,
									"end": 1007,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 985,
									"end": 1007,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 985,
									"end": 1007,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 985,
									"end": 1007,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 985,
									"end": 1007,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 985,
									"end": 1007,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 985,
									"end": 1007,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 985,
									"end": 1007,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1033,
									"end": 1039,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1018,
									"end": 1040,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1018,
									"end": 1040,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1018,
									"end": 1040,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 1018,
									"end": 1040,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1018,
									"end": 1040,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1018,
									"end": 1040,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1018,
									"end": 1040,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1018,
									"end": 1040,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1018,
									"end": 1040,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1018,
									"end": 1040,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 946,
									"end": 1048,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 639,
									"end": 8037,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 639,
									"end": 8037,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 639,
									"end": 8037,
									"name": "tag",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 639,
									"end": 8037,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 639,
									"end": 8037,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 639,
									"end": 8037,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 639,
									"end": 8037,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 639,
									"end": 8037,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 639,
									"end": 8037,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 639,
									"end": 8037,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 639,
									"end": 8037,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 639,
									"end": 8037,
									"name": "ASSIGNIMMUTABLE",
									"source": 5,
									"value": "1586"
								},
								{
									"begin": 639,
									"end": 8037,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 639,
									"end": 8037,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 639,
									"end": 8037,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cc4aba3704f8080799e44995698b45df3320985c83a1f9e00d654d788da93a9a64736f6c63430008120033",
									".code": [
										{
											"begin": 639,
											"end": 8037,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "PUSH",
											"source": 5,
											"value": "9C8F9F23"
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "PUSH",
											"source": 5,
											"value": "DCCC5FEA"
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "PUSH",
											"source": 5,
											"value": "DCCC5FEA"
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "PUSH",
											"source": 5,
											"value": "E764E67C"
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "PUSH",
											"source": 5,
											"value": "F5EB42DC"
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "PUSH",
											"source": 5,
											"value": "FC0C546A"
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "PUSH",
											"source": 5,
											"value": "FCC2BA08"
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "PUSH",
											"source": 5,
											"value": "9C8F9F23"
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "PUSH",
											"source": 5,
											"value": "A201CCF6"
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "PUSH",
											"source": 5,
											"value": "A607A8D9"
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "PUSH",
											"source": 5,
											"value": "A734F06E"
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "PUSH",
											"source": 5,
											"value": "DC2D845B"
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "PUSH",
											"source": 5,
											"value": "6CAE4F84"
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "PUSH",
											"source": 5,
											"value": "6CAE4F84"
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "PUSH",
											"source": 5,
											"value": "6FB84B74"
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "PUSH",
											"source": 5,
											"value": "7A6A5E1B"
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "PUSH",
											"source": 5,
											"value": "94B918DE"
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "PUSH",
											"source": 5,
											"value": "100AF203"
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "PUSH",
											"source": 5,
											"value": "18160DDD"
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "PUSH",
											"source": 5,
											"value": "51C6590A"
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "PUSH",
											"source": 5,
											"value": "56C1D7EB"
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "PUSH",
											"source": 5,
											"value": "62279B65"
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 639,
											"end": 8037,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 778,
											"end": 803,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 778,
											"end": 803,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 778,
											"end": 803,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 778,
											"end": 803,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 778,
											"end": 803,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 778,
											"end": 803,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 778,
											"end": 803,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 778,
											"end": 803,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 778,
											"end": 803,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 778,
											"end": 803,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 778,
											"end": 803,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 778,
											"end": 803,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 778,
											"end": 803,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 778,
											"end": 803,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 778,
											"end": 803,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 778,
											"end": 803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 778,
											"end": 803,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 778,
											"end": 803,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 778,
											"end": 803,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 778,
											"end": 803,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 778,
											"end": 803,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 778,
											"end": 803,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 778,
											"end": 803,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 778,
											"end": 803,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 778,
											"end": 803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 778,
											"end": 803,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 778,
											"end": 803,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 778,
											"end": 803,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 778,
											"end": 803,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 778,
											"end": 803,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 778,
											"end": 803,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 778,
											"end": 803,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 778,
											"end": 803,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 778,
											"end": 803,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 860,
											"end": 886,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 860,
											"end": 886,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 860,
											"end": 886,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 860,
											"end": 886,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 860,
											"end": 886,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 860,
											"end": 886,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 860,
											"end": 886,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 860,
											"end": 886,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 860,
											"end": 886,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 860,
											"end": 886,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 860,
											"end": 886,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 860,
											"end": 886,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 860,
											"end": 886,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 860,
											"end": 886,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 860,
											"end": 886,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 860,
											"end": 886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 860,
											"end": 886,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 860,
											"end": 886,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 860,
											"end": 886,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 860,
											"end": 886,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 860,
											"end": 886,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 860,
											"end": 886,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 860,
											"end": 886,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 860,
											"end": 886,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 860,
											"end": 886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 860,
											"end": 886,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 860,
											"end": 886,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 860,
											"end": 886,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 860,
											"end": 886,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 860,
											"end": 886,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 860,
											"end": 886,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 860,
											"end": 886,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 860,
											"end": 886,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 860,
											"end": 886,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 4299,
											"end": 5076,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4299,
											"end": 5076,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4299,
											"end": 5076,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 4299,
											"end": 5076,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4299,
											"end": 5076,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4299,
											"end": 5076,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4299,
											"end": 5076,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4299,
											"end": 5076,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4299,
											"end": 5076,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4299,
											"end": 5076,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4299,
											"end": 5076,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 4299,
											"end": 5076,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4299,
											"end": 5076,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4299,
											"end": 5076,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 4299,
											"end": 5076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4299,
											"end": 5076,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 4299,
											"end": 5076,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4299,
											"end": 5076,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 4299,
											"end": 5076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4299,
											"end": 5076,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 4299,
											"end": 5076,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4299,
											"end": 5076,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4299,
											"end": 5076,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4299,
											"end": 5076,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 4299,
											"end": 5076,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4299,
											"end": 5076,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4299,
											"end": 5076,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 4299,
											"end": 5076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4299,
											"end": 5076,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 4299,
											"end": 5076,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4299,
											"end": 5076,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4299,
											"end": 5076,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4299,
											"end": 5076,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4299,
											"end": 5076,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4299,
											"end": 5076,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4299,
											"end": 5076,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4299,
											"end": 5076,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 7392,
											"end": 7710,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 7392,
											"end": 7710,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7392,
											"end": 7710,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 7392,
											"end": 7710,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7392,
											"end": 7710,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7392,
											"end": 7710,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 7392,
											"end": 7710,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7392,
											"end": 7710,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7392,
											"end": 7710,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7392,
											"end": 7710,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7392,
											"end": 7710,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 7392,
											"end": 7710,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7392,
											"end": 7710,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7392,
											"end": 7710,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7392,
											"end": 7710,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7392,
											"end": 7710,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7392,
											"end": 7710,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 7392,
											"end": 7710,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7392,
											"end": 7710,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7392,
											"end": 7710,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7392,
											"end": 7710,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7392,
											"end": 7710,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 7392,
											"end": 7710,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7392,
											"end": 7710,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7392,
											"end": 7710,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 7392,
											"end": 7710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7392,
											"end": 7710,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 7392,
											"end": 7710,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7392,
											"end": 7710,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 7392,
											"end": 7710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7392,
											"end": 7710,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7392,
											"end": 7710,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7392,
											"end": 7710,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7392,
											"end": 7710,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7392,
											"end": 7710,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 7392,
											"end": 7710,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7392,
											"end": 7710,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7392,
											"end": 7710,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 7392,
											"end": 7710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7392,
											"end": 7710,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 7392,
											"end": 7710,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7392,
											"end": 7710,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7392,
											"end": 7710,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7392,
											"end": 7710,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7392,
											"end": 7710,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7392,
											"end": 7710,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7392,
											"end": 7710,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7392,
											"end": 7710,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2719,
											"end": 3502,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 2719,
											"end": 3502,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2719,
											"end": 3502,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 2719,
											"end": 3502,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2719,
											"end": 3502,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2719,
											"end": 3502,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2719,
											"end": 3502,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2719,
											"end": 3502,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2719,
											"end": 3502,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2719,
											"end": 3502,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2719,
											"end": 3502,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 2719,
											"end": 3502,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2719,
											"end": 3502,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2719,
											"end": 3502,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 2719,
											"end": 3502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2719,
											"end": 3502,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 2719,
											"end": 3502,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2719,
											"end": 3502,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 2719,
											"end": 3502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2719,
											"end": 3502,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 2719,
											"end": 3502,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2719,
											"end": 3502,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2719,
											"end": 3502,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2719,
											"end": 3502,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 2719,
											"end": 3502,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2719,
											"end": 3502,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2719,
											"end": 3502,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 2719,
											"end": 3502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2719,
											"end": 3502,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 2719,
											"end": 3502,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2719,
											"end": 3502,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2719,
											"end": 3502,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2719,
											"end": 3502,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2719,
											"end": 3502,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2719,
											"end": 3502,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2719,
											"end": 3502,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2719,
											"end": 3502,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 6295,
											"end": 6390,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 6295,
											"end": 6390,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6295,
											"end": 6390,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 6295,
											"end": 6390,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6295,
											"end": 6390,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6295,
											"end": 6390,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 6295,
											"end": 6390,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6295,
											"end": 6390,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6295,
											"end": 6390,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6295,
											"end": 6390,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6295,
											"end": 6390,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 6295,
											"end": 6390,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6295,
											"end": 6390,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6295,
											"end": 6390,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 6295,
											"end": 6390,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 6295,
											"end": 6390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6295,
											"end": 6390,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 6295,
											"end": 6390,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6295,
											"end": 6390,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6295,
											"end": 6390,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6295,
											"end": 6390,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 6295,
											"end": 6390,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6295,
											"end": 6390,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6295,
											"end": 6390,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 6295,
											"end": 6390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6295,
											"end": 6390,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 6295,
											"end": 6390,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6295,
											"end": 6390,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6295,
											"end": 6390,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6295,
											"end": 6390,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6295,
											"end": 6390,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6295,
											"end": 6390,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6295,
											"end": 6390,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6295,
											"end": 6390,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2065,
											"end": 2713,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 2065,
											"end": 2713,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2065,
											"end": 2713,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 2065,
											"end": 2713,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2065,
											"end": 2713,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2065,
											"end": 2713,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 2065,
											"end": 2713,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2065,
											"end": 2713,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2065,
											"end": 2713,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2065,
											"end": 2713,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2065,
											"end": 2713,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 2065,
											"end": 2713,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2065,
											"end": 2713,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2065,
											"end": 2713,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 2065,
											"end": 2713,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2065,
											"end": 2713,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2065,
											"end": 2713,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2065,
											"end": 2713,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2065,
											"end": 2713,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2065,
											"end": 2713,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2065,
											"end": 2713,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2065,
											"end": 2713,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 2065,
											"end": 2713,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2065,
											"end": 2713,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2065,
											"end": 2713,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 2065,
											"end": 2713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2065,
											"end": 2713,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 2065,
											"end": 2713,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2065,
											"end": 2713,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 2065,
											"end": 2713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2065,
											"end": 2713,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 2065,
											"end": 2713,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2065,
											"end": 2713,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2065,
											"end": 2713,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2065,
											"end": 2713,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 2065,
											"end": 2713,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2065,
											"end": 2713,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2065,
											"end": 2713,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 2065,
											"end": 2713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2065,
											"end": 2713,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 2065,
											"end": 2713,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2065,
											"end": 2713,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2065,
											"end": 2713,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2065,
											"end": 2713,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2065,
											"end": 2713,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2065,
											"end": 2713,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2065,
											"end": 2713,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2065,
											"end": 2713,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 893,
											"end": 937,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 893,
											"end": 937,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 893,
											"end": 937,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 893,
											"end": 937,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 893,
											"end": 937,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 893,
											"end": 937,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 893,
											"end": 937,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 893,
											"end": 937,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 893,
											"end": 937,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 893,
											"end": 937,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 893,
											"end": 937,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 893,
											"end": 937,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 893,
											"end": 937,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 893,
											"end": 937,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 893,
											"end": 937,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 893,
											"end": 937,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 893,
											"end": 937,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 893,
											"end": 937,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 893,
											"end": 937,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 893,
											"end": 937,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 893,
											"end": 937,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 893,
											"end": 937,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 893,
											"end": 937,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 893,
											"end": 937,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 893,
											"end": 937,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 893,
											"end": 937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 893,
											"end": 937,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 893,
											"end": 937,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 893,
											"end": 937,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 893,
											"end": 937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 893,
											"end": 937,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 893,
											"end": 937,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 893,
											"end": 937,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 893,
											"end": 937,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 893,
											"end": 937,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 893,
											"end": 937,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 893,
											"end": 937,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 893,
											"end": 937,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 893,
											"end": 937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 893,
											"end": 937,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 893,
											"end": 937,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 893,
											"end": 937,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 893,
											"end": 937,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 893,
											"end": 937,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 893,
											"end": 937,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 893,
											"end": 937,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 893,
											"end": 937,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 893,
											"end": 937,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 5084,
											"end": 5249,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 5084,
											"end": 5249,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5084,
											"end": 5249,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 5084,
											"end": 5249,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5084,
											"end": 5249,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5084,
											"end": 5249,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 5084,
											"end": 5249,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5084,
											"end": 5249,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5084,
											"end": 5249,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5084,
											"end": 5249,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5084,
											"end": 5249,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 5084,
											"end": 5249,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5084,
											"end": 5249,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5084,
											"end": 5249,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 5084,
											"end": 5249,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5084,
											"end": 5249,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5084,
											"end": 5249,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 5084,
											"end": 5249,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5084,
											"end": 5249,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5084,
											"end": 5249,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5084,
											"end": 5249,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5084,
											"end": 5249,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 5084,
											"end": 5249,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5084,
											"end": 5249,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5084,
											"end": 5249,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 5084,
											"end": 5249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5084,
											"end": 5249,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 5084,
											"end": 5249,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5084,
											"end": 5249,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 5084,
											"end": 5249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5084,
											"end": 5249,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 5084,
											"end": 5249,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5084,
											"end": 5249,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5084,
											"end": 5249,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5084,
											"end": 5249,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 5084,
											"end": 5249,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5084,
											"end": 5249,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5084,
											"end": 5249,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5084,
											"end": 5249,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 5084,
											"end": 5249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5084,
											"end": 5249,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 5084,
											"end": 5249,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5084,
											"end": 5249,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5084,
											"end": 5249,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5084,
											"end": 5249,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5084,
											"end": 5249,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5084,
											"end": 5249,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5084,
											"end": 5249,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5084,
											"end": 5249,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1481,
											"end": 2059,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 1481,
											"end": 2059,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1481,
											"end": 2059,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 1481,
											"end": 2059,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1481,
											"end": 2059,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1481,
											"end": 2059,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1481,
											"end": 2059,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1481,
											"end": 2059,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1481,
											"end": 2059,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1481,
											"end": 2059,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1481,
											"end": 2059,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 1481,
											"end": 2059,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1481,
											"end": 2059,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1481,
											"end": 2059,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 1481,
											"end": 2059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1481,
											"end": 2059,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 1481,
											"end": 2059,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1481,
											"end": 2059,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 1481,
											"end": 2059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1481,
											"end": 2059,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 1481,
											"end": 2059,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1481,
											"end": 2059,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1481,
											"end": 2059,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1481,
											"end": 2059,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 1481,
											"end": 2059,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1481,
											"end": 2059,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1481,
											"end": 2059,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 1481,
											"end": 2059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1481,
											"end": 2059,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 1481,
											"end": 2059,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1481,
											"end": 2059,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1481,
											"end": 2059,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1481,
											"end": 2059,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1481,
											"end": 2059,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1481,
											"end": 2059,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1481,
											"end": 2059,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1481,
											"end": 2059,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 5255,
											"end": 5492,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 5255,
											"end": 5492,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5255,
											"end": 5492,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 5255,
											"end": 5492,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5255,
											"end": 5492,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5255,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 5255,
											"end": 5492,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5255,
											"end": 5492,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5255,
											"end": 5492,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5255,
											"end": 5492,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5255,
											"end": 5492,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 5255,
											"end": 5492,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5255,
											"end": 5492,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5255,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 5255,
											"end": 5492,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5255,
											"end": 5492,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5255,
											"end": 5492,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 5255,
											"end": 5492,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5255,
											"end": 5492,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5255,
											"end": 5492,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5255,
											"end": 5492,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5255,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 5255,
											"end": 5492,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5255,
											"end": 5492,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5255,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 5255,
											"end": 5492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5255,
											"end": 5492,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 5255,
											"end": 5492,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5255,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 5255,
											"end": 5492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5255,
											"end": 5492,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 5255,
											"end": 5492,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5255,
											"end": 5492,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5255,
											"end": 5492,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5255,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 5255,
											"end": 5492,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5255,
											"end": 5492,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5255,
											"end": 5492,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5255,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 5255,
											"end": 5492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5255,
											"end": 5492,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 5255,
											"end": 5492,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5255,
											"end": 5492,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5255,
											"end": 5492,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5255,
											"end": 5492,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5255,
											"end": 5492,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5255,
											"end": 5492,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5255,
											"end": 5492,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5255,
											"end": 5492,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 5500,
											"end": 5742,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 5500,
											"end": 5742,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5500,
											"end": 5742,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 5500,
											"end": 5742,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5500,
											"end": 5742,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5500,
											"end": 5742,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 5500,
											"end": 5742,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5500,
											"end": 5742,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5500,
											"end": 5742,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5500,
											"end": 5742,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5500,
											"end": 5742,
											"name": "tag",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 5500,
											"end": 5742,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5500,
											"end": 5742,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5500,
											"end": 5742,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 5500,
											"end": 5742,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5500,
											"end": 5742,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5500,
											"end": 5742,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 5500,
											"end": 5742,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5500,
											"end": 5742,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5500,
											"end": 5742,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5500,
											"end": 5742,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5500,
											"end": 5742,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 5500,
											"end": 5742,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5500,
											"end": 5742,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5500,
											"end": 5742,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 5500,
											"end": 5742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5500,
											"end": 5742,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 5500,
											"end": 5742,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5500,
											"end": 5742,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 5500,
											"end": 5742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5500,
											"end": 5742,
											"name": "tag",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 5500,
											"end": 5742,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5500,
											"end": 5742,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5500,
											"end": 5742,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5500,
											"end": 5742,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 5500,
											"end": 5742,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5500,
											"end": 5742,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5500,
											"end": 5742,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5500,
											"end": 5742,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 5500,
											"end": 5742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5500,
											"end": 5742,
											"name": "tag",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 5500,
											"end": 5742,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5500,
											"end": 5742,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5500,
											"end": 5742,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5500,
											"end": 5742,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5500,
											"end": 5742,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5500,
											"end": 5742,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5500,
											"end": 5742,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5500,
											"end": 5742,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 6930,
											"end": 7119,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 6930,
											"end": 7119,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6930,
											"end": 7119,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 6930,
											"end": 7119,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6930,
											"end": 7119,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6930,
											"end": 7119,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 6930,
											"end": 7119,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6930,
											"end": 7119,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6930,
											"end": 7119,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6930,
											"end": 7119,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6930,
											"end": 7119,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 6930,
											"end": 7119,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6930,
											"end": 7119,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6930,
											"end": 7119,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 6930,
											"end": 7119,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 6930,
											"end": 7119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6930,
											"end": 7119,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 6930,
											"end": 7119,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6930,
											"end": 7119,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6930,
											"end": 7119,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6930,
											"end": 7119,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 6930,
											"end": 7119,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6930,
											"end": 7119,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6930,
											"end": 7119,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 6930,
											"end": 7119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6930,
											"end": 7119,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 6930,
											"end": 7119,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6930,
											"end": 7119,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6930,
											"end": 7119,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6930,
											"end": 7119,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6930,
											"end": 7119,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6930,
											"end": 7119,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6930,
											"end": 7119,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6930,
											"end": 7119,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 721,
											"end": 769,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 721,
											"end": 769,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 721,
											"end": 769,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 721,
											"end": 769,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 721,
											"end": 769,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 721,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 721,
											"end": 769,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 721,
											"end": 769,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 721,
											"end": 769,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 721,
											"end": 769,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 721,
											"end": 769,
											"name": "tag",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 721,
											"end": 769,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 721,
											"end": 769,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 721,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 721,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 721,
											"end": 769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 721,
											"end": 769,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 721,
											"end": 769,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 721,
											"end": 769,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 721,
											"end": 769,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 721,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 721,
											"end": 769,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 721,
											"end": 769,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 721,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 721,
											"end": 769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 721,
											"end": 769,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 721,
											"end": 769,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 721,
											"end": 769,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 721,
											"end": 769,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 721,
											"end": 769,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 721,
											"end": 769,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 721,
											"end": 769,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 721,
											"end": 769,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 721,
											"end": 769,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3508,
											"end": 4293,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 3508,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3508,
											"end": 4293,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 3508,
											"end": 4293,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3508,
											"end": 4293,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3508,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 3508,
											"end": 4293,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3508,
											"end": 4293,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3508,
											"end": 4293,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3508,
											"end": 4293,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3508,
											"end": 4293,
											"name": "tag",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 3508,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3508,
											"end": 4293,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3508,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 3508,
											"end": 4293,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3508,
											"end": 4293,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3508,
											"end": 4293,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3508,
											"end": 4293,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3508,
											"end": 4293,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3508,
											"end": 4293,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3508,
											"end": 4293,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3508,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 3508,
											"end": 4293,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3508,
											"end": 4293,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3508,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 3508,
											"end": 4293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3508,
											"end": 4293,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 3508,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3508,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 3508,
											"end": 4293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3508,
											"end": 4293,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 3508,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3508,
											"end": 4293,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3508,
											"end": 4293,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3508,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 3508,
											"end": 4293,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3508,
											"end": 4293,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3508,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 3508,
											"end": 4293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3508,
											"end": 4293,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 3508,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3508,
											"end": 4293,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3508,
											"end": 4293,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3508,
											"end": 4293,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3508,
											"end": 4293,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3508,
											"end": 4293,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3508,
											"end": 4293,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3508,
											"end": 4293,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 8032,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 7716,
											"end": 8032,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 8032,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 8032,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 8032,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 8032,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 7716,
											"end": 8032,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 8032,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7716,
											"end": 8032,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 8032,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 8032,
											"name": "tag",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 7716,
											"end": 8032,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 8032,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 8032,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 7716,
											"end": 8032,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7716,
											"end": 8032,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 8032,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 8032,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 8032,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 8032,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 8032,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 8032,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 7716,
											"end": 8032,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 8032,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 8032,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 7716,
											"end": 8032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 8032,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 7716,
											"end": 8032,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 8032,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 7716,
											"end": 8032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 8032,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 7716,
											"end": 8032,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 8032,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7716,
											"end": 8032,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 8032,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 7716,
											"end": 8032,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 8032,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 8032,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 7716,
											"end": 8032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 8032,
											"name": "tag",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 7716,
											"end": 8032,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 8032,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7716,
											"end": 8032,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 8032,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 8032,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 8032,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 8032,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 8032,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 817,
											"end": 842,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 817,
											"end": 842,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 817,
											"end": 842,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 817,
											"end": 842,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 817,
											"end": 842,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 817,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 817,
											"end": 842,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 817,
											"end": 842,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 817,
											"end": 842,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 817,
											"end": 842,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 817,
											"end": 842,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 817,
											"end": 842,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 817,
											"end": 842,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 817,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 817,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 817,
											"end": 842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 817,
											"end": 842,
											"name": "tag",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 817,
											"end": 842,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 817,
											"end": 842,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 842,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 817,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 817,
											"end": 842,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 817,
											"end": 842,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 817,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 817,
											"end": 842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 817,
											"end": 842,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 817,
											"end": 842,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 817,
											"end": 842,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 842,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 817,
											"end": 842,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 817,
											"end": 842,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 817,
											"end": 842,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 817,
											"end": 842,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 817,
											"end": 842,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 6396,
											"end": 6499,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 6396,
											"end": 6499,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6396,
											"end": 6499,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 6396,
											"end": 6499,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6396,
											"end": 6499,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6396,
											"end": 6499,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 6396,
											"end": 6499,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6396,
											"end": 6499,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6396,
											"end": 6499,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6396,
											"end": 6499,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6396,
											"end": 6499,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 6396,
											"end": 6499,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6396,
											"end": 6499,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6396,
											"end": 6499,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 6396,
											"end": 6499,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6396,
											"end": 6499,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6396,
											"end": 6499,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 6396,
											"end": 6499,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6396,
											"end": 6499,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6396,
											"end": 6499,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6396,
											"end": 6499,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6396,
											"end": 6499,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 6396,
											"end": 6499,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6396,
											"end": 6499,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6396,
											"end": 6499,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 6396,
											"end": 6499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6396,
											"end": 6499,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 6396,
											"end": 6499,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6396,
											"end": 6499,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 6396,
											"end": 6499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6396,
											"end": 6499,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 6396,
											"end": 6499,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6396,
											"end": 6499,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6396,
											"end": 6499,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6396,
											"end": 6499,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 6396,
											"end": 6499,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6396,
											"end": 6499,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6396,
											"end": 6499,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 6396,
											"end": 6499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6396,
											"end": 6499,
											"name": "tag",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 6396,
											"end": 6499,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6396,
											"end": 6499,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6396,
											"end": 6499,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6396,
											"end": 6499,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6396,
											"end": 6499,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6396,
											"end": 6499,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6396,
											"end": 6499,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6396,
											"end": 6499,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 685,
											"end": 714,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 685,
											"end": 714,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 685,
											"end": 714,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 685,
											"end": 714,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 685,
											"end": 714,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 685,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 685,
											"end": 714,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 685,
											"end": 714,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 685,
											"end": 714,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 685,
											"end": 714,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 685,
											"end": 714,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 685,
											"end": 714,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 685,
											"end": 714,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 685,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 685,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 685,
											"end": 714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 685,
											"end": 714,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 685,
											"end": 714,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 685,
											"end": 714,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 685,
											"end": 714,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 685,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 685,
											"end": 714,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 685,
											"end": 714,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 685,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 685,
											"end": 714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 685,
											"end": 714,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 685,
											"end": 714,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 685,
											"end": 714,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 685,
											"end": 714,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 685,
											"end": 714,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 685,
											"end": 714,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 685,
											"end": 714,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 685,
											"end": 714,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 685,
											"end": 714,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 7125,
											"end": 7384,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 7125,
											"end": 7384,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7125,
											"end": 7384,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 7125,
											"end": 7384,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7125,
											"end": 7384,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7125,
											"end": 7384,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 7125,
											"end": 7384,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7125,
											"end": 7384,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7125,
											"end": 7384,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7125,
											"end": 7384,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7125,
											"end": 7384,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 7125,
											"end": 7384,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7125,
											"end": 7384,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7125,
											"end": 7384,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 7125,
											"end": 7384,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 7125,
											"end": 7384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7125,
											"end": 7384,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 7125,
											"end": 7384,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7125,
											"end": 7384,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7125,
											"end": 7384,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7125,
											"end": 7384,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 7125,
											"end": 7384,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7125,
											"end": 7384,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7125,
											"end": 7384,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 7125,
											"end": 7384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7125,
											"end": 7384,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 7125,
											"end": 7384,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7125,
											"end": 7384,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7125,
											"end": 7384,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7125,
											"end": 7384,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7125,
											"end": 7384,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7125,
											"end": 7384,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7125,
											"end": 7384,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7125,
											"end": 7384,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 778,
											"end": 803,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 778,
											"end": 803,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 778,
											"end": 803,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 778,
											"end": 803,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 778,
											"end": 803,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 778,
											"end": 803,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 860,
											"end": 886,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 860,
											"end": 886,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 860,
											"end": 886,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 860,
											"end": 886,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 860,
											"end": 886,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 860,
											"end": 886,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4299,
											"end": 5076,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 4299,
											"end": 5076,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4365,
											"end": 4379,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4392,
											"end": 4397,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "1586"
										},
										{
											"begin": 4392,
											"end": 4410,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4392,
											"end": 4410,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4392,
											"end": 4410,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 4411,
											"end": 4421,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4431,
											"end": 4435,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 4438,
											"end": 4446,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4392,
											"end": 4447,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4392,
											"end": 4447,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4392,
											"end": 4447,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4392,
											"end": 4447,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4392,
											"end": 4447,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4392,
											"end": 4447,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 4392,
											"end": 4447,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 4392,
											"end": 4447,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4392,
											"end": 4447,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4392,
											"end": 4447,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4392,
											"end": 4447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4392,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 4392,
											"end": 4447,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4392,
											"end": 4447,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4392,
											"end": 4447,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4392,
											"end": 4447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4392,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 4392,
											"end": 4447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4392,
											"end": 4447,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 4392,
											"end": 4447,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4392,
											"end": 4447,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4392,
											"end": 4447,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4392,
											"end": 4447,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4392,
											"end": 4447,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4392,
											"end": 4447,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4392,
											"end": 4447,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4392,
											"end": 4447,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4392,
											"end": 4447,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4392,
											"end": 4447,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 4392,
											"end": 4447,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 4392,
											"end": 4447,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 4392,
											"end": 4447,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4392,
											"end": 4447,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4392,
											"end": 4447,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4392,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 4392,
											"end": 4447,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4392,
											"end": 4447,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4392,
											"end": 4447,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4392,
											"end": 4447,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4392,
											"end": 4447,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 4392,
											"end": 4447,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4392,
											"end": 4447,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4392,
											"end": 4447,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4392,
											"end": 4447,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 4392,
											"end": 4447,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4392,
											"end": 4447,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4392,
											"end": 4447,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4392,
											"end": 4447,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4392,
											"end": 4447,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4392,
											"end": 4447,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4392,
											"end": 4447,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4392,
											"end": 4447,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4392,
											"end": 4447,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4392,
											"end": 4447,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 4392,
											"end": 4447,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4392,
											"end": 4447,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4392,
											"end": 4447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4392,
											"end": 4447,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4392,
											"end": 4447,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4392,
											"end": 4447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4392,
											"end": 4447,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4392,
											"end": 4447,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4392,
											"end": 4447,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4392,
											"end": 4447,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4392,
											"end": 4447,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4392,
											"end": 4447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4392,
											"end": 4447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4392,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 4392,
											"end": 4447,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4392,
											"end": 4447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4392,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 4392,
											"end": 4447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4392,
											"end": 4447,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 4392,
											"end": 4447,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4392,
											"end": 4447,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4460,
											"end": 4476,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4479,
											"end": 4488,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 4460,
											"end": 4488,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4460,
											"end": 4488,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4518,
											"end": 4519,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4505,
											"end": 4515,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4505,
											"end": 4515,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4505,
											"end": 4519,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4505,
											"end": 4537,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4505,
											"end": 4537,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 4505,
											"end": 4537,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4505,
											"end": 4537,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4536,
											"end": 4537,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4523,
											"end": 4533,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 4523,
											"end": 4533,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4523,
											"end": 4537,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4505,
											"end": 4537,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 4505,
											"end": 4537,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4501,
											"end": 4641,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4501,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 4501,
											"end": 4641,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4600,
											"end": 4608,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4587,
											"end": 4597,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 4587,
											"end": 4597,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4587,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 4587,
											"end": 4608,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4587,
											"end": 4608,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4587,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 4587,
											"end": 4608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4587,
											"end": 4608,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 4587,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4575,
											"end": 4583,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4562,
											"end": 4572,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4562,
											"end": 4572,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4562,
											"end": 4583,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 4562,
											"end": 4583,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4562,
											"end": 4583,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4562,
											"end": 4583,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 4562,
											"end": 4583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4562,
											"end": 4583,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 4562,
											"end": 4583,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4562,
											"end": 4608,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 4554,
											"end": 4629,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 4554,
											"end": 4629,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4554,
											"end": 4629,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4554,
											"end": 4629,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4554,
											"end": 4629,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4554,
											"end": 4629,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4554,
											"end": 4629,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4554,
											"end": 4629,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4554,
											"end": 4629,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4554,
											"end": 4629,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 4554,
											"end": 4629,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4554,
											"end": 4629,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 4554,
											"end": 4629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4554,
											"end": 4629,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 4554,
											"end": 4629,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4554,
											"end": 4629,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4554,
											"end": 4629,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4554,
											"end": 4629,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4554,
											"end": 4629,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4554,
											"end": 4629,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4554,
											"end": 4629,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4554,
											"end": 4629,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4554,
											"end": 4629,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 4554,
											"end": 4629,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4501,
											"end": 4641,
											"name": "tag",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 4501,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4672,
											"end": 4673,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4657,
											"end": 4668,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 4657,
											"end": 4668,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4657,
											"end": 4673,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4653,
											"end": 4914,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 4653,
											"end": 4914,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4699,
											"end": 4725,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 4716,
											"end": 4724,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4705,
											"end": 4713,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4705,
											"end": 4724,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 4705,
											"end": 4724,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4705,
											"end": 4724,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4705,
											"end": 4724,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 4705,
											"end": 4724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4705,
											"end": 4724,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 4705,
											"end": 4724,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4699,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 4699,
											"end": 4725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4699,
											"end": 4725,
											"name": "tag",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 4699,
											"end": 4725,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4690,
											"end": 4725,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4690,
											"end": 4725,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4653,
											"end": 4914,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 4653,
											"end": 4914,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4653,
											"end": 4914,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 4653,
											"end": 4914,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4767,
											"end": 4902,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 4821,
											"end": 4831,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4821,
											"end": 4831,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4806,
											"end": 4817,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 4806,
											"end": 4817,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4795,
											"end": 4803,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4795,
											"end": 4817,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 4795,
											"end": 4817,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4795,
											"end": 4817,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4795,
											"end": 4817,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 4795,
											"end": 4817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4795,
											"end": 4817,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 4795,
											"end": 4817,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4794,
											"end": 4831,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 4794,
											"end": 4831,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4794,
											"end": 4831,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4794,
											"end": 4831,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 4794,
											"end": 4831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4794,
											"end": 4831,
											"name": "tag",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 4794,
											"end": 4831,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4877,
											"end": 4887,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 4877,
											"end": 4887,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4862,
											"end": 4873,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 4862,
											"end": 4873,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4851,
											"end": 4859,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4851,
											"end": 4873,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 4851,
											"end": 4873,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4851,
											"end": 4873,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4851,
											"end": 4873,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 4851,
											"end": 4873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4851,
											"end": 4873,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 4851,
											"end": 4873,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4850,
											"end": 4887,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 4850,
											"end": 4887,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4850,
											"end": 4887,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4850,
											"end": 4887,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 4850,
											"end": 4887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4850,
											"end": 4887,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 4850,
											"end": 4887,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4767,
											"end": 4775,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 4767,
											"end": 4902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4767,
											"end": 4902,
											"name": "tag",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 4767,
											"end": 4902,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4758,
											"end": 4902,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4758,
											"end": 4902,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4653,
											"end": 4914,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 4653,
											"end": 4914,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4941,
											"end": 4942,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4932,
											"end": 4938,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4932,
											"end": 4942,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4924,
											"end": 4957,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 4924,
											"end": 4957,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4924,
											"end": 4957,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4924,
											"end": 4957,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4924,
											"end": 4957,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4924,
											"end": 4957,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4924,
											"end": 4957,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4924,
											"end": 4957,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4924,
											"end": 4957,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4924,
											"end": 4957,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 4924,
											"end": 4957,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4924,
											"end": 4957,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 4924,
											"end": 4957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4924,
											"end": 4957,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 4924,
											"end": 4957,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4924,
											"end": 4957,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4924,
											"end": 4957,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4924,
											"end": 4957,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4924,
											"end": 4957,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4924,
											"end": 4957,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4924,
											"end": 4957,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4924,
											"end": 4957,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4924,
											"end": 4957,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 4924,
											"end": 4957,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4968,
											"end": 4993,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 4974,
											"end": 4984,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4986,
											"end": 4992,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4968,
											"end": 4973,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 4968,
											"end": 4993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4968,
											"end": 4993,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 4968,
											"end": 4993,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5006,
											"end": 5068,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 5014,
											"end": 5035,
											"name": "SELFBALANCE",
											"source": 5
										},
										{
											"begin": 5037,
											"end": 5042,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "1586"
										},
										{
											"begin": 5037,
											"end": 5052,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5037,
											"end": 5052,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5037,
											"end": 5052,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 5061,
											"end": 5065,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 5037,
											"end": 5067,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5037,
											"end": 5067,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5037,
											"end": 5067,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5037,
											"end": 5067,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5037,
											"end": 5067,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5037,
											"end": 5067,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 5037,
											"end": 5067,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 5037,
											"end": 5067,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5037,
											"end": 5067,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5037,
											"end": 5067,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5037,
											"end": 5067,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5037,
											"end": 5067,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 5037,
											"end": 5067,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5037,
											"end": 5067,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5037,
											"end": 5067,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 5037,
											"end": 5067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5037,
											"end": 5067,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 5037,
											"end": 5067,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5037,
											"end": 5067,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5037,
											"end": 5067,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5037,
											"end": 5067,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5037,
											"end": 5067,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5037,
											"end": 5067,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5037,
											"end": 5067,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5037,
											"end": 5067,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5037,
											"end": 5067,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5037,
											"end": 5067,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 5037,
											"end": 5067,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 5037,
											"end": 5067,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5037,
											"end": 5067,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5037,
											"end": 5067,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5037,
											"end": 5067,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 5037,
											"end": 5067,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5037,
											"end": 5067,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5037,
											"end": 5067,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5037,
											"end": 5067,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5037,
											"end": 5067,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 5037,
											"end": 5067,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5037,
											"end": 5067,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5037,
											"end": 5067,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5037,
											"end": 5067,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 5037,
											"end": 5067,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5037,
											"end": 5067,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5037,
											"end": 5067,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5037,
											"end": 5067,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5037,
											"end": 5067,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5037,
											"end": 5067,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5037,
											"end": 5067,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5037,
											"end": 5067,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5037,
											"end": 5067,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 5037,
											"end": 5067,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 5037,
											"end": 5067,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 5037,
											"end": 5067,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5037,
											"end": 5067,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5037,
											"end": 5067,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5037,
											"end": 5067,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5037,
											"end": 5067,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5037,
											"end": 5067,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5037,
											"end": 5067,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5037,
											"end": 5067,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5037,
											"end": 5067,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5037,
											"end": 5067,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5037,
											"end": 5067,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5037,
											"end": 5067,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5037,
											"end": 5067,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 5037,
											"end": 5067,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5037,
											"end": 5067,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5037,
											"end": 5067,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 5037,
											"end": 5067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5037,
											"end": 5067,
											"name": "tag",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 5037,
											"end": 5067,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5006,
											"end": 5013,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 5006,
											"end": 5068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5006,
											"end": 5068,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 5006,
											"end": 5068,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4381,
											"end": 5076,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4299,
											"end": 5076,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4299,
											"end": 5076,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4299,
											"end": 5076,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4299,
											"end": 5076,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7392,
											"end": 7710,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 7392,
											"end": 7710,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7464,
											"end": 7471,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7505,
											"end": 7506,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7492,
											"end": 7502,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 7492,
											"end": 7502,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7492,
											"end": 7506,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 7492,
											"end": 7524,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7492,
											"end": 7524,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7492,
											"end": 7524,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 7492,
											"end": 7524,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7492,
											"end": 7524,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7523,
											"end": 7524,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7510,
											"end": 7520,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 7510,
											"end": 7520,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7510,
											"end": 7524,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 7492,
											"end": 7524,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 7492,
											"end": 7524,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7492,
											"end": 7537,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7492,
											"end": 7537,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7492,
											"end": 7537,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 7492,
											"end": 7537,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7492,
											"end": 7537,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7536,
											"end": 7537,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7528,
											"end": 7535,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7528,
											"end": 7537,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 7492,
											"end": 7537,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 7492,
											"end": 7537,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7484,
											"end": 7564,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 7484,
											"end": 7564,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7484,
											"end": 7564,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7484,
											"end": 7564,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7484,
											"end": 7564,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7484,
											"end": 7564,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7484,
											"end": 7564,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7484,
											"end": 7564,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7484,
											"end": 7564,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7484,
											"end": 7564,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 7484,
											"end": 7564,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7484,
											"end": 7564,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 7484,
											"end": 7564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7484,
											"end": 7564,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 7484,
											"end": 7564,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7484,
											"end": 7564,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7484,
											"end": 7564,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7484,
											"end": 7564,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7484,
											"end": 7564,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7484,
											"end": 7564,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7484,
											"end": 7564,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7484,
											"end": 7564,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7484,
											"end": 7564,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 7484,
											"end": 7564,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7575,
											"end": 7598,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7617,
											"end": 7621,
											"name": "PUSH",
											"source": 5,
											"value": "3E8"
										},
										{
											"begin": 7610,
											"end": 7613,
											"name": "PUSH",
											"source": 5,
											"value": "3E5"
										},
										{
											"begin": 7600,
											"end": 7607,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7600,
											"end": 7613,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 7600,
											"end": 7613,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7600,
											"end": 7613,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7600,
											"end": 7613,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 7600,
											"end": 7613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7600,
											"end": 7613,
											"name": "tag",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 7600,
											"end": 7613,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7599,
											"end": 7621,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 7599,
											"end": 7621,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7599,
											"end": 7621,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7599,
											"end": 7621,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 7599,
											"end": 7621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7599,
											"end": 7621,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 7599,
											"end": 7621,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7575,
											"end": 7621,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7575,
											"end": 7621,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7686,
											"end": 7701,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7673,
											"end": 7683,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 7673,
											"end": 7683,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7673,
											"end": 7701,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 7673,
											"end": 7701,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7673,
											"end": 7701,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7673,
											"end": 7701,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 7673,
											"end": 7701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7673,
											"end": 7701,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 7673,
											"end": 7701,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7653,
											"end": 7668,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7640,
											"end": 7650,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 7640,
											"end": 7650,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7640,
											"end": 7668,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 7640,
											"end": 7668,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7640,
											"end": 7668,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7640,
											"end": 7668,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 7640,
											"end": 7668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7640,
											"end": 7668,
											"name": "tag",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 7640,
											"end": 7668,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7639,
											"end": 7702,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 7639,
											"end": 7702,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7639,
											"end": 7702,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7639,
											"end": 7702,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 7639,
											"end": 7702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7639,
											"end": 7702,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 7639,
											"end": 7702,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7632,
											"end": 7702,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7632,
											"end": 7702,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7632,
											"end": 7702,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7392,
											"end": 7710,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7392,
											"end": 7710,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7392,
											"end": 7710,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7392,
											"end": 7710,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2719,
											"end": 3502,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 2719,
											"end": 3502,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2830,
											"end": 2847,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2886,
											"end": 2895,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2873,
											"end": 2882,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 2873,
											"end": 2895,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2865,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 2865,
											"end": 2919,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2865,
											"end": 2919,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2865,
											"end": 2919,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2865,
											"end": 2919,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2865,
											"end": 2919,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2865,
											"end": 2919,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2865,
											"end": 2919,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2865,
											"end": 2919,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2865,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 2865,
											"end": 2919,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2865,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 2865,
											"end": 2919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2865,
											"end": 2919,
											"name": "tag",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 2865,
											"end": 2919,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2865,
											"end": 2919,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2865,
											"end": 2919,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2865,
											"end": 2919,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2865,
											"end": 2919,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2865,
											"end": 2919,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2865,
											"end": 2919,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2865,
											"end": 2919,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2865,
											"end": 2919,
											"name": "tag",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 2865,
											"end": 2919,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2932,
											"end": 2955,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2978,
											"end": 2982,
											"name": "PUSH",
											"source": 5,
											"value": "3E8"
										},
										{
											"begin": 2971,
											"end": 2974,
											"name": "PUSH",
											"source": 5,
											"value": "3E5"
										},
										{
											"begin": 2959,
											"end": 2968,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2959,
											"end": 2974,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 2959,
											"end": 2974,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2959,
											"end": 2974,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2959,
											"end": 2974,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 2959,
											"end": 2974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2959,
											"end": 2974,
											"name": "tag",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 2959,
											"end": 2974,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2958,
											"end": 2982,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 2958,
											"end": 2982,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2958,
											"end": 2982,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2958,
											"end": 2982,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 2958,
											"end": 2982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2958,
											"end": 2982,
											"name": "tag",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 2958,
											"end": 2982,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2932,
											"end": 2982,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2932,
											"end": 2982,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3052,
											"end": 3067,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3039,
											"end": 3049,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3039,
											"end": 3049,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3039,
											"end": 3067,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 3039,
											"end": 3067,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3039,
											"end": 3067,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3039,
											"end": 3067,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 3039,
											"end": 3067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3039,
											"end": 3067,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 3039,
											"end": 3067,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3019,
											"end": 3034,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3006,
											"end": 3016,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 3006,
											"end": 3016,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3006,
											"end": 3034,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 3006,
											"end": 3034,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3006,
											"end": 3034,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3006,
											"end": 3034,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 3006,
											"end": 3034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3006,
											"end": 3034,
											"name": "tag",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 3006,
											"end": 3034,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3005,
											"end": 3068,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 3005,
											"end": 3068,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3005,
											"end": 3068,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3005,
											"end": 3068,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 3005,
											"end": 3068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3005,
											"end": 3068,
											"name": "tag",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 3005,
											"end": 3068,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2993,
											"end": 3068,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2993,
											"end": 3068,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3099,
											"end": 3100,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3087,
											"end": 3096,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3087,
											"end": 3100,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3079,
											"end": 3131,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 3079,
											"end": 3131,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3079,
											"end": 3131,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3079,
											"end": 3131,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3079,
											"end": 3131,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3079,
											"end": 3131,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3079,
											"end": 3131,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3079,
											"end": 3131,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3079,
											"end": 3131,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3079,
											"end": 3131,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 3079,
											"end": 3131,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3079,
											"end": 3131,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 3079,
											"end": 3131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3079,
											"end": 3131,
											"name": "tag",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 3079,
											"end": 3131,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3079,
											"end": 3131,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3079,
											"end": 3131,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3079,
											"end": 3131,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3079,
											"end": 3131,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3079,
											"end": 3131,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3079,
											"end": 3131,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3079,
											"end": 3131,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3079,
											"end": 3131,
											"name": "tag",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 3079,
											"end": 3131,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3196,
											"end": 3200,
											"name": "PUSH",
											"source": 5,
											"value": "3E8"
										},
										{
											"begin": 3185,
											"end": 3194,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3180,
											"end": 3184,
											"name": "PUSH",
											"source": 5,
											"value": "3E8"
										},
										{
											"begin": 3180,
											"end": 3194,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 3180,
											"end": 3194,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3180,
											"end": 3194,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3180,
											"end": 3194,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 3180,
											"end": 3194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3180,
											"end": 3194,
											"name": "tag",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 3180,
											"end": 3194,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3164,
											"end": 3178,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3164,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 3164,
											"end": 3195,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3164,
											"end": 3195,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3164,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 3164,
											"end": 3195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3164,
											"end": 3195,
											"name": "tag",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 3164,
											"end": 3195,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3164,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 3164,
											"end": 3200,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3164,
											"end": 3200,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3164,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 3164,
											"end": 3200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3164,
											"end": 3200,
											"name": "tag",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 3164,
											"end": 3200,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3150,
											"end": 3159,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3150,
											"end": 3201,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 3150,
											"end": 3201,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3142,
											"end": 3214,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 3142,
											"end": 3214,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3142,
											"end": 3214,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3142,
											"end": 3214,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3142,
											"end": 3214,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3142,
											"end": 3214,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3142,
											"end": 3214,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3142,
											"end": 3214,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3142,
											"end": 3214,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3142,
											"end": 3214,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 3142,
											"end": 3214,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3142,
											"end": 3214,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 3142,
											"end": 3214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3142,
											"end": 3214,
											"name": "tag",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 3142,
											"end": 3214,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3142,
											"end": 3214,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3142,
											"end": 3214,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3142,
											"end": 3214,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3142,
											"end": 3214,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3142,
											"end": 3214,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3142,
											"end": 3214,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3142,
											"end": 3214,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3142,
											"end": 3214,
											"name": "tag",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 3142,
											"end": 3214,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3225,
											"end": 3247,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3288,
											"end": 3292,
											"name": "PUSH",
											"source": 5,
											"value": "7D0"
										},
										{
											"begin": 3277,
											"end": 3287,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3277,
											"end": 3287,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3277,
											"end": 3292,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 3277,
											"end": 3292,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3277,
											"end": 3292,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3277,
											"end": 3292,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 3277,
											"end": 3292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3277,
											"end": 3292,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 3277,
											"end": 3292,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3264,
											"end": 3275,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 3264,
											"end": 3275,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3262,
											"end": 3263,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 3250,
											"end": 3263,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 3250,
											"end": 3263,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3250,
											"end": 3263,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3250,
											"end": 3263,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 3250,
											"end": 3263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3250,
											"end": 3263,
											"name": "tag",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 3250,
											"end": 3263,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3250,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 3250,
											"end": 3275,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3250,
											"end": 3275,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3250,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 3250,
											"end": 3275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3250,
											"end": 3275,
											"name": "tag",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 3250,
											"end": 3275,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3250,
											"end": 3293,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 3250,
											"end": 3293,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3250,
											"end": 3293,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3250,
											"end": 3293,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 3250,
											"end": 3293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3250,
											"end": 3293,
											"name": "tag",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 3250,
											"end": 3293,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3225,
											"end": 3293,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3225,
											"end": 3293,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3304,
											"end": 3335,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 3310,
											"end": 3319,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3310,
											"end": 3319,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3310,
											"end": 3319,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3310,
											"end": 3319,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3310,
											"end": 3319,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3310,
											"end": 3319,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 3310,
											"end": 3319,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3310,
											"end": 3319,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 3310,
											"end": 3319,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3310,
											"end": 3319,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3320,
											"end": 3334,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3304,
											"end": 3309,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 3304,
											"end": 3335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3304,
											"end": 3335,
											"name": "tag",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 3304,
											"end": 3335,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3382,
											"end": 3387,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "1586"
										},
										{
											"begin": 3382,
											"end": 3396,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3382,
											"end": 3396,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3382,
											"end": 3396,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 3397,
											"end": 3407,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3409,
											"end": 3418,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3382,
											"end": 3419,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3382,
											"end": 3419,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3382,
											"end": 3419,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3382,
											"end": 3419,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3382,
											"end": 3419,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3382,
											"end": 3419,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 3382,
											"end": 3419,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 3382,
											"end": 3419,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3382,
											"end": 3419,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3382,
											"end": 3419,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3382,
											"end": 3419,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3382,
											"end": 3419,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 3382,
											"end": 3419,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3382,
											"end": 3419,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3382,
											"end": 3419,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3382,
											"end": 3419,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 3382,
											"end": 3419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3382,
											"end": 3419,
											"name": "tag",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 3382,
											"end": 3419,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3382,
											"end": 3419,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3382,
											"end": 3419,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3382,
											"end": 3419,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3382,
											"end": 3419,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3382,
											"end": 3419,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3382,
											"end": 3419,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3382,
											"end": 3419,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3382,
											"end": 3419,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3382,
											"end": 3419,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 3382,
											"end": 3419,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 3382,
											"end": 3419,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 3382,
											"end": 3419,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3382,
											"end": 3419,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3382,
											"end": 3419,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3382,
											"end": 3419,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 3382,
											"end": 3419,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3382,
											"end": 3419,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3382,
											"end": 3419,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3382,
											"end": 3419,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3382,
											"end": 3419,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 3382,
											"end": 3419,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3382,
											"end": 3419,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3382,
											"end": 3419,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3382,
											"end": 3419,
											"name": "tag",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 3382,
											"end": 3419,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3382,
											"end": 3419,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3382,
											"end": 3419,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3382,
											"end": 3419,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3382,
											"end": 3419,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3382,
											"end": 3419,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3382,
											"end": 3419,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3382,
											"end": 3419,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3382,
											"end": 3419,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3382,
											"end": 3419,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 3382,
											"end": 3419,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3382,
											"end": 3419,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3382,
											"end": 3419,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3382,
											"end": 3419,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3382,
											"end": 3419,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3382,
											"end": 3419,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3382,
											"end": 3419,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3382,
											"end": 3419,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3382,
											"end": 3419,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3382,
											"end": 3419,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3382,
											"end": 3419,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3382,
											"end": 3419,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3382,
											"end": 3419,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3382,
											"end": 3419,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 3382,
											"end": 3419,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3382,
											"end": 3419,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3382,
											"end": 3419,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 3382,
											"end": 3419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3382,
											"end": 3419,
											"name": "tag",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 3382,
											"end": 3419,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3382,
											"end": 3419,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3432,
											"end": 3494,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 3440,
											"end": 3461,
											"name": "SELFBALANCE",
											"source": 5
										},
										{
											"begin": 3463,
											"end": 3468,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "1586"
										},
										{
											"begin": 3463,
											"end": 3478,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3463,
											"end": 3478,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3463,
											"end": 3478,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 3487,
											"end": 3491,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 3463,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3463,
											"end": 3493,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3463,
											"end": 3493,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3463,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3463,
											"end": 3493,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3463,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 3463,
											"end": 3493,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 3463,
											"end": 3493,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3463,
											"end": 3493,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3463,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3463,
											"end": 3493,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3463,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 3463,
											"end": 3493,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3463,
											"end": 3493,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3463,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 3463,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3463,
											"end": 3493,
											"name": "tag",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 3463,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3463,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3463,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3463,
											"end": 3493,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3463,
											"end": 3493,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3463,
											"end": 3493,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3463,
											"end": 3493,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3463,
											"end": 3493,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3463,
											"end": 3493,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3463,
											"end": 3493,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 3463,
											"end": 3493,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 3463,
											"end": 3493,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3463,
											"end": 3493,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3463,
											"end": 3493,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3463,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 3463,
											"end": 3493,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3463,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3463,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3463,
											"end": 3493,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3463,
											"end": 3493,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 3463,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3463,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3463,
											"end": 3493,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3463,
											"end": 3493,
											"name": "tag",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 3463,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3463,
											"end": 3493,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3463,
											"end": 3493,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3463,
											"end": 3493,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3463,
											"end": 3493,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3463,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3463,
											"end": 3493,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3463,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3463,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3463,
											"end": 3493,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 3463,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3463,
											"end": 3493,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3463,
											"end": 3493,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3463,
											"end": 3493,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3463,
											"end": 3493,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3463,
											"end": 3493,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3463,
											"end": 3493,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3463,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3463,
											"end": 3493,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3463,
											"end": 3493,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3463,
											"end": 3493,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3463,
											"end": 3493,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3463,
											"end": 3493,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3463,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 3463,
											"end": 3493,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3463,
											"end": 3493,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3463,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 3463,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3463,
											"end": 3493,
											"name": "tag",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 3463,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3432,
											"end": 3439,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 3432,
											"end": 3494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3432,
											"end": 3494,
											"name": "tag",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 3432,
											"end": 3494,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2854,
											"end": 3502,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2854,
											"end": 3502,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2719,
											"end": 3502,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2719,
											"end": 3502,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2719,
											"end": 3502,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2719,
											"end": 3502,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2719,
											"end": 3502,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2719,
											"end": 3502,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6295,
											"end": 6390,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 6295,
											"end": 6390,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6335,
											"end": 6342,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6361,
											"end": 6370,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6361,
											"end": 6382,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6371,
											"end": 6381,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 6361,
											"end": 6382,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6361,
											"end": 6382,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6361,
											"end": 6382,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6361,
											"end": 6382,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6361,
											"end": 6382,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6361,
											"end": 6382,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6361,
											"end": 6382,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6361,
											"end": 6382,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6361,
											"end": 6382,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6361,
											"end": 6382,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6361,
											"end": 6382,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6361,
											"end": 6382,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6361,
											"end": 6382,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6361,
											"end": 6382,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6361,
											"end": 6382,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6361,
											"end": 6382,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6354,
											"end": 6382,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6354,
											"end": 6382,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6295,
											"end": 6390,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6295,
											"end": 6390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2065,
											"end": 2713,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 2065,
											"end": 2713,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2125,
											"end": 2142,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2155,
											"end": 2178,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2201,
											"end": 2205,
											"name": "PUSH",
											"source": 5,
											"value": "3E8"
										},
										{
											"begin": 2194,
											"end": 2197,
											"name": "PUSH",
											"source": 5,
											"value": "3E5"
										},
										{
											"begin": 2182,
											"end": 2191,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2182,
											"end": 2197,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 2182,
											"end": 2197,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2182,
											"end": 2197,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2182,
											"end": 2197,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 2182,
											"end": 2197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2182,
											"end": 2197,
											"name": "tag",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 2182,
											"end": 2197,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2181,
											"end": 2205,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 2181,
											"end": 2205,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2181,
											"end": 2205,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2181,
											"end": 2205,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 2181,
											"end": 2205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2181,
											"end": 2205,
											"name": "tag",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 2181,
											"end": 2205,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2155,
											"end": 2205,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2155,
											"end": 2205,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2277,
											"end": 2292,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2264,
											"end": 2274,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2264,
											"end": 2274,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2264,
											"end": 2292,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 2264,
											"end": 2292,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2264,
											"end": 2292,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2264,
											"end": 2292,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 2264,
											"end": 2292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2264,
											"end": 2292,
											"name": "tag",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 2264,
											"end": 2292,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2244,
											"end": 2259,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2231,
											"end": 2241,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2231,
											"end": 2241,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2231,
											"end": 2259,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 2231,
											"end": 2259,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2231,
											"end": 2259,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2231,
											"end": 2259,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 2231,
											"end": 2259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2231,
											"end": 2259,
											"name": "tag",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 2231,
											"end": 2259,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2230,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 2230,
											"end": 2293,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2230,
											"end": 2293,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2230,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 2230,
											"end": 2293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2230,
											"end": 2293,
											"name": "tag",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 2230,
											"end": 2293,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2218,
											"end": 2293,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2218,
											"end": 2293,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2324,
											"end": 2325,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2312,
											"end": 2321,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2312,
											"end": 2325,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2304,
											"end": 2356,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 2304,
											"end": 2356,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2304,
											"end": 2356,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2304,
											"end": 2356,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2304,
											"end": 2356,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2304,
											"end": 2356,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2304,
											"end": 2356,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2304,
											"end": 2356,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2304,
											"end": 2356,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2304,
											"end": 2356,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 2304,
											"end": 2356,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2304,
											"end": 2356,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 2304,
											"end": 2356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2304,
											"end": 2356,
											"name": "tag",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 2304,
											"end": 2356,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2304,
											"end": 2356,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2304,
											"end": 2356,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2304,
											"end": 2356,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2304,
											"end": 2356,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2304,
											"end": 2356,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2304,
											"end": 2356,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2304,
											"end": 2356,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2304,
											"end": 2356,
											"name": "tag",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 2304,
											"end": 2356,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2367,
											"end": 2389,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2430,
											"end": 2434,
											"name": "PUSH",
											"source": 5,
											"value": "7D0"
										},
										{
											"begin": 2419,
											"end": 2429,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2419,
											"end": 2429,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2419,
											"end": 2434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 2419,
											"end": 2434,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2419,
											"end": 2434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2419,
											"end": 2434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 2419,
											"end": 2434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2419,
											"end": 2434,
											"name": "tag",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 2419,
											"end": 2434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2406,
											"end": 2417,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 2406,
											"end": 2417,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2404,
											"end": 2405,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 2392,
											"end": 2401,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2392,
											"end": 2405,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 2392,
											"end": 2405,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2392,
											"end": 2405,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2392,
											"end": 2405,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 2392,
											"end": 2405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2392,
											"end": 2405,
											"name": "tag",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 2392,
											"end": 2405,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2392,
											"end": 2417,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 2392,
											"end": 2417,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2392,
											"end": 2417,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2392,
											"end": 2417,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 2392,
											"end": 2417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2392,
											"end": 2417,
											"name": "tag",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 2392,
											"end": 2417,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2392,
											"end": 2435,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 2392,
											"end": 2435,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2392,
											"end": 2435,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2392,
											"end": 2435,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 2392,
											"end": 2435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2392,
											"end": 2435,
											"name": "tag",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 2392,
											"end": 2435,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2367,
											"end": 2435,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2367,
											"end": 2435,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2446,
											"end": 2477,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 2452,
											"end": 2461,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2452,
											"end": 2461,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2452,
											"end": 2461,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2452,
											"end": 2461,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2452,
											"end": 2461,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2452,
											"end": 2461,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2452,
											"end": 2461,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2452,
											"end": 2461,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2452,
											"end": 2461,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2452,
											"end": 2461,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2462,
											"end": 2476,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2446,
											"end": 2451,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 2446,
											"end": 2477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2446,
											"end": 2477,
											"name": "tag",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 2446,
											"end": 2477,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2529,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "1586"
										},
										{
											"begin": 2524,
											"end": 2542,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2524,
											"end": 2542,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2542,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 2543,
											"end": 2553,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2563,
											"end": 2567,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 2570,
											"end": 2579,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 2524,
											"end": 2580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "tag",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "tag",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 2524,
											"end": 2580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "tag",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2580,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2599,
											"end": 2609,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2619,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2591,
											"end": 2619,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2630,
											"name": "PUSH",
											"source": 5,
											"value": "8FC"
										},
										{
											"begin": 2620,
											"end": 2629,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2630,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2630,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2630,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2630,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2630,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2630,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2591,
											"end": 2630,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2630,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2591,
											"end": 2630,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2591,
											"end": 2630,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2630,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2630,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2630,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2630,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2630,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2630,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2630,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2630,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2630,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2630,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2630,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2630,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2630,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2630,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2630,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2630,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2630,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 2591,
											"end": 2630,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2630,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2630,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2591,
											"end": 2630,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2630,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2630,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2630,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2591,
											"end": 2630,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2630,
											"name": "tag",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 2591,
											"end": 2630,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2630,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2643,
											"end": 2705,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 2651,
											"end": 2672,
											"name": "SELFBALANCE",
											"source": 5
										},
										{
											"begin": 2674,
											"end": 2679,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "1586"
										},
										{
											"begin": 2674,
											"end": 2689,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2674,
											"end": 2689,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2674,
											"end": 2689,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 2698,
											"end": 2702,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 2674,
											"end": 2704,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2674,
											"end": 2704,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2674,
											"end": 2704,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2674,
											"end": 2704,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2674,
											"end": 2704,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2674,
											"end": 2704,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2674,
											"end": 2704,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2674,
											"end": 2704,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2674,
											"end": 2704,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2674,
											"end": 2704,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2674,
											"end": 2704,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2674,
											"end": 2704,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 2674,
											"end": 2704,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2674,
											"end": 2704,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2674,
											"end": 2704,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 2674,
											"end": 2704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2674,
											"end": 2704,
											"name": "tag",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 2674,
											"end": 2704,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2674,
											"end": 2704,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2674,
											"end": 2704,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2674,
											"end": 2704,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2674,
											"end": 2704,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2674,
											"end": 2704,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2674,
											"end": 2704,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2674,
											"end": 2704,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2674,
											"end": 2704,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2674,
											"end": 2704,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 2674,
											"end": 2704,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 2674,
											"end": 2704,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2674,
											"end": 2704,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2674,
											"end": 2704,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2674,
											"end": 2704,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 2674,
											"end": 2704,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2674,
											"end": 2704,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2674,
											"end": 2704,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2674,
											"end": 2704,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2674,
											"end": 2704,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2674,
											"end": 2704,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2674,
											"end": 2704,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2674,
											"end": 2704,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2674,
											"end": 2704,
											"name": "tag",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 2674,
											"end": 2704,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2674,
											"end": 2704,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2674,
											"end": 2704,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2674,
											"end": 2704,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2674,
											"end": 2704,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2674,
											"end": 2704,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2674,
											"end": 2704,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2674,
											"end": 2704,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2674,
											"end": 2704,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2674,
											"end": 2704,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2674,
											"end": 2704,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2674,
											"end": 2704,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2674,
											"end": 2704,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2674,
											"end": 2704,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2674,
											"end": 2704,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2674,
											"end": 2704,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2674,
											"end": 2704,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2674,
											"end": 2704,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2674,
											"end": 2704,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2674,
											"end": 2704,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2674,
											"end": 2704,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2674,
											"end": 2704,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2674,
											"end": 2704,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2674,
											"end": 2704,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 2674,
											"end": 2704,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2674,
											"end": 2704,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2674,
											"end": 2704,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 2674,
											"end": 2704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2674,
											"end": 2704,
											"name": "tag",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 2674,
											"end": 2704,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2643,
											"end": 2650,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 2643,
											"end": 2705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2643,
											"end": 2705,
											"name": "tag",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 2643,
											"end": 2705,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2713,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2713,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2065,
											"end": 2713,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2065,
											"end": 2713,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2065,
											"end": 2713,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2065,
											"end": 2713,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 893,
											"end": 937,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 893,
											"end": 937,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 893,
											"end": 937,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 893,
											"end": 937,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 893,
											"end": 937,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 893,
											"end": 937,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 893,
											"end": 937,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 893,
											"end": 937,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 893,
											"end": 937,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 893,
											"end": 937,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 893,
											"end": 937,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 893,
											"end": 937,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 893,
											"end": 937,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 893,
											"end": 937,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 893,
											"end": 937,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 893,
											"end": 937,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 893,
											"end": 937,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 893,
											"end": 937,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 893,
											"end": 937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5084,
											"end": 5249,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 5084,
											"end": 5249,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5145,
											"end": 5162,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5164,
											"end": 5181,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5201,
											"end": 5241,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 5218,
											"end": 5223,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5224,
											"end": 5233,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5224,
											"end": 5240,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5234,
											"end": 5239,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5224,
											"end": 5240,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5224,
											"end": 5240,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5224,
											"end": 5240,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5224,
											"end": 5240,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5224,
											"end": 5240,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5224,
											"end": 5240,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5224,
											"end": 5240,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5224,
											"end": 5240,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5224,
											"end": 5240,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5224,
											"end": 5240,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5224,
											"end": 5240,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5224,
											"end": 5240,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5224,
											"end": 5240,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5224,
											"end": 5240,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5224,
											"end": 5240,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5224,
											"end": 5240,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5201,
											"end": 5217,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 5201,
											"end": 5241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5201,
											"end": 5241,
											"name": "tag",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 5201,
											"end": 5241,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5194,
											"end": 5241,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5194,
											"end": 5241,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5194,
											"end": 5241,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5194,
											"end": 5241,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5084,
											"end": 5249,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5084,
											"end": 5249,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5084,
											"end": 5249,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5084,
											"end": 5249,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1481,
											"end": 2059,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 1481,
											"end": 2059,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1555,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1589,
											"end": 1598,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1576,
											"end": 1585,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 1576,
											"end": 1598,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1568,
											"end": 1622,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 1568,
											"end": 1622,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1568,
											"end": 1622,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1568,
											"end": 1622,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1568,
											"end": 1622,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1568,
											"end": 1622,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1568,
											"end": 1622,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1568,
											"end": 1622,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1568,
											"end": 1622,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1568,
											"end": 1622,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 1568,
											"end": 1622,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1568,
											"end": 1622,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 1568,
											"end": 1622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1568,
											"end": 1622,
											"name": "tag",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 1568,
											"end": 1622,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1568,
											"end": 1622,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1568,
											"end": 1622,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1568,
											"end": 1622,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1568,
											"end": 1622,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1568,
											"end": 1622,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1568,
											"end": 1622,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1568,
											"end": 1622,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1568,
											"end": 1622,
											"name": "tag",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 1568,
											"end": 1622,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1658,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1681,
											"end": 1685,
											"name": "PUSH",
											"source": 5,
											"value": "3E8"
										},
										{
											"begin": 1674,
											"end": 1677,
											"name": "PUSH",
											"source": 5,
											"value": "3E5"
										},
										{
											"begin": 1662,
											"end": 1671,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1662,
											"end": 1677,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 1662,
											"end": 1677,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1662,
											"end": 1677,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1662,
											"end": 1677,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 1662,
											"end": 1677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1662,
											"end": 1677,
											"name": "tag",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 1662,
											"end": 1677,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1661,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 1661,
											"end": 1685,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1661,
											"end": 1685,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1661,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 1661,
											"end": 1685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1661,
											"end": 1685,
											"name": "tag",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 1661,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1685,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1685,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1755,
											"end": 1770,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1742,
											"end": 1752,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1742,
											"end": 1752,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1742,
											"end": 1770,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 1742,
											"end": 1770,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1742,
											"end": 1770,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1742,
											"end": 1770,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 1742,
											"end": 1770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1742,
											"end": 1770,
											"name": "tag",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 1742,
											"end": 1770,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1722,
											"end": 1737,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1709,
											"end": 1719,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1709,
											"end": 1719,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1709,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 1709,
											"end": 1737,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1709,
											"end": 1737,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1709,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 1709,
											"end": 1737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1709,
											"end": 1737,
											"name": "tag",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 1709,
											"end": 1737,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1708,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 1708,
											"end": 1771,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1708,
											"end": 1771,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1708,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 1708,
											"end": 1771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1708,
											"end": 1771,
											"name": "tag",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 1708,
											"end": 1771,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1696,
											"end": 1771,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1696,
											"end": 1771,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1782,
											"end": 1804,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1845,
											"end": 1849,
											"name": "PUSH",
											"source": 5,
											"value": "7D0"
										},
										{
											"begin": 1834,
											"end": 1844,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1834,
											"end": 1844,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1834,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 1834,
											"end": 1849,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1834,
											"end": 1849,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1834,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 1834,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1834,
											"end": 1849,
											"name": "tag",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 1834,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1821,
											"end": 1832,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1821,
											"end": 1832,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1819,
											"end": 1820,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1807,
											"end": 1816,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1807,
											"end": 1820,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 1807,
											"end": 1820,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1807,
											"end": 1820,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1807,
											"end": 1820,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 1807,
											"end": 1820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1807,
											"end": 1820,
											"name": "tag",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 1807,
											"end": 1820,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1807,
											"end": 1832,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 1807,
											"end": 1832,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1807,
											"end": 1832,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1807,
											"end": 1832,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 1807,
											"end": 1832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1807,
											"end": 1832,
											"name": "tag",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 1807,
											"end": 1832,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1807,
											"end": 1850,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 1807,
											"end": 1850,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1807,
											"end": 1850,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1807,
											"end": 1850,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 1807,
											"end": 1850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1807,
											"end": 1850,
											"name": "tag",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 1807,
											"end": 1850,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1782,
											"end": 1850,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1782,
											"end": 1850,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1861,
											"end": 1892,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 1867,
											"end": 1876,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1867,
											"end": 1876,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1867,
											"end": 1876,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1867,
											"end": 1876,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1867,
											"end": 1876,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1867,
											"end": 1876,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1867,
											"end": 1876,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1867,
											"end": 1876,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1867,
											"end": 1876,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1867,
											"end": 1876,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1877,
											"end": 1891,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1861,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 1861,
											"end": 1892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1861,
											"end": 1892,
											"name": "tag",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 1861,
											"end": 1892,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1939,
											"end": 1944,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "1586"
										},
										{
											"begin": 1939,
											"end": 1953,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1939,
											"end": 1953,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1939,
											"end": 1953,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 1954,
											"end": 1964,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1966,
											"end": 1975,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1939,
											"end": 1976,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1939,
											"end": 1976,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1939,
											"end": 1976,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1939,
											"end": 1976,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1939,
											"end": 1976,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1939,
											"end": 1976,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1939,
											"end": 1976,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1939,
											"end": 1976,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1939,
											"end": 1976,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1939,
											"end": 1976,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1939,
											"end": 1976,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1939,
											"end": 1976,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 1939,
											"end": 1976,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1939,
											"end": 1976,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1939,
											"end": 1976,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1939,
											"end": 1976,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 1939,
											"end": 1976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1939,
											"end": 1976,
											"name": "tag",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 1939,
											"end": 1976,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1939,
											"end": 1976,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1939,
											"end": 1976,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1939,
											"end": 1976,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1939,
											"end": 1976,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1939,
											"end": 1976,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1939,
											"end": 1976,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1939,
											"end": 1976,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1939,
											"end": 1976,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1939,
											"end": 1976,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1939,
											"end": 1976,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1939,
											"end": 1976,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 1939,
											"end": 1976,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1939,
											"end": 1976,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1939,
											"end": 1976,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1939,
											"end": 1976,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 1939,
											"end": 1976,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1939,
											"end": 1976,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1939,
											"end": 1976,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1939,
											"end": 1976,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1939,
											"end": 1976,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1939,
											"end": 1976,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1939,
											"end": 1976,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1939,
											"end": 1976,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1939,
											"end": 1976,
											"name": "tag",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 1939,
											"end": 1976,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1939,
											"end": 1976,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1939,
											"end": 1976,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1939,
											"end": 1976,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1939,
											"end": 1976,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1939,
											"end": 1976,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1939,
											"end": 1976,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1939,
											"end": 1976,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1939,
											"end": 1976,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1939,
											"end": 1976,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1939,
											"end": 1976,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1939,
											"end": 1976,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1939,
											"end": 1976,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1939,
											"end": 1976,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1939,
											"end": 1976,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1939,
											"end": 1976,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1939,
											"end": 1976,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1939,
											"end": 1976,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1939,
											"end": 1976,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1939,
											"end": 1976,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1939,
											"end": 1976,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1939,
											"end": 1976,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1939,
											"end": 1976,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1939,
											"end": 1976,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 1939,
											"end": 1976,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1939,
											"end": 1976,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1939,
											"end": 1976,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 1939,
											"end": 1976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1939,
											"end": 1976,
											"name": "tag",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 1939,
											"end": 1976,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1939,
											"end": 1976,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1989,
											"end": 2051,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 1997,
											"end": 2018,
											"name": "SELFBALANCE",
											"source": 5
										},
										{
											"begin": 2020,
											"end": 2025,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "1586"
										},
										{
											"begin": 2020,
											"end": 2035,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2020,
											"end": 2035,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2020,
											"end": 2035,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 2044,
											"end": 2048,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 2020,
											"end": 2050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "tag",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "tag",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 2020,
											"end": 2050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "tag",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1989,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 1989,
											"end": 2051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1989,
											"end": 2051,
											"name": "tag",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 1989,
											"end": 2051,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1557,
											"end": 2059,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1557,
											"end": 2059,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1481,
											"end": 2059,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1481,
											"end": 2059,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1481,
											"end": 2059,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1481,
											"end": 2059,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5255,
											"end": 5492,
											"name": "tag",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 5255,
											"end": 5492,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5315,
											"end": 5332,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5334,
											"end": 5351,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5383,
											"end": 5392,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5383,
											"end": 5404,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5393,
											"end": 5403,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 5383,
											"end": 5404,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5383,
											"end": 5404,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5383,
											"end": 5404,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5383,
											"end": 5404,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5383,
											"end": 5404,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5383,
											"end": 5404,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5383,
											"end": 5404,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5383,
											"end": 5404,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5383,
											"end": 5404,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5383,
											"end": 5404,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5383,
											"end": 5404,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5383,
											"end": 5404,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5383,
											"end": 5404,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5383,
											"end": 5404,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5383,
											"end": 5404,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5383,
											"end": 5404,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5372,
											"end": 5379,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5372,
											"end": 5404,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 5372,
											"end": 5404,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5364,
											"end": 5429,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 5364,
											"end": 5429,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5364,
											"end": 5429,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5364,
											"end": 5429,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5364,
											"end": 5429,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5364,
											"end": 5429,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5364,
											"end": 5429,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5364,
											"end": 5429,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5364,
											"end": 5429,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5364,
											"end": 5429,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 5364,
											"end": 5429,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5364,
											"end": 5429,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 5364,
											"end": 5429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5364,
											"end": 5429,
											"name": "tag",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 5364,
											"end": 5429,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5364,
											"end": 5429,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5364,
											"end": 5429,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5364,
											"end": 5429,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5364,
											"end": 5429,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5364,
											"end": 5429,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5364,
											"end": 5429,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5364,
											"end": 5429,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5364,
											"end": 5429,
											"name": "tag",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 5364,
											"end": 5429,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5447,
											"end": 5484,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 5464,
											"end": 5474,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 5476,
											"end": 5483,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5447,
											"end": 5463,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 5447,
											"end": 5484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5447,
											"end": 5484,
											"name": "tag",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 5447,
											"end": 5484,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5440,
											"end": 5484,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5440,
											"end": 5484,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5440,
											"end": 5484,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5440,
											"end": 5484,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5255,
											"end": 5492,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5255,
											"end": 5492,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5255,
											"end": 5492,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5255,
											"end": 5492,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5500,
											"end": 5742,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 5500,
											"end": 5742,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5575,
											"end": 5592,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5594,
											"end": 5611,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5643,
											"end": 5652,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5643,
											"end": 5659,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5653,
											"end": 5658,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5643,
											"end": 5659,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5643,
											"end": 5659,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5643,
											"end": 5659,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5643,
											"end": 5659,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5643,
											"end": 5659,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5643,
											"end": 5659,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5643,
											"end": 5659,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5643,
											"end": 5659,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5643,
											"end": 5659,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5643,
											"end": 5659,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5643,
											"end": 5659,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5643,
											"end": 5659,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5643,
											"end": 5659,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5643,
											"end": 5659,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5643,
											"end": 5659,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5643,
											"end": 5659,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5632,
											"end": 5639,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5632,
											"end": 5659,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 5632,
											"end": 5659,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5624,
											"end": 5684,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 5624,
											"end": 5684,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5624,
											"end": 5684,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5624,
											"end": 5684,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5624,
											"end": 5684,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5624,
											"end": 5684,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5624,
											"end": 5684,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5624,
											"end": 5684,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5624,
											"end": 5684,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5624,
											"end": 5684,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 5624,
											"end": 5684,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5624,
											"end": 5684,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 5624,
											"end": 5684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5624,
											"end": 5684,
											"name": "tag",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 5624,
											"end": 5684,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5624,
											"end": 5684,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5624,
											"end": 5684,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5624,
											"end": 5684,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5624,
											"end": 5684,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5624,
											"end": 5684,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5624,
											"end": 5684,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5624,
											"end": 5684,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5624,
											"end": 5684,
											"name": "tag",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 5624,
											"end": 5684,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5702,
											"end": 5734,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 5719,
											"end": 5724,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5726,
											"end": 5733,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5702,
											"end": 5718,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 5702,
											"end": 5734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5702,
											"end": 5734,
											"name": "tag",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 5702,
											"end": 5734,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5695,
											"end": 5734,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5695,
											"end": 5734,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5695,
											"end": 5734,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5695,
											"end": 5734,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5500,
											"end": 5742,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5500,
											"end": 5742,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5500,
											"end": 5742,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5500,
											"end": 5742,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5500,
											"end": 5742,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5500,
											"end": 5742,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6930,
											"end": 7119,
											"name": "tag",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 6930,
											"end": 7119,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6974,
											"end": 6981,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7015,
											"end": 7016,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7002,
											"end": 7012,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 7002,
											"end": 7012,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7002,
											"end": 7016,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 7002,
											"end": 7034,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7002,
											"end": 7034,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7002,
											"end": 7034,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 7002,
											"end": 7034,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7002,
											"end": 7034,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7033,
											"end": 7034,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7020,
											"end": 7030,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 7020,
											"end": 7030,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7020,
											"end": 7034,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 7002,
											"end": 7034,
											"name": "tag",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 7002,
											"end": 7034,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6994,
											"end": 7059,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 6994,
											"end": 7059,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6994,
											"end": 7059,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6994,
											"end": 7059,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6994,
											"end": 7059,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6994,
											"end": 7059,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6994,
											"end": 7059,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6994,
											"end": 7059,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6994,
											"end": 7059,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6994,
											"end": 7059,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 6994,
											"end": 7059,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6994,
											"end": 7059,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "270"
										},
										{
											"begin": 6994,
											"end": 7059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6994,
											"end": 7059,
											"name": "tag",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 6994,
											"end": 7059,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6994,
											"end": 7059,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6994,
											"end": 7059,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6994,
											"end": 7059,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6994,
											"end": 7059,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6994,
											"end": 7059,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6994,
											"end": 7059,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6994,
											"end": 7059,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6994,
											"end": 7059,
											"name": "tag",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 6994,
											"end": 7059,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7101,
											"end": 7111,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 7101,
											"end": 7111,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7091,
											"end": 7097,
											"name": "PUSH",
											"source": 5,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 7078,
											"end": 7088,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 7078,
											"end": 7088,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7078,
											"end": 7097,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 7078,
											"end": 7097,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7078,
											"end": 7097,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7078,
											"end": 7097,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 7078,
											"end": 7097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7078,
											"end": 7097,
											"name": "tag",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 7078,
											"end": 7097,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7077,
											"end": 7111,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 7077,
											"end": 7111,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7077,
											"end": 7111,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7077,
											"end": 7111,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 7077,
											"end": 7111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7077,
											"end": 7111,
											"name": "tag",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 7077,
											"end": 7111,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7070,
											"end": 7111,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7070,
											"end": 7111,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6930,
											"end": 7119,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6930,
											"end": 7119,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 721,
											"end": 769,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 721,
											"end": 769,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 767,
											"end": 768,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 721,
											"end": 769,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 721,
											"end": 769,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3508,
											"end": 4293,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 3508,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3622,
											"end": 3639,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3652,
											"end": 3675,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3698,
											"end": 3702,
											"name": "PUSH",
											"source": 5,
											"value": "3E8"
										},
										{
											"begin": 3691,
											"end": 3694,
											"name": "PUSH",
											"source": 5,
											"value": "3E5"
										},
										{
											"begin": 3679,
											"end": 3688,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3679,
											"end": 3694,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 3679,
											"end": 3694,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3679,
											"end": 3694,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3679,
											"end": 3694,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 3679,
											"end": 3694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3679,
											"end": 3694,
											"name": "tag",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 3679,
											"end": 3694,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3678,
											"end": 3702,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 3678,
											"end": 3702,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3678,
											"end": 3702,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3678,
											"end": 3702,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 3678,
											"end": 3702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3678,
											"end": 3702,
											"name": "tag",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 3678,
											"end": 3702,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3652,
											"end": 3702,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3652,
											"end": 3702,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3774,
											"end": 3789,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3761,
											"end": 3771,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 3761,
											"end": 3771,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3761,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 3761,
											"end": 3789,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3761,
											"end": 3789,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3761,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 3761,
											"end": 3789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3761,
											"end": 3789,
											"name": "tag",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 3761,
											"end": 3789,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3741,
											"end": 3756,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3728,
											"end": 3738,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3728,
											"end": 3738,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3728,
											"end": 3756,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 3728,
											"end": 3756,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3728,
											"end": 3756,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3728,
											"end": 3756,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 3728,
											"end": 3756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3728,
											"end": 3756,
											"name": "tag",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 3728,
											"end": 3756,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3727,
											"end": 3790,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 3727,
											"end": 3790,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3727,
											"end": 3790,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3727,
											"end": 3790,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 3727,
											"end": 3790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3727,
											"end": 3790,
											"name": "tag",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 3727,
											"end": 3790,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3715,
											"end": 3790,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3715,
											"end": 3790,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3821,
											"end": 3822,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3809,
											"end": 3818,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3809,
											"end": 3822,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3801,
											"end": 3853,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 3801,
											"end": 3853,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3801,
											"end": 3853,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3801,
											"end": 3853,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3801,
											"end": 3853,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3801,
											"end": 3853,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3801,
											"end": 3853,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3801,
											"end": 3853,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3801,
											"end": 3853,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3801,
											"end": 3853,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 3801,
											"end": 3853,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3801,
											"end": 3853,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 3801,
											"end": 3853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3801,
											"end": 3853,
											"name": "tag",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 3801,
											"end": 3853,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3801,
											"end": 3853,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3801,
											"end": 3853,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3801,
											"end": 3853,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3801,
											"end": 3853,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3801,
											"end": 3853,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3801,
											"end": 3853,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3801,
											"end": 3853,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3801,
											"end": 3853,
											"name": "tag",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 3801,
											"end": 3853,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3918,
											"end": 3922,
											"name": "PUSH",
											"source": 5,
											"value": "3E8"
										},
										{
											"begin": 3907,
											"end": 3916,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3902,
											"end": 3906,
											"name": "PUSH",
											"source": 5,
											"value": "3E8"
										},
										{
											"begin": 3902,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 3902,
											"end": 3916,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3902,
											"end": 3916,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3902,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 3902,
											"end": 3916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3902,
											"end": 3916,
											"name": "tag",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 3902,
											"end": 3916,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3886,
											"end": 3900,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3886,
											"end": 3917,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "282"
										},
										{
											"begin": 3886,
											"end": 3917,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3886,
											"end": 3917,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3886,
											"end": 3917,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 3886,
											"end": 3917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3886,
											"end": 3917,
											"name": "tag",
											"source": 5,
											"value": "282"
										},
										{
											"begin": 3886,
											"end": 3917,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3886,
											"end": 3922,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 3886,
											"end": 3922,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3886,
											"end": 3922,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3886,
											"end": 3922,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 3886,
											"end": 3922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3886,
											"end": 3922,
											"name": "tag",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 3886,
											"end": 3922,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3872,
											"end": 3881,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3872,
											"end": 3923,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 3872,
											"end": 3923,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3864,
											"end": 3936,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 3864,
											"end": 3936,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3864,
											"end": 3936,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3864,
											"end": 3936,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3864,
											"end": 3936,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3864,
											"end": 3936,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3864,
											"end": 3936,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3864,
											"end": 3936,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3864,
											"end": 3936,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3864,
											"end": 3936,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 3864,
											"end": 3936,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3864,
											"end": 3936,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 3864,
											"end": 3936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3864,
											"end": 3936,
											"name": "tag",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 3864,
											"end": 3936,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3864,
											"end": 3936,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3864,
											"end": 3936,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3864,
											"end": 3936,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3864,
											"end": 3936,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3864,
											"end": 3936,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3864,
											"end": 3936,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3864,
											"end": 3936,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3864,
											"end": 3936,
											"name": "tag",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 3864,
											"end": 3936,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 3969,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4010,
											"end": 4014,
											"name": "PUSH",
											"source": 5,
											"value": "7D0"
										},
										{
											"begin": 3999,
											"end": 4009,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 3999,
											"end": 4009,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3999,
											"end": 4014,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 3999,
											"end": 4014,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3999,
											"end": 4014,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3999,
											"end": 4014,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 3999,
											"end": 4014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3999,
											"end": 4014,
											"name": "tag",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 3999,
											"end": 4014,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3986,
											"end": 3997,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 3986,
											"end": 3997,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3984,
											"end": 3985,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 3972,
											"end": 3981,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 3972,
											"end": 3985,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "287"
										},
										{
											"begin": 3972,
											"end": 3985,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3972,
											"end": 3985,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3972,
											"end": 3985,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 3972,
											"end": 3985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3972,
											"end": 3985,
											"name": "tag",
											"source": 5,
											"value": "287"
										},
										{
											"begin": 3972,
											"end": 3985,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3972,
											"end": 3997,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 3972,
											"end": 3997,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3972,
											"end": 3997,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3972,
											"end": 3997,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 3972,
											"end": 3997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3972,
											"end": 3997,
											"name": "tag",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 3972,
											"end": 3997,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3972,
											"end": 4015,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "289"
										},
										{
											"begin": 3972,
											"end": 4015,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3972,
											"end": 4015,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3972,
											"end": 4015,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 3972,
											"end": 4015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3972,
											"end": 4015,
											"name": "tag",
											"source": 5,
											"value": "289"
										},
										{
											"begin": 3972,
											"end": 4015,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4015,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4015,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4026,
											"end": 4057,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 4032,
											"end": 4041,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4032,
											"end": 4041,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4041,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4041,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4041,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 4032,
											"end": 4041,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4041,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4041,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4041,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4032,
											"end": 4041,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4042,
											"end": 4056,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4026,
											"end": 4031,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 4026,
											"end": 4057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4026,
											"end": 4057,
											"name": "tag",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 4026,
											"end": 4057,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4104,
											"end": 4109,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "1586"
										},
										{
											"begin": 4104,
											"end": 4122,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4104,
											"end": 4122,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4104,
											"end": 4122,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 4123,
											"end": 4133,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4147,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 4150,
											"end": 4159,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 4104,
											"end": 4160,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4104,
											"end": 4160,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4104,
											"end": 4160,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4104,
											"end": 4160,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4104,
											"end": 4160,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4104,
											"end": 4160,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 4104,
											"end": 4160,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 4104,
											"end": 4160,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4104,
											"end": 4160,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4104,
											"end": 4160,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4104,
											"end": 4160,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4104,
											"end": 4160,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 4104,
											"end": 4160,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4104,
											"end": 4160,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4104,
											"end": 4160,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4104,
											"end": 4160,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4104,
											"end": 4160,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 4104,
											"end": 4160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4104,
											"end": 4160,
											"name": "tag",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 4104,
											"end": 4160,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4104,
											"end": 4160,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4104,
											"end": 4160,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4104,
											"end": 4160,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4104,
											"end": 4160,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4104,
											"end": 4160,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4104,
											"end": 4160,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4104,
											"end": 4160,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4104,
											"end": 4160,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4104,
											"end": 4160,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 4104,
											"end": 4160,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 4104,
											"end": 4160,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 4104,
											"end": 4160,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4104,
											"end": 4160,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4104,
											"end": 4160,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4104,
											"end": 4160,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "293"
										},
										{
											"begin": 4104,
											"end": 4160,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4104,
											"end": 4160,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4104,
											"end": 4160,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4104,
											"end": 4160,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4104,
											"end": 4160,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 4104,
											"end": 4160,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4104,
											"end": 4160,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4104,
											"end": 4160,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4104,
											"end": 4160,
											"name": "tag",
											"source": 5,
											"value": "293"
										},
										{
											"begin": 4104,
											"end": 4160,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4104,
											"end": 4160,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4104,
											"end": 4160,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4104,
											"end": 4160,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4104,
											"end": 4160,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4104,
											"end": 4160,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4104,
											"end": 4160,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4104,
											"end": 4160,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4104,
											"end": 4160,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4104,
											"end": 4160,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 4104,
											"end": 4160,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4104,
											"end": 4160,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4104,
											"end": 4160,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4104,
											"end": 4160,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4104,
											"end": 4160,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4104,
											"end": 4160,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4104,
											"end": 4160,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4104,
											"end": 4160,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4104,
											"end": 4160,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4104,
											"end": 4160,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4104,
											"end": 4160,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4104,
											"end": 4160,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4104,
											"end": 4160,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4104,
											"end": 4160,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "294"
										},
										{
											"begin": 4104,
											"end": 4160,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4104,
											"end": 4160,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4104,
											"end": 4160,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 4104,
											"end": 4160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4104,
											"end": 4160,
											"name": "tag",
											"source": 5,
											"value": "294"
										},
										{
											"begin": 4104,
											"end": 4160,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4104,
											"end": 4160,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4179,
											"end": 4189,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4171,
											"end": 4199,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4171,
											"end": 4199,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4171,
											"end": 4210,
											"name": "PUSH",
											"source": 5,
											"value": "8FC"
										},
										{
											"begin": 4200,
											"end": 4209,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4171,
											"end": 4210,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4171,
											"end": 4210,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4171,
											"end": 4210,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4171,
											"end": 4210,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 4171,
											"end": 4210,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4171,
											"end": 4210,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4171,
											"end": 4210,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4171,
											"end": 4210,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4171,
											"end": 4210,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4171,
											"end": 4210,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4171,
											"end": 4210,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4171,
											"end": 4210,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4171,
											"end": 4210,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4171,
											"end": 4210,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4171,
											"end": 4210,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4171,
											"end": 4210,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 4171,
											"end": 4210,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 4171,
											"end": 4210,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 4171,
											"end": 4210,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4171,
											"end": 4210,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4171,
											"end": 4210,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4171,
											"end": 4210,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4171,
											"end": 4210,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4171,
											"end": 4210,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4171,
											"end": 4210,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4171,
											"end": 4210,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4171,
											"end": 4210,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 4171,
											"end": 4210,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4171,
											"end": 4210,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4171,
											"end": 4210,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4171,
											"end": 4210,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4171,
											"end": 4210,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 4171,
											"end": 4210,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4171,
											"end": 4210,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4171,
											"end": 4210,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4171,
											"end": 4210,
											"name": "tag",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 4171,
											"end": 4210,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4171,
											"end": 4210,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4223,
											"end": 4285,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "297"
										},
										{
											"begin": 4231,
											"end": 4252,
											"name": "SELFBALANCE",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4259,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "1586"
										},
										{
											"begin": 4254,
											"end": 4269,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4254,
											"end": 4269,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4269,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 4278,
											"end": 4282,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4284,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4254,
											"end": 4284,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4284,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4284,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4254,
											"end": 4284,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4284,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 4254,
											"end": 4284,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4284,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4284,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4284,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4254,
											"end": 4284,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4284,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "298"
										},
										{
											"begin": 4254,
											"end": 4284,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4284,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4284,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 4254,
											"end": 4284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4284,
											"name": "tag",
											"source": 5,
											"value": "298"
										},
										{
											"begin": 4254,
											"end": 4284,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4284,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4254,
											"end": 4284,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4254,
											"end": 4284,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4284,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4284,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4284,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4284,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4284,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4284,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4284,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4284,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4284,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4284,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4284,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 4254,
											"end": 4284,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4284,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4284,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4254,
											"end": 4284,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4284,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4284,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4284,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4254,
											"end": 4284,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4284,
											"name": "tag",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 4254,
											"end": 4284,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4284,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4284,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4284,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4284,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4284,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4254,
											"end": 4284,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4284,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4284,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4254,
											"end": 4284,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4284,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4254,
											"end": 4284,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4284,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4284,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4284,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4284,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4284,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4284,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4254,
											"end": 4284,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4284,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4284,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4284,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4284,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4284,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 4254,
											"end": 4284,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4284,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4284,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 4254,
											"end": 4284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4284,
											"name": "tag",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 4254,
											"end": 4284,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4223,
											"end": 4230,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 4223,
											"end": 4285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4223,
											"end": 4285,
											"name": "tag",
											"source": 5,
											"value": "297"
										},
										{
											"begin": 4223,
											"end": 4285,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3641,
											"end": 4293,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3641,
											"end": 4293,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3508,
											"end": 4293,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3508,
											"end": 4293,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3508,
											"end": 4293,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3508,
											"end": 4293,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3508,
											"end": 4293,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3508,
											"end": 4293,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 8032,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 7716,
											"end": 8032,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7788,
											"end": 7795,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7829,
											"end": 7830,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7816,
											"end": 7826,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 7816,
											"end": 7826,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7816,
											"end": 7830,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 7816,
											"end": 7848,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7816,
											"end": 7848,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7816,
											"end": 7848,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "303"
										},
										{
											"begin": 7816,
											"end": 7848,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7816,
											"end": 7848,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7847,
											"end": 7848,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7834,
											"end": 7844,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 7834,
											"end": 7844,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7834,
											"end": 7848,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 7816,
											"end": 7848,
											"name": "tag",
											"source": 5,
											"value": "303"
										},
										{
											"begin": 7816,
											"end": 7848,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7816,
											"end": 7861,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7816,
											"end": 7861,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7816,
											"end": 7861,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "304"
										},
										{
											"begin": 7816,
											"end": 7861,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7816,
											"end": 7861,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7860,
											"end": 7861,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7852,
											"end": 7859,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7852,
											"end": 7861,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 7816,
											"end": 7861,
											"name": "tag",
											"source": 5,
											"value": "304"
										},
										{
											"begin": 7816,
											"end": 7861,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7808,
											"end": 7886,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 7808,
											"end": 7886,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7808,
											"end": 7886,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7808,
											"end": 7886,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7808,
											"end": 7886,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7808,
											"end": 7886,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7808,
											"end": 7886,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7808,
											"end": 7886,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7808,
											"end": 7886,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7808,
											"end": 7886,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "306"
										},
										{
											"begin": 7808,
											"end": 7886,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7808,
											"end": 7886,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "270"
										},
										{
											"begin": 7808,
											"end": 7886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7808,
											"end": 7886,
											"name": "tag",
											"source": 5,
											"value": "306"
										},
										{
											"begin": 7808,
											"end": 7886,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7808,
											"end": 7886,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7808,
											"end": 7886,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7808,
											"end": 7886,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7808,
											"end": 7886,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7808,
											"end": 7886,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7808,
											"end": 7886,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7808,
											"end": 7886,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7808,
											"end": 7886,
											"name": "tag",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 7808,
											"end": 7886,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7897,
											"end": 7920,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7939,
											"end": 7943,
											"name": "PUSH",
											"source": 5,
											"value": "3E8"
										},
										{
											"begin": 7932,
											"end": 7935,
											"name": "PUSH",
											"source": 5,
											"value": "3E5"
										},
										{
											"begin": 7922,
											"end": 7929,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7922,
											"end": 7935,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 7922,
											"end": 7935,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7922,
											"end": 7935,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7922,
											"end": 7935,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 7922,
											"end": 7935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7922,
											"end": 7935,
											"name": "tag",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 7922,
											"end": 7935,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7921,
											"end": 7943,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 7921,
											"end": 7943,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7921,
											"end": 7943,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7921,
											"end": 7943,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 7921,
											"end": 7943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7921,
											"end": 7943,
											"name": "tag",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 7921,
											"end": 7943,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7897,
											"end": 7943,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7897,
											"end": 7943,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8008,
											"end": 8023,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7995,
											"end": 8005,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 7995,
											"end": 8005,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7995,
											"end": 8023,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 7995,
											"end": 8023,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7995,
											"end": 8023,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7995,
											"end": 8023,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 7995,
											"end": 8023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7995,
											"end": 8023,
											"name": "tag",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 7995,
											"end": 8023,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7975,
											"end": 7990,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7962,
											"end": 7972,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 7962,
											"end": 7972,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7962,
											"end": 7990,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "310"
										},
										{
											"begin": 7962,
											"end": 7990,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7962,
											"end": 7990,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7962,
											"end": 7990,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 7962,
											"end": 7990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7962,
											"end": 7990,
											"name": "tag",
											"source": 5,
											"value": "310"
										},
										{
											"begin": 7962,
											"end": 7990,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7961,
											"end": 8024,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 7961,
											"end": 8024,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7961,
											"end": 8024,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7961,
											"end": 8024,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 7961,
											"end": 8024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7961,
											"end": 8024,
											"name": "tag",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 7961,
											"end": 8024,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7954,
											"end": 8024,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7954,
											"end": 8024,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7954,
											"end": 8024,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 8032,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 8032,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 8032,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 8032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 817,
											"end": 842,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 817,
											"end": 842,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 817,
											"end": 842,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 817,
											"end": 842,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 817,
											"end": 842,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 817,
											"end": 842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6396,
											"end": 6499,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 6396,
											"end": 6499,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6449,
											"end": 6456,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6475,
											"end": 6484,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6475,
											"end": 6491,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6485,
											"end": 6490,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6475,
											"end": 6491,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6475,
											"end": 6491,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6475,
											"end": 6491,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6475,
											"end": 6491,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6475,
											"end": 6491,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6475,
											"end": 6491,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6475,
											"end": 6491,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6475,
											"end": 6491,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6475,
											"end": 6491,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6475,
											"end": 6491,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6475,
											"end": 6491,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6475,
											"end": 6491,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6475,
											"end": 6491,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6475,
											"end": 6491,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6475,
											"end": 6491,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6475,
											"end": 6491,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6468,
											"end": 6491,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6468,
											"end": 6491,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6396,
											"end": 6499,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6396,
											"end": 6499,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6396,
											"end": 6499,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6396,
											"end": 6499,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 685,
											"end": 714,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 685,
											"end": 714,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 685,
											"end": 714,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "1586"
										},
										{
											"begin": 685,
											"end": 714,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 685,
											"end": 714,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7125,
											"end": 7384,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 7125,
											"end": 7384,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7169,
											"end": 7176,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7210,
											"end": 7211,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7197,
											"end": 7207,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 7197,
											"end": 7207,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7197,
											"end": 7211,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 7197,
											"end": 7229,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7197,
											"end": 7229,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7197,
											"end": 7229,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 7197,
											"end": 7229,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7197,
											"end": 7229,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7228,
											"end": 7229,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7215,
											"end": 7225,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 7215,
											"end": 7225,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7215,
											"end": 7229,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 7197,
											"end": 7229,
											"name": "tag",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 7197,
											"end": 7229,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7189,
											"end": 7256,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 7189,
											"end": 7256,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7189,
											"end": 7256,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7189,
											"end": 7256,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7189,
											"end": 7256,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7189,
											"end": 7256,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7189,
											"end": 7256,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7189,
											"end": 7256,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7189,
											"end": 7256,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7189,
											"end": 7256,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "316"
										},
										{
											"begin": 7189,
											"end": 7256,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7189,
											"end": 7256,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 7189,
											"end": 7256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7189,
											"end": 7256,
											"name": "tag",
											"source": 5,
											"value": "316"
										},
										{
											"begin": 7189,
											"end": 7256,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7189,
											"end": 7256,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7189,
											"end": 7256,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7189,
											"end": 7256,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7189,
											"end": 7256,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7189,
											"end": 7256,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7189,
											"end": 7256,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7189,
											"end": 7256,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7189,
											"end": 7256,
											"name": "tag",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 7189,
											"end": 7256,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7267,
											"end": 7283,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7300,
											"end": 7305,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "1586"
										},
										{
											"begin": 7286,
											"end": 7316,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7286,
											"end": 7316,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7286,
											"end": 7316,
											"name": "PUSH",
											"source": 5,
											"value": "313CE567"
										},
										{
											"begin": 7286,
											"end": 7318,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7286,
											"end": 7318,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7286,
											"end": 7318,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7286,
											"end": 7318,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7286,
											"end": 7318,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7286,
											"end": 7318,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 7286,
											"end": 7318,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 7286,
											"end": 7318,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7286,
											"end": 7318,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7286,
											"end": 7318,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7286,
											"end": 7318,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7286,
											"end": 7318,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7286,
											"end": 7318,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7286,
											"end": 7318,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7286,
											"end": 7318,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7286,
											"end": 7318,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7286,
											"end": 7318,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7286,
											"end": 7318,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7286,
											"end": 7318,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 7286,
											"end": 7318,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 7286,
											"end": 7318,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 7286,
											"end": 7318,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7286,
											"end": 7318,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7286,
											"end": 7318,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7286,
											"end": 7318,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "318"
										},
										{
											"begin": 7286,
											"end": 7318,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7286,
											"end": 7318,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 7286,
											"end": 7318,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7286,
											"end": 7318,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7286,
											"end": 7318,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 7286,
											"end": 7318,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 7286,
											"end": 7318,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7286,
											"end": 7318,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7286,
											"end": 7318,
											"name": "tag",
											"source": 5,
											"value": "318"
										},
										{
											"begin": 7286,
											"end": 7318,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7286,
											"end": 7318,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7286,
											"end": 7318,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7286,
											"end": 7318,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7286,
											"end": 7318,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7286,
											"end": 7318,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7286,
											"end": 7318,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7286,
											"end": 7318,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 7286,
											"end": 7318,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 7286,
											"end": 7318,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 7286,
											"end": 7318,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 7286,
											"end": 7318,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7286,
											"end": 7318,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7286,
											"end": 7318,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7286,
											"end": 7318,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7286,
											"end": 7318,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7286,
											"end": 7318,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7286,
											"end": 7318,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7286,
											"end": 7318,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7286,
											"end": 7318,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7286,
											"end": 7318,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7286,
											"end": 7318,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7286,
											"end": 7318,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7286,
											"end": 7318,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "319"
										},
										{
											"begin": 7286,
											"end": 7318,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7286,
											"end": 7318,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7286,
											"end": 7318,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "320"
										},
										{
											"begin": 7286,
											"end": 7318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7286,
											"end": 7318,
											"name": "tag",
											"source": 5,
											"value": "319"
										},
										{
											"begin": 7286,
											"end": 7318,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7267,
											"end": 7318,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 7267,
											"end": 7318,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7267,
											"end": 7318,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7267,
											"end": 7318,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7366,
											"end": 7376,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 7366,
											"end": 7376,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7354,
											"end": 7362,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7350,
											"end": 7352,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 7350,
											"end": 7362,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "321"
										},
										{
											"begin": 7350,
											"end": 7362,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7350,
											"end": 7362,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7350,
											"end": 7362,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "322"
										},
										{
											"begin": 7350,
											"end": 7362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7350,
											"end": 7362,
											"name": "tag",
											"source": 5,
											"value": "321"
										},
										{
											"begin": 7350,
											"end": 7362,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7337,
											"end": 7347,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 7337,
											"end": 7347,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7337,
											"end": 7362,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "323"
										},
										{
											"begin": 7337,
											"end": 7362,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7337,
											"end": 7362,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7337,
											"end": 7362,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 7337,
											"end": 7362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7337,
											"end": 7362,
											"name": "tag",
											"source": 5,
											"value": "323"
										},
										{
											"begin": 7337,
											"end": 7362,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7336,
											"end": 7376,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "324"
										},
										{
											"begin": 7336,
											"end": 7376,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7336,
											"end": 7376,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7336,
											"end": 7376,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 7336,
											"end": 7376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7336,
											"end": 7376,
											"name": "tag",
											"source": 5,
											"value": "324"
										},
										{
											"begin": 7336,
											"end": 7376,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7329,
											"end": 7376,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7329,
											"end": 7376,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7329,
											"end": 7376,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7125,
											"end": 7384,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7125,
											"end": 7384,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6507,
											"end": 6811,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 6507,
											"end": 6811,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6553,
											"end": 6559,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6580,
											"end": 6581,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 6576,
											"end": 6577,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6576,
											"end": 6581,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 6572,
											"end": 6804,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6572,
											"end": 6804,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "326"
										},
										{
											"begin": 6572,
											"end": 6804,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6602,
											"end": 6603,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6598,
											"end": 6603,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6598,
											"end": 6603,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6618,
											"end": 6624,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6635,
											"end": 6636,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 6631,
											"end": 6632,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 6627,
											"end": 6628,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6627,
											"end": 6632,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "327"
										},
										{
											"begin": 6627,
											"end": 6632,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6627,
											"end": 6632,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6627,
											"end": 6632,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 6627,
											"end": 6632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6627,
											"end": 6632,
											"name": "tag",
											"source": 5,
											"value": "327"
										},
										{
											"begin": 6627,
											"end": 6632,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6627,
											"end": 6636,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "328"
										},
										{
											"begin": 6627,
											"end": 6636,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6627,
											"end": 6636,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6627,
											"end": 6636,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 6627,
											"end": 6636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6627,
											"end": 6636,
											"name": "tag",
											"source": 5,
											"value": "328"
										},
										{
											"begin": 6627,
											"end": 6636,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6618,
											"end": 6636,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6618,
											"end": 6636,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6651,
											"end": 6743,
											"name": "tag",
											"source": 5,
											"value": "329"
										},
										{
											"begin": 6651,
											"end": 6743,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6662,
											"end": 6663,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6658,
											"end": 6659,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6658,
											"end": 6663,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 6651,
											"end": 6743,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6651,
											"end": 6743,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "330"
										},
										{
											"begin": 6651,
											"end": 6743,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6688,
											"end": 6689,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6684,
											"end": 6689,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6684,
											"end": 6689,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6726,
											"end": 6727,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 6721,
											"end": 6722,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6717,
											"end": 6718,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6713,
											"end": 6714,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6713,
											"end": 6718,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "331"
										},
										{
											"begin": 6713,
											"end": 6718,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6713,
											"end": 6718,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6713,
											"end": 6718,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 6713,
											"end": 6718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6713,
											"end": 6718,
											"name": "tag",
											"source": 5,
											"value": "331"
										},
										{
											"begin": 6713,
											"end": 6718,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6713,
											"end": 6722,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "332"
										},
										{
											"begin": 6713,
											"end": 6722,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6713,
											"end": 6722,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6713,
											"end": 6722,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 6713,
											"end": 6722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6713,
											"end": 6722,
											"name": "tag",
											"source": 5,
											"value": "332"
										},
										{
											"begin": 6713,
											"end": 6722,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6712,
											"end": 6727,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "333"
										},
										{
											"begin": 6712,
											"end": 6727,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6712,
											"end": 6727,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6712,
											"end": 6727,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 6712,
											"end": 6727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6712,
											"end": 6727,
											"name": "tag",
											"source": 5,
											"value": "333"
										},
										{
											"begin": 6712,
											"end": 6727,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6708,
											"end": 6727,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6708,
											"end": 6727,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6651,
											"end": 6743,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "329"
										},
										{
											"begin": 6651,
											"end": 6743,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6651,
											"end": 6743,
											"name": "tag",
											"source": 5,
											"value": "330"
										},
										{
											"begin": 6651,
											"end": 6743,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6583,
											"end": 6754,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6572,
											"end": 6804,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "334"
										},
										{
											"begin": 6572,
											"end": 6804,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6572,
											"end": 6804,
											"name": "tag",
											"source": 5,
											"value": "326"
										},
										{
											"begin": 6572,
											"end": 6804,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6769,
											"end": 6770,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6764,
											"end": 6765,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6764,
											"end": 6770,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 6760,
											"end": 6804,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "335"
										},
										{
											"begin": 6760,
											"end": 6804,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6791,
											"end": 6792,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 6787,
											"end": 6792,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6787,
											"end": 6792,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6760,
											"end": 6804,
											"name": "tag",
											"source": 5,
											"value": "335"
										},
										{
											"begin": 6760,
											"end": 6804,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6572,
											"end": 6804,
											"name": "tag",
											"source": 5,
											"value": "334"
										},
										{
											"begin": 6572,
											"end": 6804,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6507,
											"end": 6811,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6507,
											"end": 6811,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6507,
											"end": 6811,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6507,
											"end": 6811,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 588,
											"end": 692,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 588,
											"end": 692,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 646,
											"end": 653,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 676,
											"end": 677,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 672,
											"end": 673,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 672,
											"end": 677,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 672,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "337"
										},
										{
											"begin": 672,
											"end": 685,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 684,
											"end": 685,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 672,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "338"
										},
										{
											"begin": 672,
											"end": 685,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 672,
											"end": 685,
											"name": "tag",
											"source": 4,
											"value": "337"
										},
										{
											"begin": 672,
											"end": 685,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 680,
											"end": 681,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 672,
											"end": 685,
											"name": "tag",
											"source": 4,
											"value": "338"
										},
										{
											"begin": 672,
											"end": 685,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 665,
											"end": 685,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 665,
											"end": 685,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 692,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 588,
											"end": 692,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 588,
											"end": 692,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 692,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 692,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1056,
											"end": 1186,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 1056,
											"end": 1186,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1138,
											"end": 1145,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1120,
											"end": 1129,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1120,
											"end": 1134,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1130,
											"end": 1133,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1120,
											"end": 1134,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1120,
											"end": 1134,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1120,
											"end": 1134,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1120,
											"end": 1134,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1120,
											"end": 1134,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1120,
											"end": 1134,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1120,
											"end": 1134,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1120,
											"end": 1134,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1120,
											"end": 1134,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1120,
											"end": 1134,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1120,
											"end": 1134,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1120,
											"end": 1134,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1120,
											"end": 1134,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1120,
											"end": 1134,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1120,
											"end": 1134,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1120,
											"end": 1134,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1120,
											"end": 1145,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1120,
											"end": 1145,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1120,
											"end": 1145,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1120,
											"end": 1145,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "340"
										},
										{
											"begin": 1120,
											"end": 1145,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1120,
											"end": 1145,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1120,
											"end": 1145,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 1120,
											"end": 1145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1120,
											"end": 1145,
											"name": "tag",
											"source": 5,
											"value": "340"
										},
										{
											"begin": 1120,
											"end": 1145,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1120,
											"end": 1145,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1120,
											"end": 1145,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1120,
											"end": 1145,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1120,
											"end": 1145,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1120,
											"end": 1145,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1120,
											"end": 1145,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1120,
											"end": 1145,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1171,
											"end": 1178,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1156,
											"end": 1167,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1156,
											"end": 1167,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1156,
											"end": 1178,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1156,
											"end": 1178,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1156,
											"end": 1178,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1156,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "341"
										},
										{
											"begin": 1156,
											"end": 1178,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1156,
											"end": 1178,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1156,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 1156,
											"end": 1178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1156,
											"end": 1178,
											"name": "tag",
											"source": 5,
											"value": "341"
										},
										{
											"begin": 1156,
											"end": 1178,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1156,
											"end": 1178,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1156,
											"end": 1178,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1156,
											"end": 1178,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1156,
											"end": 1178,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1156,
											"end": 1178,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1156,
											"end": 1178,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1156,
											"end": 1178,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1056,
											"end": 1186,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1056,
											"end": 1186,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1056,
											"end": 1186,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1336,
											"end": 1473,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 1336,
											"end": 1473,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1423,
											"end": 1432,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1410,
											"end": 1420,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1410,
											"end": 1432,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1410,
											"end": 1432,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1410,
											"end": 1432,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1410,
											"end": 1432,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1456,
											"end": 1465,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1443,
											"end": 1453,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1443,
											"end": 1465,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1443,
											"end": 1465,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1443,
											"end": 1465,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1443,
											"end": 1465,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1336,
											"end": 1473,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1336,
											"end": 1473,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1336,
											"end": 1473,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5748,
											"end": 6289,
											"name": "tag",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 5748,
											"end": 6289,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5824,
											"end": 5841,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5843,
											"end": 5860,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5910,
											"end": 5921,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 5910,
											"end": 5921,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5896,
											"end": 5906,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 5896,
											"end": 5906,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5886,
											"end": 5893,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5886,
											"end": 5906,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "344"
										},
										{
											"begin": 5886,
											"end": 5906,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5886,
											"end": 5906,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5886,
											"end": 5906,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 5886,
											"end": 5906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5886,
											"end": 5906,
											"name": "tag",
											"source": 5,
											"value": "344"
										},
										{
											"begin": 5886,
											"end": 5906,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5885,
											"end": 5921,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "345"
										},
										{
											"begin": 5885,
											"end": 5921,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5885,
											"end": 5921,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5885,
											"end": 5921,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 5885,
											"end": 5921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5885,
											"end": 5921,
											"name": "tag",
											"source": 5,
											"value": "345"
										},
										{
											"begin": 5885,
											"end": 5921,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5873,
											"end": 5921,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5873,
											"end": 5921,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5969,
											"end": 5980,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 5969,
											"end": 5980,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5955,
											"end": 5965,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 5955,
											"end": 5965,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5945,
											"end": 5952,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5945,
											"end": 5965,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "346"
										},
										{
											"begin": 5945,
											"end": 5965,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5945,
											"end": 5965,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5945,
											"end": 5965,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 5945,
											"end": 5965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5945,
											"end": 5965,
											"name": "tag",
											"source": 5,
											"value": "346"
										},
										{
											"begin": 5945,
											"end": 5965,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5944,
											"end": 5980,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "347"
										},
										{
											"begin": 5944,
											"end": 5980,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5944,
											"end": 5980,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5944,
											"end": 5980,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 5944,
											"end": 5980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5944,
											"end": 5980,
											"name": "tag",
											"source": 5,
											"value": "347"
										},
										{
											"begin": 5944,
											"end": 5980,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5932,
											"end": 5980,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5932,
											"end": 5980,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6011,
											"end": 6012,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5999,
											"end": 6008,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5999,
											"end": 6012,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 5999,
											"end": 6029,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5999,
											"end": 6029,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5999,
											"end": 6029,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "348"
										},
										{
											"begin": 5999,
											"end": 6029,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5999,
											"end": 6029,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6028,
											"end": 6029,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6016,
											"end": 6025,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6016,
											"end": 6029,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 5999,
											"end": 6029,
											"name": "tag",
											"source": 5,
											"value": "348"
										},
										{
											"begin": 5999,
											"end": 6029,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5991,
											"end": 6060,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "349"
										},
										{
											"begin": 5991,
											"end": 6060,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5991,
											"end": 6060,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5991,
											"end": 6060,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5991,
											"end": 6060,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5991,
											"end": 6060,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5991,
											"end": 6060,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5991,
											"end": 6060,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5991,
											"end": 6060,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5991,
											"end": 6060,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "350"
										},
										{
											"begin": 5991,
											"end": 6060,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5991,
											"end": 6060,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "351"
										},
										{
											"begin": 5991,
											"end": 6060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5991,
											"end": 6060,
											"name": "tag",
											"source": 5,
											"value": "350"
										},
										{
											"begin": 5991,
											"end": 6060,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5991,
											"end": 6060,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5991,
											"end": 6060,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5991,
											"end": 6060,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5991,
											"end": 6060,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5991,
											"end": 6060,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5991,
											"end": 6060,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5991,
											"end": 6060,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5991,
											"end": 6060,
											"name": "tag",
											"source": 5,
											"value": "349"
										},
										{
											"begin": 5991,
											"end": 6060,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6073,
											"end": 6094,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "352"
										},
										{
											"begin": 6079,
											"end": 6084,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6086,
											"end": 6093,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6073,
											"end": 6078,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "353"
										},
										{
											"begin": 6073,
											"end": 6094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6073,
											"end": 6094,
											"name": "tag",
											"source": 5,
											"value": "352"
										},
										{
											"begin": 6073,
											"end": 6094,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6105,
											"end": 6191,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "354"
										},
										{
											"begin": 6137,
											"end": 6146,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6113,
											"end": 6134,
											"name": "SELFBALANCE",
											"source": 5
										},
										{
											"begin": 6113,
											"end": 6146,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "355"
										},
										{
											"begin": 6113,
											"end": 6146,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6113,
											"end": 6146,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6113,
											"end": 6146,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 6113,
											"end": 6146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6113,
											"end": 6146,
											"name": "tag",
											"source": 5,
											"value": "355"
										},
										{
											"begin": 6113,
											"end": 6146,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6181,
											"end": 6190,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6148,
											"end": 6153,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "1586"
										},
										{
											"begin": 6148,
											"end": 6163,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6148,
											"end": 6163,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6148,
											"end": 6163,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 6172,
											"end": 6176,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 6148,
											"end": 6178,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6148,
											"end": 6178,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6148,
											"end": 6178,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6148,
											"end": 6178,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6148,
											"end": 6178,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6148,
											"end": 6178,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 6148,
											"end": 6178,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 6148,
											"end": 6178,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6148,
											"end": 6178,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6148,
											"end": 6178,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6148,
											"end": 6178,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6148,
											"end": 6178,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "356"
										},
										{
											"begin": 6148,
											"end": 6178,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6148,
											"end": 6178,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6148,
											"end": 6178,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 6148,
											"end": 6178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6148,
											"end": 6178,
											"name": "tag",
											"source": 5,
											"value": "356"
										},
										{
											"begin": 6148,
											"end": 6178,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6148,
											"end": 6178,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6148,
											"end": 6178,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6148,
											"end": 6178,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6148,
											"end": 6178,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6148,
											"end": 6178,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6148,
											"end": 6178,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6148,
											"end": 6178,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6148,
											"end": 6178,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 6148,
											"end": 6178,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 6148,
											"end": 6178,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 6148,
											"end": 6178,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6148,
											"end": 6178,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6148,
											"end": 6178,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6148,
											"end": 6178,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "358"
										},
										{
											"begin": 6148,
											"end": 6178,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6148,
											"end": 6178,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 6148,
											"end": 6178,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6148,
											"end": 6178,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6148,
											"end": 6178,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 6148,
											"end": 6178,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 6148,
											"end": 6178,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6148,
											"end": 6178,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6148,
											"end": 6178,
											"name": "tag",
											"source": 5,
											"value": "358"
										},
										{
											"begin": 6148,
											"end": 6178,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6148,
											"end": 6178,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6148,
											"end": 6178,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6148,
											"end": 6178,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6148,
											"end": 6178,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6148,
											"end": 6178,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6148,
											"end": 6178,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6148,
											"end": 6178,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 6148,
											"end": 6178,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 6148,
											"end": 6178,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 6148,
											"end": 6178,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 6148,
											"end": 6178,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6148,
											"end": 6178,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6148,
											"end": 6178,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6148,
											"end": 6178,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6148,
											"end": 6178,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6148,
											"end": 6178,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6148,
											"end": 6178,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6148,
											"end": 6178,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6148,
											"end": 6178,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6148,
											"end": 6178,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6148,
											"end": 6178,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6148,
											"end": 6178,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6148,
											"end": 6178,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "359"
										},
										{
											"begin": 6148,
											"end": 6178,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6148,
											"end": 6178,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6148,
											"end": 6178,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 6148,
											"end": 6178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6148,
											"end": 6178,
											"name": "tag",
											"source": 5,
											"value": "359"
										},
										{
											"begin": 6148,
											"end": 6178,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6148,
											"end": 6190,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "360"
										},
										{
											"begin": 6148,
											"end": 6190,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6148,
											"end": 6190,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6148,
											"end": 6190,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 6148,
											"end": 6190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6148,
											"end": 6190,
											"name": "tag",
											"source": 5,
											"value": "360"
										},
										{
											"begin": 6148,
											"end": 6190,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6105,
											"end": 6112,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 6105,
											"end": 6191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6105,
											"end": 6191,
											"name": "tag",
											"source": 5,
											"value": "354"
										},
										{
											"begin": 6105,
											"end": 6191,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6212,
											"end": 6217,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6204,
											"end": 6227,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6204,
											"end": 6227,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6204,
											"end": 6238,
											"name": "PUSH",
											"source": 5,
											"value": "8FC"
										},
										{
											"begin": 6228,
											"end": 6237,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6204,
											"end": 6238,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6204,
											"end": 6238,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6204,
											"end": 6238,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6204,
											"end": 6238,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 6204,
											"end": 6238,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6204,
											"end": 6238,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6204,
											"end": 6238,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6204,
											"end": 6238,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6204,
											"end": 6238,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6204,
											"end": 6238,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6204,
											"end": 6238,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6204,
											"end": 6238,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6204,
											"end": 6238,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6204,
											"end": 6238,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6204,
											"end": 6238,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6204,
											"end": 6238,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 6204,
											"end": 6238,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 6204,
											"end": 6238,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 6204,
											"end": 6238,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 6204,
											"end": 6238,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6204,
											"end": 6238,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6204,
											"end": 6238,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6204,
											"end": 6238,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6204,
											"end": 6238,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6204,
											"end": 6238,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6204,
											"end": 6238,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6204,
											"end": 6238,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "362"
										},
										{
											"begin": 6204,
											"end": 6238,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6204,
											"end": 6238,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 6204,
											"end": 6238,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6204,
											"end": 6238,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6204,
											"end": 6238,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 6204,
											"end": 6238,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 6204,
											"end": 6238,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6204,
											"end": 6238,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6204,
											"end": 6238,
											"name": "tag",
											"source": 5,
											"value": "362"
										},
										{
											"begin": 6204,
											"end": 6238,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6204,
											"end": 6238,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6249,
											"end": 6254,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "1586"
										},
										{
											"begin": 6249,
											"end": 6263,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6249,
											"end": 6263,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6249,
											"end": 6263,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 6264,
											"end": 6269,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6271,
											"end": 6280,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6249,
											"end": 6281,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6249,
											"end": 6281,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6249,
											"end": 6281,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6249,
											"end": 6281,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6249,
											"end": 6281,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6249,
											"end": 6281,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 6249,
											"end": 6281,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 6249,
											"end": 6281,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6249,
											"end": 6281,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6249,
											"end": 6281,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6249,
											"end": 6281,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6249,
											"end": 6281,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "363"
										},
										{
											"begin": 6249,
											"end": 6281,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6249,
											"end": 6281,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6249,
											"end": 6281,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6249,
											"end": 6281,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 6249,
											"end": 6281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6249,
											"end": 6281,
											"name": "tag",
											"source": 5,
											"value": "363"
										},
										{
											"begin": 6249,
											"end": 6281,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6249,
											"end": 6281,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6249,
											"end": 6281,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6249,
											"end": 6281,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6249,
											"end": 6281,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6249,
											"end": 6281,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6249,
											"end": 6281,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6249,
											"end": 6281,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6249,
											"end": 6281,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6249,
											"end": 6281,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 6249,
											"end": 6281,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 6249,
											"end": 6281,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 6249,
											"end": 6281,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6249,
											"end": 6281,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6249,
											"end": 6281,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6249,
											"end": 6281,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "365"
										},
										{
											"begin": 6249,
											"end": 6281,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6249,
											"end": 6281,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 6249,
											"end": 6281,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6249,
											"end": 6281,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6249,
											"end": 6281,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 6249,
											"end": 6281,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 6249,
											"end": 6281,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6249,
											"end": 6281,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6249,
											"end": 6281,
											"name": "tag",
											"source": 5,
											"value": "365"
										},
										{
											"begin": 6249,
											"end": 6281,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6249,
											"end": 6281,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6249,
											"end": 6281,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6249,
											"end": 6281,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6249,
											"end": 6281,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6249,
											"end": 6281,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6249,
											"end": 6281,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6249,
											"end": 6281,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 6249,
											"end": 6281,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 6249,
											"end": 6281,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 6249,
											"end": 6281,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 6249,
											"end": 6281,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6249,
											"end": 6281,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6249,
											"end": 6281,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6249,
											"end": 6281,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6249,
											"end": 6281,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6249,
											"end": 6281,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6249,
											"end": 6281,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6249,
											"end": 6281,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6249,
											"end": 6281,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6249,
											"end": 6281,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6249,
											"end": 6281,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6249,
											"end": 6281,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6249,
											"end": 6281,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "366"
										},
										{
											"begin": 6249,
											"end": 6281,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6249,
											"end": 6281,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6249,
											"end": 6281,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 6249,
											"end": 6281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6249,
											"end": 6281,
											"name": "tag",
											"source": 5,
											"value": "366"
										},
										{
											"begin": 6249,
											"end": 6281,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6249,
											"end": 6281,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5748,
											"end": 6289,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5748,
											"end": 6289,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5748,
											"end": 6289,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5748,
											"end": 6289,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5748,
											"end": 6289,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5748,
											"end": 6289,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1194,
											"end": 1328,
											"name": "tag",
											"source": 5,
											"value": "353"
										},
										{
											"begin": 1194,
											"end": 1328,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1280,
											"end": 1287,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1260,
											"end": 1269,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1260,
											"end": 1276,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1270,
											"end": 1275,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1260,
											"end": 1276,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1260,
											"end": 1276,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1260,
											"end": 1276,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1260,
											"end": 1276,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1260,
											"end": 1276,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1260,
											"end": 1276,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1260,
											"end": 1276,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1260,
											"end": 1276,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1260,
											"end": 1276,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1260,
											"end": 1276,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1260,
											"end": 1276,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1260,
											"end": 1276,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1260,
											"end": 1276,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1260,
											"end": 1276,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 1276,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1260,
											"end": 1276,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 1287,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1260,
											"end": 1287,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1260,
											"end": 1287,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1260,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "368"
										},
										{
											"begin": 1260,
											"end": 1287,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1260,
											"end": 1287,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1260,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 1260,
											"end": 1287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1260,
											"end": 1287,
											"name": "tag",
											"source": 5,
											"value": "368"
										},
										{
											"begin": 1260,
											"end": 1287,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1260,
											"end": 1287,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1260,
											"end": 1287,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1260,
											"end": 1287,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1260,
											"end": 1287,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1260,
											"end": 1287,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1260,
											"end": 1287,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1260,
											"end": 1287,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1313,
											"end": 1320,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1298,
											"end": 1309,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1298,
											"end": 1309,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1298,
											"end": 1320,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1298,
											"end": 1320,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1298,
											"end": 1320,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1298,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "369"
										},
										{
											"begin": 1298,
											"end": 1320,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1298,
											"end": 1320,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1298,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 1298,
											"end": 1320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1298,
											"end": 1320,
											"name": "tag",
											"source": 5,
											"value": "369"
										},
										{
											"begin": 1298,
											"end": 1320,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1298,
											"end": 1320,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1298,
											"end": 1320,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1298,
											"end": 1320,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1298,
											"end": 1320,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1298,
											"end": 1320,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1298,
											"end": 1320,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1298,
											"end": 1320,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1194,
											"end": 1328,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1194,
											"end": 1328,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1194,
											"end": 1328,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 6,
											"value": "370"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 6,
											"value": "371"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "421"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "370"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 6,
											"value": "421"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "423"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "371"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 6,
											"value": "423"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 523,
											"end": 640,
											"name": "tag",
											"source": 6,
											"value": "373"
										},
										{
											"begin": 523,
											"end": 640,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 632,
											"end": 633,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 630,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 622,
											"end": 634,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 769,
											"end": 891,
											"name": "tag",
											"source": 6,
											"value": "375"
										},
										{
											"begin": 769,
											"end": 891,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 842,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "428"
										},
										{
											"begin": 860,
											"end": 865,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 842,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "370"
										},
										{
											"begin": 842,
											"end": 866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 842,
											"end": 866,
											"name": "tag",
											"source": 6,
											"value": "428"
										},
										{
											"begin": 842,
											"end": 866,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 835,
											"end": 840,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 832,
											"end": 867,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 822,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "429"
										},
										{
											"begin": 822,
											"end": 885,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 881,
											"end": 882,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 878,
											"end": 879,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 871,
											"end": 883,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 822,
											"end": 885,
											"name": "tag",
											"source": 6,
											"value": "429"
										},
										{
											"begin": 822,
											"end": 885,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 769,
											"end": 891,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 769,
											"end": 891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "tag",
											"source": 6,
											"value": "376"
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 943,
											"end": 948,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 981,
											"end": 987,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 968,
											"end": 988,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 959,
											"end": 988,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 959,
											"end": 988,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "431"
										},
										{
											"begin": 1024,
											"end": 1029,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "375"
										},
										{
											"begin": 997,
											"end": 1030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "tag",
											"source": 6,
											"value": "431"
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 897,
											"end": 1036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1150,
											"end": 1152,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1138,
											"end": 1147,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1129,
											"end": 1136,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1125,
											"end": 1148,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1121,
											"end": 1153,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "433"
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "434"
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "373"
										},
										{
											"begin": 1156,
											"end": 1235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "tag",
											"source": 6,
											"value": "434"
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "tag",
											"source": 6,
											"value": "433"
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1276,
											"end": 1277,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "435"
										},
										{
											"begin": 1346,
											"end": 1353,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1343,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1326,
											"end": 1335,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1344,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "376"
										},
										{
											"begin": 1301,
											"end": 1354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "tag",
											"source": 6,
											"value": "435"
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1291,
											"end": 1354,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1291,
											"end": 1354,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1247,
											"end": 1364,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1042,
											"end": 1371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1377,
											"end": 1996,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 1377,
											"end": 1996,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 1460,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1462,
											"end": 1468,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1470,
											"end": 1476,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1519,
											"end": 1521,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1507,
											"end": 1516,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1498,
											"end": 1505,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1517,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1490,
											"end": 1522,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1606,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1606,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "437"
										},
										{
											"begin": 1487,
											"end": 1606,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1525,
											"end": 1604,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "438"
										},
										{
											"begin": 1525,
											"end": 1604,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "373"
										},
										{
											"begin": 1525,
											"end": 1604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1525,
											"end": 1604,
											"name": "tag",
											"source": 6,
											"value": "438"
										},
										{
											"begin": 1525,
											"end": 1604,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1606,
											"name": "tag",
											"source": 6,
											"value": "437"
										},
										{
											"begin": 1487,
											"end": 1606,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1645,
											"end": 1646,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1670,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "439"
										},
										{
											"begin": 1715,
											"end": 1722,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1706,
											"end": 1712,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 1691,
											"end": 1713,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1670,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "376"
										},
										{
											"begin": 1670,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1670,
											"end": 1723,
											"name": "tag",
											"source": 6,
											"value": "439"
										},
										{
											"begin": 1670,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1660,
											"end": 1723,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1660,
											"end": 1723,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1616,
											"end": 1733,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1772,
											"end": 1774,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1798,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "440"
										},
										{
											"begin": 1843,
											"end": 1850,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1834,
											"end": 1840,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1823,
											"end": 1832,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 1819,
											"end": 1841,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1798,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "376"
										},
										{
											"begin": 1798,
											"end": 1851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1798,
											"end": 1851,
											"name": "tag",
											"source": 6,
											"value": "440"
										},
										{
											"begin": 1798,
											"end": 1851,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1788,
											"end": 1851,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1788,
											"end": 1851,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1743,
											"end": 1861,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1900,
											"end": 1902,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1926,
											"end": 1979,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "441"
										},
										{
											"begin": 1971,
											"end": 1978,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1962,
											"end": 1968,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1951,
											"end": 1960,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 1947,
											"end": 1969,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1926,
											"end": 1979,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "376"
										},
										{
											"begin": 1926,
											"end": 1979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1926,
											"end": 1979,
											"name": "tag",
											"source": 6,
											"value": "441"
										},
										{
											"begin": 1926,
											"end": 1979,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1916,
											"end": 1979,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1916,
											"end": 1979,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1989,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1377,
											"end": 1996,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1377,
											"end": 1996,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1377,
											"end": 1996,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1377,
											"end": 1996,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1377,
											"end": 1996,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1377,
											"end": 1996,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2128,
											"name": "tag",
											"source": 6,
											"value": "377"
										},
										{
											"begin": 2002,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2039,
											"end": 2046,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2079,
											"end": 2121,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2072,
											"end": 2077,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2068,
											"end": 2122,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2057,
											"end": 2122,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2057,
											"end": 2122,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2128,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2128,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2128,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2134,
											"end": 2230,
											"name": "tag",
											"source": 6,
											"value": "378"
										},
										{
											"begin": 2134,
											"end": 2230,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2171,
											"end": 2178,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2200,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "444"
										},
										{
											"begin": 2218,
											"end": 2223,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2200,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "377"
										},
										{
											"begin": 2200,
											"end": 2224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2200,
											"end": 2224,
											"name": "tag",
											"source": 6,
											"value": "444"
										},
										{
											"begin": 2200,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2189,
											"end": 2224,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2189,
											"end": 2224,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2134,
											"end": 2230,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2134,
											"end": 2230,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2134,
											"end": 2230,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2134,
											"end": 2230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2236,
											"end": 2358,
											"name": "tag",
											"source": 6,
											"value": "379"
										},
										{
											"begin": 2236,
											"end": 2358,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2309,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "446"
										},
										{
											"begin": 2327,
											"end": 2332,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2309,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "378"
										},
										{
											"begin": 2309,
											"end": 2333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2309,
											"end": 2333,
											"name": "tag",
											"source": 6,
											"value": "446"
										},
										{
											"begin": 2309,
											"end": 2333,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2302,
											"end": 2307,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2299,
											"end": 2334,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2289,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "447"
										},
										{
											"begin": 2289,
											"end": 2352,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2348,
											"end": 2349,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2345,
											"end": 2346,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2338,
											"end": 2350,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2289,
											"end": 2352,
											"name": "tag",
											"source": 6,
											"value": "447"
										},
										{
											"begin": 2289,
											"end": 2352,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2236,
											"end": 2358,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2236,
											"end": 2358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2364,
											"end": 2503,
											"name": "tag",
											"source": 6,
											"value": "380"
										},
										{
											"begin": 2364,
											"end": 2503,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2410,
											"end": 2415,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2448,
											"end": 2454,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2455,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2426,
											"end": 2455,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2426,
											"end": 2455,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2497,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "449"
										},
										{
											"begin": 2491,
											"end": 2496,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2497,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "379"
										},
										{
											"begin": 2464,
											"end": 2497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2497,
											"name": "tag",
											"source": 6,
											"value": "449"
										},
										{
											"begin": 2464,
											"end": 2497,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2364,
											"end": 2503,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2364,
											"end": 2503,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2364,
											"end": 2503,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2364,
											"end": 2503,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2364,
											"end": 2503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2509,
											"end": 2838,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 2509,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2568,
											"end": 2574,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2617,
											"end": 2619,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2605,
											"end": 2614,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2596,
											"end": 2603,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2592,
											"end": 2615,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2588,
											"end": 2620,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2585,
											"end": 2704,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2585,
											"end": 2704,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "451"
										},
										{
											"begin": 2585,
											"end": 2704,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2623,
											"end": 2702,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "452"
										},
										{
											"begin": 2623,
											"end": 2702,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "373"
										},
										{
											"begin": 2623,
											"end": 2702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2623,
											"end": 2702,
											"name": "tag",
											"source": 6,
											"value": "452"
										},
										{
											"begin": 2623,
											"end": 2702,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2585,
											"end": 2704,
											"name": "tag",
											"source": 6,
											"value": "451"
										},
										{
											"begin": 2585,
											"end": 2704,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2743,
											"end": 2744,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2768,
											"end": 2821,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "453"
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2804,
											"end": 2810,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2793,
											"end": 2802,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2789,
											"end": 2811,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2768,
											"end": 2821,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "380"
										},
										{
											"begin": 2768,
											"end": 2821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2768,
											"end": 2821,
											"name": "tag",
											"source": 6,
											"value": "453"
										},
										{
											"begin": 2768,
											"end": 2821,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2821,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2821,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2714,
											"end": 2831,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2509,
											"end": 2838,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2509,
											"end": 2838,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2509,
											"end": 2838,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2509,
											"end": 2838,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2509,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2844,
											"end": 3176,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 2844,
											"end": 3176,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2965,
											"end": 2969,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3003,
											"end": 3005,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2992,
											"end": 3001,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2988,
											"end": 3006,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2980,
											"end": 3006,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2980,
											"end": 3006,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3016,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "455"
										},
										{
											"begin": 3084,
											"end": 3085,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3073,
											"end": 3082,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3069,
											"end": 3086,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3060,
											"end": 3066,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3016,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "371"
										},
										{
											"begin": 3016,
											"end": 3087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3016,
											"end": 3087,
											"name": "tag",
											"source": 6,
											"value": "455"
										},
										{
											"begin": 3016,
											"end": 3087,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3097,
											"end": 3169,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "456"
										},
										{
											"begin": 3165,
											"end": 3167,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3154,
											"end": 3163,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3150,
											"end": 3168,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 3147,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3097,
											"end": 3169,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "371"
										},
										{
											"begin": 3097,
											"end": 3169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3097,
											"end": 3169,
											"name": "tag",
											"source": 6,
											"value": "456"
										},
										{
											"begin": 3097,
											"end": 3169,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2844,
											"end": 3176,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2844,
											"end": 3176,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2844,
											"end": 3176,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2844,
											"end": 3176,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2844,
											"end": 3176,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2844,
											"end": 3176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3182,
											"end": 3656,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 3182,
											"end": 3656,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3250,
											"end": 3256,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3258,
											"end": 3264,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3307,
											"end": 3309,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3295,
											"end": 3304,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3286,
											"end": 3293,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3282,
											"end": 3305,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3278,
											"end": 3310,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3275,
											"end": 3394,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3275,
											"end": 3394,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "458"
										},
										{
											"begin": 3275,
											"end": 3394,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3313,
											"end": 3392,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "459"
										},
										{
											"begin": 3313,
											"end": 3392,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "373"
										},
										{
											"begin": 3313,
											"end": 3392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3313,
											"end": 3392,
											"name": "tag",
											"source": 6,
											"value": "459"
										},
										{
											"begin": 3313,
											"end": 3392,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3275,
											"end": 3394,
											"name": "tag",
											"source": 6,
											"value": "458"
										},
										{
											"begin": 3275,
											"end": 3394,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3433,
											"end": 3434,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3458,
											"end": 3511,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "460"
										},
										{
											"begin": 3503,
											"end": 3510,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3494,
											"end": 3500,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3483,
											"end": 3492,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3479,
											"end": 3501,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3458,
											"end": 3511,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "380"
										},
										{
											"begin": 3458,
											"end": 3511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3458,
											"end": 3511,
											"name": "tag",
											"source": 6,
											"value": "460"
										},
										{
											"begin": 3458,
											"end": 3511,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3448,
											"end": 3511,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3448,
											"end": 3511,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3404,
											"end": 3521,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3560,
											"end": 3562,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3586,
											"end": 3639,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "461"
										},
										{
											"begin": 3631,
											"end": 3638,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3622,
											"end": 3628,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3611,
											"end": 3620,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3607,
											"end": 3629,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3586,
											"end": 3639,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "376"
										},
										{
											"begin": 3586,
											"end": 3639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3586,
											"end": 3639,
											"name": "tag",
											"source": 6,
											"value": "461"
										},
										{
											"begin": 3586,
											"end": 3639,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3576,
											"end": 3639,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3576,
											"end": 3639,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3531,
											"end": 3649,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3182,
											"end": 3656,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3182,
											"end": 3656,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3182,
											"end": 3656,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3182,
											"end": 3656,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3182,
											"end": 3656,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3182,
											"end": 3656,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3780,
											"name": "tag",
											"source": 6,
											"value": "381"
										},
										{
											"begin": 3662,
											"end": 3780,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "463"
										},
										{
											"begin": 3767,
											"end": 3772,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "378"
										},
										{
											"begin": 3749,
											"end": 3773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "tag",
											"source": 6,
											"value": "463"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3744,
											"end": 3747,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3737,
											"end": 3774,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3780,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3780,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3786,
											"end": 4008,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 3786,
											"end": 4008,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3879,
											"end": 3883,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3917,
											"end": 3919,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3906,
											"end": 3915,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3902,
											"end": 3920,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3894,
											"end": 3920,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3894,
											"end": 3920,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3930,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "465"
										},
										{
											"begin": 3998,
											"end": 3999,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3987,
											"end": 3996,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3983,
											"end": 4000,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3974,
											"end": 3980,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3930,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "381"
										},
										{
											"begin": 3930,
											"end": 4001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3930,
											"end": 4001,
											"name": "tag",
											"source": 6,
											"value": "465"
										},
										{
											"begin": 3930,
											"end": 4001,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3786,
											"end": 4008,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3786,
											"end": 4008,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3786,
											"end": 4008,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3786,
											"end": 4008,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3786,
											"end": 4008,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4014,
											"end": 4074,
											"name": "tag",
											"source": 6,
											"value": "382"
										},
										{
											"begin": 4014,
											"end": 4074,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4042,
											"end": 4045,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4063,
											"end": 4068,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4056,
											"end": 4068,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4056,
											"end": 4068,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4014,
											"end": 4074,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4014,
											"end": 4074,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4014,
											"end": 4074,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4014,
											"end": 4074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4080,
											"end": 4222,
											"name": "tag",
											"source": 6,
											"value": "383"
										},
										{
											"begin": 4080,
											"end": 4222,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4130,
											"end": 4139,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4163,
											"end": 4216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "468"
										},
										{
											"begin": 4181,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "469"
										},
										{
											"begin": 4190,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "470"
										},
										{
											"begin": 4208,
											"end": 4213,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4190,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "377"
										},
										{
											"begin": 4190,
											"end": 4214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4190,
											"end": 4214,
											"name": "tag",
											"source": 6,
											"value": "470"
										},
										{
											"begin": 4190,
											"end": 4214,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4181,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "382"
										},
										{
											"begin": 4181,
											"end": 4215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4181,
											"end": 4215,
											"name": "tag",
											"source": 6,
											"value": "469"
										},
										{
											"begin": 4181,
											"end": 4215,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4163,
											"end": 4216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "377"
										},
										{
											"begin": 4163,
											"end": 4216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4163,
											"end": 4216,
											"name": "tag",
											"source": 6,
											"value": "468"
										},
										{
											"begin": 4163,
											"end": 4216,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4150,
											"end": 4216,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4150,
											"end": 4216,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4080,
											"end": 4222,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4080,
											"end": 4222,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4080,
											"end": 4222,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4080,
											"end": 4222,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4228,
											"end": 4354,
											"name": "tag",
											"source": 6,
											"value": "384"
										},
										{
											"begin": 4228,
											"end": 4354,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4278,
											"end": 4287,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4311,
											"end": 4348,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "472"
										},
										{
											"begin": 4342,
											"end": 4347,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4311,
											"end": 4348,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "383"
										},
										{
											"begin": 4311,
											"end": 4348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4311,
											"end": 4348,
											"name": "tag",
											"source": 6,
											"value": "472"
										},
										{
											"begin": 4311,
											"end": 4348,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4298,
											"end": 4348,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4298,
											"end": 4348,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4228,
											"end": 4354,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4228,
											"end": 4354,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4228,
											"end": 4354,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4228,
											"end": 4354,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4360,
											"end": 4500,
											"name": "tag",
											"source": 6,
											"value": "385"
										},
										{
											"begin": 4360,
											"end": 4500,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4424,
											"end": 4433,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4457,
											"end": 4494,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "474"
										},
										{
											"begin": 4488,
											"end": 4493,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4457,
											"end": 4494,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "384"
										},
										{
											"begin": 4457,
											"end": 4494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4457,
											"end": 4494,
											"name": "tag",
											"source": 6,
											"value": "474"
										},
										{
											"begin": 4457,
											"end": 4494,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4444,
											"end": 4494,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4444,
											"end": 4494,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4360,
											"end": 4500,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4360,
											"end": 4500,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4360,
											"end": 4500,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4360,
											"end": 4500,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4506,
											"end": 4665,
											"name": "tag",
											"source": 6,
											"value": "386"
										},
										{
											"begin": 4506,
											"end": 4665,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4607,
											"end": 4658,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "476"
										},
										{
											"begin": 4652,
											"end": 4657,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4607,
											"end": 4658,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "385"
										},
										{
											"begin": 4607,
											"end": 4658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4607,
											"end": 4658,
											"name": "tag",
											"source": 6,
											"value": "476"
										},
										{
											"begin": 4607,
											"end": 4658,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4602,
											"end": 4605,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4595,
											"end": 4659,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4506,
											"end": 4665,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4506,
											"end": 4665,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4506,
											"end": 4665,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4671,
											"end": 4921,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 4671,
											"end": 4921,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4778,
											"end": 4782,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4816,
											"end": 4818,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4805,
											"end": 4814,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4801,
											"end": 4819,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4793,
											"end": 4819,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4793,
											"end": 4819,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4829,
											"end": 4914,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "478"
										},
										{
											"begin": 4911,
											"end": 4912,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4900,
											"end": 4909,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4896,
											"end": 4913,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4887,
											"end": 4893,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4829,
											"end": 4914,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "386"
										},
										{
											"begin": 4829,
											"end": 4914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4829,
											"end": 4914,
											"name": "tag",
											"source": 6,
											"value": "478"
										},
										{
											"begin": 4829,
											"end": 4914,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4671,
											"end": 4921,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4671,
											"end": 4921,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4671,
											"end": 4921,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4671,
											"end": 4921,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4671,
											"end": 4921,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4927,
											"end": 5369,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 4927,
											"end": 5369,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5076,
											"end": 5080,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5114,
											"end": 5116,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5103,
											"end": 5112,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5099,
											"end": 5117,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5091,
											"end": 5117,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5091,
											"end": 5117,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5127,
											"end": 5198,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "480"
										},
										{
											"begin": 5195,
											"end": 5196,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5184,
											"end": 5193,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5180,
											"end": 5197,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5171,
											"end": 5177,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5127,
											"end": 5198,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "381"
										},
										{
											"begin": 5127,
											"end": 5198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5127,
											"end": 5198,
											"name": "tag",
											"source": 6,
											"value": "480"
										},
										{
											"begin": 5127,
											"end": 5198,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5208,
											"end": 5280,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "481"
										},
										{
											"begin": 5276,
											"end": 5278,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5265,
											"end": 5274,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5261,
											"end": 5279,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5252,
											"end": 5258,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5208,
											"end": 5280,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "381"
										},
										{
											"begin": 5208,
											"end": 5280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5208,
											"end": 5280,
											"name": "tag",
											"source": 6,
											"value": "481"
										},
										{
											"begin": 5208,
											"end": 5280,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5290,
											"end": 5362,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "482"
										},
										{
											"begin": 5358,
											"end": 5360,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5347,
											"end": 5356,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5343,
											"end": 5361,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5334,
											"end": 5340,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5290,
											"end": 5362,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "371"
										},
										{
											"begin": 5290,
											"end": 5362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5290,
											"end": 5362,
											"name": "tag",
											"source": 6,
											"value": "482"
										},
										{
											"begin": 5290,
											"end": 5362,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4927,
											"end": 5369,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 4927,
											"end": 5369,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4927,
											"end": 5369,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4927,
											"end": 5369,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4927,
											"end": 5369,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4927,
											"end": 5369,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4927,
											"end": 5369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5375,
											"end": 5465,
											"name": "tag",
											"source": 6,
											"value": "387"
										},
										{
											"begin": 5375,
											"end": 5465,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5409,
											"end": 5416,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5452,
											"end": 5457,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5445,
											"end": 5458,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5438,
											"end": 5459,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5427,
											"end": 5459,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5427,
											"end": 5459,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5375,
											"end": 5465,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5375,
											"end": 5465,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5375,
											"end": 5465,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5375,
											"end": 5465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5471,
											"end": 5587,
											"name": "tag",
											"source": 6,
											"value": "388"
										},
										{
											"begin": 5471,
											"end": 5587,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5541,
											"end": 5562,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "485"
										},
										{
											"begin": 5556,
											"end": 5561,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5541,
											"end": 5562,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "387"
										},
										{
											"begin": 5541,
											"end": 5562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5541,
											"end": 5562,
											"name": "tag",
											"source": 6,
											"value": "485"
										},
										{
											"begin": 5541,
											"end": 5562,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5534,
											"end": 5539,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5531,
											"end": 5563,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 5521,
											"end": 5581,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "486"
										},
										{
											"begin": 5521,
											"end": 5581,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5577,
											"end": 5578,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5574,
											"end": 5575,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5567,
											"end": 5579,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5521,
											"end": 5581,
											"name": "tag",
											"source": 6,
											"value": "486"
										},
										{
											"begin": 5521,
											"end": 5581,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5471,
											"end": 5587,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5471,
											"end": 5587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5593,
											"end": 5730,
											"name": "tag",
											"source": 6,
											"value": "389"
										},
										{
											"begin": 5593,
											"end": 5730,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5647,
											"end": 5652,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5678,
											"end": 5684,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5672,
											"end": 5685,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5663,
											"end": 5685,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5663,
											"end": 5685,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5694,
											"end": 5724,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "488"
										},
										{
											"begin": 5718,
											"end": 5723,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5694,
											"end": 5724,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "388"
										},
										{
											"begin": 5694,
											"end": 5724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5694,
											"end": 5724,
											"name": "tag",
											"source": 6,
											"value": "488"
										},
										{
											"begin": 5694,
											"end": 5724,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5593,
											"end": 5730,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5593,
											"end": 5730,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5593,
											"end": 5730,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5593,
											"end": 5730,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5593,
											"end": 5730,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5736,
											"end": 6081,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 5736,
											"end": 6081,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5803,
											"end": 5809,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5852,
											"end": 5854,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5840,
											"end": 5849,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5831,
											"end": 5838,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5827,
											"end": 5850,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5823,
											"end": 5855,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 5820,
											"end": 5939,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5820,
											"end": 5939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "490"
										},
										{
											"begin": 5820,
											"end": 5939,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5858,
											"end": 5937,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "491"
										},
										{
											"begin": 5858,
											"end": 5937,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "373"
										},
										{
											"begin": 5858,
											"end": 5937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5858,
											"end": 5937,
											"name": "tag",
											"source": 6,
											"value": "491"
										},
										{
											"begin": 5858,
											"end": 5937,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5820,
											"end": 5939,
											"name": "tag",
											"source": 6,
											"value": "490"
										},
										{
											"begin": 5820,
											"end": 5939,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5978,
											"end": 5979,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6003,
											"end": 6064,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "492"
										},
										{
											"begin": 6056,
											"end": 6063,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6047,
											"end": 6053,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6036,
											"end": 6045,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6032,
											"end": 6054,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6003,
											"end": 6064,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "389"
										},
										{
											"begin": 6003,
											"end": 6064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6003,
											"end": 6064,
											"name": "tag",
											"source": 6,
											"value": "492"
										},
										{
											"begin": 6003,
											"end": 6064,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5993,
											"end": 6064,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5993,
											"end": 6064,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5949,
											"end": 6074,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5736,
											"end": 6081,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5736,
											"end": 6081,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5736,
											"end": 6081,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5736,
											"end": 6081,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5736,
											"end": 6081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6087,
											"end": 6267,
											"name": "tag",
											"source": 6,
											"value": "390"
										},
										{
											"begin": 6087,
											"end": 6267,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6135,
											"end": 6212,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6132,
											"end": 6133,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6125,
											"end": 6213,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6232,
											"end": 6236,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 6229,
											"end": 6230,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6222,
											"end": 6237,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6256,
											"end": 6260,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 6253,
											"end": 6254,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6246,
											"end": 6261,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6273,
											"end": 6683,
											"name": "tag",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 6273,
											"end": 6683,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6313,
											"end": 6320,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6336,
											"end": 6356,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "495"
										},
										{
											"begin": 6354,
											"end": 6355,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6336,
											"end": 6356,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "370"
										},
										{
											"begin": 6336,
											"end": 6356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6336,
											"end": 6356,
											"name": "tag",
											"source": 6,
											"value": "495"
										},
										{
											"begin": 6336,
											"end": 6356,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6331,
											"end": 6356,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6331,
											"end": 6356,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6370,
											"end": 6390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "496"
										},
										{
											"begin": 6388,
											"end": 6389,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6370,
											"end": 6390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "370"
										},
										{
											"begin": 6370,
											"end": 6390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6370,
											"end": 6390,
											"name": "tag",
											"source": 6,
											"value": "496"
										},
										{
											"begin": 6370,
											"end": 6390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6365,
											"end": 6390,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6365,
											"end": 6390,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6425,
											"end": 6426,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6422,
											"end": 6423,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6418,
											"end": 6427,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 6447,
											"end": 6477,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "497"
										},
										{
											"begin": 6465,
											"end": 6476,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6447,
											"end": 6477,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "370"
										},
										{
											"begin": 6447,
											"end": 6477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6447,
											"end": 6477,
											"name": "tag",
											"source": 6,
											"value": "497"
										},
										{
											"begin": 6447,
											"end": 6477,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6436,
											"end": 6477,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6436,
											"end": 6477,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6626,
											"end": 6627,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6617,
											"end": 6624,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6613,
											"end": 6628,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 6610,
											"end": 6611,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6607,
											"end": 6629,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 6587,
											"end": 6588,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6580,
											"end": 6589,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6560,
											"end": 6643,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 6537,
											"end": 6676,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "498"
										},
										{
											"begin": 6537,
											"end": 6676,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6656,
											"end": 6674,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "499"
										},
										{
											"begin": 6656,
											"end": 6674,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "390"
										},
										{
											"begin": 6656,
											"end": 6674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6656,
											"end": 6674,
											"name": "tag",
											"source": 6,
											"value": "499"
										},
										{
											"begin": 6656,
											"end": 6674,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6537,
											"end": 6676,
											"name": "tag",
											"source": 6,
											"value": "498"
										},
										{
											"begin": 6537,
											"end": 6676,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6321,
											"end": 6683,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6273,
											"end": 6683,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6273,
											"end": 6683,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6273,
											"end": 6683,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6273,
											"end": 6683,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6273,
											"end": 6683,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6689,
											"end": 6858,
											"name": "tag",
											"source": 6,
											"value": "391"
										},
										{
											"begin": 6689,
											"end": 6858,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6773,
											"end": 6784,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6807,
											"end": 6813,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6802,
											"end": 6805,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6795,
											"end": 6814,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6847,
											"end": 6851,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6842,
											"end": 6845,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6838,
											"end": 6852,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6823,
											"end": 6852,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6823,
											"end": 6852,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6689,
											"end": 6858,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6689,
											"end": 6858,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6689,
											"end": 6858,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6689,
											"end": 6858,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6689,
											"end": 6858,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6864,
											"end": 7030,
											"name": "tag",
											"source": 6,
											"value": "392"
										},
										{
											"begin": 6864,
											"end": 7030,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7004,
											"end": 7022,
											"name": "PUSH",
											"source": 6,
											"value": "78202F207920213D206478202F20647900000000000000000000000000000000"
										},
										{
											"begin": 7000,
											"end": 7001,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6992,
											"end": 6998,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6988,
											"end": 7002,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6981,
											"end": 7023,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6864,
											"end": 7030,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6864,
											"end": 7030,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7036,
											"end": 7402,
											"name": "tag",
											"source": 6,
											"value": "393"
										},
										{
											"begin": 7036,
											"end": 7402,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7178,
											"end": 7181,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7199,
											"end": 7266,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "503"
										},
										{
											"begin": 7263,
											"end": 7265,
											"name": "PUSH",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 7258,
											"end": 7261,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7199,
											"end": 7266,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "391"
										},
										{
											"begin": 7199,
											"end": 7266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7199,
											"end": 7266,
											"name": "tag",
											"source": 6,
											"value": "503"
										},
										{
											"begin": 7199,
											"end": 7266,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7192,
											"end": 7266,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7192,
											"end": 7266,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7275,
											"end": 7368,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "504"
										},
										{
											"begin": 7364,
											"end": 7367,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7275,
											"end": 7368,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "392"
										},
										{
											"begin": 7275,
											"end": 7368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7275,
											"end": 7368,
											"name": "tag",
											"source": 6,
											"value": "504"
										},
										{
											"begin": 7275,
											"end": 7368,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7393,
											"end": 7395,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7388,
											"end": 7391,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7384,
											"end": 7396,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7377,
											"end": 7396,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7377,
											"end": 7396,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7036,
											"end": 7402,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7036,
											"end": 7402,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7036,
											"end": 7402,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7036,
											"end": 7402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7408,
											"end": 7827,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 7408,
											"end": 7827,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7574,
											"end": 7578,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7612,
											"end": 7614,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7601,
											"end": 7610,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7597,
											"end": 7615,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7589,
											"end": 7615,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7589,
											"end": 7615,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7661,
											"end": 7670,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7655,
											"end": 7659,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7651,
											"end": 7671,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7647,
											"end": 7648,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7636,
											"end": 7645,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7632,
											"end": 7649,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7625,
											"end": 7672,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7689,
											"end": 7820,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "506"
										},
										{
											"begin": 7815,
											"end": 7819,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7689,
											"end": 7820,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "393"
										},
										{
											"begin": 7689,
											"end": 7820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7689,
											"end": 7820,
											"name": "tag",
											"source": 6,
											"value": "506"
										},
										{
											"begin": 7689,
											"end": 7820,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7681,
											"end": 7820,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7681,
											"end": 7820,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7408,
											"end": 7827,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7408,
											"end": 7827,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7408,
											"end": 7827,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7408,
											"end": 7827,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7833,
											"end": 8013,
											"name": "tag",
											"source": 6,
											"value": "394"
										},
										{
											"begin": 7833,
											"end": 8013,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7881,
											"end": 7958,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7878,
											"end": 7879,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7871,
											"end": 7959,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7978,
											"end": 7982,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 7975,
											"end": 7976,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7968,
											"end": 7983,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8002,
											"end": 8006,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 7999,
											"end": 8000,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7992,
											"end": 8007,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8019,
											"end": 8204,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 8019,
											"end": 8204,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8059,
											"end": 8060,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8076,
											"end": 8096,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "509"
										},
										{
											"begin": 8094,
											"end": 8095,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8076,
											"end": 8096,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "370"
										},
										{
											"begin": 8076,
											"end": 8096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8076,
											"end": 8096,
											"name": "tag",
											"source": 6,
											"value": "509"
										},
										{
											"begin": 8076,
											"end": 8096,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8071,
											"end": 8096,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8071,
											"end": 8096,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8110,
											"end": 8130,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "510"
										},
										{
											"begin": 8128,
											"end": 8129,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8110,
											"end": 8130,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "370"
										},
										{
											"begin": 8110,
											"end": 8130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8110,
											"end": 8130,
											"name": "tag",
											"source": 6,
											"value": "510"
										},
										{
											"begin": 8110,
											"end": 8130,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8105,
											"end": 8130,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8105,
											"end": 8130,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8149,
											"end": 8150,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8139,
											"end": 8174,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "511"
										},
										{
											"begin": 8139,
											"end": 8174,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8154,
											"end": 8172,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "512"
										},
										{
											"begin": 8154,
											"end": 8172,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "394"
										},
										{
											"begin": 8154,
											"end": 8172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8154,
											"end": 8172,
											"name": "tag",
											"source": 6,
											"value": "512"
										},
										{
											"begin": 8154,
											"end": 8172,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8139,
											"end": 8174,
											"name": "tag",
											"source": 6,
											"value": "511"
										},
										{
											"begin": 8139,
											"end": 8174,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8196,
											"end": 8197,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8193,
											"end": 8194,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8189,
											"end": 8198,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 8184,
											"end": 8198,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8184,
											"end": 8198,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8019,
											"end": 8204,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8019,
											"end": 8204,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8019,
											"end": 8204,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8019,
											"end": 8204,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8019,
											"end": 8204,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8210,
											"end": 8370,
											"name": "tag",
											"source": 6,
											"value": "395"
										},
										{
											"begin": 8210,
											"end": 8370,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8350,
											"end": 8362,
											"name": "PUSH",
											"source": 6,
											"value": "736861726573203D203000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8346,
											"end": 8347,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8338,
											"end": 8344,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8334,
											"end": 8348,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8327,
											"end": 8363,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8210,
											"end": 8370,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8210,
											"end": 8370,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8376,
											"end": 8742,
											"name": "tag",
											"source": 6,
											"value": "396"
										},
										{
											"begin": 8376,
											"end": 8742,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8518,
											"end": 8521,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8539,
											"end": 8606,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "515"
										},
										{
											"begin": 8603,
											"end": 8605,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 8598,
											"end": 8601,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8539,
											"end": 8606,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "391"
										},
										{
											"begin": 8539,
											"end": 8606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8539,
											"end": 8606,
											"name": "tag",
											"source": 6,
											"value": "515"
										},
										{
											"begin": 8539,
											"end": 8606,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8532,
											"end": 8606,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8532,
											"end": 8606,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8615,
											"end": 8708,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "516"
										},
										{
											"begin": 8704,
											"end": 8707,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8615,
											"end": 8708,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "395"
										},
										{
											"begin": 8615,
											"end": 8708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8615,
											"end": 8708,
											"name": "tag",
											"source": 6,
											"value": "516"
										},
										{
											"begin": 8615,
											"end": 8708,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8733,
											"end": 8735,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8728,
											"end": 8731,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8724,
											"end": 8736,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8717,
											"end": 8736,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8717,
											"end": 8736,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8376,
											"end": 8742,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8376,
											"end": 8742,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8376,
											"end": 8742,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8376,
											"end": 8742,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8748,
											"end": 9167,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 8748,
											"end": 9167,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8914,
											"end": 8918,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8952,
											"end": 8954,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8941,
											"end": 8950,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8937,
											"end": 8955,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8929,
											"end": 8955,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8929,
											"end": 8955,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9001,
											"end": 9010,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8995,
											"end": 8999,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8991,
											"end": 9011,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8987,
											"end": 8988,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8976,
											"end": 8985,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8972,
											"end": 8989,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8965,
											"end": 9012,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9029,
											"end": 9160,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "518"
										},
										{
											"begin": 9155,
											"end": 9159,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9029,
											"end": 9160,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "396"
										},
										{
											"begin": 9029,
											"end": 9160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9029,
											"end": 9160,
											"name": "tag",
											"source": 6,
											"value": "518"
										},
										{
											"begin": 9029,
											"end": 9160,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9021,
											"end": 9160,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9021,
											"end": 9160,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8748,
											"end": 9167,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8748,
											"end": 9167,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8748,
											"end": 9167,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8748,
											"end": 9167,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9173,
											"end": 9316,
											"name": "tag",
											"source": 6,
											"value": "397"
										},
										{
											"begin": 9173,
											"end": 9316,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9230,
											"end": 9235,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9261,
											"end": 9267,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9255,
											"end": 9268,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9246,
											"end": 9268,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9246,
											"end": 9268,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9277,
											"end": 9310,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "520"
										},
										{
											"begin": 9304,
											"end": 9309,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9277,
											"end": 9310,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "375"
										},
										{
											"begin": 9277,
											"end": 9310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9277,
											"end": 9310,
											"name": "tag",
											"source": 6,
											"value": "520"
										},
										{
											"begin": 9277,
											"end": 9310,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9173,
											"end": 9316,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9173,
											"end": 9316,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9173,
											"end": 9316,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9173,
											"end": 9316,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9173,
											"end": 9316,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9322,
											"end": 9673,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 9322,
											"end": 9673,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9392,
											"end": 9398,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9441,
											"end": 9443,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9429,
											"end": 9438,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9420,
											"end": 9427,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9416,
											"end": 9439,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9412,
											"end": 9444,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 9409,
											"end": 9528,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9409,
											"end": 9528,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "522"
										},
										{
											"begin": 9409,
											"end": 9528,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9447,
											"end": 9526,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "523"
										},
										{
											"begin": 9447,
											"end": 9526,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "373"
										},
										{
											"begin": 9447,
											"end": 9526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9447,
											"end": 9526,
											"name": "tag",
											"source": 6,
											"value": "523"
										},
										{
											"begin": 9447,
											"end": 9526,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9409,
											"end": 9528,
											"name": "tag",
											"source": 6,
											"value": "522"
										},
										{
											"begin": 9409,
											"end": 9528,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9567,
											"end": 9568,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9592,
											"end": 9656,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "524"
										},
										{
											"begin": 9648,
											"end": 9655,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9639,
											"end": 9645,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9628,
											"end": 9637,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9624,
											"end": 9646,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9592,
											"end": 9656,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "397"
										},
										{
											"begin": 9592,
											"end": 9656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9592,
											"end": 9656,
											"name": "tag",
											"source": 6,
											"value": "524"
										},
										{
											"begin": 9592,
											"end": 9656,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9582,
											"end": 9656,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9582,
											"end": 9656,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9538,
											"end": 9666,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9322,
											"end": 9673,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9322,
											"end": 9673,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9322,
											"end": 9673,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9322,
											"end": 9673,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9322,
											"end": 9673,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9679,
											"end": 9851,
											"name": "tag",
											"source": 6,
											"value": "398"
										},
										{
											"begin": 9679,
											"end": 9851,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9819,
											"end": 9843,
											"name": "PUSH",
											"source": 6,
											"value": "496E76616C696420455243323020726573657276657300000000000000000000"
										},
										{
											"begin": 9815,
											"end": 9816,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9807,
											"end": 9813,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9803,
											"end": 9817,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9796,
											"end": 9844,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9679,
											"end": 9851,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9679,
											"end": 9851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9857,
											"end": 10223,
											"name": "tag",
											"source": 6,
											"value": "399"
										},
										{
											"begin": 9857,
											"end": 10223,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9999,
											"end": 10002,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10020,
											"end": 10087,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "527"
										},
										{
											"begin": 10084,
											"end": 10086,
											"name": "PUSH",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 10079,
											"end": 10082,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10020,
											"end": 10087,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "391"
										},
										{
											"begin": 10020,
											"end": 10087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10020,
											"end": 10087,
											"name": "tag",
											"source": 6,
											"value": "527"
										},
										{
											"begin": 10020,
											"end": 10087,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10013,
											"end": 10087,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10013,
											"end": 10087,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10096,
											"end": 10189,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "528"
										},
										{
											"begin": 10185,
											"end": 10188,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10096,
											"end": 10189,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "398"
										},
										{
											"begin": 10096,
											"end": 10189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10096,
											"end": 10189,
											"name": "tag",
											"source": 6,
											"value": "528"
										},
										{
											"begin": 10096,
											"end": 10189,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10214,
											"end": 10216,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10209,
											"end": 10212,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10205,
											"end": 10217,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10198,
											"end": 10217,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10198,
											"end": 10217,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9857,
											"end": 10223,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9857,
											"end": 10223,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9857,
											"end": 10223,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9857,
											"end": 10223,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10229,
											"end": 10648,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 10229,
											"end": 10648,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10395,
											"end": 10399,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10433,
											"end": 10435,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10422,
											"end": 10431,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10418,
											"end": 10436,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10410,
											"end": 10436,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10410,
											"end": 10436,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10482,
											"end": 10491,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10476,
											"end": 10480,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10472,
											"end": 10492,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10468,
											"end": 10469,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10457,
											"end": 10466,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10453,
											"end": 10470,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10446,
											"end": 10493,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10510,
											"end": 10641,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "530"
										},
										{
											"begin": 10636,
											"end": 10640,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10510,
											"end": 10641,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "399"
										},
										{
											"begin": 10510,
											"end": 10641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10510,
											"end": 10641,
											"name": "tag",
											"source": 6,
											"value": "530"
										},
										{
											"begin": 10510,
											"end": 10641,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10502,
											"end": 10641,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10502,
											"end": 10641,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10229,
											"end": 10648,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10229,
											"end": 10648,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10229,
											"end": 10648,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10229,
											"end": 10648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10654,
											"end": 10845,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 10654,
											"end": 10845,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10694,
											"end": 10697,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10713,
											"end": 10733,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "532"
										},
										{
											"begin": 10731,
											"end": 10732,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10713,
											"end": 10733,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "370"
										},
										{
											"begin": 10713,
											"end": 10733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10713,
											"end": 10733,
											"name": "tag",
											"source": 6,
											"value": "532"
										},
										{
											"begin": 10713,
											"end": 10733,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10708,
											"end": 10733,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10708,
											"end": 10733,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10747,
											"end": 10767,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "533"
										},
										{
											"begin": 10765,
											"end": 10766,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10747,
											"end": 10767,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "370"
										},
										{
											"begin": 10747,
											"end": 10767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10747,
											"end": 10767,
											"name": "tag",
											"source": 6,
											"value": "533"
										},
										{
											"begin": 10747,
											"end": 10767,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10742,
											"end": 10767,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10742,
											"end": 10767,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10790,
											"end": 10791,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10787,
											"end": 10788,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10783,
											"end": 10792,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10776,
											"end": 10792,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10776,
											"end": 10792,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10811,
											"end": 10814,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10808,
											"end": 10809,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10805,
											"end": 10815,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 10802,
											"end": 10838,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10802,
											"end": 10838,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "534"
										},
										{
											"begin": 10802,
											"end": 10838,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10818,
											"end": 10836,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "535"
										},
										{
											"begin": 10818,
											"end": 10836,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "390"
										},
										{
											"begin": 10818,
											"end": 10836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10818,
											"end": 10836,
											"name": "tag",
											"source": 6,
											"value": "535"
										},
										{
											"begin": 10818,
											"end": 10836,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10802,
											"end": 10838,
											"name": "tag",
											"source": 6,
											"value": "534"
										},
										{
											"begin": 10802,
											"end": 10838,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10654,
											"end": 10845,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10654,
											"end": 10845,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10654,
											"end": 10845,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10654,
											"end": 10845,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10654,
											"end": 10845,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10851,
											"end": 11020,
											"name": "tag",
											"source": 6,
											"value": "400"
										},
										{
											"begin": 10851,
											"end": 11020,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10991,
											"end": 11012,
											"name": "PUSH",
											"source": 6,
											"value": "45544820616D6F756E74206D69736D6174636800000000000000000000000000"
										},
										{
											"begin": 10987,
											"end": 10988,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10979,
											"end": 10985,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10975,
											"end": 10989,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10968,
											"end": 11013,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10851,
											"end": 11020,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10851,
											"end": 11020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11026,
											"end": 11392,
											"name": "tag",
											"source": 6,
											"value": "401"
										},
										{
											"begin": 11026,
											"end": 11392,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11168,
											"end": 11171,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11189,
											"end": 11256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "538"
										},
										{
											"begin": 11253,
											"end": 11255,
											"name": "PUSH",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 11248,
											"end": 11251,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11189,
											"end": 11256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "391"
										},
										{
											"begin": 11189,
											"end": 11256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11189,
											"end": 11256,
											"name": "tag",
											"source": 6,
											"value": "538"
										},
										{
											"begin": 11189,
											"end": 11256,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11182,
											"end": 11256,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11182,
											"end": 11256,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11265,
											"end": 11358,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "539"
										},
										{
											"begin": 11354,
											"end": 11357,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11265,
											"end": 11358,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "400"
										},
										{
											"begin": 11265,
											"end": 11358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11265,
											"end": 11358,
											"name": "tag",
											"source": 6,
											"value": "539"
										},
										{
											"begin": 11265,
											"end": 11358,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11383,
											"end": 11385,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11378,
											"end": 11381,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11374,
											"end": 11386,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11367,
											"end": 11386,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11367,
											"end": 11386,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11026,
											"end": 11392,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11026,
											"end": 11392,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11026,
											"end": 11392,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11026,
											"end": 11392,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11398,
											"end": 11817,
											"name": "tag",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 11398,
											"end": 11817,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11564,
											"end": 11568,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11602,
											"end": 11604,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11591,
											"end": 11600,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11587,
											"end": 11605,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11579,
											"end": 11605,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11579,
											"end": 11605,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11651,
											"end": 11660,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11645,
											"end": 11649,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11641,
											"end": 11661,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11637,
											"end": 11638,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11626,
											"end": 11635,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11622,
											"end": 11639,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11615,
											"end": 11662,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11679,
											"end": 11810,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "541"
										},
										{
											"begin": 11805,
											"end": 11809,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11679,
											"end": 11810,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "401"
										},
										{
											"begin": 11679,
											"end": 11810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11679,
											"end": 11810,
											"name": "tag",
											"source": 6,
											"value": "541"
										},
										{
											"begin": 11679,
											"end": 11810,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11671,
											"end": 11810,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11671,
											"end": 11810,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11398,
											"end": 11817,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11398,
											"end": 11817,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11398,
											"end": 11817,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11398,
											"end": 11817,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11823,
											"end": 11999,
											"name": "tag",
											"source": 6,
											"value": "402"
										},
										{
											"begin": 11823,
											"end": 11999,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11963,
											"end": 11991,
											"name": "PUSH",
											"source": 6,
											"value": "496E73756666696369656E74206F757470757420616D6F756E74000000000000"
										},
										{
											"begin": 11959,
											"end": 11960,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11951,
											"end": 11957,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11947,
											"end": 11961,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11940,
											"end": 11992,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11823,
											"end": 11999,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11823,
											"end": 11999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12005,
											"end": 12371,
											"name": "tag",
											"source": 6,
											"value": "403"
										},
										{
											"begin": 12005,
											"end": 12371,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12147,
											"end": 12150,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12168,
											"end": 12235,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "544"
										},
										{
											"begin": 12232,
											"end": 12234,
											"name": "PUSH",
											"source": 6,
											"value": "1A"
										},
										{
											"begin": 12227,
											"end": 12230,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12168,
											"end": 12235,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "391"
										},
										{
											"begin": 12168,
											"end": 12235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12168,
											"end": 12235,
											"name": "tag",
											"source": 6,
											"value": "544"
										},
										{
											"begin": 12168,
											"end": 12235,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12161,
											"end": 12235,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12161,
											"end": 12235,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12244,
											"end": 12337,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "545"
										},
										{
											"begin": 12333,
											"end": 12336,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12244,
											"end": 12337,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "402"
										},
										{
											"begin": 12244,
											"end": 12337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12244,
											"end": 12337,
											"name": "tag",
											"source": 6,
											"value": "545"
										},
										{
											"begin": 12244,
											"end": 12337,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12362,
											"end": 12364,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12357,
											"end": 12360,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12353,
											"end": 12365,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12346,
											"end": 12365,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12346,
											"end": 12365,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12005,
											"end": 12371,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12005,
											"end": 12371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12005,
											"end": 12371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12005,
											"end": 12371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12377,
											"end": 12796,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 12377,
											"end": 12796,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12543,
											"end": 12547,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12581,
											"end": 12583,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12570,
											"end": 12579,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12566,
											"end": 12584,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12558,
											"end": 12584,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12558,
											"end": 12584,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12630,
											"end": 12639,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12624,
											"end": 12628,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12620,
											"end": 12640,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 12616,
											"end": 12617,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12605,
											"end": 12614,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12601,
											"end": 12618,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12594,
											"end": 12641,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12658,
											"end": 12789,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "547"
										},
										{
											"begin": 12784,
											"end": 12788,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12658,
											"end": 12789,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "403"
										},
										{
											"begin": 12658,
											"end": 12789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12658,
											"end": 12789,
											"name": "tag",
											"source": 6,
											"value": "547"
										},
										{
											"begin": 12658,
											"end": 12789,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12650,
											"end": 12789,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12650,
											"end": 12789,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12377,
											"end": 12796,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12377,
											"end": 12796,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12377,
											"end": 12796,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12377,
											"end": 12796,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12802,
											"end": 12996,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 12802,
											"end": 12996,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12842,
											"end": 12846,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12862,
											"end": 12882,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "549"
										},
										{
											"begin": 12880,
											"end": 12881,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12862,
											"end": 12882,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "370"
										},
										{
											"begin": 12862,
											"end": 12882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12862,
											"end": 12882,
											"name": "tag",
											"source": 6,
											"value": "549"
										},
										{
											"begin": 12862,
											"end": 12882,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12857,
											"end": 12882,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12857,
											"end": 12882,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12896,
											"end": 12916,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "550"
										},
										{
											"begin": 12914,
											"end": 12915,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12896,
											"end": 12916,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "370"
										},
										{
											"begin": 12896,
											"end": 12916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12896,
											"end": 12916,
											"name": "tag",
											"source": 6,
											"value": "550"
										},
										{
											"begin": 12896,
											"end": 12916,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12891,
											"end": 12916,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 12891,
											"end": 12916,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12940,
											"end": 12941,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12937,
											"end": 12938,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12933,
											"end": 12942,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 12925,
											"end": 12942,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12925,
											"end": 12942,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12964,
											"end": 12965,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12958,
											"end": 12962,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12955,
											"end": 12966,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 12952,
											"end": 12989,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 12952,
											"end": 12989,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "551"
										},
										{
											"begin": 12952,
											"end": 12989,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12969,
											"end": 12987,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "552"
										},
										{
											"begin": 12969,
											"end": 12987,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "390"
										},
										{
											"begin": 12969,
											"end": 12987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12969,
											"end": 12987,
											"name": "tag",
											"source": 6,
											"value": "552"
										},
										{
											"begin": 12969,
											"end": 12987,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12952,
											"end": 12989,
											"name": "tag",
											"source": 6,
											"value": "551"
										},
										{
											"begin": 12952,
											"end": 12989,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12802,
											"end": 12996,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 12802,
											"end": 12996,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12802,
											"end": 12996,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12802,
											"end": 12996,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12802,
											"end": 12996,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13002,
											"end": 13160,
											"name": "tag",
											"source": 6,
											"value": "404"
										},
										{
											"begin": 13002,
											"end": 13160,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13142,
											"end": 13152,
											"name": "PUSH",
											"source": 6,
											"value": "536C69704C6F636B000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13138,
											"end": 13139,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13130,
											"end": 13136,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13126,
											"end": 13140,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13119,
											"end": 13153,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13002,
											"end": 13160,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13002,
											"end": 13160,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13166,
											"end": 13531,
											"name": "tag",
											"source": 6,
											"value": "405"
										},
										{
											"begin": 13166,
											"end": 13531,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13308,
											"end": 13311,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13329,
											"end": 13395,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "555"
										},
										{
											"begin": 13393,
											"end": 13394,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 13388,
											"end": 13391,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13329,
											"end": 13395,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "391"
										},
										{
											"begin": 13329,
											"end": 13395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13329,
											"end": 13395,
											"name": "tag",
											"source": 6,
											"value": "555"
										},
										{
											"begin": 13329,
											"end": 13395,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13322,
											"end": 13395,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13322,
											"end": 13395,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13404,
											"end": 13497,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "556"
										},
										{
											"begin": 13493,
											"end": 13496,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13404,
											"end": 13497,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "404"
										},
										{
											"begin": 13404,
											"end": 13497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13404,
											"end": 13497,
											"name": "tag",
											"source": 6,
											"value": "556"
										},
										{
											"begin": 13404,
											"end": 13497,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13522,
											"end": 13524,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13517,
											"end": 13520,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13513,
											"end": 13525,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13506,
											"end": 13525,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13506,
											"end": 13525,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13166,
											"end": 13531,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13166,
											"end": 13531,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13166,
											"end": 13531,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13166,
											"end": 13531,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13537,
											"end": 13956,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 13537,
											"end": 13956,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13703,
											"end": 13707,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13741,
											"end": 13743,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13730,
											"end": 13739,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13726,
											"end": 13744,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13718,
											"end": 13744,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13718,
											"end": 13744,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13790,
											"end": 13799,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13784,
											"end": 13788,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13780,
											"end": 13800,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 13776,
											"end": 13777,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13765,
											"end": 13774,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13761,
											"end": 13778,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13754,
											"end": 13801,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13818,
											"end": 13949,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "558"
										},
										{
											"begin": 13944,
											"end": 13948,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13818,
											"end": 13949,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "405"
										},
										{
											"begin": 13818,
											"end": 13949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13818,
											"end": 13949,
											"name": "tag",
											"source": 6,
											"value": "558"
										},
										{
											"begin": 13818,
											"end": 13949,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13810,
											"end": 13949,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13810,
											"end": 13949,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13537,
											"end": 13956,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13537,
											"end": 13956,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13537,
											"end": 13956,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13537,
											"end": 13956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13962,
											"end": 14294,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 13962,
											"end": 14294,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14083,
											"end": 14087,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14121,
											"end": 14123,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 14110,
											"end": 14119,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14106,
											"end": 14124,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14098,
											"end": 14124,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14098,
											"end": 14124,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14134,
											"end": 14205,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "560"
										},
										{
											"begin": 14202,
											"end": 14203,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14191,
											"end": 14200,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 14187,
											"end": 14204,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14178,
											"end": 14184,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 14134,
											"end": 14205,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "381"
										},
										{
											"begin": 14134,
											"end": 14205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14134,
											"end": 14205,
											"name": "tag",
											"source": 6,
											"value": "560"
										},
										{
											"begin": 14134,
											"end": 14205,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "561"
										},
										{
											"begin": 14283,
											"end": 14285,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 14272,
											"end": 14281,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 14268,
											"end": 14286,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14259,
											"end": 14265,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "371"
										},
										{
											"begin": 14215,
											"end": 14287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "tag",
											"source": 6,
											"value": "561"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13962,
											"end": 14294,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 13962,
											"end": 14294,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 13962,
											"end": 14294,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13962,
											"end": 14294,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13962,
											"end": 14294,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13962,
											"end": 14294,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14300,
											"end": 14470,
											"name": "tag",
											"source": 6,
											"value": "406"
										},
										{
											"begin": 14300,
											"end": 14470,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14440,
											"end": 14462,
											"name": "PUSH",
											"source": 6,
											"value": "496E73756666696369656E742062616C616E6365000000000000000000000000"
										},
										{
											"begin": 14436,
											"end": 14437,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14428,
											"end": 14434,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14424,
											"end": 14438,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14417,
											"end": 14463,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14300,
											"end": 14470,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14300,
											"end": 14470,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14476,
											"end": 14842,
											"name": "tag",
											"source": 6,
											"value": "407"
										},
										{
											"begin": 14476,
											"end": 14842,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14618,
											"end": 14621,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14639,
											"end": 14706,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "564"
										},
										{
											"begin": 14703,
											"end": 14705,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 14698,
											"end": 14701,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 14639,
											"end": 14706,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "391"
										},
										{
											"begin": 14639,
											"end": 14706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14639,
											"end": 14706,
											"name": "tag",
											"source": 6,
											"value": "564"
										},
										{
											"begin": 14639,
											"end": 14706,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14632,
											"end": 14706,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14632,
											"end": 14706,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14715,
											"end": 14808,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "565"
										},
										{
											"begin": 14804,
											"end": 14807,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14715,
											"end": 14808,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "406"
										},
										{
											"begin": 14715,
											"end": 14808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14715,
											"end": 14808,
											"name": "tag",
											"source": 6,
											"value": "565"
										},
										{
											"begin": 14715,
											"end": 14808,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14833,
											"end": 14835,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 14828,
											"end": 14831,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14824,
											"end": 14836,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14817,
											"end": 14836,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14817,
											"end": 14836,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14476,
											"end": 14842,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14476,
											"end": 14842,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14476,
											"end": 14842,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14476,
											"end": 14842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14848,
											"end": 15267,
											"name": "tag",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 14848,
											"end": 15267,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15014,
											"end": 15018,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15052,
											"end": 15054,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 15041,
											"end": 15050,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15037,
											"end": 15055,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15029,
											"end": 15055,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15029,
											"end": 15055,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15101,
											"end": 15110,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15095,
											"end": 15099,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15091,
											"end": 15111,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 15087,
											"end": 15088,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15076,
											"end": 15085,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 15072,
											"end": 15089,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15065,
											"end": 15112,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 15129,
											"end": 15260,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "567"
										},
										{
											"begin": 15255,
											"end": 15259,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15129,
											"end": 15260,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "407"
										},
										{
											"begin": 15129,
											"end": 15260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15129,
											"end": 15260,
											"name": "tag",
											"source": 6,
											"value": "567"
										},
										{
											"begin": 15129,
											"end": 15260,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15121,
											"end": 15260,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15121,
											"end": 15260,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14848,
											"end": 15267,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14848,
											"end": 15267,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14848,
											"end": 15267,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14848,
											"end": 15267,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15273,
											"end": 15443,
											"name": "tag",
											"source": 6,
											"value": "408"
										},
										{
											"begin": 15273,
											"end": 15443,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15413,
											"end": 15435,
											"name": "PUSH",
											"source": 6,
											"value": "496E76616C696420455448207265736572766573000000000000000000000000"
										},
										{
											"begin": 15409,
											"end": 15410,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15401,
											"end": 15407,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15397,
											"end": 15411,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15390,
											"end": 15436,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 15273,
											"end": 15443,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15273,
											"end": 15443,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15449,
											"end": 15815,
											"name": "tag",
											"source": 6,
											"value": "409"
										},
										{
											"begin": 15449,
											"end": 15815,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15591,
											"end": 15594,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15612,
											"end": 15679,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "570"
										},
										{
											"begin": 15676,
											"end": 15678,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 15671,
											"end": 15674,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 15612,
											"end": 15679,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "391"
										},
										{
											"begin": 15612,
											"end": 15679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15612,
											"end": 15679,
											"name": "tag",
											"source": 6,
											"value": "570"
										},
										{
											"begin": 15612,
											"end": 15679,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15605,
											"end": 15679,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15605,
											"end": 15679,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15688,
											"end": 15781,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "571"
										},
										{
											"begin": 15777,
											"end": 15780,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15688,
											"end": 15781,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "408"
										},
										{
											"begin": 15688,
											"end": 15781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15688,
											"end": 15781,
											"name": "tag",
											"source": 6,
											"value": "571"
										},
										{
											"begin": 15688,
											"end": 15781,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15806,
											"end": 15808,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 15801,
											"end": 15804,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15797,
											"end": 15809,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15790,
											"end": 15809,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15790,
											"end": 15809,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15449,
											"end": 15815,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15449,
											"end": 15815,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15449,
											"end": 15815,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15449,
											"end": 15815,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15821,
											"end": 16240,
											"name": "tag",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 15821,
											"end": 16240,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15987,
											"end": 15991,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16025,
											"end": 16027,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 16014,
											"end": 16023,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 16010,
											"end": 16028,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 16002,
											"end": 16028,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 16002,
											"end": 16028,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16074,
											"end": 16083,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 16068,
											"end": 16072,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 16064,
											"end": 16084,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 16060,
											"end": 16061,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16049,
											"end": 16058,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 16045,
											"end": 16062,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 16038,
											"end": 16085,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 16102,
											"end": 16233,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "573"
										},
										{
											"begin": 16228,
											"end": 16232,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 16102,
											"end": 16233,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "409"
										},
										{
											"begin": 16102,
											"end": 16233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16102,
											"end": 16233,
											"name": "tag",
											"source": 6,
											"value": "573"
										},
										{
											"begin": 16102,
											"end": 16233,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16094,
											"end": 16233,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 16094,
											"end": 16233,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15821,
											"end": 16240,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15821,
											"end": 16240,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15821,
											"end": 16240,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15821,
											"end": 16240,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16246,
											"end": 16332,
											"name": "tag",
											"source": 6,
											"value": "410"
										},
										{
											"begin": 16246,
											"end": 16332,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16281,
											"end": 16288,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16321,
											"end": 16325,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 16314,
											"end": 16319,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 16310,
											"end": 16326,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 16299,
											"end": 16326,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 16299,
											"end": 16326,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16246,
											"end": 16332,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 16246,
											"end": 16332,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 16246,
											"end": 16332,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16246,
											"end": 16332,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16338,
											"end": 16456,
											"name": "tag",
											"source": 6,
											"value": "411"
										},
										{
											"begin": 16338,
											"end": 16456,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16409,
											"end": 16431,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "576"
										},
										{
											"begin": 16425,
											"end": 16430,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 16409,
											"end": 16431,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "410"
										},
										{
											"begin": 16409,
											"end": 16431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16409,
											"end": 16431,
											"name": "tag",
											"source": 6,
											"value": "576"
										},
										{
											"begin": 16409,
											"end": 16431,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16402,
											"end": 16407,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 16399,
											"end": 16432,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 16389,
											"end": 16450,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "577"
										},
										{
											"begin": 16389,
											"end": 16450,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 16446,
											"end": 16447,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16443,
											"end": 16444,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 16436,
											"end": 16448,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 16389,
											"end": 16450,
											"name": "tag",
											"source": 6,
											"value": "577"
										},
										{
											"begin": 16389,
											"end": 16450,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16338,
											"end": 16456,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16338,
											"end": 16456,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16462,
											"end": 16601,
											"name": "tag",
											"source": 6,
											"value": "412"
										},
										{
											"begin": 16462,
											"end": 16601,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16517,
											"end": 16522,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16548,
											"end": 16554,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 16542,
											"end": 16555,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 16533,
											"end": 16555,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 16533,
											"end": 16555,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16564,
											"end": 16595,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "579"
										},
										{
											"begin": 16589,
											"end": 16594,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 16564,
											"end": 16595,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "411"
										},
										{
											"begin": 16564,
											"end": 16595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16564,
											"end": 16595,
											"name": "tag",
											"source": 6,
											"value": "579"
										},
										{
											"begin": 16564,
											"end": 16595,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16462,
											"end": 16601,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 16462,
											"end": 16601,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 16462,
											"end": 16601,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16462,
											"end": 16601,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16462,
											"end": 16601,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16607,
											"end": 16954,
											"name": "tag",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 16607,
											"end": 16954,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16675,
											"end": 16681,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16724,
											"end": 16726,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 16712,
											"end": 16721,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 16703,
											"end": 16710,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 16699,
											"end": 16722,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 16695,
											"end": 16727,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 16692,
											"end": 16811,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 16692,
											"end": 16811,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "581"
										},
										{
											"begin": 16692,
											"end": 16811,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 16730,
											"end": 16809,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "582"
										},
										{
											"begin": 16730,
											"end": 16809,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "373"
										},
										{
											"begin": 16730,
											"end": 16809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16730,
											"end": 16809,
											"name": "tag",
											"source": 6,
											"value": "582"
										},
										{
											"begin": 16730,
											"end": 16809,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16692,
											"end": 16811,
											"name": "tag",
											"source": 6,
											"value": "581"
										},
										{
											"begin": 16692,
											"end": 16811,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16850,
											"end": 16851,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16875,
											"end": 16937,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "583"
										},
										{
											"begin": 16929,
											"end": 16936,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 16920,
											"end": 16926,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 16909,
											"end": 16918,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 16905,
											"end": 16927,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 16875,
											"end": 16937,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "412"
										},
										{
											"begin": 16875,
											"end": 16937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16875,
											"end": 16937,
											"name": "tag",
											"source": 6,
											"value": "583"
										},
										{
											"begin": 16875,
											"end": 16937,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16865,
											"end": 16937,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 16865,
											"end": 16937,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16821,
											"end": 16947,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16607,
											"end": 16954,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 16607,
											"end": 16954,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 16607,
											"end": 16954,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16607,
											"end": 16954,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16607,
											"end": 16954,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16960,
											"end": 17062,
											"name": "tag",
											"source": 6,
											"value": "413"
										},
										{
											"begin": 16960,
											"end": 17062,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17002,
											"end": 17010,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 17049,
											"end": 17054,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 17046,
											"end": 17047,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 17042,
											"end": 17055,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 17021,
											"end": 17055,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17021,
											"end": 17055,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16960,
											"end": 17062,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 16960,
											"end": 17062,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 16960,
											"end": 17062,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16960,
											"end": 17062,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17916,
											"name": "tag",
											"source": 6,
											"value": "414"
										},
										{
											"begin": 17068,
											"end": 17916,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17129,
											"end": 17134,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 17136,
											"end": 17140,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 17160,
											"end": 17166,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 17151,
											"end": 17166,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 17151,
											"end": 17166,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17184,
											"end": 17189,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 17175,
											"end": 17189,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17175,
											"end": 17189,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17198,
											"end": 17910,
											"name": "tag",
											"source": 6,
											"value": "586"
										},
										{
											"begin": 17198,
											"end": 17910,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17219,
											"end": 17220,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 17209,
											"end": 17217,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 17206,
											"end": 17221,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 17198,
											"end": 17910,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 17198,
											"end": 17910,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "588"
										},
										{
											"begin": 17198,
											"end": 17910,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 17314,
											"end": 17318,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 17309,
											"end": 17312,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 17305,
											"end": 17319,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 17299,
											"end": 17303,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 17296,
											"end": 17320,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 17293,
											"end": 17343,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 17293,
											"end": 17343,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "589"
										},
										{
											"begin": 17293,
											"end": 17343,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 17323,
											"end": 17341,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "590"
										},
										{
											"begin": 17323,
											"end": 17341,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "390"
										},
										{
											"begin": 17323,
											"end": 17341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17323,
											"end": 17341,
											"name": "tag",
											"source": 6,
											"value": "590"
										},
										{
											"begin": 17323,
											"end": 17341,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17293,
											"end": 17343,
											"name": "tag",
											"source": 6,
											"value": "589"
										},
										{
											"begin": 17293,
											"end": 17343,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17373,
											"end": 17374,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 17363,
											"end": 17371,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 17359,
											"end": 17375,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 17356,
											"end": 17807,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 17356,
											"end": 17807,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "591"
										},
										{
											"begin": 17356,
											"end": 17807,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 17788,
											"end": 17792,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 17781,
											"end": 17786,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 17777,
											"end": 17793,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 17768,
											"end": 17793,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 17768,
											"end": 17793,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17356,
											"end": 17807,
											"name": "tag",
											"source": 6,
											"value": "591"
										},
										{
											"begin": 17356,
											"end": 17807,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17838,
											"end": 17842,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 17832,
											"end": 17836,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 17828,
											"end": 17843,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 17820,
											"end": 17843,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17820,
											"end": 17843,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17868,
											"end": 17900,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "592"
										},
										{
											"begin": 17891,
											"end": 17899,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 17868,
											"end": 17900,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "413"
										},
										{
											"begin": 17868,
											"end": 17900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17868,
											"end": 17900,
											"name": "tag",
											"source": 6,
											"value": "592"
										},
										{
											"begin": 17868,
											"end": 17900,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17856,
											"end": 17900,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 17856,
											"end": 17900,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17198,
											"end": 17910,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "586"
										},
										{
											"begin": 17198,
											"end": 17910,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17198,
											"end": 17910,
											"name": "tag",
											"source": 6,
											"value": "588"
										},
										{
											"begin": 17198,
											"end": 17910,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17916,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17916,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17916,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17916,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17916,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17916,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17916,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17068,
											"end": 17916,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17922,
											"end": 18995,
											"name": "tag",
											"source": 6,
											"value": "415"
										},
										{
											"begin": 17922,
											"end": 18995,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17976,
											"end": 17981,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 18167,
											"end": 18175,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 18157,
											"end": 18197,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "594"
										},
										{
											"begin": 18157,
											"end": 18197,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 18188,
											"end": 18189,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 18179,
											"end": 18189,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 18179,
											"end": 18189,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18190,
											"end": 18195,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "593"
										},
										{
											"begin": 18190,
											"end": 18195,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18157,
											"end": 18197,
											"name": "tag",
											"source": 6,
											"value": "594"
										},
										{
											"begin": 18157,
											"end": 18197,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18216,
											"end": 18220,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 18206,
											"end": 18242,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "595"
										},
										{
											"begin": 18206,
											"end": 18242,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 18233,
											"end": 18234,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 18224,
											"end": 18234,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 18224,
											"end": 18234,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18235,
											"end": 18240,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "593"
										},
										{
											"begin": 18235,
											"end": 18240,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18206,
											"end": 18242,
											"name": "tag",
											"source": 6,
											"value": "595"
										},
										{
											"begin": 18206,
											"end": 18242,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18302,
											"end": 18306,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 18350,
											"end": 18351,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 18345,
											"end": 18372,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 18345,
											"end": 18372,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 18345,
											"end": 18372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "597"
										},
										{
											"begin": 18345,
											"end": 18372,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 18386,
											"end": 18387,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 18381,
											"end": 18572,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 18381,
											"end": 18572,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 18381,
											"end": 18572,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "598"
										},
										{
											"begin": 18381,
											"end": 18572,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 18295,
											"end": 18572,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "596"
										},
										{
											"begin": 18295,
											"end": 18572,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18345,
											"end": 18372,
											"name": "tag",
											"source": 6,
											"value": "597"
										},
										{
											"begin": 18345,
											"end": 18372,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18363,
											"end": 18364,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 18354,
											"end": 18364,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 18354,
											"end": 18364,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18365,
											"end": 18370,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18365,
											"end": 18370,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "593"
										},
										{
											"begin": 18365,
											"end": 18370,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18381,
											"end": 18572,
											"name": "tag",
											"source": 6,
											"value": "598"
										},
										{
											"begin": 18381,
											"end": 18572,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18426,
											"end": 18429,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 18416,
											"end": 18424,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 18413,
											"end": 18430,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 18410,
											"end": 18453,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 18410,
											"end": 18453,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "599"
										},
										{
											"begin": 18410,
											"end": 18453,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 18433,
											"end": 18451,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "600"
										},
										{
											"begin": 18433,
											"end": 18451,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "390"
										},
										{
											"begin": 18433,
											"end": 18451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18433,
											"end": 18451,
											"name": "tag",
											"source": 6,
											"value": "600"
										},
										{
											"begin": 18433,
											"end": 18451,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18410,
											"end": 18453,
											"name": "tag",
											"source": 6,
											"value": "599"
										},
										{
											"begin": 18410,
											"end": 18453,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18482,
											"end": 18490,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 18479,
											"end": 18480,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 18475,
											"end": 18491,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 18466,
											"end": 18491,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 18466,
											"end": 18491,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18517,
											"end": 18520,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 18510,
											"end": 18515,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 18507,
											"end": 18521,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 18504,
											"end": 18544,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 18504,
											"end": 18544,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "601"
										},
										{
											"begin": 18504,
											"end": 18544,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 18524,
											"end": 18542,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "602"
										},
										{
											"begin": 18524,
											"end": 18542,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "390"
										},
										{
											"begin": 18524,
											"end": 18542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18524,
											"end": 18542,
											"name": "tag",
											"source": 6,
											"value": "602"
										},
										{
											"begin": 18524,
											"end": 18542,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18504,
											"end": 18544,
											"name": "tag",
											"source": 6,
											"value": "601"
										},
										{
											"begin": 18504,
											"end": 18544,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18557,
											"end": 18562,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18557,
											"end": 18562,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "593"
										},
										{
											"begin": 18557,
											"end": 18562,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18295,
											"end": 18572,
											"name": "tag",
											"source": 6,
											"value": "596"
										},
										{
											"begin": 18295,
											"end": 18572,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18295,
											"end": 18572,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18681,
											"end": 18683,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 18671,
											"end": 18679,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 18668,
											"end": 18684,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 18662,
											"end": 18665,
											"name": "PUSH",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 18656,
											"end": 18660,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 18653,
											"end": 18666,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 18649,
											"end": 18685,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 18631,
											"end": 18633,
											"name": "PUSH",
											"source": 6,
											"value": "4E"
										},
										{
											"begin": 18621,
											"end": 18629,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 18618,
											"end": 18634,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 18613,
											"end": 18615,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 18607,
											"end": 18611,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 18604,
											"end": 18616,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 18600,
											"end": 18635,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 18584,
											"end": 18695,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 18581,
											"end": 18827,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 18581,
											"end": 18827,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "603"
										},
										{
											"begin": 18581,
											"end": 18827,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 18737,
											"end": 18745,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 18731,
											"end": 18735,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 18727,
											"end": 18746,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 18718,
											"end": 18746,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 18718,
											"end": 18746,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18772,
											"end": 18775,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 18765,
											"end": 18770,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 18762,
											"end": 18776,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 18759,
											"end": 18799,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 18759,
											"end": 18799,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "604"
										},
										{
											"begin": 18759,
											"end": 18799,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 18779,
											"end": 18797,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "605"
										},
										{
											"begin": 18779,
											"end": 18797,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "390"
										},
										{
											"begin": 18779,
											"end": 18797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18779,
											"end": 18797,
											"name": "tag",
											"source": 6,
											"value": "605"
										},
										{
											"begin": 18779,
											"end": 18797,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18759,
											"end": 18799,
											"name": "tag",
											"source": 6,
											"value": "604"
										},
										{
											"begin": 18759,
											"end": 18799,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18812,
											"end": 18817,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "593"
										},
										{
											"begin": 18812,
											"end": 18817,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18581,
											"end": 18827,
											"name": "tag",
											"source": 6,
											"value": "603"
										},
										{
											"begin": 18581,
											"end": 18827,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18852,
											"end": 18894,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "606"
										},
										{
											"begin": 18890,
											"end": 18893,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 18880,
											"end": 18888,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 18874,
											"end": 18878,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 18871,
											"end": 18872,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 18852,
											"end": 18894,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "414"
										},
										{
											"begin": 18852,
											"end": 18894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18852,
											"end": 18894,
											"name": "tag",
											"source": 6,
											"value": "606"
										},
										{
											"begin": 18852,
											"end": 18894,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18837,
											"end": 18894,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 18837,
											"end": 18894,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18837,
											"end": 18894,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 18837,
											"end": 18894,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18926,
											"end": 18930,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 18921,
											"end": 18924,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 18917,
											"end": 18931,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 18910,
											"end": 18915,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 18907,
											"end": 18932,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 18904,
											"end": 18955,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 18904,
											"end": 18955,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "607"
										},
										{
											"begin": 18904,
											"end": 18955,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 18935,
											"end": 18953,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "608"
										},
										{
											"begin": 18935,
											"end": 18953,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "390"
										},
										{
											"begin": 18935,
											"end": 18953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18935,
											"end": 18953,
											"name": "tag",
											"source": 6,
											"value": "608"
										},
										{
											"begin": 18935,
											"end": 18953,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18904,
											"end": 18955,
											"name": "tag",
											"source": 6,
											"value": "607"
										},
										{
											"begin": 18904,
											"end": 18955,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18984,
											"end": 18988,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 18977,
											"end": 18982,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 18973,
											"end": 18989,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 18964,
											"end": 18989,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 18964,
											"end": 18989,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17922,
											"end": 18995,
											"name": "tag",
											"source": 6,
											"value": "593"
										},
										{
											"begin": 17922,
											"end": 18995,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17922,
											"end": 18995,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 17922,
											"end": 18995,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 17922,
											"end": 18995,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17922,
											"end": 18995,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17922,
											"end": 18995,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17922,
											"end": 18995,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 19001,
											"end": 19286,
											"name": "tag",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 19001,
											"end": 19286,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19061,
											"end": 19066,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 19085,
											"end": 19108,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "610"
										},
										{
											"begin": 19103,
											"end": 19107,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 19085,
											"end": 19108,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "370"
										},
										{
											"begin": 19085,
											"end": 19108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 19085,
											"end": 19108,
											"name": "tag",
											"source": 6,
											"value": "610"
										},
										{
											"begin": 19085,
											"end": 19108,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19077,
											"end": 19108,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 19077,
											"end": 19108,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19129,
											"end": 19156,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "611"
										},
										{
											"begin": 19147,
											"end": 19155,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 19129,
											"end": 19156,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "370"
										},
										{
											"begin": 19129,
											"end": 19156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 19129,
											"end": 19156,
											"name": "tag",
											"source": 6,
											"value": "611"
										},
										{
											"begin": 19129,
											"end": 19156,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19117,
											"end": 19156,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 19117,
											"end": 19156,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19175,
											"end": 19279,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "612"
										},
										{
											"begin": 19212,
											"end": 19278,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19202,
											"end": 19210,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 19196,
											"end": 19200,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 19175,
											"end": 19279,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "415"
										},
										{
											"begin": 19175,
											"end": 19279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 19175,
											"end": 19279,
											"name": "tag",
											"source": 6,
											"value": "612"
										},
										{
											"begin": 19175,
											"end": 19279,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19166,
											"end": 19279,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 19166,
											"end": 19279,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19001,
											"end": 19286,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 19001,
											"end": 19286,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 19001,
											"end": 19286,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19001,
											"end": 19286,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19001,
											"end": 19286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 19292,
											"end": 19468,
											"name": "tag",
											"source": 6,
											"value": "416"
										},
										{
											"begin": 19292,
											"end": 19468,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19432,
											"end": 19460,
											"name": "PUSH",
											"source": 6,
											"value": "616D6F756E74455448206F7220616D6F756E74455243203D2030000000000000"
										},
										{
											"begin": 19428,
											"end": 19429,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 19420,
											"end": 19426,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 19416,
											"end": 19430,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 19409,
											"end": 19461,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 19292,
											"end": 19468,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19292,
											"end": 19468,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 19474,
											"end": 19840,
											"name": "tag",
											"source": 6,
											"value": "417"
										},
										{
											"begin": 19474,
											"end": 19840,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19616,
											"end": 19619,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 19637,
											"end": 19704,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "615"
										},
										{
											"begin": 19701,
											"end": 19703,
											"name": "PUSH",
											"source": 6,
											"value": "1A"
										},
										{
											"begin": 19696,
											"end": 19699,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 19637,
											"end": 19704,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "391"
										},
										{
											"begin": 19637,
											"end": 19704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 19637,
											"end": 19704,
											"name": "tag",
											"source": 6,
											"value": "615"
										},
										{
											"begin": 19637,
											"end": 19704,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19630,
											"end": 19704,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 19630,
											"end": 19704,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19713,
											"end": 19806,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "616"
										},
										{
											"begin": 19802,
											"end": 19805,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 19713,
											"end": 19806,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "416"
										},
										{
											"begin": 19713,
											"end": 19806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 19713,
											"end": 19806,
											"name": "tag",
											"source": 6,
											"value": "616"
										},
										{
											"begin": 19713,
											"end": 19806,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19831,
											"end": 19833,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 19826,
											"end": 19829,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 19822,
											"end": 19834,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 19815,
											"end": 19834,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 19815,
											"end": 19834,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19474,
											"end": 19840,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 19474,
											"end": 19840,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 19474,
											"end": 19840,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19474,
											"end": 19840,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 19846,
											"end": 20265,
											"name": "tag",
											"source": 6,
											"value": "351"
										},
										{
											"begin": 19846,
											"end": 20265,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 20012,
											"end": 20016,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 20050,
											"end": 20052,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 20039,
											"end": 20048,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 20035,
											"end": 20053,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 20027,
											"end": 20053,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 20027,
											"end": 20053,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 20099,
											"end": 20108,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 20093,
											"end": 20097,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 20089,
											"end": 20109,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 20085,
											"end": 20086,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 20074,
											"end": 20083,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 20070,
											"end": 20087,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 20063,
											"end": 20110,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 20127,
											"end": 20258,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "618"
										},
										{
											"begin": 20253,
											"end": 20257,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 20127,
											"end": 20258,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "417"
										},
										{
											"begin": 20127,
											"end": 20258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 20127,
											"end": 20258,
											"name": "tag",
											"source": 6,
											"value": "618"
										},
										{
											"begin": 20127,
											"end": 20258,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 20119,
											"end": 20258,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 20119,
											"end": 20258,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19846,
											"end": 20265,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 19846,
											"end": 20265,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 19846,
											"end": 20265,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19846,
											"end": 20265,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"W6/simpleAMM/src/simpleAMMV6.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"ETH_ADDRESS()": "a734f06e",
							"addLiquidity(uint256)": "51c6590a",
							"balanceOf(address)": "70a08231",
							"getERCPrice()": "fcc2ba08",
							"getETHPrice()": "a607a8d9",
							"getInERCPredictOutputETH(uint256)": "dccc5fea",
							"getInETHPredictOutputERC(uint256)": "56c1d7eb",
							"my_shars()": "6cae4f84",
							"removeAllLiquidity(address)": "7a6a5e1b",
							"removeLiquidity(address,uint256)": "a201ccf6",
							"removeLiquidity(uint256)": "9c8f9f23",
							"reserveERC()": "e764e67c",
							"reserveETH()": "100af203",
							"sharesOf(address)": "f5eb42dc",
							"swap(uint256)": "94b918de",
							"swapTokenForETH(uint256)": "6fb84b74",
							"swapTokenForETH_WithSlipLock(uint256,uint256,uint256)": "dc2d845b",
							"swap_WithSlipLock(uint256,uint256,uint256)": "62279b65",
							"token()": "fc0c546a",
							"totalSupply()": "18160ddd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ETH_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount1\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getERCPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getETHPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"getInERCPredictOutputETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"getInETHPredictOutputERC\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"my_shars\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"removeAllLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountERC\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_shares\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountERC\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_shares\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountERC\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserveERC\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserveETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"sharesOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amountIn\",\"type\":\"uint256\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amountIn\",\"type\":\"uint256\"}],\"name\":\"swapTokenForETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_forwardOutput\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_slipLock\",\"type\":\"uint256\"}],\"name\":\"swapTokenForETH_WithSlipLock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_forwardOutput\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_slipLock\",\"type\":\"uint256\"}],\"name\":\"swap_WithSlipLock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"W6/simpleAMM/src/simpleAMMV6.sol\":\"AMM\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"W6/simpleAMM/src/simpleAMMV6.sol\":{\"keccak256\":\"0x6d82fc02ac05ca15a64f3b4a8a540a24a43ba8427bfc927cfee4ad96f354eb93\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77690b7b4c4d52fd43fc826661a1ede9d7e878fc9c5f98e4c680e9fc940d818e\",\"dweb:/ipfs/QmQv3EwXstRCQdq8RB2YVQJnQpJc9RRqixUG4H6FBXH4kB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1583,
								"contract": "W6/simpleAMM/src/simpleAMMV6.sol:AMM",
								"label": "developer",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1594,
								"contract": "W6/simpleAMM/src/simpleAMMV6.sol:AMM",
								"label": "reserveETH",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 1596,
								"contract": "W6/simpleAMM/src/simpleAMMV6.sol:AMM",
								"label": "reserveERC",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 1598,
								"contract": "W6/simpleAMM/src/simpleAMMV6.sol:AMM",
								"label": "totalSupply",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 1602,
								"contract": "W6/simpleAMM/src/simpleAMMV6.sol:AMM",
								"label": "balanceOf",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							711
						],
						"ERC20": [
							586
						],
						"IERC20": [
							664
						],
						"IERC20Metadata": [
							689
						]
					},
					"id": 587,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 587,
							"sourceUnit": 665,
							"src": "130:22:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 587,
							"sourceUnit": 690,
							"src": "153:41:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 587,
							"sourceUnit": 712,
							"src": "195:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 6,
										"name": "Context",
										"nameLocations": [
											"1419:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 711,
										"src": "1419:7:0"
									},
									"id": 7,
									"nodeType": "InheritanceSpecifier",
									"src": "1419:7:0"
								},
								{
									"baseName": {
										"id": 8,
										"name": "IERC20",
										"nameLocations": [
											"1428:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 664,
										"src": "1428:6:0"
									},
									"id": 9,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:6:0"
								},
								{
									"baseName": {
										"id": 10,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1436:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 689,
										"src": "1436:14:0"
									},
									"id": 11,
									"nodeType": "InheritanceSpecifier",
									"src": "1436:14:0"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 5,
								"nodeType": "StructuredDocumentation",
								"src": "230:1170:0",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 586,
							"linearizedBaseContracts": [
								586,
								689,
								664,
								711
							],
							"name": "ERC20",
							"nameLocation": "1410:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 15,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1493:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 586,
									"src": "1457:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 14,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 12,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1465:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1457:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 13,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1476:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 21,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1565:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 586,
									"src": "1509:67:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 20,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 16,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1517:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1509:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 19,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 17,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1536:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1528:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 18,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1547:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 23,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1599:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 586,
									"src": "1583:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 22,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1583:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 25,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1633:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 586,
									"src": "1618:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 24,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1618:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 27,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1659:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 586,
									"src": "1644:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 26,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1644:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "2032:57:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 35,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "2042:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 36,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "2050:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2042:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "2042:13:0"
											},
											{
												"expression": {
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 39,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "2065:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 40,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "2075:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2065:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "2065:17:0"
											}
										]
									},
									"documentation": {
										"id": 28,
										"nodeType": "StructuredDocumentation",
										"src": "1673:298:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 44,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1988:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 29,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1988:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2023:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2009:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 31,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2009:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1987:44:0"
									},
									"returnParameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2032:0:0"
									},
									"scope": 586,
									"src": "1976:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										676
									],
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "2223:29:0",
										"statements": [
											{
												"expression": {
													"id": 51,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 25,
													"src": "2240:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 50,
												"id": 52,
												"nodeType": "Return",
												"src": "2233:12:0"
											}
										]
									},
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "2095:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2163:4:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 47,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2190:8:0"
									},
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2167:2:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "2208:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 48,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2208:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2207:15:0"
									},
									"scope": 586,
									"src": "2154:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										682
									],
									"body": {
										"id": 63,
										"nodeType": "Block",
										"src": "2436:31:0",
										"statements": [
											{
												"expression": {
													"id": 61,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "2453:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 60,
												"id": 62,
												"nodeType": "Return",
												"src": "2446:14:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "2258:102:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 64,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2374:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 57,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2403:8:0"
									},
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2380:2:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2421:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 58,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2421:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2420:15:0"
									},
									"scope": 586,
									"src": "2365:102:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										688
									],
									"body": {
										"id": 73,
										"nodeType": "Block",
										"src": "3156:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3173:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 70,
												"id": 72,
												"nodeType": "Return",
												"src": "3166:9:0"
											}
										]
									},
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2473:613:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 74,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3100:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 67,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3131:8:0"
									},
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3108:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "3149:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 68,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3149:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3148:7:0"
									},
									"scope": 586,
									"src": "3091:91:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										613
									],
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "3312:36:0",
										"statements": [
											{
												"expression": {
													"id": 81,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 23,
													"src": "3329:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 80,
												"id": 82,
												"nodeType": "Return",
												"src": "3322:19:0"
											}
										]
									},
									"documentation": {
										"id": 75,
										"nodeType": "StructuredDocumentation",
										"src": "3188:49:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3251:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 77,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3285:8:0"
									},
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3262:2:0"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "3303:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 78,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3303:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3302:9:0"
									},
									"scope": 586,
									"src": "3242:106:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										621
									],
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "3489:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 93,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "3506:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 95,
													"indexExpression": {
														"id": 94,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 87,
														"src": "3516:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3506:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 92,
												"id": 96,
												"nodeType": "Return",
												"src": "3499:25:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "3354:47:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3415:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 89,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3462:8:0"
									},
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3433:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3425:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3424:17:0"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3480:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 90,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3480:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3479:9:0"
									},
									"scope": 586,
									"src": "3406:125:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										631
									],
									"body": {
										"id": 122,
										"nodeType": "Block",
										"src": "3812:104:0",
										"statements": [
											{
												"assignments": [
													110
												],
												"declarations": [
													{
														"constant": false,
														"id": 110,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3830:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 122,
														"src": "3822:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 109,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3822:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 113,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 111,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 701,
														"src": "3838:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3838:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3822:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 115,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "3870:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 116,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "3877:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 117,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 103,
															"src": "3881:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 114,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 346,
														"src": "3860:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3860:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 119,
												"nodeType": "ExpressionStatement",
												"src": "3860:28:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3905:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 108,
												"id": 121,
												"nodeType": "Return",
												"src": "3898:11:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "3537:185:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 123,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3736:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 105,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3788:8:0"
									},
									"parameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3753:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "3745:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3745:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3765:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "3757:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 102,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3757:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3744:28:0"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "3806:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 106,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3806:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3805:6:0"
									},
									"scope": 586,
									"src": "3727:189:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										641
									],
									"body": {
										"id": 140,
										"nodeType": "Block",
										"src": "4072:51:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 134,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 21,
															"src": "4089:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 136,
														"indexExpression": {
															"id": 135,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 126,
															"src": "4101:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4089:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 138,
													"indexExpression": {
														"id": 137,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4108:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4089:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 133,
												"id": 139,
												"nodeType": "Return",
												"src": "4082:34:0"
											}
										]
									},
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "3922:47:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3983:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 130,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4045:8:0"
									},
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4001:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "3993:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3993:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4016:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "4008:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3992:32:0"
									},
									"returnParameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "4063:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4063:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4062:9:0"
									},
									"scope": 586,
									"src": "3974:149:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										651
									],
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "4520:108:0",
										"statements": [
											{
												"assignments": [
													153
												],
												"declarations": [
													{
														"constant": false,
														"id": 153,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4538:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 165,
														"src": "4530:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 152,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4530:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 156,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 154,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 701,
														"src": "4546:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4546:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4530:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 158,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "4577:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 159,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 144,
															"src": "4584:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 160,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 146,
															"src": "4593:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 157,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 520,
														"src": "4568:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4568:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "4568:32:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4617:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 151,
												"id": 164,
												"nodeType": "Return",
												"src": "4610:11:0"
											}
										]
									},
									"documentation": {
										"id": 142,
										"nodeType": "StructuredDocumentation",
										"src": "4129:297:0",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4440:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 148,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4496:8:0"
									},
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4456:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4448:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4448:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4473:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4465:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4465:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4447:33:0"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4514:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 149,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4514:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4513:6:0"
									},
									"scope": 586,
									"src": "4431:197:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										663
									],
									"body": {
										"id": 198,
										"nodeType": "Block",
										"src": "5323:153:0",
										"statements": [
											{
												"assignments": [
													180
												],
												"declarations": [
													{
														"constant": false,
														"id": 180,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5341:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 198,
														"src": "5333:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 179,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5333:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 183,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 181,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 701,
														"src": "5351:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5351:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5333:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 185,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5389:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 186,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "5395:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 187,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "5404:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 184,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 563,
														"src": "5373:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5373:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 189,
												"nodeType": "ExpressionStatement",
												"src": "5373:38:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 191,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5431:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 192,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5437:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 193,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "5441:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 190,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 346,
														"src": "5421:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5421:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 195,
												"nodeType": "ExpressionStatement",
												"src": "5421:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5465:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 178,
												"id": 197,
												"nodeType": "Return",
												"src": "5458:11:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "4634:551:0",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5199:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 175,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5299:8:0"
									},
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5229:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "5221:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5221:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5251:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "5243:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5243:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5271:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "5263:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5263:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5211:72:0"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "5317:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 176,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5317:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5316:6:0"
									},
									"scope": 586,
									"src": "5190:286:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 227,
										"nodeType": "Block",
										"src": "5965:140:0",
										"statements": [
											{
												"assignments": [
													210
												],
												"declarations": [
													{
														"constant": false,
														"id": 210,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "5983:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 227,
														"src": "5975:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 209,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5975:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 213,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 211,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 701,
														"src": "5991:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5991:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5975:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 215,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 210,
															"src": "6022:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 216,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 202,
															"src": "6029:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 218,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 210,
																		"src": "6048:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 219,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 202,
																		"src": "6055:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 217,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 141,
																	"src": "6038:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 220,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6038:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 221,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 204,
																"src": "6066:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6038:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 214,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 520,
														"src": "6013:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6013:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 224,
												"nodeType": "ExpressionStatement",
												"src": "6013:64:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6094:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 208,
												"id": 226,
												"nodeType": "Return",
												"src": "6087:11:0"
											}
										]
									},
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "5482:384:0",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "5880:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5906:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "5898:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "5923:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "5915:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5915:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:37:0"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "5959:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 206,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5959:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5958:6:0"
									},
									"scope": 586,
									"src": "5871:234:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 268,
										"nodeType": "Block",
										"src": "6691:328:0",
										"statements": [
											{
												"assignments": [
													239
												],
												"declarations": [
													{
														"constant": false,
														"id": 239,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "6709:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 268,
														"src": "6701:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 238,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6701:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 242,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 240,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 701,
														"src": "6717:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6717:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6701:28:0"
											},
											{
												"assignments": [
													244
												],
												"declarations": [
													{
														"constant": false,
														"id": 244,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "6747:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 268,
														"src": "6739:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 243,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6739:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 249,
												"initialValue": {
													"arguments": [
														{
															"id": 246,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "6776:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 247,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 231,
															"src": "6783:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 245,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "6766:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6766:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6739:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 251,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 244,
																"src": "6809:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 252,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 233,
																"src": "6829:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6809:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 254,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6846:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 250,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6801:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6801:85:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 256,
												"nodeType": "ExpressionStatement",
												"src": "6801:85:0"
											},
											{
												"id": 265,
												"nodeType": "UncheckedBlock",
												"src": "6896:95:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 258,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 239,
																	"src": "6929:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 259,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 231,
																	"src": "6936:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 262,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 260,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 244,
																		"src": "6945:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 261,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 233,
																		"src": "6964:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6945:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 257,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 520,
																"src": "6920:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6920:60:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 264,
														"nodeType": "ExpressionStatement",
														"src": "6920:60:0"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7008:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 237,
												"id": 267,
												"nodeType": "Return",
												"src": "7001:11:0"
											}
										]
									},
									"documentation": {
										"id": 229,
										"nodeType": "StructuredDocumentation",
										"src": "6111:476:0",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 269,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "6601:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6627:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "6619:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6619:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "6644:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "6636:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6636:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6618:42:0"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "6685:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 235,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6685:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6684:6:0"
									},
									"scope": 586,
									"src": "6592:427:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 345,
										"nodeType": "Block",
										"src": "7581:710:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 280,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "7599:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7615:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7607:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 281,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7607:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7607:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7599:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 286,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7619:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 279,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7591:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7591:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 288,
												"nodeType": "ExpressionStatement",
												"src": "7591:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 290,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 274,
																"src": "7677:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 293,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7691:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7683:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 291,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7683:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 294,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7683:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7677:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 296,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7695:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 289,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7669:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7669:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "7669:64:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 300,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "7765:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 301,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "7771:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 302,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "7775:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 299,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 574,
														"src": "7744:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7744:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 304,
												"nodeType": "ExpressionStatement",
												"src": "7744:38:0"
											},
											{
												"assignments": [
													306
												],
												"declarations": [
													{
														"constant": false,
														"id": 306,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "7801:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 345,
														"src": "7793:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 305,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7793:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 310,
												"initialValue": {
													"baseExpression": {
														"id": 307,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "7815:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 309,
													"indexExpression": {
														"id": 308,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 272,
														"src": "7825:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7815:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7793:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 314,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 312,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 306,
																"src": "7848:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 313,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 276,
																"src": "7863:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7848:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 315,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7871:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 311,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7840:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7840:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 317,
												"nodeType": "ExpressionStatement",
												"src": "7840:72:0"
											},
											{
												"id": 332,
												"nodeType": "UncheckedBlock",
												"src": "7922:273:0",
												"statements": [
													{
														"expression": {
															"id": 324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 318,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "7946:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 320,
																"indexExpression": {
																	"id": 319,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "7956:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "7946:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 323,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 321,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 306,
																	"src": "7964:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 322,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "7978:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7964:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7946:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 325,
														"nodeType": "ExpressionStatement",
														"src": "7946:38:0"
													},
													{
														"expression": {
															"id": 330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 326,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "8161:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 328,
																"indexExpression": {
																	"id": 327,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 274,
																	"src": "8171:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8161:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 329,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 276,
																"src": "8178:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8161:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 331,
														"nodeType": "ExpressionStatement",
														"src": "8161:23:0"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 334,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "8219:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 335,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "8225:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 336,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "8229:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 333,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 598,
														"src": "8210:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8210:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 338,
												"nodeType": "EmitStatement",
												"src": "8205:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 340,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "8267:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 341,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "8273:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 342,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "8277:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 339,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 585,
														"src": "8247:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8247:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 344,
												"nodeType": "ExpressionStatement",
												"src": "8247:37:0"
											}
										]
									},
									"documentation": {
										"id": 270,
										"nodeType": "StructuredDocumentation",
										"src": "7025:443:0",
										"text": " @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
									},
									"id": 346,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "7482:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7509:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "7501:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7501:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7531:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "7523:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7523:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7551:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "7543:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7543:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7491:72:0"
									},
									"returnParameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7581:0:0"
									},
									"scope": 586,
									"src": "7473:818:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 402,
										"nodeType": "Block",
										"src": "8632:470:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 355,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 349,
																"src": "8650:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 358,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8669:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8661:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 356,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8661:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 359,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8661:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8650:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8673:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 354,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8642:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8642:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 363,
												"nodeType": "ExpressionStatement",
												"src": "8642:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 367,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8747:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 366,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8739:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 365,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8739:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 368,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8739:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 369,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "8751:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 370,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "8760:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 364,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 574,
														"src": "8718:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8718:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 372,
												"nodeType": "ExpressionStatement",
												"src": "8718:49:0"
											},
											{
												"expression": {
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 373,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "8778:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 374,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "8794:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8778:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 376,
												"nodeType": "ExpressionStatement",
												"src": "8778:22:0"
											},
											{
												"id": 383,
												"nodeType": "UncheckedBlock",
												"src": "8810:175:0",
												"statements": [
													{
														"expression": {
															"id": 381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 377,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "8946:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 379,
																"indexExpression": {
																	"id": 378,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 349,
																	"src": "8956:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8946:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 380,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 351,
																"src": "8968:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8946:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 382,
														"nodeType": "ExpressionStatement",
														"src": "8946:28:0"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9016:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 386,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9008:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 385,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9008:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 388,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9008:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 389,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "9020:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 390,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "9029:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 384,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 598,
														"src": "8999:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8999:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 392,
												"nodeType": "EmitStatement",
												"src": "8994:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 396,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9075:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 395,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9067:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 394,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9067:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 397,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9067:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 398,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "9079:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 399,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "9088:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 393,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 585,
														"src": "9047:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9047:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 401,
												"nodeType": "ExpressionStatement",
												"src": "9047:48:0"
											}
										]
									},
									"documentation": {
										"id": 347,
										"nodeType": "StructuredDocumentation",
										"src": "8297:265:0",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8576:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8590:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "8582:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8582:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8607:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "8599:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8599:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8581:33:0"
									},
									"returnParameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8632:0:0"
									},
									"scope": 586,
									"src": "8567:535:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 474,
										"nodeType": "Block",
										"src": "9487:594:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 417,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 412,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 406,
																"src": "9505:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 415,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9524:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 414,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9516:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 413,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9516:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 416,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9516:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9505:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 418,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9528:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 411,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9497:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9497:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 420,
												"nodeType": "ExpressionStatement",
												"src": "9497:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 422,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "9596:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 425,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9613:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 424,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9605:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 423,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9605:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 426,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9605:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 427,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "9617:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 421,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 574,
														"src": "9575:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9575:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 429,
												"nodeType": "ExpressionStatement",
												"src": "9575:49:0"
											},
											{
												"assignments": [
													431
												],
												"declarations": [
													{
														"constant": false,
														"id": 431,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "9643:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 474,
														"src": "9635:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 430,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9635:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 435,
												"initialValue": {
													"baseExpression": {
														"id": 432,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "9660:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 434,
													"indexExpression": {
														"id": 433,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 406,
														"src": "9670:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9660:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9635:43:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 439,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 437,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 431,
																"src": "9696:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 438,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 408,
																"src": "9714:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9696:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 440,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9722:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 436,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9688:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9688:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 442,
												"nodeType": "ExpressionStatement",
												"src": "9688:71:0"
											},
											{
												"id": 455,
												"nodeType": "UncheckedBlock",
												"src": "9769:194:0",
												"statements": [
													{
														"expression": {
															"id": 449,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 443,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "9793:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 445,
																"indexExpression": {
																	"id": 444,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 406,
																	"src": "9803:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9793:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 448,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 446,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 431,
																	"src": "9814:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 447,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 408,
																	"src": "9831:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9814:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9793:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 450,
														"nodeType": "ExpressionStatement",
														"src": "9793:44:0"
													},
													{
														"expression": {
															"id": 453,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 451,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 23,
																"src": "9930:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"id": 452,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 408,
																"src": "9946:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9930:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 454,
														"nodeType": "ExpressionStatement",
														"src": "9930:22:0"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 457,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "9987:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 460,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10004:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 459,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9996:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 458,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9996:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 461,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9996:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 462,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "10008:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 456,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 598,
														"src": "9978:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9978:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 464,
												"nodeType": "EmitStatement",
												"src": "9973:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 466,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "10046:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 469,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10063:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 468,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10055:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 467,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10055:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 470,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10055:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 471,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "10067:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 465,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 585,
														"src": "10026:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10026:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 473,
												"nodeType": "ExpressionStatement",
												"src": "10026:48:0"
											}
										]
									},
									"documentation": {
										"id": 404,
										"nodeType": "StructuredDocumentation",
										"src": "9108:309:0",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 475,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9431:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9445:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "9437:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9437:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9462:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "9454:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 407,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9454:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9436:33:0"
									},
									"returnParameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9487:0:0"
									},
									"scope": 586,
									"src": "9422:659:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 519,
										"nodeType": "Block",
										"src": "10617:257:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 491,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 486,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 478,
																"src": "10635:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 489,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10652:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 488,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10644:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 487,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10644:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 490,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10644:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10635:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 492,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10656:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 485,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10627:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10627:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 494,
												"nodeType": "ExpressionStatement",
												"src": "10627:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 496,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 480,
																"src": "10713:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 499,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10732:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 498,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10724:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 497,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10724:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 500,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10724:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10713:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 502,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10736:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 495,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10705:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10705:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 504,
												"nodeType": "ExpressionStatement",
												"src": "10705:68:0"
											},
											{
												"expression": {
													"id": 511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 505,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 21,
																"src": "10784:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 508,
															"indexExpression": {
																"id": 506,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 478,
																"src": "10796:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10784:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 509,
														"indexExpression": {
															"id": 507,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "10803:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10784:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 510,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 482,
														"src": "10814:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10784:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 512,
												"nodeType": "ExpressionStatement",
												"src": "10784:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 514,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "10844:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 515,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "10851:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 516,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "10860:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 513,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 607,
														"src": "10835:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10835:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 518,
												"nodeType": "EmitStatement",
												"src": "10830:37:0"
											}
										]
									},
									"documentation": {
										"id": 476,
										"nodeType": "StructuredDocumentation",
										"src": "10087:412:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 520,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10513:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10539:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "10531:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 477,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10531:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10562:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "10554:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10554:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10587:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "10579:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10579:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10521:78:0"
									},
									"returnParameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10617:0:0"
									},
									"scope": 586,
									"src": "10504:370:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 562,
										"nodeType": "Block",
										"src": "11275:321:0",
										"statements": [
											{
												"assignments": [
													531
												],
												"declarations": [
													{
														"constant": false,
														"id": 531,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "11293:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 562,
														"src": "11285:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 530,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11285:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 536,
												"initialValue": {
													"arguments": [
														{
															"id": 533,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 523,
															"src": "11322:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 534,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 525,
															"src": "11329:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 532,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "11312:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11312:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11285:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 537,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 531,
														"src": "11351:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 540,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11376:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 539,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11376:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 538,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11371:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11371:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 542,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11385:3:0",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11371:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11351:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 561,
												"nodeType": "IfStatement",
												"src": "11347:243:0",
												"trueBody": {
													"id": 560,
													"nodeType": "Block",
													"src": "11390:200:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 547,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 545,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 531,
																			"src": "11412:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 546,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 527,
																			"src": "11432:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11412:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 548,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11440:31:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 544,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "11404:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 549,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11404:68:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 550,
															"nodeType": "ExpressionStatement",
															"src": "11404:68:0"
														},
														{
															"id": 559,
															"nodeType": "UncheckedBlock",
															"src": "11486:94:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 552,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 523,
																				"src": "11523:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 553,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 525,
																				"src": "11530:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 556,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 554,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 531,
																					"src": "11539:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 555,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 527,
																					"src": "11558:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11539:25:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 551,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 520,
																			"src": "11514:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 557,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11514:51:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 558,
																	"nodeType": "ExpressionStatement",
																	"src": "11514:51:0"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 521,
										"nodeType": "StructuredDocumentation",
										"src": "10880:270:0",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 563,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "11164:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11197:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "11189:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 522,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11189:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11220:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "11212:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 524,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11212:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11245:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "11237:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 526,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11237:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11179:78:0"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11275:0:0"
									},
									"scope": 586,
									"src": "11155:441:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 573,
										"nodeType": "Block",
										"src": "12299:2:0",
										"statements": []
									},
									"documentation": {
										"id": 564,
										"nodeType": "StructuredDocumentation",
										"src": "11602:573:0",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 574,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "12189:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12227:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "12219:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 565,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12219:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12249:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "12241:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 567,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12241:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12269:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "12261:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12261:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12209:72:0"
									},
									"returnParameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12299:0:0"
									},
									"scope": 586,
									"src": "12180:121:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 584,
										"nodeType": "Block",
										"src": "13007:2:0",
										"statements": []
									},
									"documentation": {
										"id": 575,
										"nodeType": "StructuredDocumentation",
										"src": "12307:577:0",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 585,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "12898:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12935:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "12927:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 576,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12927:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12957:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "12949:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 578,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12949:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12977:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "12969:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 580,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12969:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12917:72:0"
									},
									"returnParameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13007:0:0"
									},
									"scope": 586,
									"src": "12889:120:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 587,
							"src": "1401:11610:0",
							"usedErrors": []
						}
					],
					"src": "105:12907:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							664
						]
					},
					"id": 665,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 588,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 589,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 664,
							"linearizedBaseContracts": [
								664
							],
							"name": "IERC20",
							"nameLocation": "212:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 590,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 598,
									"name": "Transfer",
									"nameLocation": "394:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 592,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "403:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 591,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 594,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "425:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 593,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 596,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "445:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 595,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:1"
									},
									"src": "388:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 599,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 607,
									"name": "Approval",
									"nameLocation": "625:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 601,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "634:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 600,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 603,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "657:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 602,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 605,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "682:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:1"
									},
									"src": "619:78:1"
								},
								{
									"documentation": {
										"id": 608,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 613,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 664,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 614,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 621,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 615,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 618,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 664,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 622,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 631,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "1211:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "1223:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:1"
									},
									"returnParameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "1257:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 628,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:1"
									},
									"scope": 664,
									"src": "1193:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 632,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 641,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "1557:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 633,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "1572:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:1"
									},
									"returnParameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "1612:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 638,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:1"
									},
									"scope": 664,
									"src": "1538:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 642,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 651,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "2291:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 643,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 646,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "2308:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 645,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:1"
									},
									"returnParameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "2342:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 648,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:1"
									},
									"scope": 664,
									"src": "2274:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 652,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 663,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "2677:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 653,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "2699:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 655,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "2719:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:1"
									},
									"returnParameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "2758:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 660,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:1"
									},
									"scope": 664,
									"src": "2646:118:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 665,
							"src": "202:2564:1",
							"usedErrors": []
						}
					],
					"src": "106:2661:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							664
						],
						"IERC20Metadata": [
							689
						]
					},
					"id": 690,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 666,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 667,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 690,
							"sourceUnit": 665,
							"src": "135:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 669,
										"name": "IERC20",
										"nameLocations": [
											"305:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 664,
										"src": "305:6:2"
									},
									"id": 670,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:2"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 668,
								"nodeType": "StructuredDocumentation",
								"src": "160:116:2",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 689,
							"linearizedBaseContracts": [
								689,
								664
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 671,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 676,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:2"
									},
									"returnParameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "416:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 673,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:2"
									},
									"scope": 689,
									"src": "377:54:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 677,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:2",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 682,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "539:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 679,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:2"
									},
									"scope": 689,
									"src": "498:56:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 683,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:2",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 688,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:2"
									},
									"returnParameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "673:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 685,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:2"
									},
									"scope": 689,
									"src": "630:50:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 690,
							"src": "277:405:2",
							"usedErrors": []
						}
					],
					"src": "110:573:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							711
						]
					},
					"id": 712,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 691,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 692,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 711,
							"linearizedBaseContracts": [
								711
							],
							"name": "Context",
							"nameLocation": "626:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 700,
										"nodeType": "Block",
										"src": "702:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 697,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 696,
												"id": 699,
												"nodeType": "Return",
												"src": "712:17:3"
											}
										]
									},
									"id": 701,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:3"
									},
									"returnParameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "693:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:3"
									},
									"scope": 711,
									"src": "640:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 709,
										"nodeType": "Block",
										"src": "809:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 706,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:3",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 705,
												"id": 708,
												"nodeType": "Return",
												"src": "819:15:3"
											}
										]
									},
									"id": 710,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:3"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "793:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 703,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:3"
									},
									"scope": 711,
									"src": "742:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 712,
							"src": "608:235:3",
							"usedErrors": []
						}
					],
					"src": "86:758:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							1576
						]
					},
					"id": 1577,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 713,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 714,
								"nodeType": "StructuredDocumentation",
								"src": "128:73:4",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1576,
							"linearizedBaseContracts": [
								1576
							],
							"name": "Math",
							"nameLocation": "210:4:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 718,
									"members": [
										{
											"id": 715,
											"name": "Down",
											"nameLocation": "245:4:4",
											"nodeType": "EnumValue",
											"src": "245:4:4"
										},
										{
											"id": 716,
											"name": "Up",
											"nameLocation": "287:2:4",
											"nodeType": "EnumValue",
											"src": "287:2:4"
										},
										{
											"id": 717,
											"name": "Zero",
											"nameLocation": "318:4:4",
											"nodeType": "EnumValue",
											"src": "318:4:4"
										}
									],
									"name": "Rounding",
									"nameLocation": "226:8:4",
									"nodeType": "EnumDefinition",
									"src": "221:122:4"
								},
								{
									"body": {
										"id": 735,
										"nodeType": "Block",
										"src": "480:37:4",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 730,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 728,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 721,
															"src": "497:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 729,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 723,
															"src": "501:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "497:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 732,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 723,
														"src": "509:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "497:13:4",
													"trueExpression": {
														"id": 731,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 721,
														"src": "505:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 727,
												"id": 734,
												"nodeType": "Return",
												"src": "490:20:4"
											}
										]
									},
									"documentation": {
										"id": 719,
										"nodeType": "StructuredDocumentation",
										"src": "349:59:4",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 736,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "422:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "434:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "426:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 720,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "445:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "437:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "425:22:4"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "471:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "471:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:9:4"
									},
									"scope": 1576,
									"src": "413:104:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 753,
										"nodeType": "Block",
										"src": "655:37:4",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 748,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 746,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 739,
															"src": "672:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 747,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 741,
															"src": "676:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "672:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 750,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 741,
														"src": "684:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "672:13:4",
													"trueExpression": {
														"id": 749,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 739,
														"src": "680:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 745,
												"id": 752,
												"nodeType": "Return",
												"src": "665:20:4"
											}
										]
									},
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "523:60:4",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 754,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "597:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "601:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 738,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "612:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 740,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:4"
									},
									"returnParameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "646:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 743,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:9:4"
									},
									"scope": 1576,
									"src": "588:104:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 776,
										"nodeType": "Block",
										"src": "876:82:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 766,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 764,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "931:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 765,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 759,
																	"src": "935:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "931:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 767,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "930:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 773,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 768,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 757,
																		"src": "941:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 769,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 759,
																		"src": "945:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "941:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 771,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "940:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 772,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "950:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "940:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "930:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 763,
												"id": 775,
												"nodeType": "Return",
												"src": "923:28:4"
											}
										]
									},
									"documentation": {
										"id": 755,
										"nodeType": "StructuredDocumentation",
										"src": "698:102:4",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 777,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "814:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "830:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 777,
												"src": "822:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "841:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 777,
												"src": "833:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 758,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:22:4"
									},
									"returnParameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 777,
												"src": "867:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "866:9:4"
									},
									"scope": 1576,
									"src": "805:153:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 801,
										"nodeType": "Block",
										"src": "1228:123:4",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 789,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 787,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 780,
															"src": "1316:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 788,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1321:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1316:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 798,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 796,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 793,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 791,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 780,
																			"src": "1330:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 792,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1334:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1330:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 794,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1329:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 795,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 782,
																"src": "1339:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1329:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 797,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1343:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1329:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1316:28:4",
													"trueExpression": {
														"hexValue": "30",
														"id": 790,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1325:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 786,
												"id": 800,
												"nodeType": "Return",
												"src": "1309:35:4"
											}
										]
									},
									"documentation": {
										"id": 778,
										"nodeType": "StructuredDocumentation",
										"src": "964:188:4",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 802,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "1166:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 780,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1182:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "1174:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 779,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1174:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1193:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "1185:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 781,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1185:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1173:22:4"
									},
									"returnParameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "1219:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 784,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1219:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1218:9:4"
									},
									"scope": 1576,
									"src": "1157:194:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "1795:3797:4",
										"statements": [
											{
												"id": 922,
												"nodeType": "UncheckedBlock",
												"src": "1805:3781:4",
												"statements": [
													{
														"assignments": [
															815
														],
														"declarations": [
															{
																"constant": false,
																"id": 815,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "2134:5:4",
																"nodeType": "VariableDeclaration",
																"scope": 922,
																"src": "2126:13:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 814,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2126:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 816,
														"nodeType": "VariableDeclarationStatement",
														"src": "2126:13:4"
													},
													{
														"assignments": [
															818
														],
														"declarations": [
															{
																"constant": false,
																"id": 818,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "2206:5:4",
																"nodeType": "VariableDeclaration",
																"scope": 922,
																"src": "2198:13:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 817,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2198:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 819,
														"nodeType": "VariableDeclarationStatement",
														"src": "2198:13:4"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "2278:157:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2296:30:4",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2313:1:4"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2316:1:4"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2323:1:4",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2319:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2319:6:4"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "2306:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2306:20:4"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "2300:2:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2343:18:4",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2356:1:4"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2359:1:4"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "2352:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2352:9:4"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "2343:5:4"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2378:43:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2395:2:4"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2399:5:4"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2391:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2391:14:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2410:2:4"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2414:5:4"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "2407:2:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2407:13:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2387:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2387:34:4"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "2378:5:4"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 815,
																"isOffset": false,
																"isSlot": false,
																"src": "2343:5:4",
																"valueSize": 1
															},
															{
																"declaration": 815,
																"isOffset": false,
																"isSlot": false,
																"src": "2399:5:4",
																"valueSize": 1
															},
															{
																"declaration": 815,
																"isOffset": false,
																"isSlot": false,
																"src": "2414:5:4",
																"valueSize": 1
															},
															{
																"declaration": 818,
																"isOffset": false,
																"isSlot": false,
																"src": "2378:5:4",
																"valueSize": 1
															},
															{
																"declaration": 805,
																"isOffset": false,
																"isSlot": false,
																"src": "2313:1:4",
																"valueSize": 1
															},
															{
																"declaration": 805,
																"isOffset": false,
																"isSlot": false,
																"src": "2356:1:4",
																"valueSize": 1
															},
															{
																"declaration": 807,
																"isOffset": false,
																"isSlot": false,
																"src": "2316:1:4",
																"valueSize": 1
															},
															{
																"declaration": 807,
																"isOffset": false,
																"isSlot": false,
																"src": "2359:1:4",
																"valueSize": 1
															}
														],
														"id": 820,
														"nodeType": "InlineAssembly",
														"src": "2269:166:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 823,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 821,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 818,
																"src": "2516:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 822,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2525:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2516:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 829,
														"nodeType": "IfStatement",
														"src": "2512:75:4",
														"trueBody": {
															"id": 828,
															"nodeType": "Block",
															"src": "2528:59:4",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 826,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 824,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 815,
																			"src": "2553:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 825,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 809,
																			"src": "2561:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2553:19:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 813,
																	"id": 827,
																	"nodeType": "Return",
																	"src": "2546:26:4"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 833,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 831,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 809,
																		"src": "2697:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 832,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 818,
																		"src": "2711:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2697:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 830,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2689:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																	"typeString": "function (bool) pure"
																}
															},
															"id": 834,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2689:28:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 835,
														"nodeType": "ExpressionStatement",
														"src": "2689:28:4"
													},
													{
														"assignments": [
															837
														],
														"declarations": [
															{
																"constant": false,
																"id": 837,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "2981:9:4",
																"nodeType": "VariableDeclaration",
																"scope": 922,
																"src": "2973:17:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 836,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2973:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 838,
														"nodeType": "VariableDeclarationStatement",
														"src": "2973:17:4"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3013:291:4",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3082:38:4",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "3102:1:4"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3105:1:4"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3108:11:4"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "3095:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3095:25:4"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "3082:9:4"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3202:41:4",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "3215:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "3225:9:4"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "3236:5:4"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "3222:2:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3222:20:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3211:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3211:32:4"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "3202:5:4"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3260:30:4",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3273:5:4"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "3280:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3269:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3269:21:4"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3260:5:4"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 809,
																"isOffset": false,
																"isSlot": false,
																"src": "3108:11:4",
																"valueSize": 1
															},
															{
																"declaration": 815,
																"isOffset": false,
																"isSlot": false,
																"src": "3236:5:4",
																"valueSize": 1
															},
															{
																"declaration": 815,
																"isOffset": false,
																"isSlot": false,
																"src": "3260:5:4",
																"valueSize": 1
															},
															{
																"declaration": 815,
																"isOffset": false,
																"isSlot": false,
																"src": "3273:5:4",
																"valueSize": 1
															},
															{
																"declaration": 818,
																"isOffset": false,
																"isSlot": false,
																"src": "3202:5:4",
																"valueSize": 1
															},
															{
																"declaration": 818,
																"isOffset": false,
																"isSlot": false,
																"src": "3215:5:4",
																"valueSize": 1
															},
															{
																"declaration": 837,
																"isOffset": false,
																"isSlot": false,
																"src": "3082:9:4",
																"valueSize": 1
															},
															{
																"declaration": 837,
																"isOffset": false,
																"isSlot": false,
																"src": "3225:9:4",
																"valueSize": 1
															},
															{
																"declaration": 837,
																"isOffset": false,
																"isSlot": false,
																"src": "3280:9:4",
																"valueSize": 1
															},
															{
																"declaration": 805,
																"isOffset": false,
																"isSlot": false,
																"src": "3102:1:4",
																"valueSize": 1
															},
															{
																"declaration": 807,
																"isOffset": false,
																"isSlot": false,
																"src": "3105:1:4",
																"valueSize": 1
															}
														],
														"id": 839,
														"nodeType": "InlineAssembly",
														"src": "3004:300:4"
													},
													{
														"assignments": [
															841
														],
														"declarations": [
															{
																"constant": false,
																"id": 841,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "3619:4:4",
																"nodeType": "VariableDeclaration",
																"scope": 922,
																"src": "3611:12:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 840,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3611:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 849,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 848,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 842,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 809,
																"src": "3626:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 846,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 844,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "3641:12:4",
																			"subExpression": {
																				"id": 843,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 809,
																				"src": "3642:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 845,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3656:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3641:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 847,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3640:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3626:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3611:47:4"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3681:362:4",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3746:37:4",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3765:11:4"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "3778:4:4"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "3761:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3761:22:4"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "3746:11:4"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3850:25:4",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3863:5:4"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "3870:4:4"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "3859:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3859:16:4"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3850:5:4"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3990:39:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4010:1:4",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "4013:4:4"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "4006:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4006:12:4"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "4020:4:4"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "4002:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4002:23:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4027:1:4",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3998:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3998:31:4"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "3990:4:4"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 809,
																"isOffset": false,
																"isSlot": false,
																"src": "3746:11:4",
																"valueSize": 1
															},
															{
																"declaration": 809,
																"isOffset": false,
																"isSlot": false,
																"src": "3765:11:4",
																"valueSize": 1
															},
															{
																"declaration": 815,
																"isOffset": false,
																"isSlot": false,
																"src": "3850:5:4",
																"valueSize": 1
															},
															{
																"declaration": 815,
																"isOffset": false,
																"isSlot": false,
																"src": "3863:5:4",
																"valueSize": 1
															},
															{
																"declaration": 841,
																"isOffset": false,
																"isSlot": false,
																"src": "3778:4:4",
																"valueSize": 1
															},
															{
																"declaration": 841,
																"isOffset": false,
																"isSlot": false,
																"src": "3870:4:4",
																"valueSize": 1
															},
															{
																"declaration": 841,
																"isOffset": false,
																"isSlot": false,
																"src": "3990:4:4",
																"valueSize": 1
															},
															{
																"declaration": 841,
																"isOffset": false,
																"isSlot": false,
																"src": "4013:4:4",
																"valueSize": 1
															},
															{
																"declaration": 841,
																"isOffset": false,
																"isSlot": false,
																"src": "4020:4:4",
																"valueSize": 1
															}
														],
														"id": 850,
														"nodeType": "InlineAssembly",
														"src": "3672:371:4"
													},
													{
														"expression": {
															"id": 855,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 851,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 815,
																"src": "4109:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 854,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 852,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 818,
																	"src": "4118:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 853,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 841,
																	"src": "4126:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4118:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4109:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 856,
														"nodeType": "ExpressionStatement",
														"src": "4109:21:4"
													},
													{
														"assignments": [
															858
														],
														"declarations": [
															{
																"constant": false,
																"id": 858,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "4456:7:4",
																"nodeType": "VariableDeclaration",
																"scope": 922,
																"src": "4448:15:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 857,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4448:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 865,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 864,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 861,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 859,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4467:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 860,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 809,
																			"src": "4471:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4467:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 862,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4466:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 863,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4486:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "4466:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4448:39:4"
													},
													{
														"expression": {
															"id": 872,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 866,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 858,
																"src": "4704:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 871,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 867,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4715:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 870,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 868,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 809,
																		"src": "4719:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 869,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 858,
																		"src": "4733:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4719:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4715:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4704:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 873,
														"nodeType": "ExpressionStatement",
														"src": "4704:36:4"
													},
													{
														"expression": {
															"id": 880,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 874,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 858,
																"src": "4773:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 879,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 875,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4784:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 878,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 876,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 809,
																		"src": "4788:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 877,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 858,
																		"src": "4802:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4788:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4784:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4773:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 881,
														"nodeType": "ExpressionStatement",
														"src": "4773:36:4"
													},
													{
														"expression": {
															"id": 888,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 882,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 858,
																"src": "4843:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 887,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 883,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4854:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 886,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 884,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 809,
																		"src": "4858:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 885,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 858,
																		"src": "4872:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4858:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4854:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4843:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 889,
														"nodeType": "ExpressionStatement",
														"src": "4843:36:4"
													},
													{
														"expression": {
															"id": 896,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 890,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 858,
																"src": "4913:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 895,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 891,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4924:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 894,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 892,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 809,
																		"src": "4928:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 893,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 858,
																		"src": "4942:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4928:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4924:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4913:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 897,
														"nodeType": "ExpressionStatement",
														"src": "4913:36:4"
													},
													{
														"expression": {
															"id": 904,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 898,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 858,
																"src": "4983:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 903,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 899,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4994:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 902,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 900,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 809,
																		"src": "4998:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 901,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 858,
																		"src": "5012:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4998:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4994:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4983:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 905,
														"nodeType": "ExpressionStatement",
														"src": "4983:36:4"
													},
													{
														"expression": {
															"id": 912,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 906,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 858,
																"src": "5054:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 911,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 907,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5065:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 910,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 908,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 809,
																		"src": "5069:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 909,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 858,
																		"src": "5083:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5069:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5065:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5054:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 913,
														"nodeType": "ExpressionStatement",
														"src": "5054:36:4"
													},
													{
														"expression": {
															"id": 918,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 914,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 812,
																"src": "5524:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 917,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 915,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 815,
																	"src": "5533:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 916,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 858,
																	"src": "5541:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5533:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5524:24:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 919,
														"nodeType": "ExpressionStatement",
														"src": "5524:24:4"
													},
													{
														"expression": {
															"id": 920,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 812,
															"src": "5569:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 813,
														"id": 921,
														"nodeType": "Return",
														"src": "5562:13:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "1357:305:4",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "1676:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1700:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "1692:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 804,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1692:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1719:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "1711:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 806,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "1738:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "1730:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1730:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1682:73:4"
									},
									"returnParameters": {
										"id": 813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 812,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1787:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "1779:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 811,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1779:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1778:16:4"
									},
									"scope": 1576,
									"src": "1667:3925:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 967,
										"nodeType": "Block",
										"src": "5872:189:4",
										"statements": [
											{
												"assignments": [
													940
												],
												"declarations": [
													{
														"constant": false,
														"id": 940,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "5890:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 967,
														"src": "5882:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 939,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5882:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 946,
												"initialValue": {
													"arguments": [
														{
															"id": 942,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 927,
															"src": "5906:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 943,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 929,
															"src": "5909:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 944,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 931,
															"src": "5912:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 941,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															924,
															968
														],
														"referencedDeclaration": 924,
														"src": "5899:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5899:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5882:42:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$718",
															"typeString": "enum Math.Rounding"
														},
														"id": 950,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 947,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 934,
															"src": "5938:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$718",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 948,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 718,
																"src": "5950:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$718_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 949,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "5959:2:4",
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 716,
															"src": "5950:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$718",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "5938:23:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 957,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 952,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 927,
																	"src": "5972:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 953,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 929,
																	"src": "5975:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 954,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 931,
																	"src": "5978:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 951,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "5965:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 955,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5965:25:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 956,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5993:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5965:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5938:56:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 964,
												"nodeType": "IfStatement",
												"src": "5934:98:4",
												"trueBody": {
													"id": 963,
													"nodeType": "Block",
													"src": "5996:36:4",
													"statements": [
														{
															"expression": {
																"id": 961,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 959,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 940,
																	"src": "6010:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 960,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6020:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6010:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 962,
															"nodeType": "ExpressionStatement",
															"src": "6010:11:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 965,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 940,
													"src": "6048:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 938,
												"id": 966,
												"nodeType": "Return",
												"src": "6041:13:4"
											}
										]
									},
									"documentation": {
										"id": 925,
										"nodeType": "StructuredDocumentation",
										"src": "5598:121:4",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 968,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "5733:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "5757:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "5749:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5749:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 929,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "5776:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "5768:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 928,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5768:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 931,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "5795:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "5787:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 930,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5787:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "5825:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "5816:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$718",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 933,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 932,
														"name": "Rounding",
														"nameLocations": [
															"5816:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 718,
														"src": "5816:8:4"
													},
													"referencedDeclaration": 718,
													"src": "5816:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$718",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5739:100:4"
									},
									"returnParameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "5863:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 936,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5863:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5862:9:4"
									},
									"scope": 1576,
									"src": "5724:337:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1079,
										"nodeType": "Block",
										"src": "6337:1585:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 976,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 971,
														"src": "6351:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 977,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6356:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6351:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 982,
												"nodeType": "IfStatement",
												"src": "6347:45:4",
												"trueBody": {
													"id": 981,
													"nodeType": "Block",
													"src": "6359:33:4",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 979,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6380:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 975,
															"id": 980,
															"nodeType": "Return",
															"src": "6373:8:4"
														}
													]
												}
											},
											{
												"assignments": [
													984
												],
												"declarations": [
													{
														"constant": false,
														"id": 984,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7079:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 1079,
														"src": "7071:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 983,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7071:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 993,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 985,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7088:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 990,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 987,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 971,
																			"src": "7099:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 986,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1248,
																			1284
																		],
																		"referencedDeclaration": 1248,
																		"src": "7094:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 988,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7094:7:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 989,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7105:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7094:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 991,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7093:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7088:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7071:36:4"
											},
											{
												"id": 1078,
												"nodeType": "UncheckedBlock",
												"src": "7508:408:4",
												"statements": [
													{
														"expression": {
															"id": 1003,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 994,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 984,
																"src": "7532:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1002,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 999,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 995,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 984,
																				"src": "7542:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 998,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 996,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 971,
																					"src": "7551:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 997,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 984,
																					"src": "7555:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7551:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7542:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1000,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7541:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1001,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7566:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7541:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7532:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1004,
														"nodeType": "ExpressionStatement",
														"src": "7532:35:4"
													},
													{
														"expression": {
															"id": 1014,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1005,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 984,
																"src": "7581:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1013,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1010,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1006,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 984,
																				"src": "7591:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1009,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1007,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 971,
																					"src": "7600:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1008,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 984,
																					"src": "7604:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7600:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7591:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1011,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7590:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1012,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7615:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7590:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7581:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1015,
														"nodeType": "ExpressionStatement",
														"src": "7581:35:4"
													},
													{
														"expression": {
															"id": 1025,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1016,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 984,
																"src": "7630:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1024,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1021,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1017,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 984,
																				"src": "7640:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1020,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1018,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 971,
																					"src": "7649:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1019,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 984,
																					"src": "7653:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7649:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7640:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1022,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7639:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1023,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7664:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7639:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7630:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1026,
														"nodeType": "ExpressionStatement",
														"src": "7630:35:4"
													},
													{
														"expression": {
															"id": 1036,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1027,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 984,
																"src": "7679:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1035,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1032,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1028,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 984,
																				"src": "7689:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1031,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1029,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 971,
																					"src": "7698:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1030,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 984,
																					"src": "7702:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7698:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7689:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1033,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7688:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1034,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7713:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7688:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7679:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1037,
														"nodeType": "ExpressionStatement",
														"src": "7679:35:4"
													},
													{
														"expression": {
															"id": 1047,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1038,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 984,
																"src": "7728:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1046,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1043,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1039,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 984,
																				"src": "7738:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1042,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1040,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 971,
																					"src": "7747:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1041,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 984,
																					"src": "7751:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7747:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7738:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1044,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7737:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1045,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7762:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7737:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7728:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1048,
														"nodeType": "ExpressionStatement",
														"src": "7728:35:4"
													},
													{
														"expression": {
															"id": 1058,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1049,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 984,
																"src": "7777:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1057,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1054,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1050,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 984,
																				"src": "7787:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1053,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1051,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 971,
																					"src": "7796:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1052,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 984,
																					"src": "7800:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7796:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7787:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1055,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7786:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1056,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7811:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7786:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7777:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1059,
														"nodeType": "ExpressionStatement",
														"src": "7777:35:4"
													},
													{
														"expression": {
															"id": 1069,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1060,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 984,
																"src": "7826:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1068,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1065,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1061,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 984,
																				"src": "7836:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1064,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1062,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 971,
																					"src": "7845:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1063,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 984,
																					"src": "7849:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7845:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7836:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1066,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7835:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1067,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7860:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7835:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7826:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1070,
														"nodeType": "ExpressionStatement",
														"src": "7826:35:4"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1072,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 984,
																	"src": "7886:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1075,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1073,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 971,
																		"src": "7894:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1074,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 984,
																		"src": "7898:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7894:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1071,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 754,
																"src": "7882:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1076,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7882:23:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 975,
														"id": 1077,
														"nodeType": "Return",
														"src": "7875:30:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 969,
										"nodeType": "StructuredDocumentation",
										"src": "6067:208:4",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 1080,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "6289:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 971,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6302:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "6294:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 970,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6294:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6293:11:4"
									},
									"returnParameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "6328:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 973,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6328:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6327:9:4"
									},
									"scope": 1576,
									"src": "6280:1642:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1115,
										"nodeType": "Block",
										"src": "8098:161:4",
										"statements": [
											{
												"id": 1114,
												"nodeType": "UncheckedBlock",
												"src": "8108:145:4",
												"statements": [
													{
														"assignments": [
															1092
														],
														"declarations": [
															{
																"constant": false,
																"id": 1092,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "8140:6:4",
																"nodeType": "VariableDeclaration",
																"scope": 1114,
																"src": "8132:14:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1091,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8132:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1096,
														"initialValue": {
															"arguments": [
																{
																	"id": 1094,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1083,
																	"src": "8154:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1093,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1080,
																	1116
																],
																"referencedDeclaration": 1080,
																"src": "8149:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1095,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8149:7:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8132:24:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1112,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1097,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1092,
																"src": "8177:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1107,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$718",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1101,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1098,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1086,
																					"src": "8187:8:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$718",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1099,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 718,
																						"src": "8199:8:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$718_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1100,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "8208:2:4",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 716,
																					"src": "8199:11:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$718",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "8187:23:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1106,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1104,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1102,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1092,
																						"src": "8214:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1103,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1092,
																						"src": "8223:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "8214:15:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1105,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1083,
																					"src": "8232:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8214:19:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "8187:46:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1109,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8240:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1110,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "8187:54:4",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1108,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8236:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1111,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8186:56:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "8177:65:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1090,
														"id": 1113,
														"nodeType": "Return",
														"src": "8170:72:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1081,
										"nodeType": "StructuredDocumentation",
										"src": "7928:89:4",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 1116,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8031:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8044:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "8036:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1082,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8036:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8056:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "8047:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$718",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1085,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1084,
														"name": "Rounding",
														"nameLocations": [
															"8047:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 718,
														"src": "8047:8:4"
													},
													"referencedDeclaration": 718,
													"src": "8047:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$718",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8035:30:4"
									},
									"returnParameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "8089:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1088,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8088:9:4"
									},
									"scope": 1576,
									"src": "8022:237:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1247,
										"nodeType": "Block",
										"src": "8444:922:4",
										"statements": [
											{
												"assignments": [
													1125
												],
												"declarations": [
													{
														"constant": false,
														"id": 1125,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8462:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 1247,
														"src": "8454:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1124,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8454:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1127,
												"initialValue": {
													"hexValue": "30",
													"id": 1126,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8471:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8454:18:4"
											},
											{
												"id": 1244,
												"nodeType": "UncheckedBlock",
												"src": "8482:855:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1130,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1128,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1119,
																	"src": "8510:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1129,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8519:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "8510:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1131,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8525:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8510:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1142,
														"nodeType": "IfStatement",
														"src": "8506:99:4",
														"trueBody": {
															"id": 1141,
															"nodeType": "Block",
															"src": "8528:77:4",
															"statements": [
																{
																	"expression": {
																		"id": 1135,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1133,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1119,
																			"src": "8546:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1134,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8556:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8546:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1136,
																	"nodeType": "ExpressionStatement",
																	"src": "8546:13:4"
																},
																{
																	"expression": {
																		"id": 1139,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1137,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1125,
																			"src": "8577:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1138,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8587:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8577:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1140,
																	"nodeType": "ExpressionStatement",
																	"src": "8577:13:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1145,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1143,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1119,
																	"src": "8622:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1144,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8631:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "8622:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1146,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8636:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8622:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1157,
														"nodeType": "IfStatement",
														"src": "8618:96:4",
														"trueBody": {
															"id": 1156,
															"nodeType": "Block",
															"src": "8639:75:4",
															"statements": [
																{
																	"expression": {
																		"id": 1150,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1148,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1119,
																			"src": "8657:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1149,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8667:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8657:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1151,
																	"nodeType": "ExpressionStatement",
																	"src": "8657:12:4"
																},
																{
																	"expression": {
																		"id": 1154,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1152,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1125,
																			"src": "8687:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1153,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8697:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8687:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1155,
																	"nodeType": "ExpressionStatement",
																	"src": "8687:12:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1162,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1160,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1158,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1119,
																	"src": "8731:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1159,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8740:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "8731:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1161,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8745:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8731:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1172,
														"nodeType": "IfStatement",
														"src": "8727:96:4",
														"trueBody": {
															"id": 1171,
															"nodeType": "Block",
															"src": "8748:75:4",
															"statements": [
																{
																	"expression": {
																		"id": 1165,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1163,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1119,
																			"src": "8766:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1164,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8776:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "8766:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1166,
																	"nodeType": "ExpressionStatement",
																	"src": "8766:12:4"
																},
																{
																	"expression": {
																		"id": 1169,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1167,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1125,
																			"src": "8796:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1168,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8806:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "8796:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1170,
																	"nodeType": "ExpressionStatement",
																	"src": "8796:12:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1177,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1175,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1173,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1119,
																	"src": "8840:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1174,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8849:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "8840:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1176,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8854:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8840:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1187,
														"nodeType": "IfStatement",
														"src": "8836:96:4",
														"trueBody": {
															"id": 1186,
															"nodeType": "Block",
															"src": "8857:75:4",
															"statements": [
																{
																	"expression": {
																		"id": 1180,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1178,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1119,
																			"src": "8875:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1179,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8885:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "8875:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1181,
																	"nodeType": "ExpressionStatement",
																	"src": "8875:12:4"
																},
																{
																	"expression": {
																		"id": 1184,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1182,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1125,
																			"src": "8905:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1183,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8915:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "8905:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1185,
																	"nodeType": "ExpressionStatement",
																	"src": "8905:12:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1192,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1190,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1188,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1119,
																	"src": "8949:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1189,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8958:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "8949:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1191,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8962:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8949:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1202,
														"nodeType": "IfStatement",
														"src": "8945:93:4",
														"trueBody": {
															"id": 1201,
															"nodeType": "Block",
															"src": "8965:73:4",
															"statements": [
																{
																	"expression": {
																		"id": 1195,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1193,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1119,
																			"src": "8983:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1194,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8993:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "8983:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1196,
																	"nodeType": "ExpressionStatement",
																	"src": "8983:11:4"
																},
																{
																	"expression": {
																		"id": 1199,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1197,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1125,
																			"src": "9012:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1198,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9022:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9012:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1200,
																	"nodeType": "ExpressionStatement",
																	"src": "9012:11:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1207,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1205,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1203,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1119,
																	"src": "9055:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1204,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9064:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "9055:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1206,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9068:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9055:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1217,
														"nodeType": "IfStatement",
														"src": "9051:93:4",
														"trueBody": {
															"id": 1216,
															"nodeType": "Block",
															"src": "9071:73:4",
															"statements": [
																{
																	"expression": {
																		"id": 1210,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1208,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1119,
																			"src": "9089:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1209,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9099:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9089:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1211,
																	"nodeType": "ExpressionStatement",
																	"src": "9089:11:4"
																},
																{
																	"expression": {
																		"id": 1214,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1212,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1125,
																			"src": "9118:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1213,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9128:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9118:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1215,
																	"nodeType": "ExpressionStatement",
																	"src": "9118:11:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1220,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1218,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1119,
																	"src": "9161:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1219,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9170:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "9161:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1221,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9174:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9161:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1232,
														"nodeType": "IfStatement",
														"src": "9157:93:4",
														"trueBody": {
															"id": 1231,
															"nodeType": "Block",
															"src": "9177:73:4",
															"statements": [
																{
																	"expression": {
																		"id": 1225,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1223,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1119,
																			"src": "9195:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1224,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9205:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9195:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1226,
																	"nodeType": "ExpressionStatement",
																	"src": "9195:11:4"
																},
																{
																	"expression": {
																		"id": 1229,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1227,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1125,
																			"src": "9224:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1228,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9234:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9224:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1230,
																	"nodeType": "ExpressionStatement",
																	"src": "9224:11:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1237,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1235,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1233,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1119,
																	"src": "9267:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1234,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9276:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9267:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1236,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9280:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9267:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1243,
														"nodeType": "IfStatement",
														"src": "9263:64:4",
														"trueBody": {
															"id": 1242,
															"nodeType": "Block",
															"src": "9283:44:4",
															"statements": [
																{
																	"expression": {
																		"id": 1240,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1238,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1125,
																			"src": "9301:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1239,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9311:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9301:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1241,
																	"nodeType": "ExpressionStatement",
																	"src": "9301:11:4"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1245,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1125,
													"src": "9353:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1123,
												"id": 1246,
												"nodeType": "Return",
												"src": "9346:13:4"
											}
										]
									},
									"documentation": {
										"id": 1117,
										"nodeType": "StructuredDocumentation",
										"src": "8265:113:4",
										"text": " @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1248,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "8392:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8405:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "8397:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8397:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8396:15:4"
									},
									"returnParameters": {
										"id": 1123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "8435:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8435:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8434:9:4"
									},
									"scope": 1576,
									"src": "8383:983:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1283,
										"nodeType": "Block",
										"src": "9599:165:4",
										"statements": [
											{
												"id": 1282,
												"nodeType": "UncheckedBlock",
												"src": "9609:149:4",
												"statements": [
													{
														"assignments": [
															1260
														],
														"declarations": [
															{
																"constant": false,
																"id": 1260,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "9641:6:4",
																"nodeType": "VariableDeclaration",
																"scope": 1282,
																"src": "9633:14:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1259,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9633:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1264,
														"initialValue": {
															"arguments": [
																{
																	"id": 1262,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1251,
																	"src": "9655:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1261,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1248,
																	1284
																],
																"referencedDeclaration": 1248,
																"src": "9650:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9650:11:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "9633:28:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1280,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1265,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1260,
																"src": "9682:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1275,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$718",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1269,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1266,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1254,
																					"src": "9692:8:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$718",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1267,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 718,
																						"src": "9704:8:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$718_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1268,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "9713:2:4",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 716,
																					"src": "9704:11:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$718",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "9692:23:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1274,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1272,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1270,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9719:1:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 1271,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1260,
																						"src": "9724:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "9719:11:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1273,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1251,
																					"src": "9733:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9719:19:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "9692:46:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1277,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9745:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1278,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "9692:54:4",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1276,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9741:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1279,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9691:56:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "9682:65:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1258,
														"id": 1281,
														"nodeType": "Return",
														"src": "9675:72:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1249,
										"nodeType": "StructuredDocumentation",
										"src": "9372:142:4",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1284,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "9528:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1251,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9541:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "9533:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9533:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "9557:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "9548:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$718",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1253,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1252,
														"name": "Rounding",
														"nameLocations": [
															"9548:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 718,
														"src": "9548:8:4"
													},
													"referencedDeclaration": 718,
													"src": "9548:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$718",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9532:34:4"
									},
									"returnParameters": {
										"id": 1258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1257,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "9590:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1256,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9590:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9589:9:4"
									},
									"scope": 1576,
									"src": "9519:245:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1412,
										"nodeType": "Block",
										"src": "9951:828:4",
										"statements": [
											{
												"assignments": [
													1293
												],
												"declarations": [
													{
														"constant": false,
														"id": 1293,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9969:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 1412,
														"src": "9961:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1292,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9961:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1295,
												"initialValue": {
													"hexValue": "30",
													"id": 1294,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9978:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9961:18:4"
											},
											{
												"id": 1409,
												"nodeType": "UncheckedBlock",
												"src": "9989:761:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1296,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1287,
																"src": "10017:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 1299,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1297,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10026:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1298,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10030:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10026:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "10017:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1312,
														"nodeType": "IfStatement",
														"src": "10013:99:4",
														"trueBody": {
															"id": 1311,
															"nodeType": "Block",
															"src": "10034:78:4",
															"statements": [
																{
																	"expression": {
																		"id": 1305,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1301,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1287,
																			"src": "10052:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 1304,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1302,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10061:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 1303,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10065:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "10061:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "10052:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1306,
																	"nodeType": "ExpressionStatement",
																	"src": "10052:15:4"
																},
																{
																	"expression": {
																		"id": 1309,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1307,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1293,
																			"src": "10085:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1308,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10095:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10085:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1310,
																	"nodeType": "ExpressionStatement",
																	"src": "10085:12:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1313,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1287,
																"src": "10129:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 1316,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1314,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10138:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1315,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10142:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "10138:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "10129:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1329,
														"nodeType": "IfStatement",
														"src": "10125:99:4",
														"trueBody": {
															"id": 1328,
															"nodeType": "Block",
															"src": "10146:78:4",
															"statements": [
																{
																	"expression": {
																		"id": 1322,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1318,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1287,
																			"src": "10164:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 1321,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1319,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10173:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 1320,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10177:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "10173:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "10164:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1323,
																	"nodeType": "ExpressionStatement",
																	"src": "10164:15:4"
																},
																{
																	"expression": {
																		"id": 1326,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1324,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1293,
																			"src": "10197:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1325,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10207:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "10197:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1327,
																	"nodeType": "ExpressionStatement",
																	"src": "10197:12:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1330,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1287,
																"src": "10241:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 1333,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1331,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10250:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1332,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10254:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "10250:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "10241:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1346,
														"nodeType": "IfStatement",
														"src": "10237:99:4",
														"trueBody": {
															"id": 1345,
															"nodeType": "Block",
															"src": "10258:78:4",
															"statements": [
																{
																	"expression": {
																		"id": 1339,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1335,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1287,
																			"src": "10276:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 1338,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1336,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10285:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 1337,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10289:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "10285:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "10276:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1340,
																	"nodeType": "ExpressionStatement",
																	"src": "10276:15:4"
																},
																{
																	"expression": {
																		"id": 1343,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1341,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1293,
																			"src": "10309:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1342,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10319:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "10309:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1344,
																	"nodeType": "ExpressionStatement",
																	"src": "10309:12:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1347,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1287,
																"src": "10353:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 1350,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1348,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10362:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1349,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10366:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "10362:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "10353:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1363,
														"nodeType": "IfStatement",
														"src": "10349:96:4",
														"trueBody": {
															"id": 1362,
															"nodeType": "Block",
															"src": "10369:76:4",
															"statements": [
																{
																	"expression": {
																		"id": 1356,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1352,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1287,
																			"src": "10387:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 1355,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10396:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 1354,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10400:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "10396:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "10387:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1357,
																	"nodeType": "ExpressionStatement",
																	"src": "10387:14:4"
																},
																{
																	"expression": {
																		"id": 1360,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1358,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1293,
																			"src": "10419:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1359,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10429:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "10419:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1361,
																	"nodeType": "ExpressionStatement",
																	"src": "10419:11:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1368,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1364,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1287,
																"src": "10462:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 1367,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1365,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10471:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1366,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10475:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "10471:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "10462:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1380,
														"nodeType": "IfStatement",
														"src": "10458:96:4",
														"trueBody": {
															"id": 1379,
															"nodeType": "Block",
															"src": "10478:76:4",
															"statements": [
																{
																	"expression": {
																		"id": 1373,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1369,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1287,
																			"src": "10496:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 1372,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1370,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10505:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 1371,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10509:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "10505:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "10496:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1374,
																	"nodeType": "ExpressionStatement",
																	"src": "10496:14:4"
																},
																{
																	"expression": {
																		"id": 1377,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1375,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1293,
																			"src": "10528:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1376,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10538:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "10528:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1378,
																	"nodeType": "ExpressionStatement",
																	"src": "10528:11:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1381,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1287,
																"src": "10571:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 1384,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1382,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10580:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1383,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10584:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "10580:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "10571:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1397,
														"nodeType": "IfStatement",
														"src": "10567:96:4",
														"trueBody": {
															"id": 1396,
															"nodeType": "Block",
															"src": "10587:76:4",
															"statements": [
																{
																	"expression": {
																		"id": 1390,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1386,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1287,
																			"src": "10605:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 1389,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1387,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10614:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 1388,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10618:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "10614:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "10605:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1391,
																	"nodeType": "ExpressionStatement",
																	"src": "10605:14:4"
																},
																{
																	"expression": {
																		"id": 1394,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1392,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1293,
																			"src": "10637:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1393,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10647:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "10637:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1395,
																	"nodeType": "ExpressionStatement",
																	"src": "10637:11:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1398,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1287,
																"src": "10680:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 1401,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1399,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10689:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1400,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10693:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10689:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "10680:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1408,
														"nodeType": "IfStatement",
														"src": "10676:64:4",
														"trueBody": {
															"id": 1407,
															"nodeType": "Block",
															"src": "10696:44:4",
															"statements": [
																{
																	"expression": {
																		"id": 1405,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1403,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1293,
																			"src": "10714:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1404,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10724:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "10714:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1406,
																	"nodeType": "ExpressionStatement",
																	"src": "10714:11:4"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1410,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1293,
													"src": "10766:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1291,
												"id": 1411,
												"nodeType": "Return",
												"src": "10759:13:4"
											}
										]
									},
									"documentation": {
										"id": 1285,
										"nodeType": "StructuredDocumentation",
										"src": "9770:114:4",
										"text": " @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1413,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "9898:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1287,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9912:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "9904:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9904:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9903:15:4"
									},
									"returnParameters": {
										"id": 1291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "9942:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9942:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9941:9:4"
									},
									"scope": 1576,
									"src": "9889:890:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1448,
										"nodeType": "Block",
										"src": "11014:165:4",
										"statements": [
											{
												"id": 1447,
												"nodeType": "UncheckedBlock",
												"src": "11024:149:4",
												"statements": [
													{
														"assignments": [
															1425
														],
														"declarations": [
															{
																"constant": false,
																"id": 1425,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11056:6:4",
																"nodeType": "VariableDeclaration",
																"scope": 1447,
																"src": "11048:14:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1424,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11048:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1429,
														"initialValue": {
															"arguments": [
																{
																	"id": 1427,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1416,
																	"src": "11071:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1426,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1413,
																	1449
																],
																"referencedDeclaration": 1413,
																"src": "11065:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1428,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11065:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11048:29:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1445,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1430,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1425,
																"src": "11098:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1440,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$718",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1434,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1431,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1419,
																					"src": "11108:8:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$718",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1432,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 718,
																						"src": "11120:8:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$718_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1433,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "11129:2:4",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 716,
																					"src": "11120:11:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$718",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "11108:23:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1439,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1437,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 1435,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "11135:2:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 1436,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1425,
																						"src": "11139:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11135:10:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1438,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1416,
																					"src": "11148:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11135:18:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "11108:45:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1442,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11160:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1443,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "11108:53:4",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1441,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11156:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1444,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11107:55:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11098:64:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1423,
														"id": 1446,
														"nodeType": "Return",
														"src": "11091:71:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1414,
										"nodeType": "StructuredDocumentation",
										"src": "10785:143:4",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1449,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "10942:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1416,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10956:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1449,
												"src": "10948:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1415,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10948:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1419,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10972:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1449,
												"src": "10963:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$718",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1418,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1417,
														"name": "Rounding",
														"nameLocations": [
															"10963:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 718,
														"src": "10963:8:4"
													},
													"referencedDeclaration": 718,
													"src": "10963:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$718",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10947:34:4"
									},
									"returnParameters": {
										"id": 1423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1449,
												"src": "11005:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1421,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11005:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11004:9:4"
									},
									"scope": 1576,
									"src": "10933:246:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1535,
										"nodeType": "Block",
										"src": "11493:600:4",
										"statements": [
											{
												"assignments": [
													1458
												],
												"declarations": [
													{
														"constant": false,
														"id": 1458,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "11511:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 1535,
														"src": "11503:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1457,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11503:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1460,
												"initialValue": {
													"hexValue": "30",
													"id": 1459,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11520:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11503:18:4"
											},
											{
												"id": 1532,
												"nodeType": "UncheckedBlock",
												"src": "11531:533:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1465,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1463,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1461,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1452,
																	"src": "11559:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1462,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11568:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "11559:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1464,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11574:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11559:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1475,
														"nodeType": "IfStatement",
														"src": "11555:98:4",
														"trueBody": {
															"id": 1474,
															"nodeType": "Block",
															"src": "11577:76:4",
															"statements": [
																{
																	"expression": {
																		"id": 1468,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1466,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1452,
																			"src": "11595:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1467,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11605:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11595:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1469,
																	"nodeType": "ExpressionStatement",
																	"src": "11595:13:4"
																},
																{
																	"expression": {
																		"id": 1472,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1470,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1458,
																			"src": "11626:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1471,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11636:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11626:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1473,
																	"nodeType": "ExpressionStatement",
																	"src": "11626:12:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1480,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1478,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1476,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1452,
																	"src": "11670:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1477,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11679:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "11670:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1479,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11684:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11670:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1490,
														"nodeType": "IfStatement",
														"src": "11666:95:4",
														"trueBody": {
															"id": 1489,
															"nodeType": "Block",
															"src": "11687:74:4",
															"statements": [
																{
																	"expression": {
																		"id": 1483,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1481,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1452,
																			"src": "11705:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1482,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11715:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11705:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1484,
																	"nodeType": "ExpressionStatement",
																	"src": "11705:12:4"
																},
																{
																	"expression": {
																		"id": 1487,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1485,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1458,
																			"src": "11735:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1486,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11745:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11735:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1488,
																	"nodeType": "ExpressionStatement",
																	"src": "11735:11:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1495,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1493,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1491,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1452,
																	"src": "11778:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1492,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11787:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11778:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1494,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11792:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11778:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1505,
														"nodeType": "IfStatement",
														"src": "11774:95:4",
														"trueBody": {
															"id": 1504,
															"nodeType": "Block",
															"src": "11795:74:4",
															"statements": [
																{
																	"expression": {
																		"id": 1498,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1496,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1452,
																			"src": "11813:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1497,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11823:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11813:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1499,
																	"nodeType": "ExpressionStatement",
																	"src": "11813:12:4"
																},
																{
																	"expression": {
																		"id": 1502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1500,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1458,
																			"src": "11843:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1501,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11853:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11843:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1503,
																	"nodeType": "ExpressionStatement",
																	"src": "11843:11:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1510,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1508,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1506,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1452,
																	"src": "11886:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1507,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11895:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11886:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1509,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11900:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11886:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1520,
														"nodeType": "IfStatement",
														"src": "11882:95:4",
														"trueBody": {
															"id": 1519,
															"nodeType": "Block",
															"src": "11903:74:4",
															"statements": [
																{
																	"expression": {
																		"id": 1513,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1511,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1452,
																			"src": "11921:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1512,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11931:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11921:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1514,
																	"nodeType": "ExpressionStatement",
																	"src": "11921:12:4"
																},
																{
																	"expression": {
																		"id": 1517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1515,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1458,
																			"src": "11951:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1516,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11961:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11951:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1518,
																	"nodeType": "ExpressionStatement",
																	"src": "11951:11:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1525,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1523,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1521,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1452,
																	"src": "11994:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1522,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12003:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11994:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1524,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12007:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11994:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1531,
														"nodeType": "IfStatement",
														"src": "11990:64:4",
														"trueBody": {
															"id": 1530,
															"nodeType": "Block",
															"src": "12010:44:4",
															"statements": [
																{
																	"expression": {
																		"id": 1528,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1526,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1458,
																			"src": "12028:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1527,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12038:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "12028:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1529,
																	"nodeType": "ExpressionStatement",
																	"src": "12028:11:4"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1533,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1458,
													"src": "12080:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1456,
												"id": 1534,
												"nodeType": "Return",
												"src": "12073:13:4"
											}
										]
									},
									"documentation": {
										"id": 1450,
										"nodeType": "StructuredDocumentation",
										"src": "11185:240:4",
										"text": " @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 1536,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "11439:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1452,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11454:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1536,
												"src": "11446:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11446:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11445:15:4"
									},
									"returnParameters": {
										"id": 1456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1455,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1536,
												"src": "11484:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11484:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11483:9:4"
									},
									"scope": 1576,
									"src": "11430:663:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1574,
										"nodeType": "Block",
										"src": "12329:173:4",
										"statements": [
											{
												"id": 1573,
												"nodeType": "UncheckedBlock",
												"src": "12339:157:4",
												"statements": [
													{
														"assignments": [
															1548
														],
														"declarations": [
															{
																"constant": false,
																"id": 1548,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "12371:6:4",
																"nodeType": "VariableDeclaration",
																"scope": 1573,
																"src": "12363:14:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1547,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12363:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1552,
														"initialValue": {
															"arguments": [
																{
																	"id": 1550,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1539,
																	"src": "12387:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1549,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1536,
																	1575
																],
																"referencedDeclaration": 1536,
																"src": "12380:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1551,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12380:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12363:30:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1571,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1553,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1548,
																"src": "12414:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1566,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$718",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1557,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1554,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1542,
																					"src": "12424:8:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$718",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1555,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 718,
																						"src": "12436:8:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$718_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1556,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "12445:2:4",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 716,
																					"src": "12436:11:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$718",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "12424:23:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1565,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1563,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1558,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12451:1:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1561,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1559,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1548,
																									"src": "12457:6:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "*",
																								"rightExpression": {
																									"hexValue": "38",
																									"id": 1560,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "12466:1:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_8_by_1",
																										"typeString": "int_const 8"
																									},
																									"value": "8"
																								},
																								"src": "12457:10:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1562,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "12456:12:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12451:17:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1564,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1539,
																					"src": "12471:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12451:25:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12424:52:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1568,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12483:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1569,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12424:60:4",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1567,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12479:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1570,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12423:62:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "12414:71:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1546,
														"id": 1572,
														"nodeType": "Return",
														"src": "12407:78:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1537,
										"nodeType": "StructuredDocumentation",
										"src": "12099:143:4",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "12256:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1539,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12271:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "12263:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12263:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1542,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "12287:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "12278:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$718",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1541,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1540,
														"name": "Rounding",
														"nameLocations": [
															"12278:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 718,
														"src": "12278:8:4"
													},
													"referencedDeclaration": 718,
													"src": "12278:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$718",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12262:34:4"
									},
									"returnParameters": {
										"id": 1546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1545,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "12320:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1544,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12320:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12319:9:4"
									},
									"scope": 1576,
									"src": "12247:255:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1577,
							"src": "202:12302:4",
							"usedErrors": []
						}
					],
					"src": "103:12402:4"
				},
				"id": 4
			},
			"W6/simpleAMM/src/simpleAMMV6.sol": {
				"ast": {
					"absolutePath": "W6/simpleAMM/src/simpleAMMV6.sol",
					"exportedSymbols": {
						"AMM": [
							2548
						],
						"Context": [
							711
						],
						"ERC20": [
							586
						],
						"IERC20": [
							664
						],
						"IERC20Metadata": [
							689
						],
						"Math": [
							1576
						]
					},
					"id": 2549,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1578,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1579,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2549,
							"sourceUnit": 587,
							"src": "467:55:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1580,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2549,
							"sourceUnit": 665,
							"src": "524:56:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "@openzeppelin/contracts/utils/math/Math.sol",
							"id": 1581,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2549,
							"sourceUnit": 1577,
							"src": "582:53:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AMM",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2548,
							"linearizedBaseContracts": [
								2548
							],
							"name": "AMM",
							"nameLocation": "648:3:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1583,
									"mutability": "mutable",
									"name": "developer",
									"nameLocation": "667:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 2548,
									"src": "659:17:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1582,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "659:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 1586,
									"mutability": "immutable",
									"name": "token",
									"nameLocation": "709:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 2548,
									"src": "685:29:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$664",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1585,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1584,
											"name": "IERC20",
											"nameLocations": [
												"685:6:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 664,
											"src": "685:6:5"
										},
										"referencedDeclaration": 664,
										"src": "685:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$664",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "a734f06e",
									"id": 1592,
									"mutability": "constant",
									"name": "ETH_ADDRESS",
									"nameLocation": "745:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 2548,
									"src": "721:48:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1587,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "721:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "30",
												"id": 1590,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "767:1:5",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												},
												"value": "0"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												}
											],
											"id": 1589,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "759:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 1588,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "759:7:5",
												"typeDescriptions": {}
											}
										},
										"id": 1591,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "759:10:5",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "100af203",
									"id": 1594,
									"mutability": "mutable",
									"name": "reserveETH",
									"nameLocation": "793:10:5",
									"nodeType": "VariableDeclaration",
									"scope": 2548,
									"src": "778:25:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1593,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "778:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e764e67c",
									"id": 1596,
									"mutability": "mutable",
									"name": "reserveERC",
									"nameLocation": "832:10:5",
									"nodeType": "VariableDeclaration",
									"scope": 2548,
									"src": "817:25:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1595,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "817:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "18160ddd",
									"id": 1598,
									"mutability": "mutable",
									"name": "totalSupply",
									"nameLocation": "875:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 2548,
									"src": "860:26:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1597,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "860:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "70a08231",
									"id": 1602,
									"mutability": "mutable",
									"name": "balanceOf",
									"nameLocation": "928:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 2548,
									"src": "893:44:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1601,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1599,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "901:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "893:27:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1600,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "912:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1618,
										"nodeType": "Block",
										"src": "974:74:5",
										"statements": [
											{
												"expression": {
													"id": 1610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1607,
														"name": "developer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1583,
														"src": "985:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1608,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "997:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1609,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1001:6:5",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "997:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "985:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1611,
												"nodeType": "ExpressionStatement",
												"src": "985:22:5"
											},
											{
												"expression": {
													"id": 1616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1612,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1586,
														"src": "1018:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$664",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1614,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1604,
																"src": "1033:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1613,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 664,
															"src": "1026:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$664_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1615,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1026:14:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$664",
															"typeString": "contract IERC20"
														}
													},
													"src": "1018:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$664",
														"typeString": "contract IERC20"
													}
												},
												"id": 1617,
												"nodeType": "ExpressionStatement",
												"src": "1018:22:5"
											}
										]
									},
									"id": 1619,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1604,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "966:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1619,
												"src": "958:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1603,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "958:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "957:16:5"
									},
									"returnParameters": {
										"id": 1606,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "974:0:5"
									},
									"scope": 2548,
									"src": "946:102:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1636,
										"nodeType": "Block",
										"src": "1109:77:5",
										"statements": [
											{
												"expression": {
													"id": 1630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1626,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1602,
															"src": "1120:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1628,
														"indexExpression": {
															"id": 1627,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1621,
															"src": "1130:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1120:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1629,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1623,
														"src": "1138:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1120:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1631,
												"nodeType": "ExpressionStatement",
												"src": "1120:25:5"
											},
											{
												"expression": {
													"id": 1634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1632,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1598,
														"src": "1156:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1633,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1623,
														"src": "1171:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1156:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1635,
												"nodeType": "ExpressionStatement",
												"src": "1156:22:5"
											}
										]
									},
									"id": 1637,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "1065:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1621,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "1079:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1637,
												"src": "1071:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1620,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1071:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1623,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1092:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1637,
												"src": "1084:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1622,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1084:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1070:30:5"
									},
									"returnParameters": {
										"id": 1625,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1109:0:5"
									},
									"scope": 2548,
									"src": "1056:130:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1654,
										"nodeType": "Block",
										"src": "1249:79:5",
										"statements": [
											{
												"expression": {
													"id": 1648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1644,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1602,
															"src": "1260:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1646,
														"indexExpression": {
															"id": 1645,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1639,
															"src": "1270:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1260:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1647,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1641,
														"src": "1280:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1260:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1649,
												"nodeType": "ExpressionStatement",
												"src": "1260:27:5"
											},
											{
												"expression": {
													"id": 1652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1650,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1598,
														"src": "1298:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1651,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1641,
														"src": "1313:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1298:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1653,
												"nodeType": "ExpressionStatement",
												"src": "1298:22:5"
											}
										]
									},
									"id": 1655,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "1203:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1639,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "1217:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1655,
												"src": "1209:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1638,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1209:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1641,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1232:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1655,
												"src": "1224:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1640,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1224:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1208:32:5"
									},
									"returnParameters": {
										"id": 1643,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1249:0:5"
									},
									"scope": 2548,
									"src": "1194:134:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1670,
										"nodeType": "Block",
										"src": "1399:74:5",
										"statements": [
											{
												"expression": {
													"id": 1664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1662,
														"name": "reserveETH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1594,
														"src": "1410:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1663,
														"name": "_reserve0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1657,
														"src": "1423:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1410:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1665,
												"nodeType": "ExpressionStatement",
												"src": "1410:22:5"
											},
											{
												"expression": {
													"id": 1668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1666,
														"name": "reserveERC",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1596,
														"src": "1443:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1667,
														"name": "_reserve1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1659,
														"src": "1456:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1443:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1669,
												"nodeType": "ExpressionStatement",
												"src": "1443:22:5"
											}
										]
									},
									"id": 1671,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "1345:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1657,
												"mutability": "mutable",
												"name": "_reserve0",
												"nameLocation": "1361:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1671,
												"src": "1353:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1656,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1353:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1659,
												"mutability": "mutable",
												"name": "_reserve1",
												"nameLocation": "1380:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1671,
												"src": "1372:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1658,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1372:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1352:38:5"
									},
									"returnParameters": {
										"id": 1661,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1399:0:5"
									},
									"scope": 2548,
									"src": "1336:137:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1748,
										"nodeType": "Block",
										"src": "1557:502:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1682,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1679,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1576:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1680,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1580:5:5",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "1576:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1681,
																"name": "_amountIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1673,
																"src": "1589:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1576:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45544820616d6f756e74206d69736d61746368",
															"id": 1683,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1600:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_645e873b9eee12b063db2eb84e35e8b51facdf3f28a2eaef195a9a9f115f5fc7",
																"typeString": "literal_string \"ETH amount mismatch\""
															},
															"value": "ETH amount mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_645e873b9eee12b063db2eb84e35e8b51facdf3f28a2eaef195a9a9f115f5fc7",
																"typeString": "literal_string \"ETH amount mismatch\""
															}
														],
														"id": 1678,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1568:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1568:54:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1685,
												"nodeType": "ExpressionStatement",
												"src": "1568:54:5"
											},
											{
												"assignments": [
													1687
												],
												"declarations": [
													{
														"constant": false,
														"id": 1687,
														"mutability": "mutable",
														"name": "amountInWithFee",
														"nameLocation": "1643:15:5",
														"nodeType": "VariableDeclaration",
														"scope": 1748,
														"src": "1635:23:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1686,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1635:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1694,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1690,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1688,
																	"name": "_amountIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1673,
																	"src": "1662:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "393937",
																	"id": 1689,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1674:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_997_by_1",
																		"typeString": "int_const 997"
																	},
																	"value": "997"
																},
																"src": "1662:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1691,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1661:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31303030",
														"id": 1692,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1681:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000_by_1",
															"typeString": "int_const 1000"
														},
														"value": "1000"
													},
													"src": "1661:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1635:50:5"
											},
											{
												"expression": {
													"id": 1705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1695,
														"name": "amountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1676,
														"src": "1696:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1704,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1698,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1696,
																		"name": "reserveERC",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1596,
																		"src": "1709:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1697,
																		"name": "amountInWithFee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1687,
																		"src": "1722:15:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1709:28:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1699,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1708:30:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1702,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1700,
																		"name": "reserveETH",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1594,
																		"src": "1742:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 1701,
																		"name": "amountInWithFee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1687,
																		"src": "1755:15:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1742:28:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1703,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1741:30:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1708:63:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1696:75:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1706,
												"nodeType": "ExpressionStatement",
												"src": "1696:75:5"
											},
											{
												"assignments": [
													1708
												],
												"declarations": [
													{
														"constant": false,
														"id": 1708,
														"mutability": "mutable",
														"name": "feeToDeveloper",
														"nameLocation": "1790:14:5",
														"nodeType": "VariableDeclaration",
														"scope": 1748,
														"src": "1782:22:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1707,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1782:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1719,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1718,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1713,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1711,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1709,
																"name": "_amountIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1673,
																"src": "1807:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"hexValue": "33",
																"id": 1710,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1819:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3_by_1",
																	"typeString": "int_const 3"
																},
																"value": "3"
															},
															"src": "1807:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 1712,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1598,
															"src": "1821:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1807:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1716,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1714,
																	"name": "reserveETH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1594,
																	"src": "1834:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "32303030",
																	"id": 1715,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1845:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2000_by_1",
																		"typeString": "int_const 2000"
																	},
																	"value": "2000"
																},
																"src": "1834:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1717,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1833:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1807:43:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1782:68:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1721,
															"name": "developer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1583,
															"src": "1867:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1722,
															"name": "feeToDeveloper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1708,
															"src": "1877:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1720,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1637,
														"src": "1861:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1861:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1724,
												"nodeType": "ExpressionStatement",
												"src": "1861:31:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1728,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1954:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1729,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1958:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1954:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1730,
															"name": "amountOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1676,
															"src": "1966:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1725,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1586,
															"src": "1939:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$664",
																"typeString": "contract IERC20"
															}
														},
														"id": 1727,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1945:8:5",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 631,
														"src": "1939:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1939:37:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1732,
												"nodeType": "ExpressionStatement",
												"src": "1939:37:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1736,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2005:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_AMM_$2548",
																			"typeString": "contract AMM"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_AMM_$2548",
																			"typeString": "contract AMM"
																		}
																	],
																	"id": 1735,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1997:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1734,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1997:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 1737,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1997:13:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1738,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2011:7:5",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "1997:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1743,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2044:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AMM_$2548",
																				"typeString": "contract AMM"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AMM_$2548",
																				"typeString": "contract AMM"
																			}
																		],
																		"id": 1742,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2036:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1741,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2036:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1744,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2036:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1739,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1586,
																	"src": "2020:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$664",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1740,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2026:9:5",
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 621,
																"src": "2020:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 1745,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2020:30:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1733,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1671,
														"src": "1989:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1746,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1989:62:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1747,
												"nodeType": "ExpressionStatement",
												"src": "1989:62:5"
											}
										]
									},
									"functionSelector": "94b918de",
									"id": 1749,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nameLocation": "1490:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1673,
												"mutability": "mutable",
												"name": "_amountIn",
												"nameLocation": "1503:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1749,
												"src": "1495:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1672,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1495:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1494:19:5"
									},
									"returnParameters": {
										"id": 1677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1676,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1546:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1749,
												"src": "1538:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1538:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1537:19:5"
									},
									"scope": 2548,
									"src": "1481:578:5",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1838,
										"nodeType": "Block",
										"src": "2144:569:5",
										"statements": [
											{
												"assignments": [
													1757
												],
												"declarations": [
													{
														"constant": false,
														"id": 1757,
														"mutability": "mutable",
														"name": "amountInWithFee",
														"nameLocation": "2163:15:5",
														"nodeType": "VariableDeclaration",
														"scope": 1838,
														"src": "2155:23:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1756,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2155:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1764,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1760,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1758,
																	"name": "_amountIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1751,
																	"src": "2182:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "393937",
																	"id": 1759,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2194:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_997_by_1",
																		"typeString": "int_const 997"
																	},
																	"value": "997"
																},
																"src": "2182:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1761,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2181:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31303030",
														"id": 1762,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2201:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000_by_1",
															"typeString": "int_const 1000"
														},
														"value": "1000"
													},
													"src": "2181:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2155:50:5"
											},
											{
												"expression": {
													"id": 1775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1765,
														"name": "amountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1754,
														"src": "2218:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1774,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1768,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1766,
																		"name": "reserveETH",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1594,
																		"src": "2231:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1767,
																		"name": "amountInWithFee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1757,
																		"src": "2244:15:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2231:28:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1769,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2230:30:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1772,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1770,
																		"name": "reserveERC",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1596,
																		"src": "2264:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 1771,
																		"name": "amountInWithFee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1757,
																		"src": "2277:15:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2264:28:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1773,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2263:30:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2230:63:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2218:75:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1776,
												"nodeType": "ExpressionStatement",
												"src": "2218:75:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1780,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1778,
																"name": "amountOut",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1754,
																"src": "2312:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1779,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2324:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2312:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e74206f757470757420616d6f756e74",
															"id": 1781,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2327:28:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90",
																"typeString": "literal_string \"Insufficient output amount\""
															},
															"value": "Insufficient output amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90",
																"typeString": "literal_string \"Insufficient output amount\""
															}
														],
														"id": 1777,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2304:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2304:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1783,
												"nodeType": "ExpressionStatement",
												"src": "2304:52:5"
											},
											{
												"assignments": [
													1785
												],
												"declarations": [
													{
														"constant": false,
														"id": 1785,
														"mutability": "mutable",
														"name": "feeToDeveloper",
														"nameLocation": "2375:14:5",
														"nodeType": "VariableDeclaration",
														"scope": 1838,
														"src": "2367:22:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1784,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2367:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1796,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1790,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1788,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1786,
																"name": "_amountIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1751,
																"src": "2392:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"hexValue": "33",
																"id": 1787,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2404:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3_by_1",
																	"typeString": "int_const 3"
																},
																"value": "3"
															},
															"src": "2392:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 1789,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1598,
															"src": "2406:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2392:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1793,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1791,
																	"name": "reserveERC",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1596,
																	"src": "2419:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "32303030",
																	"id": 1792,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2430:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2000_by_1",
																		"typeString": "int_const 2000"
																	},
																	"value": "2000"
																},
																"src": "2419:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1794,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2418:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2392:43:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2367:68:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1798,
															"name": "developer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1583,
															"src": "2452:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1799,
															"name": "feeToDeveloper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1785,
															"src": "2462:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1797,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1637,
														"src": "2446:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2446:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1801,
												"nodeType": "ExpressionStatement",
												"src": "2446:31:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1805,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2543:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1806,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2547:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2543:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1809,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2563:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_AMM_$2548",
																		"typeString": "contract AMM"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_AMM_$2548",
																		"typeString": "contract AMM"
																	}
																],
																"id": 1808,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2555:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1807,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2555:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1810,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2555:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1811,
															"name": "_amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1751,
															"src": "2570:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1802,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1586,
															"src": "2524:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$664",
																"typeString": "contract IERC20"
															}
														},
														"id": 1804,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2530:12:5",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 663,
														"src": "2524:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2524:56:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1813,
												"nodeType": "ExpressionStatement",
												"src": "2524:56:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1820,
															"name": "amountOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1754,
															"src": "2620:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1816,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2599:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1817,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2603:6:5",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2599:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1815,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2591:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1814,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2591:8:5",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 1818,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2591:19:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1819,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2611:8:5",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "2591:28:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2591:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1822,
												"nodeType": "ExpressionStatement",
												"src": "2591:39:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1826,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2659:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_AMM_$2548",
																			"typeString": "contract AMM"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_AMM_$2548",
																			"typeString": "contract AMM"
																		}
																	],
																	"id": 1825,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2651:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1824,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2651:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 1827,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2651:13:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1828,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2665:7:5",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "2651:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1833,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2698:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AMM_$2548",
																				"typeString": "contract AMM"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AMM_$2548",
																				"typeString": "contract AMM"
																			}
																		],
																		"id": 1832,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2690:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1831,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2690:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1834,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2690:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1829,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1586,
																	"src": "2674:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$664",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1830,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2680:9:5",
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 621,
																"src": "2674:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 1835,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2674:30:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1823,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1671,
														"src": "2643:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2643:62:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1837,
												"nodeType": "ExpressionStatement",
												"src": "2643:62:5"
											}
										]
									},
									"functionSelector": "6fb84b74",
									"id": 1839,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokenForETH",
									"nameLocation": "2074:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1751,
												"mutability": "mutable",
												"name": "_amountIn",
												"nameLocation": "2098:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1839,
												"src": "2090:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1750,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2090:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2089:19:5"
									},
									"returnParameters": {
										"id": 1755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1754,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2133:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1839,
												"src": "2125:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1753,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2125:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2124:19:5"
									},
									"scope": 2548,
									"src": "2065:648:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1942,
										"nodeType": "Block",
										"src": "2854:648:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1854,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1851,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2873:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1852,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2877:5:5",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "2873:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1853,
																"name": "_amountIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1841,
																"src": "2886:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2873:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45544820616d6f756e74206d69736d61746368",
															"id": 1855,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2897:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_645e873b9eee12b063db2eb84e35e8b51facdf3f28a2eaef195a9a9f115f5fc7",
																"typeString": "literal_string \"ETH amount mismatch\""
															},
															"value": "ETH amount mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_645e873b9eee12b063db2eb84e35e8b51facdf3f28a2eaef195a9a9f115f5fc7",
																"typeString": "literal_string \"ETH amount mismatch\""
															}
														],
														"id": 1850,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2865:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2865:54:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1857,
												"nodeType": "ExpressionStatement",
												"src": "2865:54:5"
											},
											{
												"assignments": [
													1859
												],
												"declarations": [
													{
														"constant": false,
														"id": 1859,
														"mutability": "mutable",
														"name": "amountInWithFee",
														"nameLocation": "2940:15:5",
														"nodeType": "VariableDeclaration",
														"scope": 1942,
														"src": "2932:23:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1858,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2932:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1866,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1862,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1860,
																	"name": "_amountIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1841,
																	"src": "2959:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "393937",
																	"id": 1861,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2971:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_997_by_1",
																		"typeString": "int_const 997"
																	},
																	"value": "997"
																},
																"src": "2959:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1863,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2958:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31303030",
														"id": 1864,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2978:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000_by_1",
															"typeString": "int_const 1000"
														},
														"value": "1000"
													},
													"src": "2958:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2932:50:5"
											},
											{
												"expression": {
													"id": 1877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1867,
														"name": "amountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1848,
														"src": "2993:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1876,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1870,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1868,
																		"name": "reserveERC",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1596,
																		"src": "3006:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1869,
																		"name": "amountInWithFee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1859,
																		"src": "3019:15:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3006:28:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1871,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3005:30:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1874,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1872,
																		"name": "reserveETH",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1594,
																		"src": "3039:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 1873,
																		"name": "amountInWithFee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1859,
																		"src": "3052:15:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3039:28:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1875,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3038:30:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3005:63:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2993:75:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1878,
												"nodeType": "ExpressionStatement",
												"src": "2993:75:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1882,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1880,
																"name": "amountOut",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1848,
																"src": "3087:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1881,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3099:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3087:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e74206f757470757420616d6f756e74",
															"id": 1883,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3102:28:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90",
																"typeString": "literal_string \"Insufficient output amount\""
															},
															"value": "Insufficient output amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90",
																"typeString": "literal_string \"Insufficient output amount\""
															}
														],
														"id": 1879,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3079:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3079:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1885,
												"nodeType": "ExpressionStatement",
												"src": "3079:52:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1897,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1887,
																"name": "amountOut",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1848,
																"src": "3150:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1895,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1893,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1888,
																				"name": "_forwardOutput",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1843,
																				"src": "3164:14:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1891,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31303030",
																							"id": 1889,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3180:4:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1000_by_1",
																								"typeString": "int_const 1000"
																							},
																							"value": "1000"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"id": 1890,
																							"name": "_slipLock",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1845,
																							"src": "3185:9:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "3180:14:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1892,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3179:16:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3164:31:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"hexValue": "31303030",
																			"id": 1894,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3196:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			},
																			"value": "1000"
																		},
																		"src": "3164:36:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1896,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3163:38:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3150:51:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536c69704c6f636b",
															"id": 1898,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3203:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_146985345a2b79e4aa6c7e4844006bcfe53a437d612514d7098dbcbad9d449dc",
																"typeString": "literal_string \"SlipLock\""
															},
															"value": "SlipLock"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_146985345a2b79e4aa6c7e4844006bcfe53a437d612514d7098dbcbad9d449dc",
																"typeString": "literal_string \"SlipLock\""
															}
														],
														"id": 1886,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3142:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3142:72:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1900,
												"nodeType": "ExpressionStatement",
												"src": "3142:72:5"
											},
											{
												"assignments": [
													1902
												],
												"declarations": [
													{
														"constant": false,
														"id": 1902,
														"mutability": "mutable",
														"name": "feeToDeveloper",
														"nameLocation": "3233:14:5",
														"nodeType": "VariableDeclaration",
														"scope": 1942,
														"src": "3225:22:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1901,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3225:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1913,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1907,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1905,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1903,
																"name": "_amountIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1841,
																"src": "3250:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"hexValue": "33",
																"id": 1904,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3262:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3_by_1",
																	"typeString": "int_const 3"
																},
																"value": "3"
															},
															"src": "3250:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 1906,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1598,
															"src": "3264:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3250:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1910,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1908,
																	"name": "reserveETH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1594,
																	"src": "3277:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "32303030",
																	"id": 1909,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3288:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2000_by_1",
																		"typeString": "int_const 2000"
																	},
																	"value": "2000"
																},
																"src": "3277:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1911,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3276:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3250:43:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3225:68:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1915,
															"name": "developer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1583,
															"src": "3310:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1916,
															"name": "feeToDeveloper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1902,
															"src": "3320:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1914,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1637,
														"src": "3304:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3304:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1918,
												"nodeType": "ExpressionStatement",
												"src": "3304:31:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1922,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3397:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1923,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3401:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3397:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1924,
															"name": "amountOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1848,
															"src": "3409:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1919,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1586,
															"src": "3382:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$664",
																"typeString": "contract IERC20"
															}
														},
														"id": 1921,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3388:8:5",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 631,
														"src": "3382:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3382:37:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1926,
												"nodeType": "ExpressionStatement",
												"src": "3382:37:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1930,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "3448:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_AMM_$2548",
																			"typeString": "contract AMM"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_AMM_$2548",
																			"typeString": "contract AMM"
																		}
																	],
																	"id": 1929,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3440:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1928,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3440:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 1931,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3440:13:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1932,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3454:7:5",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "3440:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1937,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3487:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AMM_$2548",
																				"typeString": "contract AMM"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AMM_$2548",
																				"typeString": "contract AMM"
																			}
																		],
																		"id": 1936,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3479:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1935,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3479:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1938,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3479:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1933,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1586,
																	"src": "3463:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$664",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1934,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3469:9:5",
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 621,
																"src": "3463:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 1939,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3463:30:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1927,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1671,
														"src": "3432:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3432:62:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1941,
												"nodeType": "ExpressionStatement",
												"src": "3432:62:5"
											}
										]
									},
									"functionSelector": "62279b65",
									"id": 1943,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swap_WithSlipLock",
									"nameLocation": "2728:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1841,
												"mutability": "mutable",
												"name": "_amountIn",
												"nameLocation": "2754:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1943,
												"src": "2746:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1840,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2746:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1843,
												"mutability": "mutable",
												"name": "_forwardOutput",
												"nameLocation": "2772:14:5",
												"nodeType": "VariableDeclaration",
												"scope": 1943,
												"src": "2764:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1842,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2764:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1845,
												"mutability": "mutable",
												"name": "_slipLock",
												"nameLocation": "2795:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1943,
												"src": "2787:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1844,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2787:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2745:60:5"
									},
									"returnParameters": {
										"id": 1849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1848,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2838:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1943,
												"src": "2830:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1847,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2830:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2829:19:5"
									},
									"scope": 2548,
									"src": "2719:783:5",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2051,
										"nodeType": "Block",
										"src": "3641:652:5",
										"statements": [
											{
												"assignments": [
													1955
												],
												"declarations": [
													{
														"constant": false,
														"id": 1955,
														"mutability": "mutable",
														"name": "amountInWithFee",
														"nameLocation": "3660:15:5",
														"nodeType": "VariableDeclaration",
														"scope": 2051,
														"src": "3652:23:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1954,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3652:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1962,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1961,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1958,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1956,
																	"name": "_amountIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1945,
																	"src": "3679:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "393937",
																	"id": 1957,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3691:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_997_by_1",
																		"typeString": "int_const 997"
																	},
																	"value": "997"
																},
																"src": "3679:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1959,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3678:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31303030",
														"id": 1960,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3698:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000_by_1",
															"typeString": "int_const 1000"
														},
														"value": "1000"
													},
													"src": "3678:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3652:50:5"
											},
											{
												"expression": {
													"id": 1973,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1963,
														"name": "amountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1952,
														"src": "3715:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1972,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1966,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1964,
																		"name": "reserveETH",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1594,
																		"src": "3728:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1965,
																		"name": "amountInWithFee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1955,
																		"src": "3741:15:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3728:28:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1967,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3727:30:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1970,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1968,
																		"name": "reserveERC",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1596,
																		"src": "3761:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 1969,
																		"name": "amountInWithFee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1955,
																		"src": "3774:15:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3761:28:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1971,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3760:30:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3727:63:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3715:75:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1974,
												"nodeType": "ExpressionStatement",
												"src": "3715:75:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1978,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1976,
																"name": "amountOut",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1952,
																"src": "3809:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1977,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3821:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3809:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e74206f757470757420616d6f756e74",
															"id": 1979,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3824:28:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90",
																"typeString": "literal_string \"Insufficient output amount\""
															},
															"value": "Insufficient output amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90",
																"typeString": "literal_string \"Insufficient output amount\""
															}
														],
														"id": 1975,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3801:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3801:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1981,
												"nodeType": "ExpressionStatement",
												"src": "3801:52:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1993,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1983,
																"name": "amountOut",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1952,
																"src": "3872:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1991,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1989,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1984,
																				"name": "_forwardOutput",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1947,
																				"src": "3886:14:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1987,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31303030",
																							"id": 1985,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3902:4:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1000_by_1",
																								"typeString": "int_const 1000"
																							},
																							"value": "1000"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"id": 1986,
																							"name": "_slipLock",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1949,
																							"src": "3907:9:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "3902:14:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1988,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3901:16:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3886:31:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"hexValue": "31303030",
																			"id": 1990,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3918:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			},
																			"value": "1000"
																		},
																		"src": "3886:36:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1992,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3885:38:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3872:51:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536c69704c6f636b",
															"id": 1994,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3925:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_146985345a2b79e4aa6c7e4844006bcfe53a437d612514d7098dbcbad9d449dc",
																"typeString": "literal_string \"SlipLock\""
															},
															"value": "SlipLock"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_146985345a2b79e4aa6c7e4844006bcfe53a437d612514d7098dbcbad9d449dc",
																"typeString": "literal_string \"SlipLock\""
															}
														],
														"id": 1982,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3864:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1995,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3864:72:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1996,
												"nodeType": "ExpressionStatement",
												"src": "3864:72:5"
											},
											{
												"assignments": [
													1998
												],
												"declarations": [
													{
														"constant": false,
														"id": 1998,
														"mutability": "mutable",
														"name": "feeToDeveloper",
														"nameLocation": "3955:14:5",
														"nodeType": "VariableDeclaration",
														"scope": 2051,
														"src": "3947:22:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1997,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3947:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2009,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2003,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2001,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1999,
																"name": "_amountIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1945,
																"src": "3972:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"hexValue": "33",
																"id": 2000,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3984:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3_by_1",
																	"typeString": "int_const 3"
																},
																"value": "3"
															},
															"src": "3972:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 2002,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1598,
															"src": "3986:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3972:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2006,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2004,
																	"name": "reserveERC",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1596,
																	"src": "3999:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "32303030",
																	"id": 2005,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4010:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2000_by_1",
																		"typeString": "int_const 2000"
																	},
																	"value": "2000"
																},
																"src": "3999:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2007,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3998:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3972:43:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3947:68:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2011,
															"name": "developer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1583,
															"src": "4032:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2012,
															"name": "feeToDeveloper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1998,
															"src": "4042:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2010,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1637,
														"src": "4026:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2013,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4026:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2014,
												"nodeType": "ExpressionStatement",
												"src": "4026:31:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2018,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4123:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2019,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4127:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4123:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2022,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4143:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_AMM_$2548",
																		"typeString": "contract AMM"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_AMM_$2548",
																		"typeString": "contract AMM"
																	}
																],
																"id": 2021,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4135:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2020,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4135:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 2023,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4135:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2024,
															"name": "_amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1945,
															"src": "4150:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2015,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1586,
															"src": "4104:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$664",
																"typeString": "contract IERC20"
															}
														},
														"id": 2017,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4110:12:5",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 663,
														"src": "4104:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 2025,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4104:56:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2026,
												"nodeType": "ExpressionStatement",
												"src": "4104:56:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2033,
															"name": "amountOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1952,
															"src": "4200:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 2029,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4179:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2030,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4183:6:5",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "4179:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2028,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4171:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 2027,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4171:8:5",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 2031,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4171:19:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 2032,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4191:8:5",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "4171:28:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4171:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2035,
												"nodeType": "ExpressionStatement",
												"src": "4171:39:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2039,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "4239:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_AMM_$2548",
																			"typeString": "contract AMM"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_AMM_$2548",
																			"typeString": "contract AMM"
																		}
																	],
																	"id": 2038,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4231:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2037,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4231:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 2040,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4231:13:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2041,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4245:7:5",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "4231:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2046,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4278:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AMM_$2548",
																				"typeString": "contract AMM"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AMM_$2548",
																				"typeString": "contract AMM"
																			}
																		],
																		"id": 2045,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4270:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2044,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4270:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2047,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4270:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 2042,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1586,
																	"src": "4254:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$664",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 2043,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4260:9:5",
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 621,
																"src": "4254:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 2048,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4254:30:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2036,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1671,
														"src": "4223:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 2049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4223:62:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2050,
												"nodeType": "ExpressionStatement",
												"src": "4223:62:5"
											}
										]
									},
									"functionSelector": "dc2d845b",
									"id": 2052,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokenForETH_WithSlipLock",
									"nameLocation": "3517:28:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1945,
												"mutability": "mutable",
												"name": "_amountIn",
												"nameLocation": "3554:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 2052,
												"src": "3546:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1944,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3546:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1947,
												"mutability": "mutable",
												"name": "_forwardOutput",
												"nameLocation": "3572:14:5",
												"nodeType": "VariableDeclaration",
												"scope": 2052,
												"src": "3564:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1946,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3564:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1949,
												"mutability": "mutable",
												"name": "_slipLock",
												"nameLocation": "3595:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 2052,
												"src": "3587:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1948,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3587:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3545:60:5"
									},
									"returnParameters": {
										"id": 1953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1952,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3630:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 2052,
												"src": "3622:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1951,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3622:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3621:19:5"
									},
									"scope": 2548,
									"src": "3508:785:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2156,
										"nodeType": "Block",
										"src": "4381:695:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2062,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4411:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2063,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4415:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4411:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2066,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4431:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_AMM_$2548",
																		"typeString": "contract AMM"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_AMM_$2548",
																		"typeString": "contract AMM"
																	}
																],
																"id": 2065,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4423:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2064,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4423:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 2067,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4423:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2068,
															"name": "_amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2054,
															"src": "4438:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2059,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1586,
															"src": "4392:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$664",
																"typeString": "contract IERC20"
															}
														},
														"id": 2061,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4398:12:5",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 663,
														"src": "4392:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 2069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4392:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2070,
												"nodeType": "ExpressionStatement",
												"src": "4392:55:5"
											},
											{
												"assignments": [
													2072
												],
												"declarations": [
													{
														"constant": false,
														"id": 2072,
														"mutability": "mutable",
														"name": "_amount0",
														"nameLocation": "4468:8:5",
														"nodeType": "VariableDeclaration",
														"scope": 2156,
														"src": "4460:16:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2071,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4460:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2075,
												"initialValue": {
													"expression": {
														"id": 2073,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4479:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4483:5:5",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"src": "4479:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4460:28:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2078,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2076,
															"name": "reserveETH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1594,
															"src": "4505:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2077,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4518:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4505:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2081,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2079,
															"name": "reserveERC",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1596,
															"src": "4523:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2080,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4536:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4523:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4505:32:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2095,
												"nodeType": "IfStatement",
												"src": "4501:140:5",
												"trueBody": {
													"id": 2094,
													"nodeType": "Block",
													"src": "4539:102:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2090,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2086,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2084,
																				"name": "reserveETH",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1594,
																				"src": "4562:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 2085,
																				"name": "_amount1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2054,
																				"src": "4575:8:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4562:21:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2089,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2087,
																				"name": "reserveERC",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1596,
																				"src": "4587:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 2088,
																				"name": "_amount0",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2072,
																				"src": "4600:8:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4587:21:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4562:46:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "78202f207920213d206478202f206479",
																		"id": 2091,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4610:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_566f651deaeea8c25a941d91fbb0f5e9c3369b38f11c210c3771f472a2325999",
																			"typeString": "literal_string \"x / y != dx / dy\""
																		},
																		"value": "x / y != dx / dy"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_566f651deaeea8c25a941d91fbb0f5e9c3369b38f11c210c3771f472a2325999",
																			"typeString": "literal_string \"x / y != dx / dy\""
																		}
																	],
																	"id": 2083,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4554:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2092,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4554:75:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2093,
															"nodeType": "ExpressionStatement",
															"src": "4554:75:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2098,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2096,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1598,
														"src": "4657:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2097,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4672:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4657:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2126,
													"nodeType": "Block",
													"src": "4743:171:5",
													"statements": [
														{
															"expression": {
																"id": 2124,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2108,
																	"name": "shares",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2057,
																	"src": "4758:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2116,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 2113,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 2111,
																							"name": "_amount0",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2072,
																							"src": "4795:8:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"id": 2112,
																							"name": "totalSupply",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1598,
																							"src": "4806:11:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "4795:22:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 2114,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4794:24:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 2115,
																				"name": "reserveETH",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1594,
																				"src": "4821:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4794:37:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2122,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 2119,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 2117,
																							"name": "_amount1",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2054,
																							"src": "4851:8:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"id": 2118,
																							"name": "totalSupply",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1598,
																							"src": "4862:11:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "4851:22:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 2120,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4850:24:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 2121,
																				"name": "reserveERC",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1596,
																				"src": "4877:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4850:37:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 2109,
																			"name": "Math",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1576,
																			"src": "4767:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Math_$1576_$",
																				"typeString": "type(library Math)"
																			}
																		},
																		"id": 2110,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4772:3:5",
																		"memberName": "min",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 754,
																		"src": "4767:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2123,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4767:135:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4758:144:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2125,
															"nodeType": "ExpressionStatement",
															"src": "4758:144:5"
														}
													]
												},
												"id": 2127,
												"nodeType": "IfStatement",
												"src": "4653:261:5",
												"trueBody": {
													"id": 2107,
													"nodeType": "Block",
													"src": "4675:62:5",
													"statements": [
														{
															"expression": {
																"id": 2105,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2099,
																	"name": "shares",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2057,
																	"src": "4690:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2103,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2101,
																				"name": "_amount0",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2072,
																				"src": "4705:8:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 2102,
																				"name": "_amount1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2054,
																				"src": "4716:8:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4705:19:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2100,
																		"name": "_sqrt",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2383,
																		"src": "4699:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2104,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4699:26:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4690:35:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2106,
															"nodeType": "ExpressionStatement",
															"src": "4690:35:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2129,
																"name": "shares",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2057,
																"src": "4932:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2130,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4941:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4932:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "736861726573203d2030",
															"id": 2132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4944:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4e208da9c6252e844e3faafb4bce1ac6103358d48cc8ab07bbca5bb9ee4b2f37",
																"typeString": "literal_string \"shares = 0\""
															},
															"value": "shares = 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4e208da9c6252e844e3faafb4bce1ac6103358d48cc8ab07bbca5bb9ee4b2f37",
																"typeString": "literal_string \"shares = 0\""
															}
														],
														"id": 2128,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4924:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4924:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2134,
												"nodeType": "ExpressionStatement",
												"src": "4924:33:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2136,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4974:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4978:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4974:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2138,
															"name": "shares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2057,
															"src": "4986:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2135,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1637,
														"src": "4968:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4968:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2140,
												"nodeType": "ExpressionStatement",
												"src": "4968:25:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2144,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "5022:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_AMM_$2548",
																			"typeString": "contract AMM"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_AMM_$2548",
																			"typeString": "contract AMM"
																		}
																	],
																	"id": 2143,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5014:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2142,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5014:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 2145,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5014:13:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5028:7:5",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "5014:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2151,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5061:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AMM_$2548",
																				"typeString": "contract AMM"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AMM_$2548",
																				"typeString": "contract AMM"
																			}
																		],
																		"id": 2150,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5053:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2149,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5053:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5053:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 2147,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1586,
																	"src": "5037:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$664",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 2148,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5043:9:5",
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 621,
																"src": "5037:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 2153,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5037:30:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2141,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1671,
														"src": "5006:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 2154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5006:62:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2155,
												"nodeType": "ExpressionStatement",
												"src": "5006:62:5"
											}
										]
									},
									"functionSelector": "51c6590a",
									"id": 2157,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidity",
									"nameLocation": "4308:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2054,
												"mutability": "mutable",
												"name": "_amount1",
												"nameLocation": "4329:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 2157,
												"src": "4321:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2053,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4321:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4320:18:5"
									},
									"returnParameters": {
										"id": 2058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2057,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "4373:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 2157,
												"src": "4365:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2056,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4365:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4364:16:5"
									},
									"scope": 2548,
									"src": "4299:777:5",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2173,
										"nodeType": "Block",
										"src": "5183:66:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2167,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2159,
															"src": "5218:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"baseExpression": {
																"id": 2168,
																"name": "balanceOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1602,
																"src": "5224:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 2170,
															"indexExpression": {
																"id": 2169,
																"name": "_user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2159,
																"src": "5234:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5224:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2166,
														"name": "_removeLiquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2306,
														"src": "5201:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function (address,uint256) returns (uint256,uint256)"
														}
													},
													"id": 2171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5201:40:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 2165,
												"id": 2172,
												"nodeType": "Return",
												"src": "5194:47:5"
											}
										]
									},
									"functionSelector": "7a6a5e1b",
									"id": 2174,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "removeAllLiquidity",
									"nameLocation": "5093:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2159,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "5120:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2174,
												"src": "5112:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5112:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5111:15:5"
									},
									"returnParameters": {
										"id": 2165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2162,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "5153:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 2174,
												"src": "5145:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2161,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5145:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2164,
												"mutability": "mutable",
												"name": "amountERC",
												"nameLocation": "5172:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 2174,
												"src": "5164:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5164:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5144:38:5"
									},
									"scope": 2548,
									"src": "5084:165:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2199,
										"nodeType": "Block",
										"src": "5353:139:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2189,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2184,
																"name": "_shares",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2176,
																"src": "5372:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"baseExpression": {
																	"id": 2185,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1602,
																	"src": "5383:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2188,
																"indexExpression": {
																	"expression": {
																		"id": 2186,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "5393:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2187,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5397:6:5",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "5393:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5383:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5372:32:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365",
															"id": 2190,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5406:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															},
															"value": "Insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															}
														],
														"id": 2183,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5364:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5364:65:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2192,
												"nodeType": "ExpressionStatement",
												"src": "5364:65:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2194,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5464:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2195,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5468:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5464:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2196,
															"name": "_shares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2176,
															"src": "5476:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2193,
														"name": "_removeLiquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2306,
														"src": "5447:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function (address,uint256) returns (uint256,uint256)"
														}
													},
													"id": 2197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5447:37:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 2182,
												"id": 2198,
												"nodeType": "Return",
												"src": "5440:44:5"
											}
										]
									},
									"functionSelector": "9c8f9f23",
									"id": 2200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidity",
									"nameLocation": "5264:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2176,
												"mutability": "mutable",
												"name": "_shares",
												"nameLocation": "5288:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 2200,
												"src": "5280:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5280:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5279:17:5"
									},
									"returnParameters": {
										"id": 2182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2179,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "5323:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 2200,
												"src": "5315:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5315:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2181,
												"mutability": "mutable",
												"name": "amountERC",
												"nameLocation": "5342:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 2200,
												"src": "5334:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2180,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5334:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5314:38:5"
									},
									"scope": 2548,
									"src": "5255:237:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2225,
										"nodeType": "Block",
										"src": "5613:129:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2216,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2212,
																"name": "_shares",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2204,
																"src": "5632:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"baseExpression": {
																	"id": 2213,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1602,
																	"src": "5643:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2215,
																"indexExpression": {
																	"id": 2214,
																	"name": "_user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2202,
																	"src": "5653:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5643:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5632:27:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365",
															"id": 2217,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5661:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															},
															"value": "Insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															}
														],
														"id": 2211,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5624:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5624:60:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2219,
												"nodeType": "ExpressionStatement",
												"src": "5624:60:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2221,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2202,
															"src": "5719:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2222,
															"name": "_shares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2204,
															"src": "5726:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2220,
														"name": "_removeLiquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2306,
														"src": "5702:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function (address,uint256) returns (uint256,uint256)"
														}
													},
													"id": 2223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5702:32:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 2210,
												"id": 2224,
												"nodeType": "Return",
												"src": "5695:39:5"
											}
										]
									},
									"functionSelector": "a201ccf6",
									"id": 2226,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidity",
									"nameLocation": "5509:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2202,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "5533:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2226,
												"src": "5525:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5525:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2204,
												"mutability": "mutable",
												"name": "_shares",
												"nameLocation": "5548:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 2226,
												"src": "5540:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5540:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5524:32:5"
									},
									"returnParameters": {
										"id": 2210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2207,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "5583:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 2226,
												"src": "5575:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5575:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2209,
												"mutability": "mutable",
												"name": "amountERC",
												"nameLocation": "5602:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 2226,
												"src": "5594:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5594:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5574:38:5"
									},
									"scope": 2548,
									"src": "5500:242:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2305,
										"nodeType": "Block",
										"src": "5862:427:5",
										"statements": [
											{
												"expression": {
													"id": 2244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2237,
														"name": "amountETH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2233,
														"src": "5873:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2243,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2240,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2238,
																		"name": "_shares",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2230,
																		"src": "5886:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2239,
																		"name": "reserveETH",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1594,
																		"src": "5896:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5886:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2241,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5885:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 2242,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1598,
															"src": "5910:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5885:36:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5873:48:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2245,
												"nodeType": "ExpressionStatement",
												"src": "5873:48:5"
											},
											{
												"expression": {
													"id": 2253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2246,
														"name": "amountERC",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2235,
														"src": "5932:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2252,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2249,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2247,
																		"name": "_shares",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2230,
																		"src": "5945:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2248,
																		"name": "reserveERC",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1596,
																		"src": "5955:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5945:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2250,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5944:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 2251,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1598,
															"src": "5969:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5944:36:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5932:48:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2254,
												"nodeType": "ExpressionStatement",
												"src": "5932:48:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2262,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2258,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2256,
																	"name": "amountETH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2233,
																	"src": "5999:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2257,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6011:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5999:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2261,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2259,
																	"name": "amountERC",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2235,
																	"src": "6016:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2260,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6028:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6016:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "5999:30:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "616d6f756e74455448206f7220616d6f756e74455243203d2030",
															"id": 2263,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6031:28:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9c894b8dcc00872f571c4039113c5e02c9533569797042897c1f8e6dc7fb1350",
																"typeString": "literal_string \"amountETH or amountERC = 0\""
															},
															"value": "amountETH or amountERC = 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9c894b8dcc00872f571c4039113c5e02c9533569797042897c1f8e6dc7fb1350",
																"typeString": "literal_string \"amountETH or amountERC = 0\""
															}
														],
														"id": 2255,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5991:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5991:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2265,
												"nodeType": "ExpressionStatement",
												"src": "5991:69:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2267,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2228,
															"src": "6079:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2268,
															"name": "_shares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2230,
															"src": "6086:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2266,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1655,
														"src": "6073:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6073:21:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2270,
												"nodeType": "ExpressionStatement",
												"src": "6073:21:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2278,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 2274,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "6121:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AMM_$2548",
																				"typeString": "contract AMM"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AMM_$2548",
																				"typeString": "contract AMM"
																			}
																		],
																		"id": 2273,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6113:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2272,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "6113:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6113:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 2276,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6127:7:5",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "6113:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 2277,
																"name": "amountETH",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2233,
																"src": "6137:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6113:33:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2287,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 2283,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "6172:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_AMM_$2548",
																					"typeString": "contract AMM"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_AMM_$2548",
																					"typeString": "contract AMM"
																				}
																			],
																			"id": 2282,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6164:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2281,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6164:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2284,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6164:13:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 2279,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1586,
																		"src": "6148:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$664",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 2280,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6154:9:5",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 621,
																	"src": "6148:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 2285,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6148:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 2286,
																"name": "amountERC",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2235,
																"src": "6181:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6148:42:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2271,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1671,
														"src": "6105:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 2288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6105:86:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2289,
												"nodeType": "ExpressionStatement",
												"src": "6105:86:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2295,
															"name": "amountETH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2233,
															"src": "6228:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2292,
																	"name": "_user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2228,
																	"src": "6212:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2291,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6204:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 2290,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6204:8:5",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 2293,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6204:14:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 2294,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6219:8:5",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "6204:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6204:34:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2297,
												"nodeType": "ExpressionStatement",
												"src": "6204:34:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2301,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2228,
															"src": "6264:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2302,
															"name": "amountERC",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2235,
															"src": "6271:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2298,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1586,
															"src": "6249:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$664",
																"typeString": "contract IERC20"
															}
														},
														"id": 2300,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6255:8:5",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 631,
														"src": "6249:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 2303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6249:32:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2304,
												"nodeType": "ExpressionStatement",
												"src": "6249:32:5"
											}
										]
									},
									"id": 2306,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_removeLiquidity",
									"nameLocation": "5757:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2228,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "5782:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2306,
												"src": "5774:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5774:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2230,
												"mutability": "mutable",
												"name": "_shares",
												"nameLocation": "5797:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 2306,
												"src": "5789:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5789:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5773:32:5"
									},
									"returnParameters": {
										"id": 2236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2233,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "5832:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 2306,
												"src": "5824:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5824:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2235,
												"mutability": "mutable",
												"name": "amountERC",
												"nameLocation": "5851:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 2306,
												"src": "5843:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5843:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5823:38:5"
									},
									"scope": 2548,
									"src": "5748:541:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2316,
										"nodeType": "Block",
										"src": "6343:47:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 2311,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1602,
														"src": "6361:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 2314,
													"indexExpression": {
														"expression": {
															"id": 2312,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "6371:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 2313,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6375:6:5",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "6371:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6361:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2310,
												"id": 2315,
												"nodeType": "Return",
												"src": "6354:28:5"
											}
										]
									},
									"functionSelector": "6cae4f84",
									"id": 2317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "my_shars",
									"nameLocation": "6304:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6312:2:5"
									},
									"returnParameters": {
										"id": 2310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2309,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2317,
												"src": "6335:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6335:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6334:9:5"
									},
									"scope": 2548,
									"src": "6295:95:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2328,
										"nodeType": "Block",
										"src": "6457:42:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 2324,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1602,
														"src": "6475:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 2326,
													"indexExpression": {
														"id": 2325,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2319,
														"src": "6485:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6475:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2323,
												"id": 2327,
												"nodeType": "Return",
												"src": "6468:23:5"
											}
										]
									},
									"functionSelector": "f5eb42dc",
									"id": 2329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sharesOf",
									"nameLocation": "6405:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2319,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "6422:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2329,
												"src": "6414:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6414:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6413:15:5"
									},
									"returnParameters": {
										"id": 2323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2322,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2329,
												"src": "6449:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6449:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6448:9:5"
									},
									"scope": 2548,
									"src": "6396:103:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2382,
										"nodeType": "Block",
										"src": "6561:250:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2336,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2331,
														"src": "6576:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "33",
														"id": 2337,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6580:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "6576:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2374,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2372,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2331,
															"src": "6764:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 2373,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6769:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "6764:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 2380,
													"nodeType": "IfStatement",
													"src": "6760:44:5",
													"trueBody": {
														"id": 2379,
														"nodeType": "Block",
														"src": "6772:32:5",
														"statements": [
															{
																"expression": {
																	"id": 2377,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 2375,
																		"name": "z",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2334,
																		"src": "6787:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"hexValue": "31",
																		"id": 2376,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6791:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "6787:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2378,
																"nodeType": "ExpressionStatement",
																"src": "6787:5:5"
															}
														]
													}
												},
												"id": 2381,
												"nodeType": "IfStatement",
												"src": "6572:232:5",
												"trueBody": {
													"id": 2371,
													"nodeType": "Block",
													"src": "6583:171:5",
													"statements": [
														{
															"expression": {
																"id": 2341,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2339,
																	"name": "z",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2334,
																	"src": "6598:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 2340,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2331,
																	"src": "6602:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6598:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2342,
															"nodeType": "ExpressionStatement",
															"src": "6598:5:5"
														},
														{
															"assignments": [
																2344
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2344,
																	"mutability": "mutable",
																	"name": "x",
																	"nameLocation": "6623:1:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 2371,
																	"src": "6618:6:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2343,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "6618:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2350,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2349,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2347,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2345,
																		"name": "y",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2331,
																		"src": "6627:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 2346,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6631:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "6627:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2348,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6635:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6627:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6618:18:5"
														},
														{
															"body": {
																"id": 2369,
																"nodeType": "Block",
																"src": "6665:78:5",
																"statements": [
																	{
																		"expression": {
																			"id": 2356,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2354,
																				"name": "z",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2334,
																				"src": "6684:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 2355,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2344,
																				"src": "6688:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6684:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2357,
																		"nodeType": "ExpressionStatement",
																		"src": "6684:5:5"
																	},
																	{
																		"expression": {
																			"id": 2367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2358,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2344,
																				"src": "6708:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2366,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 2363,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2361,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2359,
																									"name": "y",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2331,
																									"src": "6713:1:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "/",
																								"rightExpression": {
																									"id": 2360,
																									"name": "x",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2344,
																									"src": "6717:1:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "6713:5:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "+",
																							"rightExpression": {
																								"id": 2362,
																								"name": "x",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2344,
																								"src": "6721:1:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "6713:9:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 2364,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "6712:11:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"hexValue": "32",
																					"id": 2365,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "6726:1:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "6712:15:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6708:19:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2368,
																		"nodeType": "ExpressionStatement",
																		"src": "6708:19:5"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2353,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2351,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2344,
																	"src": "6658:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 2352,
																	"name": "z",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2334,
																	"src": "6662:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6658:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2370,
															"nodeType": "WhileStatement",
															"src": "6651:92:5"
														}
													]
												}
											}
										]
									},
									"id": 2383,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_sqrt",
									"nameLocation": "6516:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2331,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "6527:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 2383,
												"src": "6522:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2330,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6522:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6521:8:5"
									},
									"returnParameters": {
										"id": 2335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2334,
												"mutability": "mutable",
												"name": "z",
												"nameLocation": "6558:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 2383,
												"src": "6553:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2333,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6553:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6552:8:5"
									},
									"scope": 2548,
									"src": "6507:304:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2399,
										"nodeType": "Block",
										"src": "6884:40:5",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2394,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2392,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2385,
															"src": "6902:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<=",
														"rightExpression": {
															"id": 2393,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2387,
															"src": "6907:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6902:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2396,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2387,
														"src": "6915:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "6902:14:5",
													"trueExpression": {
														"id": 2395,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2385,
														"src": "6911:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2391,
												"id": 2398,
												"nodeType": "Return",
												"src": "6895:21:5"
											}
										]
									},
									"id": 2400,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_min",
									"nameLocation": "6826:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2385,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "6839:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 2400,
												"src": "6831:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6831:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2387,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "6850:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 2400,
												"src": "6842:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2386,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6842:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6830:22:5"
									},
									"returnParameters": {
										"id": 2391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2390,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2400,
												"src": "6875:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6875:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6874:9:5"
									},
									"scope": 2548,
									"src": "6817:107:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2425,
										"nodeType": "Block",
										"src": "6983:136:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2412,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2408,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2406,
																	"name": "reserveETH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1594,
																	"src": "7002:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2407,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7015:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7002:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2409,
																	"name": "reserveERC",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1596,
																	"src": "7020:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2410,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7033:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7020:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "7002:32:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420455448207265736572766573",
															"id": 2413,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7036:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8bee210d366cd2b27b1161c9026bdc5bed94ded5e21d4fa73eebfa740985ec8d",
																"typeString": "literal_string \"Invalid ETH reserves\""
															},
															"value": "Invalid ETH reserves"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8bee210d366cd2b27b1161c9026bdc5bed94ded5e21d4fa73eebfa740985ec8d",
																"typeString": "literal_string \"Invalid ETH reserves\""
															}
														],
														"id": 2405,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6994:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6994:65:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2415,
												"nodeType": "ExpressionStatement",
												"src": "6994:65:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2420,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2416,
																	"name": "reserveERC",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1596,
																	"src": "7078:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"id": 2419,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 2417,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7091:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "3138",
																		"id": 2418,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7095:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18_by_1",
																			"typeString": "int_const 18"
																		},
																		"value": "18"
																	},
																	"src": "7091:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																},
																"src": "7078:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2421,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7077:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 2422,
														"name": "reserveETH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1594,
														"src": "7101:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7077:34:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2404,
												"id": 2424,
												"nodeType": "Return",
												"src": "7070:41:5"
											}
										]
									},
									"functionSelector": "a607a8d9",
									"id": 2426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getETHPrice",
									"nameLocation": "6939:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2401,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6950:2:5"
									},
									"returnParameters": {
										"id": 2404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2403,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2426,
												"src": "6974:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6974:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6973:9:5"
									},
									"scope": 2548,
									"src": "6930:189:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2462,
										"nodeType": "Block",
										"src": "7178:206:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2434,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2432,
																	"name": "reserveETH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1594,
																	"src": "7197:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2433,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7210:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7197:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2437,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2435,
																	"name": "reserveERC",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1596,
																	"src": "7215:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2436,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7228:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7215:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "7197:32:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964204552433230207265736572766573",
															"id": 2439,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7231:24:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8fbbf13eaa0f99fedfb95019d5a776171dee7ddf977738a210d4bc90e02974f3",
																"typeString": "literal_string \"Invalid ERC20 reserves\""
															},
															"value": "Invalid ERC20 reserves"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8fbbf13eaa0f99fedfb95019d5a776171dee7ddf977738a210d4bc90e02974f3",
																"typeString": "literal_string \"Invalid ERC20 reserves\""
															}
														],
														"id": 2431,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7189:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7189:67:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2441,
												"nodeType": "ExpressionStatement",
												"src": "7189:67:5"
											},
											{
												"assignments": [
													2443
												],
												"declarations": [
													{
														"constant": false,
														"id": 2443,
														"mutability": "mutable",
														"name": "decimals",
														"nameLocation": "7275:8:5",
														"nodeType": "VariableDeclaration",
														"scope": 2462,
														"src": "7267:16:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2442,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7267:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2452,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2447,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1586,
																			"src": "7300:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$664",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$664",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 2446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7292:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2445,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7292:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2448,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7292:14:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2444,
																"name": "ERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 586,
																"src": "7286:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC20_$586_$",
																	"typeString": "type(contract ERC20)"
																}
															},
															"id": 2449,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7286:21:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$586",
																"typeString": "contract ERC20"
															}
														},
														"id": 2450,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7308:8:5",
														"memberName": "decimals",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 74,
														"src": "7286:30:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
															"typeString": "function () view external returns (uint8)"
														}
													},
													"id": 2451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7286:32:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7267:51:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2457,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2453,
																	"name": "reserveETH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1594,
																	"src": "7337:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2456,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 2454,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7350:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"id": 2455,
																		"name": "decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2443,
																		"src": "7354:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7350:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7337:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2458,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7336:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 2459,
														"name": "reserveERC",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1596,
														"src": "7366:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7336:40:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2430,
												"id": 2461,
												"nodeType": "Return",
												"src": "7329:47:5"
											}
										]
									},
									"functionSelector": "fcc2ba08",
									"id": 2463,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getERCPrice",
									"nameLocation": "7134:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2427,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7145:2:5"
									},
									"returnParameters": {
										"id": 2430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2429,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2463,
												"src": "7169:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7169:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7168:9:5"
									},
									"scope": 2548,
									"src": "7125:259:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2504,
										"nodeType": "Block",
										"src": "7473:237:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2481,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2473,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2471,
																		"name": "reserveETH",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1594,
																		"src": "7492:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2472,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7505:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "7492:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2476,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2474,
																		"name": "reserveERC",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1596,
																		"src": "7510:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2475,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7523:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "7510:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "7492:32:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2480,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2478,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2465,
																	"src": "7528:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2479,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7536:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7528:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "7492:45:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964204552433230207265736572766573",
															"id": 2482,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7539:24:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8fbbf13eaa0f99fedfb95019d5a776171dee7ddf977738a210d4bc90e02974f3",
																"typeString": "literal_string \"Invalid ERC20 reserves\""
															},
															"value": "Invalid ERC20 reserves"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8fbbf13eaa0f99fedfb95019d5a776171dee7ddf977738a210d4bc90e02974f3",
																"typeString": "literal_string \"Invalid ERC20 reserves\""
															}
														],
														"id": 2470,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7484:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7484:80:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2484,
												"nodeType": "ExpressionStatement",
												"src": "7484:80:5"
											},
											{
												"assignments": [
													2486
												],
												"declarations": [
													{
														"constant": false,
														"id": 2486,
														"mutability": "mutable",
														"name": "amountInWithFee",
														"nameLocation": "7583:15:5",
														"nodeType": "VariableDeclaration",
														"scope": 2504,
														"src": "7575:23:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2485,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7575:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2493,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2489,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2487,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2465,
																	"src": "7600:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "393937",
																	"id": 2488,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7610:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_997_by_1",
																		"typeString": "int_const 997"
																	},
																	"value": "997"
																},
																"src": "7600:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2490,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7599:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31303030",
														"id": 2491,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7617:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000_by_1",
															"typeString": "int_const 1000"
														},
														"value": "1000"
													},
													"src": "7599:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7575:46:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2496,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2494,
																	"name": "reserveERC",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1596,
																	"src": "7640:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2495,
																	"name": "amountInWithFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2486,
																	"src": "7653:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7640:28:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2497,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7639:30:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2500,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2498,
																	"name": "reserveETH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1594,
																	"src": "7673:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 2499,
																	"name": "amountInWithFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2486,
																	"src": "7686:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7673:28:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2501,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7672:30:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7639:63:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2469,
												"id": 2503,
												"nodeType": "Return",
												"src": "7632:70:5"
											}
										]
									},
									"functionSelector": "56c1d7eb",
									"id": 2505,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getInETHPredictOutputERC",
									"nameLocation": "7401:24:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2465,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "7434:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 2505,
												"src": "7426:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2464,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7426:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7425:17:5"
									},
									"returnParameters": {
										"id": 2469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2468,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2505,
												"src": "7464:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7464:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7463:9:5"
									},
									"scope": 2548,
									"src": "7392:318:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2546,
										"nodeType": "Block",
										"src": "7797:235:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2523,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2519,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2515,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2513,
																		"name": "reserveETH",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1594,
																		"src": "7816:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2514,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7829:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "7816:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2516,
																		"name": "reserveERC",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1596,
																		"src": "7834:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7847:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "7834:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "7816:32:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2522,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2520,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2507,
																	"src": "7852:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2521,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7860:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7852:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "7816:45:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420455448207265736572766573",
															"id": 2524,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7863:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8bee210d366cd2b27b1161c9026bdc5bed94ded5e21d4fa73eebfa740985ec8d",
																"typeString": "literal_string \"Invalid ETH reserves\""
															},
															"value": "Invalid ETH reserves"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8bee210d366cd2b27b1161c9026bdc5bed94ded5e21d4fa73eebfa740985ec8d",
																"typeString": "literal_string \"Invalid ETH reserves\""
															}
														],
														"id": 2512,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7808:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7808:78:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2526,
												"nodeType": "ExpressionStatement",
												"src": "7808:78:5"
											},
											{
												"assignments": [
													2528
												],
												"declarations": [
													{
														"constant": false,
														"id": 2528,
														"mutability": "mutable",
														"name": "amountInWithFee",
														"nameLocation": "7905:15:5",
														"nodeType": "VariableDeclaration",
														"scope": 2546,
														"src": "7897:23:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2527,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7897:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2535,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2531,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2529,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2507,
																	"src": "7922:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "393937",
																	"id": 2530,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7932:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_997_by_1",
																		"typeString": "int_const 997"
																	},
																	"value": "997"
																},
																"src": "7922:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2532,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7921:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31303030",
														"id": 2533,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7939:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000_by_1",
															"typeString": "int_const 1000"
														},
														"value": "1000"
													},
													"src": "7921:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7897:46:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2538,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2536,
																	"name": "reserveETH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1594,
																	"src": "7962:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2537,
																	"name": "amountInWithFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2528,
																	"src": "7975:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7962:28:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2539,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7961:30:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2542,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2540,
																	"name": "reserveERC",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1596,
																	"src": "7995:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 2541,
																	"name": "amountInWithFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2528,
																	"src": "8008:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7995:28:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2543,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7994:30:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7961:63:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2511,
												"id": 2545,
												"nodeType": "Return",
												"src": "7954:70:5"
											}
										]
									},
									"functionSelector": "dccc5fea",
									"id": 2547,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getInERCPredictOutputETH",
									"nameLocation": "7725:24:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2507,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "7758:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 2547,
												"src": "7750:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7750:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7749:17:5"
									},
									"returnParameters": {
										"id": 2511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2510,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2547,
												"src": "7788:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7788:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7787:9:5"
									},
									"scope": 2548,
									"src": "7716:316:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2549,
							"src": "639:7398:5",
							"usedErrors": []
						}
					],
					"src": "33:8004:5"
				},
				"id": 5
			}
		}
	}
}