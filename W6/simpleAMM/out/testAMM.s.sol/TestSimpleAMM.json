{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "LogString",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "LogUint",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ammInstance",
      "outputs": [
        {
          "internalType": "contract AMM",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "beforeEach",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "run",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tGD",
      "outputs": [
        {
          "internalType": "contract testGaoDuckToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testAddLiquidity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testSwap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "user1",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "user2",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b506127b2806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c806385195ad91161005b57806385195ad9146100d6578063ac1717b0146100e9578063b9edb1af146100fc578063c04062261461010f57600080fd5b8063539110251461008d5780636331e7d4146100bc57806365d40323146100c65780636e008a03146100ce575b600080fd5b6001546100a0906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b6100c4610117565b005b6100c46102ff565b6100c461067f565b6000546100a0906001600160a01b031681565b6002546100a0906001600160a01b031681565b6003546100a0906001600160a01b031681565b6100c4610806565b60405161012390610820565b6040808252600b908201526a7465737447616f4475636b60a81b6060820152608060208201819052600390820152621d11d160ea1b60a082015260c001604051809103906000f08015801561017c573d6000803e3d6000fd5b50600080546001600160a01b0319166001600160a01b039290921691821790556040516101a89061082e565b6001600160a01b039091168152602001604051809103906000f0801580156101d4573d6000803e3d6000fd5b50600180546001600160a01b039283166001600160a01b03199182161790915560028054821673123456789012345678901234567890123456789090811790915560038054909216730987654321098765432109876543210987654321179091556000546040516340c10f1960e01b815260048101929092526107d06024830152909116906340c10f1990604401600060405180830381600087803b15801561027c57600080fd5b505af1158015610290573d6000803e3d6000fd5b50506000546003546040516340c10f1960e01b81526001600160a01b0391821660048201526107d06024820152911692506340c10f199150604401600060405180830381600087803b1580156102e557600080fd5b505af11580156102f9573d6000803e3d6000fd5b50505050565b610307610117565b60005460015460405163095ea7b360e01b81526001600160a01b0391821660048201526103e8602482015291169063095ea7b3906044016020604051808303816000875af115801561035d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610381919061083c565b506000546002546001546040516323b872dd60e01b81526001600160a01b03928316600482015290821660248201526103e860448201529116906323b872dd906064016020604051808303816000875af11580156103e3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610407919061083c565b5060005460015460405163095ea7b360e01b81526001600160a01b0391821660048201526103e8602482015291169063095ea7b3906044016020604051808303816000875af115801561045e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610482919061083c565b506000546003546001546040516323b872dd60e01b81526001600160a01b03928316600482015290821660248201526103e860448201529116906323b872dd906064016020604051808303816000875af11580156104e4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610508919061083c565b506001546040516328e32c8560e11b81526103e860048201526000916001600160a01b0316906351c6590a90670de0b6b3a76400009060240160206040518083038185885af115801561055f573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906105849190610865565b6001546040516328e32c8560e11b81526103e860048201529192506000916001600160a01b03909116906351c6590a90670de0b6b3a76400009060240160206040518083038185885af11580156105df573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906106049190610865565b90506000600160009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561065b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f99190610865565b610687610117565b61068f6102ff565b60005460015460405163095ea7b360e01b81526001600160a01b039182166004820152600a602482015291169063095ea7b3906044016020604051808303816000875af11580156106e4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610708919061083c565b506000546002546040516323b872dd60e01b81523360048201526001600160a01b039182166024820152600a60448201529116906323b872dd906064016020604051808303816000875af1158015610764573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610788919061083c565b50600254600154604051631bee12dd60e21b8152600a60048201526001600160a01b0392831631926000921690636fb84b74906024016020604051808303816000875af11580156107dd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108019190610865565b505050565b61080e610117565b6108166102ff565b61081e61067f565b565b610f1b806200087f83390190565b610fe3806200179a83390190565b60006020828403121561084e57600080fd5b8151801515811461085e57600080fd5b9392505050565b60006020828403121561087757600080fd5b505191905056fe60806040523480156200001157600080fd5b5060405162000f1b38038062000f1b833981016040819052620000349162000123565b818160036200004483826200021c565b5060046200005382826200021c565b5050505050620002e8565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200008657600080fd5b81516001600160401b0380821115620000a357620000a36200005e565b604051601f8301601f19908116603f01168101908282118183101715620000ce57620000ce6200005e565b81604052838152602092508683858801011115620000eb57600080fd5b600091505b838210156200010f5785820183015181830184015290820190620000f0565b600093810190920192909252949350505050565b600080604083850312156200013757600080fd5b82516001600160401b03808211156200014f57600080fd5b6200015d8683870162000074565b935060208501519150808211156200017457600080fd5b50620001838582860162000074565b9150509250929050565b600181811c90821680620001a257607f821691505b602082108103620001c357634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200021757600081815260208120601f850160051c81016020861015620001f25750805b601f850160051c820191505b818110156200021357828155600101620001fe565b5050505b505050565b81516001600160401b038111156200023857620002386200005e565b62000250816200024984546200018d565b84620001c9565b602080601f8311600181146200028857600084156200026f5750858301515b600019600386901b1c1916600185901b17855562000213565b600085815260208120601f198616915b82811015620002b95788860151825594840194600190910190840162000298565b5085821015620002d85787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610c2380620002f86000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c578063a457c2d711610066578063a457c2d7146101d0578063a9059cbb146101e3578063da46098c146101f6578063dd62ed3e1461020957600080fd5b806370a082311461018c57806395d89b41146101b55780639dc29fac146101bd57600080fd5b806323b872dd116100c857806323b872dd14610142578063313ce56714610155578063395093511461016457806340c10f191461017757600080fd5b806306fdde03146100ef578063095ea7b31461010d57806318160ddd14610130575b600080fd5b6100f761021c565b604051610104919061095b565b60405180910390f35b61012061011b3660046109c5565b6102ae565b6040519015158152602001610104565b6002545b604051908152602001610104565b6101206101503660046109ef565b6102c8565b60405160128152602001610104565b6101206101723660046109c5565b6102ec565b61018a6101853660046109c5565b61030e565b005b61013461019a366004610a2b565b6001600160a01b031660009081526020819052604090205490565b6100f7610331565b61018a6101cb3660046109c5565b610340565b6101206101de3660046109c5565b61035f565b6101206101f13660046109c5565b6103df565b61018a6102043660046109ef565b6103ed565b610134610217366004610a4d565b6103fd565b60606003805461022b90610a80565b80601f016020809104026020016040519081016040528092919081815260200182805461025790610a80565b80156102a45780601f10610279576101008083540402835291602001916102a4565b820191906000526020600020905b81548152906001019060200180831161028757829003601f168201915b5050505050905090565b6000336102bc818585610428565b60019150505b92915050565b6000336102d685828561054c565b6102e18585856105c6565b506001949350505050565b6000336102bc8185856102ff83836103fd565b6103099190610ad0565b610428565b61032d8261031e6012600a610bc7565b6103289084610bd6565b61076a565b5050565b60606004805461022b90610a80565b61032d826103506012600a610bc7565b61035a9084610bd6565b610829565b6000338161036d82866103fd565b9050838110156103d25760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102e18286868403610428565b6000336102bc8185856105c6565b6103f8838383610428565b505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b03831661048a5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103c9565b6001600160a01b0382166104eb5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103c9565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061055884846103fd565b905060001981146105c057818110156105b35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103c9565b6105c08484848403610428565b50505050565b6001600160a01b03831661062a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103c9565b6001600160a01b03821661068c5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103c9565b6001600160a01b038316600090815260208190526040902054818110156107045760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103c9565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36105c0565b6001600160a01b0382166107c05760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103c9565b80600260008282546107d29190610ad0565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b0382166108895760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103c9565b6001600160a01b038216600090815260208190526040902054818110156108fd5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103c9565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b600060208083528351808285015260005b818110156109885785810183015185820160400152820161096c565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146109c057600080fd5b919050565b600080604083850312156109d857600080fd5b6109e1836109a9565b946020939093013593505050565b600080600060608486031215610a0457600080fd5b610a0d846109a9565b9250610a1b602085016109a9565b9150604084013590509250925092565b600060208284031215610a3d57600080fd5b610a46826109a9565b9392505050565b60008060408385031215610a6057600080fd5b610a69836109a9565b9150610a77602084016109a9565b90509250929050565b600181811c90821680610a9457607f821691505b602082108103610ab457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156102c2576102c2610aba565b600181815b80851115610b1e578160001904821115610b0457610b04610aba565b80851615610b1157918102915b93841c9390800290610ae8565b509250929050565b600082610b35575060016102c2565b81610b42575060006102c2565b8160018114610b585760028114610b6257610b7e565b60019150506102c2565b60ff841115610b7357610b73610aba565b50506001821b6102c2565b5060208310610133831016604e8410600b8410161715610ba1575081810a6102c2565b610bab8383610ae3565b8060001904821115610bbf57610bbf610aba565b029392505050565b6000610a4660ff841683610b26565b80820281158282048414176102c2576102c2610aba56fea2646970667358221220d35c5ae39933f00030f56fa37e4f698e4cdb28f89955ce59dcf5e53c229f2b5f64736f6c6343000812003360a060405234801561001057600080fd5b50604051610fe3380380610fe383398101604081905261002f91610072565b6001600160a01b03166080526006805460018101825560009182527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f01556100a2565b60006020828403121561008457600080fd5b81516001600160a01b038116811461009b57600080fd5b9392505050565b608051610efc6100e760003960008181610317015281816103d3015281816105ea015281816107870152818161084d015281816109a80152610a410152610efc6000f3fe6080604052600436106101095760003560e01c806394b918de11610095578063b26daf8811610064578063b26daf8814610282578063e26f6c5e146102af578063f6a75f75146102e5578063fc0c546a14610305578063fcc2ba081461033957600080fd5b806394b918de1461020d578063a607a8d914610220578063a734f06e14610235578063ad129c7a1461026257600080fd5b80635a76f25e116100dc5780635a76f25e146101755780636a263f021461018b5780636fb84b74146101ab57806370a08231146101cb5780638012fe56146101f857600080fd5b806318160ddd1461010e5780631d5fb61714610137578063443cb4bc1461014c57806351c6590a14610162575b600080fd5b34801561011a57600080fd5b5061012460025481565b6040519081526020015b60405180910390f35b34801561014357600080fd5b5061012461034e565b34801561015857600080fd5b5061012460005481565b610124610170366004610d26565b6103ae565b34801561018157600080fd5b5061012460015481565b34801561019757600080fd5b506101246101a6366004610d26565b610667565b3480156101b757600080fd5b506101246101c6366004610d26565b6106cf565b3480156101d757600080fd5b506101246101e6366004610d3f565b60036020526000908152604090205481565b34801561020457600080fd5b50610124610884565b61012461021b366004610d26565b6108f8565b34801561022c57600080fd5b50610124610a70565b34801561024157600080fd5b5061024a600081565b6040516001600160a01b03909116815260200161012e565b34801561026e57600080fd5b5061012461027d366004610d3f565b610aea565b34801561028e57600080fd5b5061012461029d366004610d3f565b60046020526000908152604090205481565b3480156102bb57600080fd5b5061024a6102ca366004610d26565b6005602052600090815260409020546001600160a01b031681565b3480156102f157600080fd5b50610124610300366004610d26565b610b70565b34801561031157600080fd5b5061024a7f000000000000000000000000000000000000000000000000000000000000000081565b34801561034557600080fd5b50610124610b91565b600080805b60065481101561039a576006818154811061037057610370610d68565b9060005260206000200154826103869190610d94565b91508061039281610da7565b915050610353565b506002546103a89082610dc0565b91505090565b6040516323b872dd60e01b8152336004820152306024820152604481018290526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd906064016020604051808303816000875af1158015610424573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104489190610dd7565b5060015460008054349261045b91610d94565b111561051d578060015461046f9190610dc0565b8360005461047d9190610dc0565b1461051d576001546000906104928582610dc0565b61049c9190610df9565b60008054919250906104ae8482610dc0565b6104b89190610df9565b9050818310156104f05760006104ce8683610e1b565b905060006104db826106cf565b90506104e78186610d94565b9450505061051a565b60006104fc8484610e1b565b90506000610509826108f8565b90506105158188610d94565b965050505b50505b60025460000361053b576105346101a68483610dc0565b915061057b565b6105786000546002548361054f9190610dc0565b6105599190610df9565b6001546002546105699087610dc0565b6105739190610df9565b610bfc565b91505b600082116105bd5760405162461bcd60e51b815260206004820152600a6024820152690736861726573203d20360b41b60448201526064015b60405180910390fd5b6105c73383610c17565b6040516370a0823160e01b81523060048201526106619047906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a08231906024015b602060405180830381865afa158015610632573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106569190610e2e565b600091909155600155565b50919050565b60008160000361067957506000919050565b60006002610688846001610d94565b6106929190610df9565b9050825b808210156106c85750806002816106ad8187610df9565b6106b79190610d94565b6106c19190610df9565b9150610696565b9392505050565b6000806103e86106e1846103e5610dc0565b6106eb9190610df9565b9050806001546106fb9190610d94565b816000546107099190610dc0565b6107139190610df9565b9150600082116107655760405162461bcd60e51b815260206004820152601a60248201527f496e73756666696369656e74206f757470757420616d6f756e7400000000000060448201526064016105b4565b6040516323b872dd60e01b8152336004820152306024820152604481018490527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd906064016020604051808303816000875af11580156107d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107fc9190610dd7565b50604051339083156108fc029084906000818181858888f1935050505015801561082a573d6000803e3d6000fd5b506106616108388347610e1b565b6040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401610615565b600080805b336000908152600460205260409020548110156108dd57600681815481106108b3576108b3610d68565b9060005260206000200154826108c99190610e47565b9150806108d581610da7565b915050610889565b50336000908152600360205260409020546103a89082610e6f565b600081341461093f5760405162461bcd60e51b815260206004820152601360248201527208aa89040c2dadeeadce840dad2e6dac2e8c6d606b1b60448201526064016105b4565b60006103e8610950846103e5610dc0565b61095a9190610df9565b90508060005461096a9190610d94565b816001546109789190610dc0565b6109829190610df9565b915061098c610c93565b60405163a9059cbb60e01b8152336004820152602481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb906044016020604051808303816000875af11580156109f9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1d9190610dd7565b506040516370a0823160e01b81523060048201526106619047906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401610615565b600080600154600054610a839190610d94565b11610ac35760405162461bcd60e51b815260206004820152601060248201526f496e76616c696420726573657276657360801b60448201526064016105b4565b600054600154610adb90670de0b6b3a7640000610dc0565b610ae59190610df9565b905090565b600080805b6001600160a01b038416600090815260046020526040902054811015610b4c5760068181548110610b2257610b22610d68565b906000526020600020015482610b389190610d94565b915080610b4481610da7565b915050610aef565b506001600160a01b0383166000908152600360205260409020546106c89082610dc0565b60068181548110610b8057600080fd5b600091825260209091200154905081565b600080600154600054610ba49190610d94565b11610be45760405162461bcd60e51b815260206004820152601060248201526f496e76616c696420726573657276657360801b60448201526064016105b4565b600154600054610adb90670de0b6b3a7640000610dc0565b600081831115610c0c5781610c0e565b825b90505b92915050565b6001600160a01b03821660009081526003602052604081208054839290610c3f908490610d94565b925050819055508060026000828254610c589190610d94565b90915550506006805460018101825560009182527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f01555050565b60065460028054600090610ca8908490610d94565b9250508190555060016006600081548110610cc557610cc5610d68565b906000526020600020016000828254610cde9190610e47565b90915550506006805460019190610cf6908390610e1b565b81548110610d0657610d06610d68565b906000526020600020016000828254610d1f9190610e9f565b9091555050565b600060208284031215610d3857600080fd5b5035919050565b600060208284031215610d5157600080fd5b81356001600160a01b03811681146106c857600080fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b80820180821115610c1157610c11610d7e565b600060018201610db957610db9610d7e565b5060010190565b8082028115828204841417610c1157610c11610d7e565b600060208284031215610de957600080fd5b815180151581146106c857600080fd5b600082610e1657634e487b7160e01b600052601260045260246000fd5b500490565b81810381811115610c1157610c11610d7e565b600060208284031215610e4057600080fd5b5051919050565b8082018281126000831280158216821582161715610e6757610e67610d7e565b505092915050565b80820260008212600160ff1b84141615610e8b57610e8b610d7e565b8181058314821517610c1157610c11610d7e565b8181036000831280158383131683831282161715610ebf57610ebf610d7e565b509291505056fea2646970667358221220273160c15e47ab3e55f718e29dd64a8f841d9af68ca97efd32fb759c2219eac264736f6c63430008120033a26469706673582212204e561d77fa924238e88c648dd03f528e94015446635f6083d1016b846a8da17864736f6c63430008120033",
    "sourceMap": "299:1751:6:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100885760003560e01c806385195ad91161005b57806385195ad9146100d6578063ac1717b0146100e9578063b9edb1af146100fc578063c04062261461010f57600080fd5b8063539110251461008d5780636331e7d4146100bc57806365d40323146100c65780636e008a03146100ce575b600080fd5b6001546100a0906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b6100c4610117565b005b6100c46102ff565b6100c461067f565b6000546100a0906001600160a01b031681565b6002546100a0906001600160a01b031681565b6003546100a0906001600160a01b031681565b6100c4610806565b60405161012390610820565b6040808252600b908201526a7465737447616f4475636b60a81b6060820152608060208201819052600390820152621d11d160ea1b60a082015260c001604051809103906000f08015801561017c573d6000803e3d6000fd5b50600080546001600160a01b0319166001600160a01b039290921691821790556040516101a89061082e565b6001600160a01b039091168152602001604051809103906000f0801580156101d4573d6000803e3d6000fd5b50600180546001600160a01b039283166001600160a01b03199182161790915560028054821673123456789012345678901234567890123456789090811790915560038054909216730987654321098765432109876543210987654321179091556000546040516340c10f1960e01b815260048101929092526107d06024830152909116906340c10f1990604401600060405180830381600087803b15801561027c57600080fd5b505af1158015610290573d6000803e3d6000fd5b50506000546003546040516340c10f1960e01b81526001600160a01b0391821660048201526107d06024820152911692506340c10f199150604401600060405180830381600087803b1580156102e557600080fd5b505af11580156102f9573d6000803e3d6000fd5b50505050565b610307610117565b60005460015460405163095ea7b360e01b81526001600160a01b0391821660048201526103e8602482015291169063095ea7b3906044016020604051808303816000875af115801561035d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610381919061083c565b506000546002546001546040516323b872dd60e01b81526001600160a01b03928316600482015290821660248201526103e860448201529116906323b872dd906064016020604051808303816000875af11580156103e3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610407919061083c565b5060005460015460405163095ea7b360e01b81526001600160a01b0391821660048201526103e8602482015291169063095ea7b3906044016020604051808303816000875af115801561045e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610482919061083c565b506000546003546001546040516323b872dd60e01b81526001600160a01b03928316600482015290821660248201526103e860448201529116906323b872dd906064016020604051808303816000875af11580156104e4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610508919061083c565b506001546040516328e32c8560e11b81526103e860048201526000916001600160a01b0316906351c6590a90670de0b6b3a76400009060240160206040518083038185885af115801561055f573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906105849190610865565b6001546040516328e32c8560e11b81526103e860048201529192506000916001600160a01b03909116906351c6590a90670de0b6b3a76400009060240160206040518083038185885af11580156105df573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906106049190610865565b90506000600160009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561065b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f99190610865565b610687610117565b61068f6102ff565b60005460015460405163095ea7b360e01b81526001600160a01b039182166004820152600a602482015291169063095ea7b3906044016020604051808303816000875af11580156106e4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610708919061083c565b506000546002546040516323b872dd60e01b81523360048201526001600160a01b039182166024820152600a60448201529116906323b872dd906064016020604051808303816000875af1158015610764573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610788919061083c565b50600254600154604051631bee12dd60e21b8152600a60048201526001600160a01b0392831631926000921690636fb84b74906024016020604051808303816000875af11580156107dd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108019190610865565b505050565b61080e610117565b6108166102ff565b61081e61067f565b565b610f1b806200087f83390190565b610fe3806200179a83390190565b60006020828403121561084e57600080fd5b8151801515811461085e57600080fd5b9392505050565b60006020828403121561087757600080fd5b505191905056fe60806040523480156200001157600080fd5b5060405162000f1b38038062000f1b833981016040819052620000349162000123565b818160036200004483826200021c565b5060046200005382826200021c565b5050505050620002e8565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200008657600080fd5b81516001600160401b0380821115620000a357620000a36200005e565b604051601f8301601f19908116603f01168101908282118183101715620000ce57620000ce6200005e565b81604052838152602092508683858801011115620000eb57600080fd5b600091505b838210156200010f5785820183015181830184015290820190620000f0565b600093810190920192909252949350505050565b600080604083850312156200013757600080fd5b82516001600160401b03808211156200014f57600080fd5b6200015d8683870162000074565b935060208501519150808211156200017457600080fd5b50620001838582860162000074565b9150509250929050565b600181811c90821680620001a257607f821691505b602082108103620001c357634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200021757600081815260208120601f850160051c81016020861015620001f25750805b601f850160051c820191505b818110156200021357828155600101620001fe565b5050505b505050565b81516001600160401b038111156200023857620002386200005e565b62000250816200024984546200018d565b84620001c9565b602080601f8311600181146200028857600084156200026f5750858301515b600019600386901b1c1916600185901b17855562000213565b600085815260208120601f198616915b82811015620002b95788860151825594840194600190910190840162000298565b5085821015620002d85787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610c2380620002f86000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c578063a457c2d711610066578063a457c2d7146101d0578063a9059cbb146101e3578063da46098c146101f6578063dd62ed3e1461020957600080fd5b806370a082311461018c57806395d89b41146101b55780639dc29fac146101bd57600080fd5b806323b872dd116100c857806323b872dd14610142578063313ce56714610155578063395093511461016457806340c10f191461017757600080fd5b806306fdde03146100ef578063095ea7b31461010d57806318160ddd14610130575b600080fd5b6100f761021c565b604051610104919061095b565b60405180910390f35b61012061011b3660046109c5565b6102ae565b6040519015158152602001610104565b6002545b604051908152602001610104565b6101206101503660046109ef565b6102c8565b60405160128152602001610104565b6101206101723660046109c5565b6102ec565b61018a6101853660046109c5565b61030e565b005b61013461019a366004610a2b565b6001600160a01b031660009081526020819052604090205490565b6100f7610331565b61018a6101cb3660046109c5565b610340565b6101206101de3660046109c5565b61035f565b6101206101f13660046109c5565b6103df565b61018a6102043660046109ef565b6103ed565b610134610217366004610a4d565b6103fd565b60606003805461022b90610a80565b80601f016020809104026020016040519081016040528092919081815260200182805461025790610a80565b80156102a45780601f10610279576101008083540402835291602001916102a4565b820191906000526020600020905b81548152906001019060200180831161028757829003601f168201915b5050505050905090565b6000336102bc818585610428565b60019150505b92915050565b6000336102d685828561054c565b6102e18585856105c6565b506001949350505050565b6000336102bc8185856102ff83836103fd565b6103099190610ad0565b610428565b61032d8261031e6012600a610bc7565b6103289084610bd6565b61076a565b5050565b60606004805461022b90610a80565b61032d826103506012600a610bc7565b61035a9084610bd6565b610829565b6000338161036d82866103fd565b9050838110156103d25760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102e18286868403610428565b6000336102bc8185856105c6565b6103f8838383610428565b505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b03831661048a5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103c9565b6001600160a01b0382166104eb5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103c9565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061055884846103fd565b905060001981146105c057818110156105b35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103c9565b6105c08484848403610428565b50505050565b6001600160a01b03831661062a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103c9565b6001600160a01b03821661068c5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103c9565b6001600160a01b038316600090815260208190526040902054818110156107045760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103c9565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36105c0565b6001600160a01b0382166107c05760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103c9565b80600260008282546107d29190610ad0565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b0382166108895760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103c9565b6001600160a01b038216600090815260208190526040902054818110156108fd5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103c9565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b600060208083528351808285015260005b818110156109885785810183015185820160400152820161096c565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146109c057600080fd5b919050565b600080604083850312156109d857600080fd5b6109e1836109a9565b946020939093013593505050565b600080600060608486031215610a0457600080fd5b610a0d846109a9565b9250610a1b602085016109a9565b9150604084013590509250925092565b600060208284031215610a3d57600080fd5b610a46826109a9565b9392505050565b60008060408385031215610a6057600080fd5b610a69836109a9565b9150610a77602084016109a9565b90509250929050565b600181811c90821680610a9457607f821691505b602082108103610ab457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156102c2576102c2610aba565b600181815b80851115610b1e578160001904821115610b0457610b04610aba565b80851615610b1157918102915b93841c9390800290610ae8565b509250929050565b600082610b35575060016102c2565b81610b42575060006102c2565b8160018114610b585760028114610b6257610b7e565b60019150506102c2565b60ff841115610b7357610b73610aba565b50506001821b6102c2565b5060208310610133831016604e8410600b8410161715610ba1575081810a6102c2565b610bab8383610ae3565b8060001904821115610bbf57610bbf610aba565b029392505050565b6000610a4660ff841683610b26565b80820281158282048414176102c2576102c2610aba56fea2646970667358221220d35c5ae39933f00030f56fa37e4f698e4cdb28f89955ce59dcf5e53c229f2b5f64736f6c6343000812003360a060405234801561001057600080fd5b50604051610fe3380380610fe383398101604081905261002f91610072565b6001600160a01b03166080526006805460018101825560009182527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f01556100a2565b60006020828403121561008457600080fd5b81516001600160a01b038116811461009b57600080fd5b9392505050565b608051610efc6100e760003960008181610317015281816103d3015281816105ea015281816107870152818161084d015281816109a80152610a410152610efc6000f3fe6080604052600436106101095760003560e01c806394b918de11610095578063b26daf8811610064578063b26daf8814610282578063e26f6c5e146102af578063f6a75f75146102e5578063fc0c546a14610305578063fcc2ba081461033957600080fd5b806394b918de1461020d578063a607a8d914610220578063a734f06e14610235578063ad129c7a1461026257600080fd5b80635a76f25e116100dc5780635a76f25e146101755780636a263f021461018b5780636fb84b74146101ab57806370a08231146101cb5780638012fe56146101f857600080fd5b806318160ddd1461010e5780631d5fb61714610137578063443cb4bc1461014c57806351c6590a14610162575b600080fd5b34801561011a57600080fd5b5061012460025481565b6040519081526020015b60405180910390f35b34801561014357600080fd5b5061012461034e565b34801561015857600080fd5b5061012460005481565b610124610170366004610d26565b6103ae565b34801561018157600080fd5b5061012460015481565b34801561019757600080fd5b506101246101a6366004610d26565b610667565b3480156101b757600080fd5b506101246101c6366004610d26565b6106cf565b3480156101d757600080fd5b506101246101e6366004610d3f565b60036020526000908152604090205481565b34801561020457600080fd5b50610124610884565b61012461021b366004610d26565b6108f8565b34801561022c57600080fd5b50610124610a70565b34801561024157600080fd5b5061024a600081565b6040516001600160a01b03909116815260200161012e565b34801561026e57600080fd5b5061012461027d366004610d3f565b610aea565b34801561028e57600080fd5b5061012461029d366004610d3f565b60046020526000908152604090205481565b3480156102bb57600080fd5b5061024a6102ca366004610d26565b6005602052600090815260409020546001600160a01b031681565b3480156102f157600080fd5b50610124610300366004610d26565b610b70565b34801561031157600080fd5b5061024a7f000000000000000000000000000000000000000000000000000000000000000081565b34801561034557600080fd5b50610124610b91565b600080805b60065481101561039a576006818154811061037057610370610d68565b9060005260206000200154826103869190610d94565b91508061039281610da7565b915050610353565b506002546103a89082610dc0565b91505090565b6040516323b872dd60e01b8152336004820152306024820152604481018290526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd906064016020604051808303816000875af1158015610424573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104489190610dd7565b5060015460008054349261045b91610d94565b111561051d578060015461046f9190610dc0565b8360005461047d9190610dc0565b1461051d576001546000906104928582610dc0565b61049c9190610df9565b60008054919250906104ae8482610dc0565b6104b89190610df9565b9050818310156104f05760006104ce8683610e1b565b905060006104db826106cf565b90506104e78186610d94565b9450505061051a565b60006104fc8484610e1b565b90506000610509826108f8565b90506105158188610d94565b965050505b50505b60025460000361053b576105346101a68483610dc0565b915061057b565b6105786000546002548361054f9190610dc0565b6105599190610df9565b6001546002546105699087610dc0565b6105739190610df9565b610bfc565b91505b600082116105bd5760405162461bcd60e51b815260206004820152600a6024820152690736861726573203d20360b41b60448201526064015b60405180910390fd5b6105c73383610c17565b6040516370a0823160e01b81523060048201526106619047906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a08231906024015b602060405180830381865afa158015610632573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106569190610e2e565b600091909155600155565b50919050565b60008160000361067957506000919050565b60006002610688846001610d94565b6106929190610df9565b9050825b808210156106c85750806002816106ad8187610df9565b6106b79190610d94565b6106c19190610df9565b9150610696565b9392505050565b6000806103e86106e1846103e5610dc0565b6106eb9190610df9565b9050806001546106fb9190610d94565b816000546107099190610dc0565b6107139190610df9565b9150600082116107655760405162461bcd60e51b815260206004820152601a60248201527f496e73756666696369656e74206f757470757420616d6f756e7400000000000060448201526064016105b4565b6040516323b872dd60e01b8152336004820152306024820152604481018490527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd906064016020604051808303816000875af11580156107d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107fc9190610dd7565b50604051339083156108fc029084906000818181858888f1935050505015801561082a573d6000803e3d6000fd5b506106616108388347610e1b565b6040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401610615565b600080805b336000908152600460205260409020548110156108dd57600681815481106108b3576108b3610d68565b9060005260206000200154826108c99190610e47565b9150806108d581610da7565b915050610889565b50336000908152600360205260409020546103a89082610e6f565b600081341461093f5760405162461bcd60e51b815260206004820152601360248201527208aa89040c2dadeeadce840dad2e6dac2e8c6d606b1b60448201526064016105b4565b60006103e8610950846103e5610dc0565b61095a9190610df9565b90508060005461096a9190610d94565b816001546109789190610dc0565b6109829190610df9565b915061098c610c93565b60405163a9059cbb60e01b8152336004820152602481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb906044016020604051808303816000875af11580156109f9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1d9190610dd7565b506040516370a0823160e01b81523060048201526106619047906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401610615565b600080600154600054610a839190610d94565b11610ac35760405162461bcd60e51b815260206004820152601060248201526f496e76616c696420726573657276657360801b60448201526064016105b4565b600054600154610adb90670de0b6b3a7640000610dc0565b610ae59190610df9565b905090565b600080805b6001600160a01b038416600090815260046020526040902054811015610b4c5760068181548110610b2257610b22610d68565b906000526020600020015482610b389190610d94565b915080610b4481610da7565b915050610aef565b506001600160a01b0383166000908152600360205260409020546106c89082610dc0565b60068181548110610b8057600080fd5b600091825260209091200154905081565b600080600154600054610ba49190610d94565b11610be45760405162461bcd60e51b815260206004820152601060248201526f496e76616c696420726573657276657360801b60448201526064016105b4565b600154600054610adb90670de0b6b3a7640000610dc0565b600081831115610c0c5781610c0e565b825b90505b92915050565b6001600160a01b03821660009081526003602052604081208054839290610c3f908490610d94565b925050819055508060026000828254610c589190610d94565b90915550506006805460018101825560009182527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f01555050565b60065460028054600090610ca8908490610d94565b9250508190555060016006600081548110610cc557610cc5610d68565b906000526020600020016000828254610cde9190610e47565b90915550506006805460019190610cf6908390610e1b565b81548110610d0657610d06610d68565b906000526020600020016000828254610d1f9190610e9f565b9091555050565b600060208284031215610d3857600080fd5b5035919050565b600060208284031215610d5157600080fd5b81356001600160a01b03811681146106c857600080fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b80820180821115610c1157610c11610d7e565b600060018201610db957610db9610d7e565b5060010190565b8082028115828204841417610c1157610c11610d7e565b600060208284031215610de957600080fd5b815180151581146106c857600080fd5b600082610e1657634e487b7160e01b600052601260045260246000fd5b500490565b81810381811115610c1157610c11610d7e565b600060208284031215610e4057600080fd5b5051919050565b8082018281126000831280158216821582161715610e6757610e67610d7e565b505092915050565b80820260008212600160ff1b84141615610e8b57610e8b610d7e565b8181058314821517610c1157610c11610d7e565b8181036000831280158383131683831282161715610ebf57610ebf610d7e565b509291505056fea2646970667358221220273160c15e47ab3e55f718e29dd64a8f841d9af68ca97efd32fb759c2219eac264736f6c63430008120033a26469706673582212204e561d77fa924238e88c648dd03f528e94015446635f6083d1016b846a8da17864736f6c63430008120033",
    "sourceMap": "299:1751:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;462:22;;;;;-1:-1:-1;;;;;462:22:6;;;;;;-1:-1:-1;;;;;190:32:9;;;172:51;;160:2;145:18;462:22:6;;;;;;;658:475;;;:::i;:::-;;1141:517;;;:::i;1666:381::-;;;:::i;428:27::-;;;;;-1:-1:-1;;;;;428:27:6;;;491:20;;;;;-1:-1:-1;;;;;491:20:6;;;518;;;;;-1:-1:-1;;;;;518:20:6;;;547:103;;;:::i;658:475::-;829:42;;;;;:::i;:::-;978:2:9;960:21;;;1017:2;997:18;;;990:30;-1:-1:-1;;;1051:2:9;1036:18;;1029:41;1108:3;1101:4;1086:20;;1079:33;;;1149:1;1128:19;;;1121:30;-1:-1:-1;;;1182:3:9;1167:19;;1160:34;1226:3;1211:19;829:42:6;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;823:3:6;:48;;-1:-1:-1;;;;;;823:48:6;-1:-1:-1;;;;;823:48:6;;;;;;;;;896:21;;;;;:::i;:::-;-1:-1:-1;;;;;190:32:9;;;172:51;;160:2;145:18;896:21:6;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;882:11:6;:35;;-1:-1:-1;;;;;882:35:6;;;-1:-1:-1;;;;;;882:35:6;;;;;;;930:5;:59;;;;946:42;930:59;;;;;;1000:5;:59;;;;;1016:42;1000:59;;;;-1:-1:-1;1072:3:6;:21;;-1:-1:-1;;;1072:21:6;;;;;1426:51:9;;;;1088:4:6;1493:18:9;;;1486:34;1072:3:6;;;;:8;;1399:18:9;;1072:21:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1104:3:6;;1113:5;;1104:21;;-1:-1:-1;;;1104:21:6;;-1:-1:-1;;;;;1113:5:6;;;1104:21;;;1426:51:9;1120:4:6;1493:18:9;;;1486:34;1104:3:6;;;-1:-1:-1;1104:8:6;;-1:-1:-1;1399:18:9;;1104:21:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;658:475::o;1141:517::-;1187:12;:10;:12::i;:::-;1212:3;;;1232:11;1212:39;;-1:-1:-1;;;1212:39:6;;-1:-1:-1;;;;;1232:11:6;;;1212:39;;;1426:51:9;1246:4:6;1493:18:9;;;1486:34;1212:3:6;;;:11;;1399:18:9;;1212:39:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1262:3:6;;1279:5;;1262:3;1294:11;1262:51;;-1:-1:-1;;;1262:51:6;;-1:-1:-1;;;;;1279:5:6;;;1262:51;;;2354:34:9;1294:11:6;;;2404:18:9;;;2397:43;1308:4:6;2456:18:9;;;2449:34;1262:3:6;;;:16;;2289:18:9;;1262:51:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1326:3:6;;;1346:11;1326:39;;-1:-1:-1;;;1326:39:6;;-1:-1:-1;;;;;1346:11:6;;;1326:39;;;1426:51:9;1360:4:6;1493:18:9;;;1486:34;1326:3:6;;;:11;;1399:18:9;;1326:39:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1376:3:6;;1393:5;;1376:3;1408:11;1376:51;;-1:-1:-1;;;1376:51:6;;-1:-1:-1;;;;;1393:5:6;;;1376:51;;;2354:34:9;1408:11:6;;;2404:18:9;;;2397:43;1422:4:6;2456:18:9;;;2449:34;1376:3:6;;;:16;;2289:18:9;;1376:51:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1462:11:6;;:46;;-1:-1:-1;;;1462:46:6;;1503:4;1462:46;;;2651:25:9;1440:19:6;;-1:-1:-1;;;;;1462:11:6;;:24;;1494:7;;2624:18:9;;1462:46:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1541:11;;:46;;-1:-1:-1;;;1541:46:6;;1582:4;1541:46;;;2651:25:9;1440:68:6;;-1:-1:-1;1519:19:6;;-1:-1:-1;;;;;1541:11:6;;;;:24;;1573:7;;2624:18:9;;1541:46:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1519:68;;1600:22;1625:11;;;;;;;;;-1:-1:-1;;;;;1625:11:6;-1:-1:-1;;;;;1625:23:6;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1666:381::-;1704:12;:10;:12::i;:::-;1727:18;:16;:18::i;:::-;1758:3;;;1778:11;1758:37;;-1:-1:-1;;;1758:37:6;;-1:-1:-1;;;;;1778:11:6;;;1758:37;;;1426:51:9;1792:2:6;1493:18:9;;;1486:34;1758:3:6;;;:11;;1399:18:9;;1758:37:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1806:3:6;;1835:5;;1806:39;;-1:-1:-1;;;1806:39:6;;1823:10;1806:39;;;2354:34:9;-1:-1:-1;;;;;1835:5:6;;;2404:18:9;;;2397:43;1842:2:6;2456:18:9;;;2449:34;1806:3:6;;;:16;;2289:18:9;;1806:39:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1896:5:6;;;1946:11;:31;;-1:-1:-1;;;1946:31:6;;1974:2;1946:31;;;2651:25:9;-1:-1:-1;;;;;1896:5:6;;;1888:22;;1858:27;;1946:11;;:27;;2624:18:9;;1946:31:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;1666:381:6:o;547:103::-;580:12;:10;:12::i;:::-;603:18;:16;:18::i;:::-;632:10;:8;:10::i;:::-;547:103::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;1821:277:9:-;1888:6;1941:2;1929:9;1920:7;1916:23;1912:32;1909:52;;;1957:1;1954;1947:12;1909:52;1989:9;1983:16;2042:5;2035:13;2028:21;2021:5;2018:32;2008:60;;2064:1;2061;2054:12;2008:60;2087:5;1821:277;-1:-1:-1;;;1821:277:9:o;2687:184::-;2757:6;2810:2;2798:9;2789:7;2785:23;2781:32;2778:52;;;2826:1;2823;2816:12;2778:52;-1:-1:-1;2849:16:9;;2687:184;-1:-1:-1;2687:184:9:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "ammInstance()": "53911025",
    "beforeEach()": "6331e7d4",
    "run()": "c0406226",
    "tGD()": "85195ad9",
    "testAddLiquidity()": "65d40323",
    "testSwap()": "6e008a03",
    "user1()": "ac1717b0",
    "user2()": "b9edb1af"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"LogString\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"LogUint\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ammInstance\",\"outputs\":[{\"internalType\":\"contract AMM\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"beforeEach\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"run\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tGD\",\"outputs\":[{\"internalType\":\"contract testGaoDuckToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testAddLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"user1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"user2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"script/testAMM.s.sol\":\"TestSimpleAMM\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@forge-std/=lib/forge-std/src/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x7138baa2520f7c1d6943ce6e53192d8eae5b50bf4b27dd602f8b27144987f70c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c616140f2b008385f0bffd7915ce7ce45c1e2bba201318b89d44073e36514597\",\"dweb:/ipfs/QmdsoxHZ326dnUKNYKahgNAj8wsJH111JrQsKHz6CkVBy7\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xdd286f7283325eb12ee50e41dac6be9665262e827b66f4f8952111ff77b6a130\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://567e5cfe5c64fb8c5f041393d42178447cf00880a2a2172a5a8e83131e1c24fa\",\"dweb:/ipfs/QmY6KVSBk5xbtZuyhcQPNyJAATMZnmJ45TcBBAE7rzD5du\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x0270cb4e50d6bcdd780df229606076d39df796860d266b5426f374c36f34fe89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://511db944b3f0a57b56fda90d1e466cca6a0dea2297d816251966c8f025313973\",\"dweb:/ipfs/QmRgu5uCaKkoRr3amWGfhy6bVwhpH5tr1vynaNQyEYiE4p\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xcfa79cbb4867877ee537a899bf75d42b712dac8519ef438939ce36073532454d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d7881116d22618a7b940d002cf03bdcf385f7c564db0293f4f847a7368788e2\",\"dweb:/ipfs/QmXL61H7ahe5Buh9xNGqgmLR4tDYoPpYw3Y5ppRbbLkFqk\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xdd98bfe1095cbc031cd6ded0d4e8fc386dba441130fba7c9892903b76f2236d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c2212565ab7fa7c3d21f5f69b47d2d4af5ef3ccfc490a40f7d37fd069fd27df6\",\"dweb:/ipfs/QmUWCJ83N9PJBWEJSAyRSGdCaHuFjGbDtnthFCctbrdWoy\"]},\"script/testAMM.s.sol\":{\"keccak256\":\"0xeeefcd6036d65f10526309a5a457e14830128dcb779a55e4854fdb4a4fc03356\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://cc60559c9bc80841bb461b8a59ea3ae96e9471ee64dee2ff03b4fc2bd1654636\",\"dweb:/ipfs/QmRC7HBhgwUk2TjqC9rWxTRaJWHByi8tGyD5raf8xYbVgS\"]},\"src/erc20.sol\":{\"keccak256\":\"0xa2aef0e620248ce1f28d737d752d85a6399ed7f8a5e297d1b9e88814ac4658bb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://0c959eb4f7332ad2ec28d2dd26981b34a822fcbd5127acb7aa92ab108d6b0d32\",\"dweb:/ipfs/QmdF6SNNf68TcBnJzfoTmSSYmXUCjzQG2EYuBzuLEr61fj\"]},\"src/simpleamm.sol\":{\"keccak256\":\"0xc08d308936e866f47b5eb78e5bab6eb9f96c06edf8ed7ae2dbc6b17d935b2b54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29069e9fce03b36317ad0b548dddeedf19baba7098ce90b0a48e79285742ab1a\",\"dweb:/ipfs/QmbxBiFLUnupSHeZfECYPB7K4FAKwhRShgeHtcFBZVrmZe\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.18+commit.87f61d96"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LogString",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LogUint",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ammInstance",
          "outputs": [
            {
              "internalType": "contract AMM",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "beforeEach"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "run"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "tGD",
          "outputs": [
            {
              "internalType": "contract testGaoDuckToken",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testAddLiquidity"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testSwap"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "user1",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "user2",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@forge-std/=lib/forge-std/src/",
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":ERC721A/=lib/ERC721A/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc721a/=lib/ERC721A/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "script/testAMM.s.sol": "TestSimpleAMM"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x7138baa2520f7c1d6943ce6e53192d8eae5b50bf4b27dd602f8b27144987f70c",
        "urls": [
          "bzz-raw://c616140f2b008385f0bffd7915ce7ce45c1e2bba201318b89d44073e36514597",
          "dweb:/ipfs/QmdsoxHZ326dnUKNYKahgNAj8wsJH111JrQsKHz6CkVBy7"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xdd286f7283325eb12ee50e41dac6be9665262e827b66f4f8952111ff77b6a130",
        "urls": [
          "bzz-raw://567e5cfe5c64fb8c5f041393d42178447cf00880a2a2172a5a8e83131e1c24fa",
          "dweb:/ipfs/QmY6KVSBk5xbtZuyhcQPNyJAATMZnmJ45TcBBAE7rzD5du"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x0270cb4e50d6bcdd780df229606076d39df796860d266b5426f374c36f34fe89",
        "urls": [
          "bzz-raw://511db944b3f0a57b56fda90d1e466cca6a0dea2297d816251966c8f025313973",
          "dweb:/ipfs/QmRgu5uCaKkoRr3amWGfhy6bVwhpH5tr1vynaNQyEYiE4p"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xcfa79cbb4867877ee537a899bf75d42b712dac8519ef438939ce36073532454d",
        "urls": [
          "bzz-raw://0d7881116d22618a7b940d002cf03bdcf385f7c564db0293f4f847a7368788e2",
          "dweb:/ipfs/QmXL61H7ahe5Buh9xNGqgmLR4tDYoPpYw3Y5ppRbbLkFqk"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94",
        "urls": [
          "bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2",
          "dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol": {
        "keccak256": "0xdd98bfe1095cbc031cd6ded0d4e8fc386dba441130fba7c9892903b76f2236d9",
        "urls": [
          "bzz-raw://c2212565ab7fa7c3d21f5f69b47d2d4af5ef3ccfc490a40f7d37fd069fd27df6",
          "dweb:/ipfs/QmUWCJ83N9PJBWEJSAyRSGdCaHuFjGbDtnthFCctbrdWoy"
        ],
        "license": "MIT"
      },
      "script/testAMM.s.sol": {
        "keccak256": "0xeeefcd6036d65f10526309a5a457e14830128dcb779a55e4854fdb4a4fc03356",
        "urls": [
          "bzz-raw://cc60559c9bc80841bb461b8a59ea3ae96e9471ee64dee2ff03b4fc2bd1654636",
          "dweb:/ipfs/QmRC7HBhgwUk2TjqC9rWxTRaJWHByi8tGyD5raf8xYbVgS"
        ],
        "license": "UNLICENSED"
      },
      "src/erc20.sol": {
        "keccak256": "0xa2aef0e620248ce1f28d737d752d85a6399ed7f8a5e297d1b9e88814ac4658bb",
        "urls": [
          "bzz-raw://0c959eb4f7332ad2ec28d2dd26981b34a822fcbd5127acb7aa92ab108d6b0d32",
          "dweb:/ipfs/QmdF6SNNf68TcBnJzfoTmSSYmXUCjzQG2EYuBzuLEr61fj"
        ],
        "license": "GPL-3.0"
      },
      "src/simpleamm.sol": {
        "keccak256": "0xc08d308936e866f47b5eb78e5bab6eb9f96c06edf8ed7ae2dbc6b17d935b2b54",
        "urls": [
          "bzz-raw://29069e9fce03b36317ad0b548dddeedf19baba7098ce90b0a48e79285742ab1a",
          "dweb:/ipfs/QmbxBiFLUnupSHeZfECYPB7K4FAKwhRShgeHtcFBZVrmZe"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "script/testAMM.s.sol",
    "id": 1573,
    "exportedSymbols": {
      "AMM": [
        2393
      ],
      "Address": [
        1019
      ],
      "Context": [
        1041
      ],
      "ERC20": [
        586
      ],
      "IERC20": [
        664
      ],
      "IERC20Metadata": [
        689
      ],
      "SafeMath": [
        1353
      ],
      "TestSimpleAMM": [
        1572
      ],
      "testGaoDuckToken": [
        1644
      ]
    },
    "nodeType": "SourceUnit",
    "src": "40:2012:6",
    "nodes": [
      {
        "id": 1355,
        "nodeType": "PragmaDirective",
        "src": "40:24:6",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".18"
        ]
      },
      {
        "id": 1356,
        "nodeType": "ImportDirective",
        "src": "68:30:6",
        "nodes": [],
        "absolutePath": "src/simpleamm.sol",
        "file": "../src/simpleamm.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1573,
        "sourceUnit": 2394,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1357,
        "nodeType": "ImportDirective",
        "src": "100:26:6",
        "nodes": [],
        "absolutePath": "src/erc20.sol",
        "file": "../src/erc20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1573,
        "sourceUnit": 1645,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1358,
        "nodeType": "ImportDirective",
        "src": "128:55:6",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1573,
        "sourceUnit": 587,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1359,
        "nodeType": "ImportDirective",
        "src": "185:57:6",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1573,
        "sourceUnit": 1354,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1360,
        "nodeType": "ImportDirective",
        "src": "244:51:6",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "file": "@openzeppelin/contracts/utils/Address.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1573,
        "sourceUnit": 1020,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1572,
        "nodeType": "ContractDefinition",
        "src": "299:1751:6",
        "nodes": [
          {
            "id": 1363,
            "nodeType": "UsingForDirective",
            "src": "329:34:6",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 1361,
              "name": "Address",
              "nameLocations": [
                "335:7:6"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1019,
              "src": "335:7:6"
            },
            "typeName": {
              "id": 1362,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "347:15:6",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            }
          },
          {
            "id": 1367,
            "nodeType": "EventDefinition",
            "src": "369:24:6",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "a95e6e2a182411e7a6f9ed114a85c3761d87f9b8f453d842c71235aa64fff99f",
            "name": "LogString",
            "nameLocation": "375:9:6",
            "parameters": {
              "id": 1366,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1365,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1367,
                  "src": "385:6:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1364,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "385:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "384:8:6"
            }
          },
          {
            "id": 1371,
            "nodeType": "EventDefinition",
            "src": "399:23:6",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "0ac68d08c5119b8cdb4058edbf0d4168f208ec3935d26a8f1f0d92eb9d4de8bf",
            "name": "LogUint",
            "nameLocation": "405:7:6",
            "parameters": {
              "id": 1370,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1369,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1371,
                  "src": "413:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1368,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "413:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "412:9:6"
            }
          },
          {
            "id": 1374,
            "nodeType": "VariableDeclaration",
            "src": "428:27:6",
            "nodes": [],
            "constant": false,
            "functionSelector": "85195ad9",
            "mutability": "mutable",
            "name": "tGD",
            "nameLocation": "452:3:6",
            "scope": 1572,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_testGaoDuckToken_$1644",
              "typeString": "contract testGaoDuckToken"
            },
            "typeName": {
              "id": 1373,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1372,
                "name": "testGaoDuckToken",
                "nameLocations": [
                  "428:16:6"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1644,
                "src": "428:16:6"
              },
              "referencedDeclaration": 1644,
              "src": "428:16:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_testGaoDuckToken_$1644",
                "typeString": "contract testGaoDuckToken"
              }
            },
            "visibility": "public"
          },
          {
            "id": 1377,
            "nodeType": "VariableDeclaration",
            "src": "462:22:6",
            "nodes": [],
            "constant": false,
            "functionSelector": "53911025",
            "mutability": "mutable",
            "name": "ammInstance",
            "nameLocation": "473:11:6",
            "scope": 1572,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AMM_$2393",
              "typeString": "contract AMM"
            },
            "typeName": {
              "id": 1376,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1375,
                "name": "AMM",
                "nameLocations": [
                  "462:3:6"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2393,
                "src": "462:3:6"
              },
              "referencedDeclaration": 2393,
              "src": "462:3:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AMM_$2393",
                "typeString": "contract AMM"
              }
            },
            "visibility": "public"
          },
          {
            "id": 1379,
            "nodeType": "VariableDeclaration",
            "src": "491:20:6",
            "nodes": [],
            "constant": false,
            "functionSelector": "ac1717b0",
            "mutability": "mutable",
            "name": "user1",
            "nameLocation": "506:5:6",
            "scope": 1572,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1378,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "491:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 1381,
            "nodeType": "VariableDeclaration",
            "src": "518:20:6",
            "nodes": [],
            "constant": false,
            "functionSelector": "b9edb1af",
            "mutability": "mutable",
            "name": "user2",
            "nameLocation": "533:5:6",
            "scope": 1572,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1380,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "518:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 1394,
            "nodeType": "FunctionDefinition",
            "src": "547:103:6",
            "nodes": [],
            "body": {
              "id": 1393,
              "nodeType": "Block",
              "src": "569:81:6",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1384,
                      "name": "beforeEach",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1446,
                      "src": "580:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "580:12:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1386,
                  "nodeType": "ExpressionStatement",
                  "src": "580:12:6"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1387,
                      "name": "testAddLiquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1519,
                      "src": "603:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "603:18:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1389,
                  "nodeType": "ExpressionStatement",
                  "src": "603:18:6"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1390,
                      "name": "testSwap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1571,
                      "src": "632:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "632:10:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1392,
                  "nodeType": "ExpressionStatement",
                  "src": "632:10:6"
                }
              ]
            },
            "functionSelector": "c0406226",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "run",
            "nameLocation": "556:3:6",
            "parameters": {
              "id": 1382,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "559:2:6"
            },
            "returnParameters": {
              "id": 1383,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "569:0:6"
            },
            "scope": 1572,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1446,
            "nodeType": "FunctionDefinition",
            "src": "658:475:6",
            "nodes": [],
            "body": {
              "id": 1445,
              "nodeType": "Block",
              "src": "687:446:6",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 1404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1397,
                      "name": "tGD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1374,
                      "src": "823:3:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_testGaoDuckToken_$1644",
                        "typeString": "contract testGaoDuckToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "7465737447616f4475636b",
                          "id": 1401,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "850:13:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_14680c2b7c1d5159e7cc93aca9f93b2bc94c11040c591083002db0a2a8ea2c0a",
                            "typeString": "literal_string \"testGaoDuck\""
                          },
                          "value": "testGaoDuck"
                        },
                        {
                          "hexValue": "744744",
                          "id": 1402,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "865:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_30b47107779dc4e0119fd79593675c194e62aa2b52f0ca941aaebf0ee480e3e5",
                            "typeString": "literal_string \"tGD\""
                          },
                          "value": "tGD"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_14680c2b7c1d5159e7cc93aca9f93b2bc94c11040c591083002db0a2a8ea2c0a",
                            "typeString": "literal_string \"testGaoDuck\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_30b47107779dc4e0119fd79593675c194e62aa2b52f0ca941aaebf0ee480e3e5",
                            "typeString": "literal_string \"tGD\""
                          }
                        ],
                        "id": 1400,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "829:20:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_contract$_testGaoDuckToken_$1644_$",
                          "typeString": "function (string memory,string memory) returns (contract testGaoDuckToken)"
                        },
                        "typeName": {
                          "id": 1399,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1398,
                            "name": "testGaoDuckToken",
                            "nameLocations": [
                              "833:16:6"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1644,
                            "src": "833:16:6"
                          },
                          "referencedDeclaration": 1644,
                          "src": "833:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_testGaoDuckToken_$1644",
                            "typeString": "contract testGaoDuckToken"
                          }
                        }
                      },
                      "id": 1403,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "829:42:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_testGaoDuckToken_$1644",
                        "typeString": "contract testGaoDuckToken"
                      }
                    },
                    "src": "823:48:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_testGaoDuckToken_$1644",
                      "typeString": "contract testGaoDuckToken"
                    }
                  },
                  "id": 1405,
                  "nodeType": "ExpressionStatement",
                  "src": "823:48:6"
                },
                {
                  "expression": {
                    "id": 1415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1406,
                      "name": "ammInstance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1377,
                      "src": "882:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AMM_$2393",
                        "typeString": "contract AMM"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 1412,
                              "name": "tGD",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1374,
                              "src": "912:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_testGaoDuckToken_$1644",
                                "typeString": "contract testGaoDuckToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_testGaoDuckToken_$1644",
                                "typeString": "contract testGaoDuckToken"
                              }
                            ],
                            "id": 1411,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "904:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1410,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "904:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1413,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "904:12:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1409,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "896:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_AMM_$2393_$",
                          "typeString": "function (address) returns (contract AMM)"
                        },
                        "typeName": {
                          "id": 1408,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1407,
                            "name": "AMM",
                            "nameLocations": [
                              "900:3:6"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2393,
                            "src": "900:3:6"
                          },
                          "referencedDeclaration": 2393,
                          "src": "900:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AMM_$2393",
                            "typeString": "contract AMM"
                          }
                        }
                      },
                      "id": 1414,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "896:21:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AMM_$2393",
                        "typeString": "contract AMM"
                      }
                    },
                    "src": "882:35:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AMM_$2393",
                      "typeString": "contract AMM"
                    }
                  },
                  "id": 1416,
                  "nodeType": "ExpressionStatement",
                  "src": "882:35:6"
                },
                {
                  "expression": {
                    "id": 1422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1417,
                      "name": "user1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1379,
                      "src": "930:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "307831323334353637383930313233343536373839303132333435363738393031323334353637383930",
                          "id": 1420,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "946:42:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0x1234567890123456789012345678901234567890"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1419,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "938:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1418,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "938:7:6",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1421,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "938:51:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "930:59:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1423,
                  "nodeType": "ExpressionStatement",
                  "src": "930:59:6"
                },
                {
                  "expression": {
                    "id": 1429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1424,
                      "name": "user2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1381,
                      "src": "1000:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "307830393837363534333231303938373635343332313039383736353433323130393837363534333231",
                          "id": 1427,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1016:42:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0x0987654321098765432109876543210987654321"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1426,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1008:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1425,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1008:7:6",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1428,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1008:51:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1000:59:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1430,
                  "nodeType": "ExpressionStatement",
                  "src": "1000:59:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1434,
                        "name": "user1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1379,
                        "src": "1081:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "32303030",
                        "id": 1435,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1088:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000_by_1",
                          "typeString": "int_const 2000"
                        },
                        "value": "2000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_2000_by_1",
                          "typeString": "int_const 2000"
                        }
                      ],
                      "expression": {
                        "id": 1431,
                        "name": "tGD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1374,
                        "src": "1072:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_testGaoDuckToken_$1644",
                          "typeString": "contract testGaoDuckToken"
                        }
                      },
                      "id": 1433,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1076:4:6",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1608,
                      "src": "1072:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 1436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1072:21:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1437,
                  "nodeType": "ExpressionStatement",
                  "src": "1072:21:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1441,
                        "name": "user2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1381,
                        "src": "1113:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "32303030",
                        "id": 1442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1120:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000_by_1",
                          "typeString": "int_const 2000"
                        },
                        "value": "2000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_2000_by_1",
                          "typeString": "int_const 2000"
                        }
                      ],
                      "expression": {
                        "id": 1438,
                        "name": "tGD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1374,
                        "src": "1104:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_testGaoDuckToken_$1644",
                          "typeString": "contract testGaoDuckToken"
                        }
                      },
                      "id": 1440,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1108:4:6",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1608,
                      "src": "1104:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 1443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1104:21:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1444,
                  "nodeType": "ExpressionStatement",
                  "src": "1104:21:6"
                }
              ]
            },
            "functionSelector": "6331e7d4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "beforeEach",
            "nameLocation": "667:10:6",
            "parameters": {
              "id": 1395,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "677:2:6"
            },
            "returnParameters": {
              "id": 1396,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "687:0:6"
            },
            "scope": 1572,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1519,
            "nodeType": "FunctionDefinition",
            "src": "1141:517:6",
            "nodes": [],
            "body": {
              "id": 1518,
              "nodeType": "Block",
              "src": "1176:482:6",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1449,
                      "name": "beforeEach",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1446,
                      "src": "1187:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1450,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1187:12:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1451,
                  "nodeType": "ExpressionStatement",
                  "src": "1187:12:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1457,
                            "name": "ammInstance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1377,
                            "src": "1232:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AMM_$2393",
                              "typeString": "contract AMM"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AMM_$2393",
                              "typeString": "contract AMM"
                            }
                          ],
                          "id": 1456,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1224:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1455,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1224:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1458,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1224:20:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 1459,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1246:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "id": 1452,
                        "name": "tGD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1374,
                        "src": "1212:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_testGaoDuckToken_$1644",
                          "typeString": "contract testGaoDuckToken"
                        }
                      },
                      "id": 1454,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1216:7:6",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 166,
                      "src": "1212:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1212:39:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1461,
                  "nodeType": "ExpressionStatement",
                  "src": "1212:39:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1465,
                        "name": "user1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1379,
                        "src": "1279:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1468,
                            "name": "ammInstance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1377,
                            "src": "1294:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AMM_$2393",
                              "typeString": "contract AMM"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AMM_$2393",
                              "typeString": "contract AMM"
                            }
                          ],
                          "id": 1467,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1286:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1466,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1286:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1469,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1286:20:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 1470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1308:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "id": 1462,
                        "name": "tGD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1374,
                        "src": "1262:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_testGaoDuckToken_$1644",
                          "typeString": "contract testGaoDuckToken"
                        }
                      },
                      "id": 1464,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1266:12:6",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 199,
                      "src": "1262:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1262:51:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1472,
                  "nodeType": "ExpressionStatement",
                  "src": "1262:51:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1478,
                            "name": "ammInstance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1377,
                            "src": "1346:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AMM_$2393",
                              "typeString": "contract AMM"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AMM_$2393",
                              "typeString": "contract AMM"
                            }
                          ],
                          "id": 1477,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1338:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1476,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1338:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1479,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1338:20:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 1480,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1360:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "id": 1473,
                        "name": "tGD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1374,
                        "src": "1326:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_testGaoDuckToken_$1644",
                          "typeString": "contract testGaoDuckToken"
                        }
                      },
                      "id": 1475,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1330:7:6",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 166,
                      "src": "1326:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1326:39:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1482,
                  "nodeType": "ExpressionStatement",
                  "src": "1326:39:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1486,
                        "name": "user2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1381,
                        "src": "1393:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1489,
                            "name": "ammInstance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1377,
                            "src": "1408:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AMM_$2393",
                              "typeString": "contract AMM"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AMM_$2393",
                              "typeString": "contract AMM"
                            }
                          ],
                          "id": 1488,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1400:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1487,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1400:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1490,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1400:20:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 1491,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1422:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "id": 1483,
                        "name": "tGD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1374,
                        "src": "1376:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_testGaoDuckToken_$1644",
                          "typeString": "contract testGaoDuckToken"
                        }
                      },
                      "id": 1485,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1380:12:6",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 199,
                      "src": "1376:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1376:51:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1493,
                  "nodeType": "ExpressionStatement",
                  "src": "1376:51:6"
                },
                {
                  "assignments": [
                    1495
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1495,
                      "mutability": "mutable",
                      "name": "sharesUser1",
                      "nameLocation": "1448:11:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1518,
                      "src": "1440:19:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1494,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1440:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1502,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31303030",
                        "id": 1500,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1503:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          }
                        ],
                        "expression": {
                          "id": 1496,
                          "name": "ammInstance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1377,
                          "src": "1462:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AMM_$2393",
                            "typeString": "contract AMM"
                          }
                        },
                        "id": 1497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1474:12:6",
                        "memberName": "addLiquidity",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2191,
                        "src": "1462:24:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256) payable external returns (uint256)"
                        }
                      },
                      "id": 1499,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31",
                          "id": 1498,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1494:7:6",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        }
                      ],
                      "src": "1462:40:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$_t_uint256_$value",
                        "typeString": "function (uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 1501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1462:46:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1440:68:6"
                },
                {
                  "assignments": [
                    1504
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1504,
                      "mutability": "mutable",
                      "name": "sharesUser2",
                      "nameLocation": "1527:11:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1518,
                      "src": "1519:19:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1503,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1519:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1511,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31303030",
                        "id": 1509,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1582:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          }
                        ],
                        "expression": {
                          "id": 1505,
                          "name": "ammInstance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1377,
                          "src": "1541:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AMM_$2393",
                            "typeString": "contract AMM"
                          }
                        },
                        "id": 1506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1553:12:6",
                        "memberName": "addLiquidity",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2191,
                        "src": "1541:24:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256) payable external returns (uint256)"
                        }
                      },
                      "id": 1508,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31",
                          "id": 1507,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1573:7:6",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        }
                      ],
                      "src": "1541:40:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$_t_uint256_$value",
                        "typeString": "function (uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 1510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1541:46:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1519:68:6"
                },
                {
                  "assignments": [
                    1513
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1513,
                      "mutability": "mutable",
                      "name": "expectedShares",
                      "nameLocation": "1608:14:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1518,
                      "src": "1600:22:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1512,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1600:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1517,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1514,
                        "name": "ammInstance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1377,
                        "src": "1625:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AMM_$2393",
                          "typeString": "contract AMM"
                        }
                      },
                      "id": 1515,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1637:11:6",
                      "memberName": "totalSupply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1662,
                      "src": "1625:23:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 1516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1625:25:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1600:50:6"
                }
              ]
            },
            "functionSelector": "65d40323",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testAddLiquidity",
            "nameLocation": "1150:16:6",
            "parameters": {
              "id": 1447,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1166:2:6"
            },
            "returnParameters": {
              "id": 1448,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1176:0:6"
            },
            "scope": 1572,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1571,
            "nodeType": "FunctionDefinition",
            "src": "1666:381:6",
            "nodes": [],
            "body": {
              "id": 1570,
              "nodeType": "Block",
              "src": "1693:354:6",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1522,
                      "name": "beforeEach",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1446,
                      "src": "1704:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1704:12:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1524,
                  "nodeType": "ExpressionStatement",
                  "src": "1704:12:6"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1525,
                      "name": "testAddLiquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1519,
                      "src": "1727:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1727:18:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1527,
                  "nodeType": "ExpressionStatement",
                  "src": "1727:18:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1533,
                            "name": "ammInstance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1377,
                            "src": "1778:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AMM_$2393",
                              "typeString": "contract AMM"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AMM_$2393",
                              "typeString": "contract AMM"
                            }
                          ],
                          "id": 1532,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1770:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1531,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1770:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1534,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1770:20:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 1535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1792:2:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "expression": {
                        "id": 1528,
                        "name": "tGD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1374,
                        "src": "1758:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_testGaoDuckToken_$1644",
                          "typeString": "contract testGaoDuckToken"
                        }
                      },
                      "id": 1530,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1762:7:6",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 166,
                      "src": "1758:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1758:37:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1537,
                  "nodeType": "ExpressionStatement",
                  "src": "1758:37:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1541,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1823:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1542,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1827:6:6",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1823:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1543,
                        "name": "user1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1379,
                        "src": "1835:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 1544,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1842:2:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "expression": {
                        "id": 1538,
                        "name": "tGD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1374,
                        "src": "1806:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_testGaoDuckToken_$1644",
                          "typeString": "contract testGaoDuckToken"
                        }
                      },
                      "id": 1540,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1810:12:6",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 199,
                      "src": "1806:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1545,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1806:39:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1546,
                  "nodeType": "ExpressionStatement",
                  "src": "1806:39:6"
                },
                {
                  "assignments": [
                    1548
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1548,
                      "mutability": "mutable",
                      "name": "ethAmountBeforeSwap",
                      "nameLocation": "1866:19:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1570,
                      "src": "1858:27:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1547,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1858:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1554,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 1551,
                          "name": "user1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1379,
                          "src": "1896:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1550,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1888:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1549,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1888:7:6",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1552,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1888:14:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "1903:7:6",
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "1888:22:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1858:52:6"
                },
                {
                  "assignments": [
                    1556
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1556,
                      "mutability": "mutable",
                      "name": "ethAmountOut",
                      "nameLocation": "1931:12:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1570,
                      "src": "1923:20:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1555,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1923:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1561,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "3130",
                        "id": 1559,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1974:2:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "expression": {
                        "id": 1557,
                        "name": "ammInstance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1377,
                        "src": "1946:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AMM_$2393",
                          "typeString": "contract AMM"
                        }
                      },
                      "id": 1558,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1958:15:6",
                      "memberName": "swapTokenForETH",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2035,
                      "src": "1946:27:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) external returns (uint256)"
                      }
                    },
                    "id": 1560,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1946:31:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1923:54:6"
                },
                {
                  "assignments": [
                    1563
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1563,
                      "mutability": "mutable",
                      "name": "ethAmountAfterSwap",
                      "nameLocation": "1996:18:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1570,
                      "src": "1988:26:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1562,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1988:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1569,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 1566,
                          "name": "user1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1379,
                          "src": "2025:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1565,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2017:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1564,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2017:7:6",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1567,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2017:14:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "2032:7:6",
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "2017:22:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1988:51:6"
                }
              ]
            },
            "functionSelector": "6e008a03",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testSwap",
            "nameLocation": "1675:8:6",
            "parameters": {
              "id": 1520,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1683:2:6"
            },
            "returnParameters": {
              "id": 1521,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1693:0:6"
            },
            "scope": 1572,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "TestSimpleAMM",
        "contractDependencies": [
          1644,
          2393
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          1572
        ],
        "name": "TestSimpleAMM",
        "nameLocation": "308:13:6",
        "scope": 1573,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 6
}