{
	"id": "f3fcc9c5ae293d31a8bb1f7214d1a6e7",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"W6/simpleAMM/src/simpleAMMV6ERC.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.18;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/Math.sol\";\r\n//merge 0xd2a5bC10698FD955D1Fe6cb468a17809A08fd005\r\ncontract AMM {\r\n    address developer;\r\n\r\n    IERC20 public immutable token0;\r\n    IERC20 public immutable token1;\r\n\r\n    uint256 public reserve0;\r\n    uint256 public reserve1;\r\n\r\n    uint256 public totalSupply;\r\n    mapping(address => uint256) public balanceOf;\r\n\r\n    constructor(address _token0, address _token1) {\r\n        developer = msg.sender;\r\n        token0 = IERC20(_token0);\r\n        token1 = IERC20(_token1);\r\n    }\r\n\r\n    function _mint(address _to, uint256 _amount) private {\r\n        balanceOf[_to] += _amount;\r\n        totalSupply += _amount;\r\n    }\r\n\r\n    function _burn(address _from, uint256 _amount) private {\r\n        balanceOf[_from] -= _amount;\r\n        totalSupply -= _amount;\r\n    }\r\n\r\n    function _update(uint256 _reserve0, uint256 _reserve1) private {\r\n        reserve0 = _reserve0;\r\n        reserve1 = _reserve1;\r\n    }\r\n\r\n    function swap(uint256 _amountIn) public returns (uint256 amountOut) {\r\n        token1.transferFrom(msg.sender, address(this), _amountIn);\r\n        uint256 amountInWithFee = (_amountIn * 997) / 1000;\r\n        amountOut = (reserve1 * amountInWithFee) / (reserve0 + amountInWithFee);\r\n        uint256 feeToDeveloper = _amountIn * 3 * totalSupply / (reserve0 * 2000);\r\n        _mint(developer, feeToDeveloper); // 50% of the profit to developer\r\n\r\n        token0.transfer(msg.sender, amountOut);\r\n\r\n        _update(token0.balanceOf(address(this)), token1.balanceOf(address(this)));\r\n    }\r\n\r\n    function swapTokenForToken1(uint256 _amountIn) public returns (uint256 amountOut) {\r\n        token0.transferFrom(msg.sender, address(this), _amountIn);\r\n        uint256 amountInWithFee = (_amountIn * 997) / 1000;\r\n        amountOut = (reserve1 * amountInWithFee) / (reserve0 + amountInWithFee);\r\n        require(amountOut > 0, \"Insufficient output amount\");\r\n        uint256 feeToDeveloper = _amountIn * 3 * totalSupply / (reserve0 * 2000);\r\n        _mint(developer, feeToDeveloper); // 50% of the profit to developer\r\n\r\n        token1.transfer(msg.sender, amountOut);\r\n\r\n        _update(token0.balanceOf(address(this)), token1.balanceOf(address(this)));\r\n    }\r\n\r\n    function swap_WithSlipLock(\r\n        uint256 _amountIn,\r\n        uint256 _forwardOutput,\r\n        uint256 _slipLock\r\n    ) public returns (uint256 amountOut) {\r\n        token1.transferFrom(msg.sender, address(this), _amountIn);\r\n        uint256 amountInWithFee = (_amountIn * 997) / 1000;\r\n        amountOut = (reserve1 * amountInWithFee) / (reserve0 + amountInWithFee);\r\n        require(amountOut > 0, \"Insufficient output amount\");\r\n        require(amountOut >= (_forwardOutput * (1000 - _slipLock) / 1000), \"SlipLock\");\r\n        uint256 feeToDeveloper = _amountIn * 3 * totalSupply / (reserve0 * 2000);\r\n        _mint(developer, feeToDeveloper); // 50% of the profit to developer\r\n\r\n        token0.transfer(msg.sender, amountOut);\r\n        _update(token0.balanceOf(address(this)), token1.balanceOf(address(this)));\r\n    }\r\n    function swapTokenForToken1_WithSlipLock(\r\n        uint256 _amountIn,\r\n        uint256 _forwardOutput,\r\n        uint256 _slipLock\r\n    ) public returns (uint256 amountOut) {\r\n        token0.transferFrom(msg.sender, address(this), _amountIn);\r\n        uint256 amountInWithFee = (_amountIn * 997) / 1000;\r\n\r\n        amountOut = (reserve1 * amountInWithFee) / (reserve0 + amountInWithFee);\r\n        require(amountOut > 0, \"Insufficient output amount\");\r\n        require(amountOut >= (_forwardOutput * (1000 - _slipLock) / 1000), \"SlipLock\");\r\n        uint256 feeToDeveloper = _amountIn * 3 * totalSupply / (reserve0 * 2000);\r\n        _mint(developer, feeToDeveloper); // 50% of the profit to developer\r\n\r\n        token1.transfer(msg.sender, amountOut);\r\n\r\n        _update(token0.balanceOf(address(this)), token1.balanceOf(address(this)));\r\n    }\r\n\r\n    function addLiquidity(uint256 _amount0, uint256 _amount1) external returns (uint256 shares) {\r\n        token0.transferFrom(msg.sender, address(this), _amount0);\r\n        token1.transferFrom(msg.sender, address(this), _amount1);\r\n\r\n        if (reserve0 > 0 || reserve1 > 0) {\r\n            require((_amount0 * reserve1) / reserve0 == _amount1, \"Invalid liquidity ratio\");\r\n        }\r\n\r\n        if (totalSupply == 0) {\r\n            shares = _sqrt(_amount0 * _amount1);\r\n        } else {\r\n            shares = Math.min(\r\n                (_amount0 * totalSupply) / reserve0,\r\n                (_amount1 * totalSupply) / reserve1\r\n            );\r\n        }\r\n        require(shares > 0, \"shares = 0\");\r\n        _mint(msg.sender, shares);\r\n\r\n        _update(token0.balanceOf(address(this)), token1.balanceOf(address(this)));\r\n    }\r\n\r\n    function removeAllLiquidity(address _user) external returns (uint256 amount0, uint256 amount1) {\r\n        return _removeLiquidity(_user, balanceOf[_user]);\r\n    }\r\n\r\n    function removeLiquidity(uint256 _shares) external returns (uint256 amount0, uint256 amount1) {\r\n        require(_shares <= balanceOf[msg.sender], \"Insufficient balance\");\r\n        return _removeLiquidity(msg.sender, _shares);\r\n    }\r\n\r\n    function removeLiquidity(address _user, uint256 _shares) external returns (uint256 amount0, uint256 amount1) {\r\n        require(_shares <= balanceOf[_user], \"Insufficient balance\");\r\n        return _removeLiquidity(_user, _shares);\r\n    }\r\n\r\n    function _removeLiquidity(address _user, uint256 _shares) internal returns (uint256 amount0, uint256 amount1) {\r\n        amount0 = (_shares * reserve0) / totalSupply;\r\n        amount1 = (_shares * reserve1) / totalSupply;\r\n        require(amount0 > 0 && amount1 > 0, \"amount0 or amount1 = 0\");\r\n\r\n        _burn(_user, _shares);\r\n        _update(token0.balanceOf(address(this)), token1.balanceOf(address(this)));\r\n\r\n        token0.transfer(_user, amount0);\r\n        token1.transfer(_user, amount1);\r\n    }\r\n\r\n    function myShares() public view returns (uint256) {\r\n        return balanceOf[msg.sender];\r\n    }\r\n    function sharesOf(address _user) public view returns (uint256) {\r\n        return balanceOf[_user];\r\n    }\r\n    function _sqrt(uint256 y) internal pure returns (uint256 z) {\r\n        if (y > 3) {\r\n            z = y;\r\n            uint256 x = y / 2 + 1;\r\n            while (x < z) {\r\n                z = x;\r\n                x = (y / x + x) / 2;\r\n            }\r\n        } else if (y != 0) {\r\n            z = 1;\r\n        }\r\n    }\r\n\r\n    function getERCPrice() public view returns (uint256) {\r\n        require(reserve0 > 0 && reserve1 > 0, \"Invalid reserves\");\r\n        uint256 decimals0 = ERC20(address(token0)).decimals();\r\n        uint256 decimals1 = ERC20(address(token1)).decimals();\r\n        return (reserve0 * (10**decimals1)) / (reserve1 * (10**decimals0));\r\n    }\r\n\r\n    function getPredictOutputToken1(uint256 _amount) public view returns (uint256) {\r\n        require(reserve0 > 0 && reserve1 > 0 && _amount > 0, \"Invalid reserves\");\r\n        uint256 amountInWithFee = (_amount * 997) / 1000;\r\n        return (reserve1 * amountInWithFee) / (reserve0 + amountInWithFee);\r\n    }\r\n\r\n    function getPredictOutputToken0(uint256 _amount) public view returns (uint256) {\r\n        require(reserve0 > 0 && reserve1 > 0 && _amount > 0, \"Invalid reserves\");\r\n        uint256 amountInWithFee = (_amount * 997) / 1000;\r\n        return (reserve0 * amountInWithFee) / (reserve1 + amountInWithFee);\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1);\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator,\n        Rounding rounding\n    ) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10**64) {\n                value /= 10**64;\n                result += 64;\n            }\n            if (value >= 10**32) {\n                value /= 10**32;\n                result += 32;\n            }\n            if (value >= 10**16) {\n                value /= 10**16;\n                result += 16;\n            }\n            if (value >= 10**8) {\n                value /= 10**8;\n                result += 8;\n            }\n            if (value >= 10**4) {\n                value /= 10**4;\n                result += 4;\n            }\n            if (value >= 10**2) {\n                value /= 10**2;\n                result += 2;\n            }\n            if (value >= 10**1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1401:13011  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1976:2089  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2050:2055  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2042:2047  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2042:2055  _name = name_ */\n  swap1\n  dup2\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2075:2082  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2065:2072  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2065:2082  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1976:2089  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1401:13011  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  jump(tag_9)\n    /* \"#utility.yul\":7:82   */\ntag_10:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_11:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_12:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_13:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_14:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_15:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_16:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_17:\n    /* \"#utility.yul\":957:984   */\n  tag_51\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_15\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_52\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_53\n  tag_16\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":1030:1118   */\ntag_52:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_18:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_55\n  tag_10\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_56\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_17\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_19:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_59\n  tag_16\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":1434:1490   */\ntag_58:\n    /* \"#utility.yul\":1508:1537   */\n  tag_60\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_15\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1856   */\ntag_20:\n    /* \"#utility.yul\":1691:1692   */\n  0x00\n    /* \"#utility.yul\":1701:1814   */\ntag_62:\n    /* \"#utility.yul\":1715:1721   */\n  dup4\n    /* \"#utility.yul\":1712:1713   */\n  dup2\n    /* \"#utility.yul\":1709:1722   */\n  lt\n    /* \"#utility.yul\":1701:1814   */\n  iszero\n  tag_64\n  jumpi\n    /* \"#utility.yul\":1800:1801   */\n  dup1\n    /* \"#utility.yul\":1795:1798   */\n  dup3\n    /* \"#utility.yul\":1791:1802   */\n  add\n    /* \"#utility.yul\":1785:1803   */\n  mload\n    /* \"#utility.yul\":1781:1782   */\n  dup2\n    /* \"#utility.yul\":1776:1779   */\n  dup5\n    /* \"#utility.yul\":1772:1783   */\n  add\n    /* \"#utility.yul\":1765:1804   */\n  mstore\n    /* \"#utility.yul\":1737:1739   */\n  0x20\n    /* \"#utility.yul\":1734:1735   */\n  dup2\n    /* \"#utility.yul\":1730:1740   */\n  add\n    /* \"#utility.yul\":1725:1740   */\n  swap1\n  pop\n    /* \"#utility.yul\":1701:1814   */\n  jump(tag_62)\ntag_64:\n    /* \"#utility.yul\":1848:1849   */\n  0x00\n    /* \"#utility.yul\":1839:1845   */\n  dup5\n    /* \"#utility.yul\":1834:1837   */\n  dup5\n    /* \"#utility.yul\":1830:1846   */\n  add\n    /* \"#utility.yul\":1823:1850   */\n  mstore\n    /* \"#utility.yul\":1672:1856   */\n  pop\n    /* \"#utility.yul\":1610:1856   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1862:2296   */\ntag_21:\n    /* \"#utility.yul\":1951:1956   */\n  0x00\n    /* \"#utility.yul\":1976:2042   */\n  tag_66\n    /* \"#utility.yul\":1992:2041   */\n  tag_67\n    /* \"#utility.yul\":2034:2040   */\n  dup5\n    /* \"#utility.yul\":1992:2041   */\n  tag_19\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":1976:2042   */\n  tag_18\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":1967:2042   */\n  swap1\n  pop\n    /* \"#utility.yul\":2065:2071   */\n  dup3\n    /* \"#utility.yul\":2058:2063   */\n  dup2\n    /* \"#utility.yul\":2051:2072   */\n  mstore\n    /* \"#utility.yul\":2103:2107   */\n  0x20\n    /* \"#utility.yul\":2096:2101   */\n  dup2\n    /* \"#utility.yul\":2092:2108   */\n  add\n    /* \"#utility.yul\":2141:2144   */\n  dup5\n    /* \"#utility.yul\":2132:2138   */\n  dup5\n    /* \"#utility.yul\":2127:2130   */\n  dup5\n    /* \"#utility.yul\":2123:2139   */\n  add\n    /* \"#utility.yul\":2120:2145   */\n  gt\n    /* \"#utility.yul\":2117:2229   */\n  iszero\n  tag_68\n  jumpi\n    /* \"#utility.yul\":2148:2227   */\n  tag_69\n  tag_14\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2117:2229   */\ntag_68:\n    /* \"#utility.yul\":2238:2290   */\n  tag_70\n    /* \"#utility.yul\":2283:2289   */\n  dup5\n    /* \"#utility.yul\":2278:2281   */\n  dup3\n    /* \"#utility.yul\":2273:2276   */\n  dup6\n    /* \"#utility.yul\":2238:2290   */\n  tag_20\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":1957:2296   */\n  pop\n    /* \"#utility.yul\":1862:2296   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2316:2671   */\ntag_22:\n    /* \"#utility.yul\":2383:2388   */\n  0x00\n    /* \"#utility.yul\":2432:2435   */\n  dup3\n    /* \"#utility.yul\":2425:2429   */\n  0x1f\n    /* \"#utility.yul\":2417:2423   */\n  dup4\n    /* \"#utility.yul\":2413:2430   */\n  add\n    /* \"#utility.yul\":2409:2436   */\n  slt\n    /* \"#utility.yul\":2399:2521   */\n  tag_72\n  jumpi\n    /* \"#utility.yul\":2440:2519   */\n  tag_73\n  tag_13\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":2399:2521   */\ntag_72:\n    /* \"#utility.yul\":2550:2556   */\n  dup2\n    /* \"#utility.yul\":2544:2557   */\n  mload\n    /* \"#utility.yul\":2575:2665   */\n  tag_74\n    /* \"#utility.yul\":2661:2664   */\n  dup5\n    /* \"#utility.yul\":2653:2659   */\n  dup3\n    /* \"#utility.yul\":2646:2650   */\n  0x20\n    /* \"#utility.yul\":2638:2644   */\n  dup7\n    /* \"#utility.yul\":2634:2651   */\n  add\n    /* \"#utility.yul\":2575:2665   */\n  tag_21\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":2566:2665   */\n  swap2\n  pop\n    /* \"#utility.yul\":2389:2671   */\n  pop\n    /* \"#utility.yul\":2316:2671   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2677:3530   */\ntag_3:\n    /* \"#utility.yul\":2776:2782   */\n  0x00\n    /* \"#utility.yul\":2784:2790   */\n  dup1\n    /* \"#utility.yul\":2833:2835   */\n  0x40\n    /* \"#utility.yul\":2821:2830   */\n  dup4\n    /* \"#utility.yul\":2812:2819   */\n  dup6\n    /* \"#utility.yul\":2808:2831   */\n  sub\n    /* \"#utility.yul\":2804:2836   */\n  slt\n    /* \"#utility.yul\":2801:2920   */\n  iszero\n  tag_76\n  jumpi\n    /* \"#utility.yul\":2839:2918   */\n  tag_77\n  tag_11\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":2801:2920   */\ntag_76:\n    /* \"#utility.yul\":2980:2981   */\n  0x00\n    /* \"#utility.yul\":2969:2978   */\n  dup4\n    /* \"#utility.yul\":2965:2982   */\n  add\n    /* \"#utility.yul\":2959:2983   */\n  mload\n    /* \"#utility.yul\":3010:3028   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3002:3008   */\n  dup2\n    /* \"#utility.yul\":2999:3029   */\n  gt\n    /* \"#utility.yul\":2996:3113   */\n  iszero\n  tag_78\n  jumpi\n    /* \"#utility.yul\":3032:3111   */\n  tag_79\n  tag_12\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":2996:3113   */\ntag_78:\n    /* \"#utility.yul\":3137:3211   */\n  tag_80\n    /* \"#utility.yul\":3203:3210   */\n  dup6\n    /* \"#utility.yul\":3194:3200   */\n  dup3\n    /* \"#utility.yul\":3183:3192   */\n  dup7\n    /* \"#utility.yul\":3179:3201   */\n  add\n    /* \"#utility.yul\":3137:3211   */\n  tag_22\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":3127:3211   */\n  swap3\n  pop\n    /* \"#utility.yul\":2930:3221   */\n  pop\n    /* \"#utility.yul\":3281:3283   */\n  0x20\n    /* \"#utility.yul\":3270:3279   */\n  dup4\n    /* \"#utility.yul\":3266:3284   */\n  add\n    /* \"#utility.yul\":3260:3285   */\n  mload\n    /* \"#utility.yul\":3312:3330   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3304:3310   */\n  dup2\n    /* \"#utility.yul\":3301:3331   */\n  gt\n    /* \"#utility.yul\":3298:3415   */\n  iszero\n  tag_81\n  jumpi\n    /* \"#utility.yul\":3334:3413   */\n  tag_82\n  tag_12\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":3298:3415   */\ntag_81:\n    /* \"#utility.yul\":3439:3513   */\n  tag_83\n    /* \"#utility.yul\":3505:3512   */\n  dup6\n    /* \"#utility.yul\":3496:3502   */\n  dup3\n    /* \"#utility.yul\":3485:3494   */\n  dup7\n    /* \"#utility.yul\":3481:3503   */\n  add\n    /* \"#utility.yul\":3439:3513   */\n  tag_22\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":3429:3513   */\n  swap2\n  pop\n    /* \"#utility.yul\":3231:3523   */\n  pop\n    /* \"#utility.yul\":2677:3530   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3536:3635   */\ntag_23:\n    /* \"#utility.yul\":3588:3594   */\n  0x00\n    /* \"#utility.yul\":3622:3627   */\n  dup2\n    /* \"#utility.yul\":3616:3628   */\n  mload\n    /* \"#utility.yul\":3606:3628   */\n  swap1\n  pop\n    /* \"#utility.yul\":3536:3635   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3641:3821   */\ntag_24:\n    /* \"#utility.yul\":3689:3766   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3686:3687   */\n  0x00\n    /* \"#utility.yul\":3679:3767   */\n  mstore\n    /* \"#utility.yul\":3786:3790   */\n  0x22\n    /* \"#utility.yul\":3783:3784   */\n  0x04\n    /* \"#utility.yul\":3776:3791   */\n  mstore\n    /* \"#utility.yul\":3810:3814   */\n  0x24\n    /* \"#utility.yul\":3807:3808   */\n  0x00\n    /* \"#utility.yul\":3800:3815   */\n  revert\n    /* \"#utility.yul\":3827:4147   */\ntag_25:\n    /* \"#utility.yul\":3871:3877   */\n  0x00\n    /* \"#utility.yul\":3908:3909   */\n  0x02\n    /* \"#utility.yul\":3902:3906   */\n  dup3\n    /* \"#utility.yul\":3898:3910   */\n  div\n    /* \"#utility.yul\":3888:3910   */\n  swap1\n  pop\n    /* \"#utility.yul\":3955:3956   */\n  0x01\n    /* \"#utility.yul\":3949:3953   */\n  dup3\n    /* \"#utility.yul\":3945:3957   */\n  and\n    /* \"#utility.yul\":3976:3994   */\n  dup1\n    /* \"#utility.yul\":3966:4047   */\n  tag_87\n  jumpi\n    /* \"#utility.yul\":4032:4036   */\n  0x7f\n    /* \"#utility.yul\":4024:4030   */\n  dup3\n    /* \"#utility.yul\":4020:4037   */\n  and\n    /* \"#utility.yul\":4010:4037   */\n  swap2\n  pop\n    /* \"#utility.yul\":3966:4047   */\ntag_87:\n    /* \"#utility.yul\":4094:4096   */\n  0x20\n    /* \"#utility.yul\":4086:4092   */\n  dup3\n    /* \"#utility.yul\":4083:4097   */\n  lt\n    /* \"#utility.yul\":4063:4081   */\n  dup2\n    /* \"#utility.yul\":4060:4098   */\n  sub\n    /* \"#utility.yul\":4057:4141   */\n  tag_88\n  jumpi\n    /* \"#utility.yul\":4113:4131   */\n  tag_89\n  tag_24\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":4057:4141   */\ntag_88:\n    /* \"#utility.yul\":3878:4147   */\n  pop\n    /* \"#utility.yul\":3827:4147   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4153:4294   */\ntag_26:\n    /* \"#utility.yul\":4202:4206   */\n  0x00\n    /* \"#utility.yul\":4225:4228   */\n  dup2\n    /* \"#utility.yul\":4217:4228   */\n  swap1\n  pop\n    /* \"#utility.yul\":4248:4251   */\n  dup2\n    /* \"#utility.yul\":4245:4246   */\n  0x00\n    /* \"#utility.yul\":4238:4252   */\n  mstore\n    /* \"#utility.yul\":4282:4286   */\n  0x20\n    /* \"#utility.yul\":4279:4280   */\n  0x00\n    /* \"#utility.yul\":4269:4287   */\n  keccak256\n    /* \"#utility.yul\":4261:4287   */\n  swap1\n  pop\n    /* \"#utility.yul\":4153:4294   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4300:4393   */\ntag_27:\n    /* \"#utility.yul\":4337:4343   */\n  0x00\n    /* \"#utility.yul\":4384:4386   */\n  0x20\n    /* \"#utility.yul\":4379:4381   */\n  0x1f\n    /* \"#utility.yul\":4372:4377   */\n  dup4\n    /* \"#utility.yul\":4368:4382   */\n  add\n    /* \"#utility.yul\":4364:4387   */\n  div\n    /* \"#utility.yul\":4354:4387   */\n  swap1\n  pop\n    /* \"#utility.yul\":4300:4393   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4399:4506   */\ntag_28:\n    /* \"#utility.yul\":4443:4451   */\n  0x00\n    /* \"#utility.yul\":4493:4498   */\n  dup3\n    /* \"#utility.yul\":4487:4491   */\n  dup3\n    /* \"#utility.yul\":4483:4499   */\n  shl\n    /* \"#utility.yul\":4462:4499   */\n  swap1\n  pop\n    /* \"#utility.yul\":4399:4506   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4512:4905   */\ntag_29:\n    /* \"#utility.yul\":4581:4587   */\n  0x00\n    /* \"#utility.yul\":4631:4632   */\n  0x08\n    /* \"#utility.yul\":4619:4629   */\n  dup4\n    /* \"#utility.yul\":4615:4633   */\n  mul\n    /* \"#utility.yul\":4654:4751   */\n  tag_94\n    /* \"#utility.yul\":4684:4750   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":4673:4682   */\n  dup3\n    /* \"#utility.yul\":4654:4751   */\n  tag_28\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":4772:4811   */\n  tag_95\n    /* \"#utility.yul\":4802:4810   */\n  dup7\n    /* \"#utility.yul\":4791:4800   */\n  dup4\n    /* \"#utility.yul\":4772:4811   */\n  tag_28\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":4760:4811   */\n  swap6\n  pop\n    /* \"#utility.yul\":4844:4848   */\n  dup1\n    /* \"#utility.yul\":4840:4849   */\n  not\n    /* \"#utility.yul\":4833:4838   */\n  dup5\n    /* \"#utility.yul\":4829:4850   */\n  and\n    /* \"#utility.yul\":4820:4850   */\n  swap4\n  pop\n    /* \"#utility.yul\":4893:4897   */\n  dup1\n    /* \"#utility.yul\":4883:4891   */\n  dup7\n    /* \"#utility.yul\":4879:4898   */\n  and\n    /* \"#utility.yul\":4872:4877   */\n  dup5\n    /* \"#utility.yul\":4869:4899   */\n  or\n    /* \"#utility.yul\":4859:4899   */\n  swap3\n  pop\n    /* \"#utility.yul\":4588:4905   */\n  pop\n  pop\n    /* \"#utility.yul\":4512:4905   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4911:4988   */\ntag_30:\n    /* \"#utility.yul\":4948:4955   */\n  0x00\n    /* \"#utility.yul\":4977:4982   */\n  dup2\n    /* \"#utility.yul\":4966:4982   */\n  swap1\n  pop\n    /* \"#utility.yul\":4911:4988   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4994:5054   */\ntag_31:\n    /* \"#utility.yul\":5022:5025   */\n  0x00\n    /* \"#utility.yul\":5043:5048   */\n  dup2\n    /* \"#utility.yul\":5036:5048   */\n  swap1\n  pop\n    /* \"#utility.yul\":4994:5054   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5060:5202   */\ntag_32:\n    /* \"#utility.yul\":5110:5119   */\n  0x00\n    /* \"#utility.yul\":5143:5196   */\n  tag_99\n    /* \"#utility.yul\":5161:5195   */\n  tag_100\n    /* \"#utility.yul\":5170:5194   */\n  tag_101\n    /* \"#utility.yul\":5188:5193   */\n  dup5\n    /* \"#utility.yul\":5170:5194   */\n  tag_30\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":5161:5195   */\n  tag_31\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":5143:5196   */\n  tag_30\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":5130:5196   */\n  swap1\n  pop\n    /* \"#utility.yul\":5060:5202   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5208:5283   */\ntag_33:\n    /* \"#utility.yul\":5251:5254   */\n  0x00\n    /* \"#utility.yul\":5272:5277   */\n  dup2\n    /* \"#utility.yul\":5265:5277   */\n  swap1\n  pop\n    /* \"#utility.yul\":5208:5283   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5289:5558   */\ntag_34:\n    /* \"#utility.yul\":5399:5438   */\n  tag_104\n    /* \"#utility.yul\":5430:5437   */\n  dup4\n    /* \"#utility.yul\":5399:5438   */\n  tag_32\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":5460:5551   */\n  tag_105\n    /* \"#utility.yul\":5509:5550   */\n  tag_106\n    /* \"#utility.yul\":5533:5549   */\n  dup3\n    /* \"#utility.yul\":5509:5550   */\n  tag_33\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":5501:5507   */\n  dup5\n    /* \"#utility.yul\":5494:5498   */\n  dup5\n    /* \"#utility.yul\":5488:5499   */\n  sload\n    /* \"#utility.yul\":5460:5551   */\n  tag_29\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":5454:5458   */\n  dup3\n    /* \"#utility.yul\":5447:5552   */\n  sstore\n    /* \"#utility.yul\":5365:5558   */\n  pop\n    /* \"#utility.yul\":5289:5558   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5564:5637   */\ntag_35:\n    /* \"#utility.yul\":5609:5612   */\n  0x00\n    /* \"#utility.yul\":5564:5637   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":5643:5832   */\ntag_36:\n    /* \"#utility.yul\":5720:5752   */\n  tag_109\n  tag_35\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":5761:5826   */\n  tag_110\n    /* \"#utility.yul\":5819:5825   */\n  dup2\n    /* \"#utility.yul\":5811:5817   */\n  dup5\n    /* \"#utility.yul\":5805:5809   */\n  dup5\n    /* \"#utility.yul\":5761:5826   */\n  tag_34\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":5696:5832   */\n  pop\n    /* \"#utility.yul\":5643:5832   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5838:6024   */\ntag_37:\n    /* \"#utility.yul\":5898:6018   */\ntag_112:\n    /* \"#utility.yul\":5915:5918   */\n  dup2\n    /* \"#utility.yul\":5908:5913   */\n  dup2\n    /* \"#utility.yul\":5905:5919   */\n  lt\n    /* \"#utility.yul\":5898:6018   */\n  iszero\n  tag_114\n  jumpi\n    /* \"#utility.yul\":5969:6008   */\n  tag_115\n    /* \"#utility.yul\":6006:6007   */\n  0x00\n    /* \"#utility.yul\":5999:6004   */\n  dup3\n    /* \"#utility.yul\":5969:6008   */\n  tag_36\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":5942:5943   */\n  0x01\n    /* \"#utility.yul\":5935:5940   */\n  dup2\n    /* \"#utility.yul\":5931:5944   */\n  add\n    /* \"#utility.yul\":5922:5944   */\n  swap1\n  pop\n    /* \"#utility.yul\":5898:6018   */\n  jump(tag_112)\ntag_114:\n    /* \"#utility.yul\":5838:6024   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6030:6573   */\ntag_38:\n    /* \"#utility.yul\":6131:6133   */\n  0x1f\n    /* \"#utility.yul\":6126:6129   */\n  dup3\n    /* \"#utility.yul\":6123:6134   */\n  gt\n    /* \"#utility.yul\":6120:6566   */\n  iszero\n  tag_117\n  jumpi\n    /* \"#utility.yul\":6165:6203   */\n  tag_118\n    /* \"#utility.yul\":6197:6202   */\n  dup2\n    /* \"#utility.yul\":6165:6203   */\n  tag_26\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":6249:6278   */\n  tag_119\n    /* \"#utility.yul\":6267:6277   */\n  dup5\n    /* \"#utility.yul\":6249:6278   */\n  tag_27\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":6239:6247   */\n  dup2\n    /* \"#utility.yul\":6235:6279   */\n  add\n    /* \"#utility.yul\":6432:6434   */\n  0x20\n    /* \"#utility.yul\":6420:6430   */\n  dup6\n    /* \"#utility.yul\":6417:6435   */\n  lt\n    /* \"#utility.yul\":6414:6463   */\n  iszero\n  tag_120\n  jumpi\n    /* \"#utility.yul\":6453:6461   */\n  dup2\n    /* \"#utility.yul\":6438:6461   */\n  swap1\n  pop\n    /* \"#utility.yul\":6414:6463   */\ntag_120:\n    /* \"#utility.yul\":6476:6556   */\n  tag_121\n    /* \"#utility.yul\":6532:6554   */\n  tag_122\n    /* \"#utility.yul\":6550:6553   */\n  dup6\n    /* \"#utility.yul\":6532:6554   */\n  tag_27\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":6522:6530   */\n  dup4\n    /* \"#utility.yul\":6518:6555   */\n  add\n    /* \"#utility.yul\":6505:6516   */\n  dup3\n    /* \"#utility.yul\":6476:6556   */\n  tag_37\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":6135:6566   */\n  pop\n  pop\n    /* \"#utility.yul\":6120:6566   */\ntag_117:\n    /* \"#utility.yul\":6030:6573   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6579:6696   */\ntag_39:\n    /* \"#utility.yul\":6633:6641   */\n  0x00\n    /* \"#utility.yul\":6683:6688   */\n  dup3\n    /* \"#utility.yul\":6677:6681   */\n  dup3\n    /* \"#utility.yul\":6673:6689   */\n  shr\n    /* \"#utility.yul\":6652:6689   */\n  swap1\n  pop\n    /* \"#utility.yul\":6579:6696   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6702:6871   */\ntag_40:\n    /* \"#utility.yul\":6746:6752   */\n  0x00\n    /* \"#utility.yul\":6779:6830   */\n  tag_125\n    /* \"#utility.yul\":6827:6828   */\n  0x00\n    /* \"#utility.yul\":6823:6829   */\n  not\n    /* \"#utility.yul\":6815:6820   */\n  dup5\n    /* \"#utility.yul\":6812:6813   */\n  0x08\n    /* \"#utility.yul\":6808:6821   */\n  mul\n    /* \"#utility.yul\":6779:6830   */\n  tag_39\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":6775:6831   */\n  not\n    /* \"#utility.yul\":6860:6864   */\n  dup1\n    /* \"#utility.yul\":6854:6858   */\n  dup4\n    /* \"#utility.yul\":6850:6865   */\n  and\n    /* \"#utility.yul\":6840:6865   */\n  swap2\n  pop\n    /* \"#utility.yul\":6753:6871   */\n  pop\n    /* \"#utility.yul\":6702:6871   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6876:7171   */\ntag_41:\n    /* \"#utility.yul\":6952:6956   */\n  0x00\n    /* \"#utility.yul\":7098:7127   */\n  tag_127\n    /* \"#utility.yul\":7123:7126   */\n  dup4\n    /* \"#utility.yul\":7117:7121   */\n  dup4\n    /* \"#utility.yul\":7098:7127   */\n  tag_40\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":7090:7127   */\n  swap2\n  pop\n    /* \"#utility.yul\":7160:7163   */\n  dup3\n    /* \"#utility.yul\":7157:7158   */\n  0x02\n    /* \"#utility.yul\":7153:7164   */\n  mul\n    /* \"#utility.yul\":7147:7151   */\n  dup3\n    /* \"#utility.yul\":7144:7165   */\n  or\n    /* \"#utility.yul\":7136:7165   */\n  swap1\n  pop\n    /* \"#utility.yul\":6876:7171   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7176:8571   */\ntag_7:\n    /* \"#utility.yul\":7293:7330   */\n  tag_129\n    /* \"#utility.yul\":7326:7329   */\n  dup3\n    /* \"#utility.yul\":7293:7330   */\n  tag_23\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":7395:7413   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7387:7393   */\n  dup2\n    /* \"#utility.yul\":7384:7414   */\n  gt\n    /* \"#utility.yul\":7381:7437   */\n  iszero\n  tag_130\n  jumpi\n    /* \"#utility.yul\":7417:7435   */\n  tag_131\n  tag_16\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":7381:7437   */\ntag_130:\n    /* \"#utility.yul\":7461:7499   */\n  tag_132\n    /* \"#utility.yul\":7493:7497   */\n  dup3\n    /* \"#utility.yul\":7487:7498   */\n  sload\n    /* \"#utility.yul\":7461:7499   */\n  tag_25\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":7546:7613   */\n  tag_133\n    /* \"#utility.yul\":7606:7612   */\n  dup3\n    /* \"#utility.yul\":7598:7604   */\n  dup3\n    /* \"#utility.yul\":7592:7596   */\n  dup6\n    /* \"#utility.yul\":7546:7613   */\n  tag_38\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":7640:7641   */\n  0x00\n    /* \"#utility.yul\":7664:7668   */\n  0x20\n    /* \"#utility.yul\":7651:7668   */\n  swap1\n  pop\n    /* \"#utility.yul\":7696:7698   */\n  0x1f\n    /* \"#utility.yul\":7688:7694   */\n  dup4\n    /* \"#utility.yul\":7685:7699   */\n  gt\n    /* \"#utility.yul\":7713:7714   */\n  0x01\n    /* \"#utility.yul\":7708:8326   */\n  dup2\n  eq\n  tag_135\n  jumpi\n    /* \"#utility.yul\":8370:8371   */\n  0x00\n    /* \"#utility.yul\":8387:8393   */\n  dup5\n    /* \"#utility.yul\":8384:8461   */\n  iszero\n  tag_136\n  jumpi\n    /* \"#utility.yul\":8436:8445   */\n  dup3\n    /* \"#utility.yul\":8431:8434   */\n  dup8\n    /* \"#utility.yul\":8427:8446   */\n  add\n    /* \"#utility.yul\":8421:8447   */\n  mload\n    /* \"#utility.yul\":8412:8447   */\n  swap1\n  pop\n    /* \"#utility.yul\":8384:8461   */\ntag_136:\n    /* \"#utility.yul\":8487:8554   */\n  tag_137\n    /* \"#utility.yul\":8547:8553   */\n  dup6\n    /* \"#utility.yul\":8540:8545   */\n  dup3\n    /* \"#utility.yul\":8487:8554   */\n  tag_41\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":8481:8485   */\n  dup7\n    /* \"#utility.yul\":8474:8555   */\n  sstore\n    /* \"#utility.yul\":8343:8565   */\n  pop\n    /* \"#utility.yul\":7678:8565   */\n  jump(tag_134)\n    /* \"#utility.yul\":7708:8326   */\ntag_135:\n    /* \"#utility.yul\":7760:7764   */\n  0x1f\n    /* \"#utility.yul\":7756:7765   */\n  not\n    /* \"#utility.yul\":7748:7754   */\n  dup5\n    /* \"#utility.yul\":7744:7766   */\n  and\n    /* \"#utility.yul\":7794:7831   */\n  tag_138\n    /* \"#utility.yul\":7826:7830   */\n  dup7\n    /* \"#utility.yul\":7794:7831   */\n  tag_26\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":7853:7854   */\n  0x00\n    /* \"#utility.yul\":7867:8075   */\ntag_139:\n    /* \"#utility.yul\":7881:7888   */\n  dup3\n    /* \"#utility.yul\":7878:7879   */\n  dup2\n    /* \"#utility.yul\":7875:7889   */\n  lt\n    /* \"#utility.yul\":7867:8075   */\n  iszero\n  tag_141\n  jumpi\n    /* \"#utility.yul\":7960:7969   */\n  dup5\n    /* \"#utility.yul\":7955:7958   */\n  dup10\n    /* \"#utility.yul\":7951:7970   */\n  add\n    /* \"#utility.yul\":7945:7971   */\n  mload\n    /* \"#utility.yul\":7937:7943   */\n  dup3\n    /* \"#utility.yul\":7930:7972   */\n  sstore\n    /* \"#utility.yul\":8011:8012   */\n  0x01\n    /* \"#utility.yul\":8003:8009   */\n  dup3\n    /* \"#utility.yul\":7999:8013   */\n  add\n    /* \"#utility.yul\":7989:8013   */\n  swap2\n  pop\n    /* \"#utility.yul\":8058:8060   */\n  0x20\n    /* \"#utility.yul\":8047:8056   */\n  dup6\n    /* \"#utility.yul\":8043:8061   */\n  add\n    /* \"#utility.yul\":8030:8061   */\n  swap5\n  pop\n    /* \"#utility.yul\":7904:7908   */\n  0x20\n    /* \"#utility.yul\":7901:7902   */\n  dup2\n    /* \"#utility.yul\":7897:7909   */\n  add\n    /* \"#utility.yul\":7892:7909   */\n  swap1\n  pop\n    /* \"#utility.yul\":7867:8075   */\n  jump(tag_139)\ntag_141:\n    /* \"#utility.yul\":8103:8109   */\n  dup7\n    /* \"#utility.yul\":8094:8101   */\n  dup4\n    /* \"#utility.yul\":8091:8110   */\n  lt\n    /* \"#utility.yul\":8088:8267   */\n  iszero\n  tag_142\n  jumpi\n    /* \"#utility.yul\":8161:8170   */\n  dup5\n    /* \"#utility.yul\":8156:8159   */\n  dup10\n    /* \"#utility.yul\":8152:8171   */\n  add\n    /* \"#utility.yul\":8146:8172   */\n  mload\n    /* \"#utility.yul\":8204:8252   */\n  tag_143\n    /* \"#utility.yul\":8246:8250   */\n  0x1f\n    /* \"#utility.yul\":8238:8244   */\n  dup10\n    /* \"#utility.yul\":8234:8251   */\n  and\n    /* \"#utility.yul\":8223:8232   */\n  dup3\n    /* \"#utility.yul\":8204:8252   */\n  tag_40\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":8196:8202   */\n  dup4\n    /* \"#utility.yul\":8189:8253   */\n  sstore\n    /* \"#utility.yul\":8111:8267   */\n  pop\n    /* \"#utility.yul\":8088:8267   */\ntag_142:\n    /* \"#utility.yul\":8313:8314   */\n  0x01\n    /* \"#utility.yul\":8309:8310   */\n  0x02\n    /* \"#utility.yul\":8301:8307   */\n  dup9\n    /* \"#utility.yul\":8297:8311   */\n  mul\n    /* \"#utility.yul\":8293:8315   */\n  add\n    /* \"#utility.yul\":8287:8291   */\n  dup9\n    /* \"#utility.yul\":8280:8316   */\n  sstore\n    /* \"#utility.yul\":7715:8326   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7678:8565   */\ntag_134:\n  pop\n    /* \"#utility.yul\":7268:8571   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7176:8571   */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1401:13011  contract ERC20 is Context, IERC20, IERC20Metadata {... */\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1401:13011  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2154:2252  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4431:4628  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3242:3348  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5190:5476  function transferFrom(... */\n    tag_6:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3091:3182  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5871:6105  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3406:3531  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2365:2467  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6592:7019  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3727:3916  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3974:4123  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2154:2252  function name() public view virtual override returns (string memory) {... */\n    tag_16:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2208:2221  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2240:2245  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2233:2245  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2154:2252  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4431:4628  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_22:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4514:4518  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4530:4543  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4546:4558  _msgSender() */\n      tag_71\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4546:4556  _msgSender */\n      tag_72\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4546:4558  _msgSender() */\n      jump\t// in\n    tag_71:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4530:4558  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4568:4600  _approve(owner, spender, amount) */\n      tag_73\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4577:4582  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4584:4591  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4593:4599  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4568:4576  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4568:4600  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_73:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4617:4621  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4610:4621  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4431:4628  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3242:3348  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_26:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3303:3310  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3329:3341  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3322:3341  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3242:3348  function totalSupply() public view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5190:5476  function transferFrom(... */\n    tag_32:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5317:5321  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5333:5348  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5351:5363  _msgSender() */\n      tag_77\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5351:5361  _msgSender */\n      tag_72\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5351:5363  _msgSender() */\n      jump\t// in\n    tag_77:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5333:5363  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5373:5411  _spendAllowance(from, spender, amount) */\n      tag_78\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5389:5393  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5395:5402  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5404:5410  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5373:5388  _spendAllowance */\n      tag_79\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5373:5411  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_78:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5421:5448  _transfer(from, to, amount) */\n      tag_80\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5431:5435  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5437:5439  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5441:5447  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5421:5430  _transfer */\n      tag_81\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5421:5448  _transfer(from, to, amount) */\n      jump\t// in\n    tag_80:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5465:5469  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5458:5469  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5190:5476  function transferFrom(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3091:3182  function decimals() public view virtual override returns (uint8) {... */\n    tag_35:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3149:3154  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3173:3175  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3166:3175  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3091:3182  function decimals() public view virtual override returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5871:6105  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5959:5963  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5975:5988  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5991:6003  _msgSender() */\n      tag_84\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5991:6001  _msgSender */\n      tag_72\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5991:6003  _msgSender() */\n      jump\t// in\n    tag_84:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5975:6003  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6013:6077  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_85\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6022:6027  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6029:6036  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6066:6076  addedValue */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6038:6063  allowance(owner, spender) */\n      tag_86\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6048:6053  owner */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6055:6062  spender */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6038:6047  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6038:6063  allowance(owner, spender) */\n      jump\t// in\n    tag_86:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6038:6076  allowance(owner, spender) + addedValue */\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6013:6021  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6013:6077  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n    tag_85:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6094:6098  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6087:6098  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5871:6105  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3406:3531  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3480:3487  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3506:3515  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3506:3524  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3516:3523  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3506:3524  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3499:3524  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3406:3531  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2365:2467  function symbol() public view virtual override returns (string memory) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2421:2434  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2453:2460  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2446:2460  return _symbol */\n      dup1\n      sload\n      tag_91\n      swap1\n      tag_65\n      jump\t// in\n    tag_91:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_92\n      swap1\n      tag_65\n      jump\t// in\n    tag_92:\n      dup1\n      iszero\n      tag_93\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_94\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_93)\n    tag_94:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_95:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_95\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_93:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2365:2467  function symbol() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6592:7019  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6685:6689  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6701:6714  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6717:6729  _msgSender() */\n      tag_97\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6717:6727  _msgSender */\n      tag_72\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6717:6729  _msgSender() */\n      jump\t// in\n    tag_97:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6701:6729  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6739:6763  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6766:6791  allowance(owner, spender) */\n      tag_98\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6776:6781  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6783:6790  spender */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6766:6775  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6766:6791  allowance(owner, spender) */\n      jump\t// in\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6739:6791  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6829:6844  subtractedValue */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6809:6825  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6809:6844  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6801:6886  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_100\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6920:6980  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_102\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6929:6934  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6936:6943  spender */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6964:6979  subtractedValue */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6945:6961  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6945:6979  currentAllowance - subtractedValue */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6920:6928  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6920:6980  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n    tag_102:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7008:7012  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7001:7012  return true */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6592:7019  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3727:3916  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3806:3810  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3822:3835  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3838:3850  _msgSender() */\n      tag_104\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3838:3848  _msgSender */\n      tag_72\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3838:3850  _msgSender() */\n      jump\t// in\n    tag_104:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3822:3850  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3860:3888  _transfer(owner, to, amount) */\n      tag_105\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3870:3875  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3877:3879  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3881:3887  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3860:3869  _transfer */\n      tag_81\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3860:3888  _transfer(owner, to, amount) */\n      jump\t// in\n    tag_105:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3905:3909  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3898:3909  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3727:3916  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3974:4123  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4063:4070  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4089:4100  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4089:4107  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4101:4106  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4089:4107  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4089:4116  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4108:4115  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4089:4116  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4082:4116  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3974:4123  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10504:10874  function _approve(... */\n    tag_74:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10652:10653  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10635:10654  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10635:10640  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10635:10654  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10627:10695  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_110\n      swap1\n      tag_111\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_109:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10732:10733  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10713:10734  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10713:10720  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10713:10734  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10705:10773  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_113\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_112:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10814:10820  amount */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10795  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10802  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10796:10801  owner */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10802  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10811  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10810  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10811  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10820  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10851:10858  spender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10835:10867  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10844:10849  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10835:10867  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10860:10866  amount */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10835:10867  Approval(owner, spender, amount) */\n      mload(0x40)\n      tag_115\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10504:10874  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11155:11596  function _spendAllowance(... */\n    tag_79:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11285:11309  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11312:11337  allowance(owner, spender) */\n      tag_117\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11322:11327  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11329:11336  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11312:11321  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11312:11337  allowance(owner, spender) */\n      jump\t// in\n    tag_117:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11285:11337  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11371:11388  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11351:11367  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11351:11388  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11347:11590  if (currentAllowance != type(uint256).max) {... */\n      tag_118\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11432:11438  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11412:11428  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11412:11438  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11404:11472  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_119:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11514:11565  _approve(owner, spender, currentAllowance - amount) */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11523:11528  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11530:11537  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11558:11564  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11539:11555  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11539:11564  currentAllowance - amount */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11514:11522  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11514:11565  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_122:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11347:11590  if (currentAllowance != type(uint256).max) {... */\n    tag_118:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11275:11596  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11155:11596  function _spendAllowance(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7473:8291  function _transfer(... */\n    tag_81:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7615:7616  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7599:7617  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7599:7603  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7599:7617  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7591:7659  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_125\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_124:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7691:7692  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7677:7693  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7677:7679  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7677:7693  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7669:7733  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_128\n      swap1\n      tag_129\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_127:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7744:7782  _beforeTokenTransfer(from, to, amount) */\n      tag_130\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7765:7769  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7771:7773  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7775:7781  amount */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7744:7764  _beforeTokenTransfer */\n      tag_131\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7744:7782  _beforeTokenTransfer(from, to, amount) */\n      jump\t// in\n    tag_130:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7793:7812  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7815:7824  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7815:7830  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7825:7829  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7815:7830  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7793:7830  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7863:7869  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7848:7859  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7848:7869  fromBalance >= amount */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7840:7912  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_133\n      swap1\n      tag_134\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_132:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7978:7984  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7964:7975  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7964:7984  fromBalance - amount */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7946:7955  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7946:7961  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7956:7960  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7946:7961  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7946:7984  _balances[from] = fromBalance - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8178:8184  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8161:8170  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8161:8174  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8171:8173  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8161:8174  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8161:8184  _balances[to] += amount */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8225:8227  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8210:8236  Transfer(from, to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8219:8223  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8210:8236  Transfer(from, to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8229:8235  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8210:8236  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_135\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8284  _afterTokenTransfer(from, to, amount) */\n      tag_136\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8267:8271  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8273:8275  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8277:8283  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8266  _afterTokenTransfer */\n      tag_137\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8284  _afterTokenTransfer(from, to, amount) */\n      jump\t// in\n    tag_136:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7581:8291  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7473:8291  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":12180:12301  function _beforeTokenTransfer(... */\n    tag_131:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":12889:13009  function _afterTokenTransfer(... */\n    tag_137:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_140:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_141:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:533   */\n    tag_142:\n        /* \"#utility.yul\":368:369   */\n      0x00\n        /* \"#utility.yul\":378:491   */\n    tag_180:\n        /* \"#utility.yul\":392:398   */\n      dup4\n        /* \"#utility.yul\":389:390   */\n      dup2\n        /* \"#utility.yul\":386:399   */\n      lt\n        /* \"#utility.yul\":378:491   */\n      iszero\n      tag_182\n      jumpi\n        /* \"#utility.yul\":477:478   */\n      dup1\n        /* \"#utility.yul\":472:475   */\n      dup3\n        /* \"#utility.yul\":468:479   */\n      add\n        /* \"#utility.yul\":462:480   */\n      mload\n        /* \"#utility.yul\":458:459   */\n      dup2\n        /* \"#utility.yul\":453:456   */\n      dup5\n        /* \"#utility.yul\":449:460   */\n      add\n        /* \"#utility.yul\":442:481   */\n      mstore\n        /* \"#utility.yul\":414:416   */\n      0x20\n        /* \"#utility.yul\":411:412   */\n      dup2\n        /* \"#utility.yul\":407:417   */\n      add\n        /* \"#utility.yul\":402:417   */\n      swap1\n      pop\n        /* \"#utility.yul\":378:491   */\n      jump(tag_180)\n    tag_182:\n        /* \"#utility.yul\":525:526   */\n      0x00\n        /* \"#utility.yul\":516:522   */\n      dup5\n        /* \"#utility.yul\":511:514   */\n      dup5\n        /* \"#utility.yul\":507:523   */\n      add\n        /* \"#utility.yul\":500:527   */\n      mstore\n        /* \"#utility.yul\":349:533   */\n      pop\n        /* \"#utility.yul\":287:533   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":539:641   */\n    tag_143:\n        /* \"#utility.yul\":580:586   */\n      0x00\n        /* \"#utility.yul\":631:633   */\n      0x1f\n        /* \"#utility.yul\":627:634   */\n      not\n        /* \"#utility.yul\":622:624   */\n      0x1f\n        /* \"#utility.yul\":615:620   */\n      dup4\n        /* \"#utility.yul\":611:625   */\n      add\n        /* \"#utility.yul\":607:635   */\n      and\n        /* \"#utility.yul\":597:635   */\n      swap1\n      pop\n        /* \"#utility.yul\":539:641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":647:1024   */\n    tag_144:\n        /* \"#utility.yul\":735:738   */\n      0x00\n        /* \"#utility.yul\":763:802   */\n      tag_185\n        /* \"#utility.yul\":796:801   */\n      dup3\n        /* \"#utility.yul\":763:802   */\n      tag_140\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":818:889   */\n      tag_186\n        /* \"#utility.yul\":882:888   */\n      dup2\n        /* \"#utility.yul\":877:880   */\n      dup6\n        /* \"#utility.yul\":818:889   */\n      tag_141\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":811:889   */\n      swap4\n      pop\n        /* \"#utility.yul\":898:963   */\n      tag_187\n        /* \"#utility.yul\":956:962   */\n      dup2\n        /* \"#utility.yul\":951:954   */\n      dup6\n        /* \"#utility.yul\":944:948   */\n      0x20\n        /* \"#utility.yul\":937:942   */\n      dup7\n        /* \"#utility.yul\":933:949   */\n      add\n        /* \"#utility.yul\":898:963   */\n      tag_142\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":988:1017   */\n      tag_188\n        /* \"#utility.yul\":1010:1016   */\n      dup2\n        /* \"#utility.yul\":988:1017   */\n      tag_143\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":983:986   */\n      dup5\n        /* \"#utility.yul\":979:1018   */\n      add\n        /* \"#utility.yul\":972:1018   */\n      swap2\n      pop\n        /* \"#utility.yul\":739:1024   */\n      pop\n        /* \"#utility.yul\":647:1024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1030:1343   */\n    tag_18:\n        /* \"#utility.yul\":1143:1147   */\n      0x00\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1170:1179   */\n      dup3\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"#utility.yul\":1158:1184   */\n      swap1\n      pop\n        /* \"#utility.yul\":1230:1239   */\n      dup2\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1220:1240   */\n      sub\n        /* \"#utility.yul\":1216:1217   */\n      0x00\n        /* \"#utility.yul\":1205:1214   */\n      dup4\n        /* \"#utility.yul\":1201:1218   */\n      add\n        /* \"#utility.yul\":1194:1241   */\n      mstore\n        /* \"#utility.yul\":1258:1336   */\n      tag_190\n        /* \"#utility.yul\":1331:1335   */\n      dup2\n        /* \"#utility.yul\":1322:1328   */\n      dup5\n        /* \"#utility.yul\":1258:1336   */\n      tag_144\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":1250:1336   */\n      swap1\n      pop\n        /* \"#utility.yul\":1030:1343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1430:1547   */\n    tag_146:\n        /* \"#utility.yul\":1539:1540   */\n      0x00\n        /* \"#utility.yul\":1536:1537   */\n      dup1\n        /* \"#utility.yul\":1529:1541   */\n      revert\n        /* \"#utility.yul\":1676:1802   */\n    tag_148:\n        /* \"#utility.yul\":1713:1720   */\n      0x00\n        /* \"#utility.yul\":1753:1795   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1746:1751   */\n      dup3\n        /* \"#utility.yul\":1742:1796   */\n      and\n        /* \"#utility.yul\":1731:1796   */\n      swap1\n      pop\n        /* \"#utility.yul\":1676:1802   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1808:1904   */\n    tag_149:\n        /* \"#utility.yul\":1845:1852   */\n      0x00\n        /* \"#utility.yul\":1874:1898   */\n      tag_196\n        /* \"#utility.yul\":1892:1897   */\n      dup3\n        /* \"#utility.yul\":1874:1898   */\n      tag_148\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":1863:1898   */\n      swap1\n      pop\n        /* \"#utility.yul\":1808:1904   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1910:2032   */\n    tag_150:\n        /* \"#utility.yul\":1983:2007   */\n      tag_198\n        /* \"#utility.yul\":2001:2006   */\n      dup2\n        /* \"#utility.yul\":1983:2007   */\n      tag_149\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":1976:1981   */\n      dup2\n        /* \"#utility.yul\":1973:2008   */\n      eq\n        /* \"#utility.yul\":1963:2026   */\n      tag_199\n      jumpi\n        /* \"#utility.yul\":2022:2023   */\n      0x00\n        /* \"#utility.yul\":2019:2020   */\n      dup1\n        /* \"#utility.yul\":2012:2024   */\n      revert\n        /* \"#utility.yul\":1963:2026   */\n    tag_199:\n        /* \"#utility.yul\":1910:2032   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2038:2177   */\n    tag_151:\n        /* \"#utility.yul\":2084:2089   */\n      0x00\n        /* \"#utility.yul\":2122:2128   */\n      dup2\n        /* \"#utility.yul\":2109:2129   */\n      calldataload\n        /* \"#utility.yul\":2100:2129   */\n      swap1\n      pop\n        /* \"#utility.yul\":2138:2171   */\n      tag_201\n        /* \"#utility.yul\":2165:2170   */\n      dup2\n        /* \"#utility.yul\":2138:2171   */\n      tag_150\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":2038:2177   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2183:2260   */\n    tag_152:\n        /* \"#utility.yul\":2220:2227   */\n      0x00\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2238:2254   */\n      swap1\n      pop\n        /* \"#utility.yul\":2183:2260   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2266:2388   */\n    tag_153:\n        /* \"#utility.yul\":2339:2363   */\n      tag_204\n        /* \"#utility.yul\":2357:2362   */\n      dup2\n        /* \"#utility.yul\":2339:2363   */\n      tag_152\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":2332:2337   */\n      dup2\n        /* \"#utility.yul\":2329:2364   */\n      eq\n        /* \"#utility.yul\":2319:2382   */\n      tag_205\n      jumpi\n        /* \"#utility.yul\":2378:2379   */\n      0x00\n        /* \"#utility.yul\":2375:2376   */\n      dup1\n        /* \"#utility.yul\":2368:2380   */\n      revert\n        /* \"#utility.yul\":2319:2382   */\n    tag_205:\n        /* \"#utility.yul\":2266:2388   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2394:2533   */\n    tag_154:\n        /* \"#utility.yul\":2440:2445   */\n      0x00\n        /* \"#utility.yul\":2478:2484   */\n      dup2\n        /* \"#utility.yul\":2465:2485   */\n      calldataload\n        /* \"#utility.yul\":2456:2485   */\n      swap1\n      pop\n        /* \"#utility.yul\":2494:2527   */\n      tag_207\n        /* \"#utility.yul\":2521:2526   */\n      dup2\n        /* \"#utility.yul\":2494:2527   */\n      tag_153\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":2394:2533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2539:3013   */\n    tag_21:\n        /* \"#utility.yul\":2607:2613   */\n      0x00\n        /* \"#utility.yul\":2615:2621   */\n      dup1\n        /* \"#utility.yul\":2664:2666   */\n      0x40\n        /* \"#utility.yul\":2652:2661   */\n      dup4\n        /* \"#utility.yul\":2643:2650   */\n      dup6\n        /* \"#utility.yul\":2639:2662   */\n      sub\n        /* \"#utility.yul\":2635:2667   */\n      slt\n        /* \"#utility.yul\":2632:2751   */\n      iszero\n      tag_209\n      jumpi\n        /* \"#utility.yul\":2670:2749   */\n      tag_210\n      tag_146\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":2632:2751   */\n    tag_209:\n        /* \"#utility.yul\":2790:2791   */\n      0x00\n        /* \"#utility.yul\":2815:2868   */\n      tag_211\n        /* \"#utility.yul\":2860:2867   */\n      dup6\n        /* \"#utility.yul\":2851:2857   */\n      dup3\n        /* \"#utility.yul\":2840:2849   */\n      dup7\n        /* \"#utility.yul\":2836:2858   */\n      add\n        /* \"#utility.yul\":2815:2868   */\n      tag_151\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":2805:2868   */\n      swap3\n      pop\n        /* \"#utility.yul\":2761:2878   */\n      pop\n        /* \"#utility.yul\":2917:2919   */\n      0x20\n        /* \"#utility.yul\":2943:2996   */\n      tag_212\n        /* \"#utility.yul\":2988:2995   */\n      dup6\n        /* \"#utility.yul\":2979:2985   */\n      dup3\n        /* \"#utility.yul\":2968:2977   */\n      dup7\n        /* \"#utility.yul\":2964:2986   */\n      add\n        /* \"#utility.yul\":2943:2996   */\n      tag_154\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":2933:2996   */\n      swap2\n      pop\n        /* \"#utility.yul\":2888:3006   */\n      pop\n        /* \"#utility.yul\":2539:3013   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3019:3109   */\n    tag_155:\n        /* \"#utility.yul\":3053:3060   */\n      0x00\n        /* \"#utility.yul\":3096:3101   */\n      dup2\n        /* \"#utility.yul\":3089:3102   */\n      iszero\n        /* \"#utility.yul\":3082:3103   */\n      iszero\n        /* \"#utility.yul\":3071:3103   */\n      swap1\n      pop\n        /* \"#utility.yul\":3019:3109   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3224   */\n    tag_156:\n        /* \"#utility.yul\":3196:3217   */\n      tag_215\n        /* \"#utility.yul\":3211:3216   */\n      dup2\n        /* \"#utility.yul\":3196:3217   */\n      tag_155\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":3191:3194   */\n      dup3\n        /* \"#utility.yul\":3184:3218   */\n      mstore\n        /* \"#utility.yul\":3115:3224   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3230:3440   */\n    tag_24:\n        /* \"#utility.yul\":3317:3321   */\n      0x00\n        /* \"#utility.yul\":3355:3357   */\n      0x20\n        /* \"#utility.yul\":3344:3353   */\n      dup3\n        /* \"#utility.yul\":3340:3358   */\n      add\n        /* \"#utility.yul\":3332:3358   */\n      swap1\n      pop\n        /* \"#utility.yul\":3368:3433   */\n      tag_217\n        /* \"#utility.yul\":3430:3431   */\n      0x00\n        /* \"#utility.yul\":3419:3428   */\n      dup4\n        /* \"#utility.yul\":3415:3432   */\n      add\n        /* \"#utility.yul\":3406:3412   */\n      dup5\n        /* \"#utility.yul\":3368:3433   */\n      tag_156\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":3230:3440   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3446:3564   */\n    tag_157:\n        /* \"#utility.yul\":3533:3557   */\n      tag_219\n        /* \"#utility.yul\":3551:3556   */\n      dup2\n        /* \"#utility.yul\":3533:3557   */\n      tag_152\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":3528:3531   */\n      dup3\n        /* \"#utility.yul\":3521:3558   */\n      mstore\n        /* \"#utility.yul\":3446:3564   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3570:3792   */\n    tag_28:\n        /* \"#utility.yul\":3663:3667   */\n      0x00\n        /* \"#utility.yul\":3701:3703   */\n      0x20\n        /* \"#utility.yul\":3690:3699   */\n      dup3\n        /* \"#utility.yul\":3686:3704   */\n      add\n        /* \"#utility.yul\":3678:3704   */\n      swap1\n      pop\n        /* \"#utility.yul\":3714:3785   */\n      tag_221\n        /* \"#utility.yul\":3782:3783   */\n      0x00\n        /* \"#utility.yul\":3771:3780   */\n      dup4\n        /* \"#utility.yul\":3767:3784   */\n      add\n        /* \"#utility.yul\":3758:3764   */\n      dup5\n        /* \"#utility.yul\":3714:3785   */\n      tag_157\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":3570:3792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3798:4417   */\n    tag_31:\n        /* \"#utility.yul\":3875:3881   */\n      0x00\n        /* \"#utility.yul\":3883:3889   */\n      dup1\n        /* \"#utility.yul\":3891:3897   */\n      0x00\n        /* \"#utility.yul\":3940:3942   */\n      0x60\n        /* \"#utility.yul\":3928:3937   */\n      dup5\n        /* \"#utility.yul\":3919:3926   */\n      dup7\n        /* \"#utility.yul\":3915:3938   */\n      sub\n        /* \"#utility.yul\":3911:3943   */\n      slt\n        /* \"#utility.yul\":3908:4027   */\n      iszero\n      tag_223\n      jumpi\n        /* \"#utility.yul\":3946:4025   */\n      tag_224\n      tag_146\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":3908:4027   */\n    tag_223:\n        /* \"#utility.yul\":4066:4067   */\n      0x00\n        /* \"#utility.yul\":4091:4144   */\n      tag_225\n        /* \"#utility.yul\":4136:4143   */\n      dup7\n        /* \"#utility.yul\":4127:4133   */\n      dup3\n        /* \"#utility.yul\":4116:4125   */\n      dup8\n        /* \"#utility.yul\":4112:4134   */\n      add\n        /* \"#utility.yul\":4091:4144   */\n      tag_151\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":4081:4144   */\n      swap4\n      pop\n        /* \"#utility.yul\":4037:4154   */\n      pop\n        /* \"#utility.yul\":4193:4195   */\n      0x20\n        /* \"#utility.yul\":4219:4272   */\n      tag_226\n        /* \"#utility.yul\":4264:4271   */\n      dup7\n        /* \"#utility.yul\":4255:4261   */\n      dup3\n        /* \"#utility.yul\":4244:4253   */\n      dup8\n        /* \"#utility.yul\":4240:4262   */\n      add\n        /* \"#utility.yul\":4219:4272   */\n      tag_151\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":4209:4272   */\n      swap3\n      pop\n        /* \"#utility.yul\":4164:4282   */\n      pop\n        /* \"#utility.yul\":4321:4323   */\n      0x40\n        /* \"#utility.yul\":4347:4400   */\n      tag_227\n        /* \"#utility.yul\":4392:4399   */\n      dup7\n        /* \"#utility.yul\":4383:4389   */\n      dup3\n        /* \"#utility.yul\":4372:4381   */\n      dup8\n        /* \"#utility.yul\":4368:4390   */\n      add\n        /* \"#utility.yul\":4347:4400   */\n      tag_154\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":4337:4400   */\n      swap2\n      pop\n        /* \"#utility.yul\":4292:4410   */\n      pop\n        /* \"#utility.yul\":3798:4417   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4423:4509   */\n    tag_158:\n        /* \"#utility.yul\":4458:4465   */\n      0x00\n        /* \"#utility.yul\":4498:4502   */\n      0xff\n        /* \"#utility.yul\":4491:4496   */\n      dup3\n        /* \"#utility.yul\":4487:4503   */\n      and\n        /* \"#utility.yul\":4476:4503   */\n      swap1\n      pop\n        /* \"#utility.yul\":4423:4509   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4515:4627   */\n    tag_159:\n        /* \"#utility.yul\":4598:4620   */\n      tag_230\n        /* \"#utility.yul\":4614:4619   */\n      dup2\n        /* \"#utility.yul\":4598:4620   */\n      tag_158\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":4593:4596   */\n      dup3\n        /* \"#utility.yul\":4586:4621   */\n      mstore\n        /* \"#utility.yul\":4515:4627   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4633:4847   */\n    tag_37:\n        /* \"#utility.yul\":4722:4726   */\n      0x00\n        /* \"#utility.yul\":4760:4762   */\n      0x20\n        /* \"#utility.yul\":4749:4758   */\n      dup3\n        /* \"#utility.yul\":4745:4763   */\n      add\n        /* \"#utility.yul\":4737:4763   */\n      swap1\n      pop\n        /* \"#utility.yul\":4773:4840   */\n      tag_232\n        /* \"#utility.yul\":4837:4838   */\n      0x00\n        /* \"#utility.yul\":4826:4835   */\n      dup4\n        /* \"#utility.yul\":4822:4839   */\n      add\n        /* \"#utility.yul\":4813:4819   */\n      dup5\n        /* \"#utility.yul\":4773:4840   */\n      tag_159\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":4633:4847   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4853:5182   */\n    tag_44:\n        /* \"#utility.yul\":4912:4918   */\n      0x00\n        /* \"#utility.yul\":4961:4963   */\n      0x20\n        /* \"#utility.yul\":4949:4958   */\n      dup3\n        /* \"#utility.yul\":4940:4947   */\n      dup5\n        /* \"#utility.yul\":4936:4959   */\n      sub\n        /* \"#utility.yul\":4932:4964   */\n      slt\n        /* \"#utility.yul\":4929:5048   */\n      iszero\n      tag_234\n      jumpi\n        /* \"#utility.yul\":4967:5046   */\n      tag_235\n      tag_146\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":4929:5048   */\n    tag_234:\n        /* \"#utility.yul\":5087:5088   */\n      0x00\n        /* \"#utility.yul\":5112:5165   */\n      tag_236\n        /* \"#utility.yul\":5157:5164   */\n      dup5\n        /* \"#utility.yul\":5148:5154   */\n      dup3\n        /* \"#utility.yul\":5137:5146   */\n      dup6\n        /* \"#utility.yul\":5133:5155   */\n      add\n        /* \"#utility.yul\":5112:5165   */\n      tag_151\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":5102:5165   */\n      swap2\n      pop\n        /* \"#utility.yul\":5058:5175   */\n      pop\n        /* \"#utility.yul\":4853:5182   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5188:5662   */\n    tag_60:\n        /* \"#utility.yul\":5256:5262   */\n      0x00\n        /* \"#utility.yul\":5264:5270   */\n      dup1\n        /* \"#utility.yul\":5313:5315   */\n      0x40\n        /* \"#utility.yul\":5301:5310   */\n      dup4\n        /* \"#utility.yul\":5292:5299   */\n      dup6\n        /* \"#utility.yul\":5288:5311   */\n      sub\n        /* \"#utility.yul\":5284:5316   */\n      slt\n        /* \"#utility.yul\":5281:5400   */\n      iszero\n      tag_238\n      jumpi\n        /* \"#utility.yul\":5319:5398   */\n      tag_239\n      tag_146\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":5281:5400   */\n    tag_238:\n        /* \"#utility.yul\":5439:5440   */\n      0x00\n        /* \"#utility.yul\":5464:5517   */\n      tag_240\n        /* \"#utility.yul\":5509:5516   */\n      dup6\n        /* \"#utility.yul\":5500:5506   */\n      dup3\n        /* \"#utility.yul\":5489:5498   */\n      dup7\n        /* \"#utility.yul\":5485:5507   */\n      add\n        /* \"#utility.yul\":5464:5517   */\n      tag_151\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":5454:5517   */\n      swap3\n      pop\n        /* \"#utility.yul\":5410:5527   */\n      pop\n        /* \"#utility.yul\":5566:5568   */\n      0x20\n        /* \"#utility.yul\":5592:5645   */\n      tag_241\n        /* \"#utility.yul\":5637:5644   */\n      dup6\n        /* \"#utility.yul\":5628:5634   */\n      dup3\n        /* \"#utility.yul\":5617:5626   */\n      dup7\n        /* \"#utility.yul\":5613:5635   */\n      add\n        /* \"#utility.yul\":5592:5645   */\n      tag_151\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":5582:5645   */\n      swap2\n      pop\n        /* \"#utility.yul\":5537:5655   */\n      pop\n        /* \"#utility.yul\":5188:5662   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5668:5848   */\n    tag_160:\n        /* \"#utility.yul\":5716:5793   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5713:5714   */\n      0x00\n        /* \"#utility.yul\":5706:5794   */\n      mstore\n        /* \"#utility.yul\":5813:5817   */\n      0x22\n        /* \"#utility.yul\":5810:5811   */\n      0x04\n        /* \"#utility.yul\":5803:5818   */\n      mstore\n        /* \"#utility.yul\":5837:5841   */\n      0x24\n        /* \"#utility.yul\":5834:5835   */\n      0x00\n        /* \"#utility.yul\":5827:5842   */\n      revert\n        /* \"#utility.yul\":5854:6174   */\n    tag_65:\n        /* \"#utility.yul\":5898:5904   */\n      0x00\n        /* \"#utility.yul\":5935:5936   */\n      0x02\n        /* \"#utility.yul\":5929:5933   */\n      dup3\n        /* \"#utility.yul\":5925:5937   */\n      div\n        /* \"#utility.yul\":5915:5937   */\n      swap1\n      pop\n        /* \"#utility.yul\":5982:5983   */\n      0x01\n        /* \"#utility.yul\":5976:5980   */\n      dup3\n        /* \"#utility.yul\":5972:5984   */\n      and\n        /* \"#utility.yul\":6003:6021   */\n      dup1\n        /* \"#utility.yul\":5993:6074   */\n      tag_244\n      jumpi\n        /* \"#utility.yul\":6059:6063   */\n      0x7f\n        /* \"#utility.yul\":6051:6057   */\n      dup3\n        /* \"#utility.yul\":6047:6064   */\n      and\n        /* \"#utility.yul\":6037:6064   */\n      swap2\n      pop\n        /* \"#utility.yul\":5993:6074   */\n    tag_244:\n        /* \"#utility.yul\":6121:6123   */\n      0x20\n        /* \"#utility.yul\":6113:6119   */\n      dup3\n        /* \"#utility.yul\":6110:6124   */\n      lt\n        /* \"#utility.yul\":6090:6108   */\n      dup2\n        /* \"#utility.yul\":6087:6125   */\n      sub\n        /* \"#utility.yul\":6084:6168   */\n      tag_245\n      jumpi\n        /* \"#utility.yul\":6140:6158   */\n      tag_246\n      tag_160\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":6084:6168   */\n    tag_245:\n        /* \"#utility.yul\":5905:6174   */\n      pop\n        /* \"#utility.yul\":5854:6174   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6180:6360   */\n    tag_161:\n        /* \"#utility.yul\":6228:6305   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6225:6226   */\n      0x00\n        /* \"#utility.yul\":6218:6306   */\n      mstore\n        /* \"#utility.yul\":6325:6329   */\n      0x11\n        /* \"#utility.yul\":6322:6323   */\n      0x04\n        /* \"#utility.yul\":6315:6330   */\n      mstore\n        /* \"#utility.yul\":6349:6353   */\n      0x24\n        /* \"#utility.yul\":6346:6347   */\n      0x00\n        /* \"#utility.yul\":6339:6354   */\n      revert\n        /* \"#utility.yul\":6366:6557   */\n    tag_88:\n        /* \"#utility.yul\":6406:6409   */\n      0x00\n        /* \"#utility.yul\":6425:6445   */\n      tag_249\n        /* \"#utility.yul\":6443:6444   */\n      dup3\n        /* \"#utility.yul\":6425:6445   */\n      tag_152\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":6420:6445   */\n      swap2\n      pop\n        /* \"#utility.yul\":6459:6479   */\n      tag_250\n        /* \"#utility.yul\":6477:6478   */\n      dup4\n        /* \"#utility.yul\":6459:6479   */\n      tag_152\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":6454:6479   */\n      swap3\n      pop\n        /* \"#utility.yul\":6502:6503   */\n      dup3\n        /* \"#utility.yul\":6499:6500   */\n      dup3\n        /* \"#utility.yul\":6495:6504   */\n      add\n        /* \"#utility.yul\":6488:6504   */\n      swap1\n      pop\n        /* \"#utility.yul\":6523:6526   */\n      dup1\n        /* \"#utility.yul\":6520:6521   */\n      dup3\n        /* \"#utility.yul\":6517:6527   */\n      gt\n        /* \"#utility.yul\":6514:6550   */\n      iszero\n      tag_251\n      jumpi\n        /* \"#utility.yul\":6530:6548   */\n      tag_252\n      tag_161\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":6514:6550   */\n    tag_251:\n        /* \"#utility.yul\":6366:6557   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6563:6787   */\n    tag_162:\n        /* \"#utility.yul\":6703:6737   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":6699:6700   */\n      0x00\n        /* \"#utility.yul\":6691:6697   */\n      dup3\n        /* \"#utility.yul\":6687:6701   */\n      add\n        /* \"#utility.yul\":6680:6738   */\n      mstore\n        /* \"#utility.yul\":6772:6779   */\n      0x207a65726f000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6767:6769   */\n      0x20\n        /* \"#utility.yul\":6759:6765   */\n      dup3\n        /* \"#utility.yul\":6755:6770   */\n      add\n        /* \"#utility.yul\":6748:6780   */\n      mstore\n        /* \"#utility.yul\":6563:6787   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6793:7159   */\n    tag_163:\n        /* \"#utility.yul\":6935:6938   */\n      0x00\n        /* \"#utility.yul\":6956:7023   */\n      tag_255\n        /* \"#utility.yul\":7020:7022   */\n      0x25\n        /* \"#utility.yul\":7015:7018   */\n      dup4\n        /* \"#utility.yul\":6956:7023   */\n      tag_141\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":6949:7023   */\n      swap2\n      pop\n        /* \"#utility.yul\":7032:7125   */\n      tag_256\n        /* \"#utility.yul\":7121:7124   */\n      dup3\n        /* \"#utility.yul\":7032:7125   */\n      tag_162\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":7150:7152   */\n      0x40\n        /* \"#utility.yul\":7145:7148   */\n      dup3\n        /* \"#utility.yul\":7141:7153   */\n      add\n        /* \"#utility.yul\":7134:7153   */\n      swap1\n      pop\n        /* \"#utility.yul\":6793:7159   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7165:7584   */\n    tag_101:\n        /* \"#utility.yul\":7331:7335   */\n      0x00\n        /* \"#utility.yul\":7369:7371   */\n      0x20\n        /* \"#utility.yul\":7358:7367   */\n      dup3\n        /* \"#utility.yul\":7354:7372   */\n      add\n        /* \"#utility.yul\":7346:7372   */\n      swap1\n      pop\n        /* \"#utility.yul\":7418:7427   */\n      dup2\n        /* \"#utility.yul\":7412:7416   */\n      dup2\n        /* \"#utility.yul\":7408:7428   */\n      sub\n        /* \"#utility.yul\":7404:7405   */\n      0x00\n        /* \"#utility.yul\":7393:7402   */\n      dup4\n        /* \"#utility.yul\":7389:7406   */\n      add\n        /* \"#utility.yul\":7382:7429   */\n      mstore\n        /* \"#utility.yul\":7446:7577   */\n      tag_258\n        /* \"#utility.yul\":7572:7576   */\n      dup2\n        /* \"#utility.yul\":7446:7577   */\n      tag_163\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":7438:7577   */\n      swap1\n      pop\n        /* \"#utility.yul\":7165:7584   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7590:7813   */\n    tag_164:\n        /* \"#utility.yul\":7730:7764   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":7726:7727   */\n      0x00\n        /* \"#utility.yul\":7718:7724   */\n      dup3\n        /* \"#utility.yul\":7714:7728   */\n      add\n        /* \"#utility.yul\":7707:7765   */\n      mstore\n        /* \"#utility.yul\":7799:7805   */\n      0x7265737300000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7794:7796   */\n      0x20\n        /* \"#utility.yul\":7786:7792   */\n      dup3\n        /* \"#utility.yul\":7782:7797   */\n      add\n        /* \"#utility.yul\":7775:7806   */\n      mstore\n        /* \"#utility.yul\":7590:7813   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7819:8185   */\n    tag_165:\n        /* \"#utility.yul\":7961:7964   */\n      0x00\n        /* \"#utility.yul\":7982:8049   */\n      tag_261\n        /* \"#utility.yul\":8046:8048   */\n      0x24\n        /* \"#utility.yul\":8041:8044   */\n      dup4\n        /* \"#utility.yul\":7982:8049   */\n      tag_141\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":7975:8049   */\n      swap2\n      pop\n        /* \"#utility.yul\":8058:8151   */\n      tag_262\n        /* \"#utility.yul\":8147:8150   */\n      dup3\n        /* \"#utility.yul\":8058:8151   */\n      tag_164\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":8176:8178   */\n      0x40\n        /* \"#utility.yul\":8171:8174   */\n      dup3\n        /* \"#utility.yul\":8167:8179   */\n      add\n        /* \"#utility.yul\":8160:8179   */\n      swap1\n      pop\n        /* \"#utility.yul\":7819:8185   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8191:8610   */\n    tag_111:\n        /* \"#utility.yul\":8357:8361   */\n      0x00\n        /* \"#utility.yul\":8395:8397   */\n      0x20\n        /* \"#utility.yul\":8384:8393   */\n      dup3\n        /* \"#utility.yul\":8380:8398   */\n      add\n        /* \"#utility.yul\":8372:8398   */\n      swap1\n      pop\n        /* \"#utility.yul\":8444:8453   */\n      dup2\n        /* \"#utility.yul\":8438:8442   */\n      dup2\n        /* \"#utility.yul\":8434:8454   */\n      sub\n        /* \"#utility.yul\":8430:8431   */\n      0x00\n        /* \"#utility.yul\":8419:8428   */\n      dup4\n        /* \"#utility.yul\":8415:8432   */\n      add\n        /* \"#utility.yul\":8408:8455   */\n      mstore\n        /* \"#utility.yul\":8472:8603   */\n      tag_264\n        /* \"#utility.yul\":8598:8602   */\n      dup2\n        /* \"#utility.yul\":8472:8603   */\n      tag_165\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":8464:8603   */\n      swap1\n      pop\n        /* \"#utility.yul\":8191:8610   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8616:8837   */\n    tag_166:\n        /* \"#utility.yul\":8756:8790   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":8752:8753   */\n      0x00\n        /* \"#utility.yul\":8744:8750   */\n      dup3\n        /* \"#utility.yul\":8740:8754   */\n      add\n        /* \"#utility.yul\":8733:8791   */\n      mstore\n        /* \"#utility.yul\":8825:8829   */\n      0x7373000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8820:8822   */\n      0x20\n        /* \"#utility.yul\":8812:8818   */\n      dup3\n        /* \"#utility.yul\":8808:8823   */\n      add\n        /* \"#utility.yul\":8801:8830   */\n      mstore\n        /* \"#utility.yul\":8616:8837   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8843:9209   */\n    tag_167:\n        /* \"#utility.yul\":8985:8988   */\n      0x00\n        /* \"#utility.yul\":9006:9073   */\n      tag_267\n        /* \"#utility.yul\":9070:9072   */\n      0x22\n        /* \"#utility.yul\":9065:9068   */\n      dup4\n        /* \"#utility.yul\":9006:9073   */\n      tag_141\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":8999:9073   */\n      swap2\n      pop\n        /* \"#utility.yul\":9082:9175   */\n      tag_268\n        /* \"#utility.yul\":9171:9174   */\n      dup3\n        /* \"#utility.yul\":9082:9175   */\n      tag_166\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":9200:9202   */\n      0x40\n        /* \"#utility.yul\":9195:9198   */\n      dup3\n        /* \"#utility.yul\":9191:9203   */\n      add\n        /* \"#utility.yul\":9184:9203   */\n      swap1\n      pop\n        /* \"#utility.yul\":8843:9209   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9215:9634   */\n    tag_114:\n        /* \"#utility.yul\":9381:9385   */\n      0x00\n        /* \"#utility.yul\":9419:9421   */\n      0x20\n        /* \"#utility.yul\":9408:9417   */\n      dup3\n        /* \"#utility.yul\":9404:9422   */\n      add\n        /* \"#utility.yul\":9396:9422   */\n      swap1\n      pop\n        /* \"#utility.yul\":9468:9477   */\n      dup2\n        /* \"#utility.yul\":9462:9466   */\n      dup2\n        /* \"#utility.yul\":9458:9478   */\n      sub\n        /* \"#utility.yul\":9454:9455   */\n      0x00\n        /* \"#utility.yul\":9443:9452   */\n      dup4\n        /* \"#utility.yul\":9439:9456   */\n      add\n        /* \"#utility.yul\":9432:9479   */\n      mstore\n        /* \"#utility.yul\":9496:9627   */\n      tag_270\n        /* \"#utility.yul\":9622:9626   */\n      dup2\n        /* \"#utility.yul\":9496:9627   */\n      tag_167\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":9488:9627   */\n      swap1\n      pop\n        /* \"#utility.yul\":9215:9634   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9640:9819   */\n    tag_168:\n        /* \"#utility.yul\":9780:9811   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":9776:9777   */\n      0x00\n        /* \"#utility.yul\":9768:9774   */\n      dup3\n        /* \"#utility.yul\":9764:9778   */\n      add\n        /* \"#utility.yul\":9757:9812   */\n      mstore\n        /* \"#utility.yul\":9640:9819   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9825:10191   */\n    tag_169:\n        /* \"#utility.yul\":9967:9970   */\n      0x00\n        /* \"#utility.yul\":9988:10055   */\n      tag_273\n        /* \"#utility.yul\":10052:10054   */\n      0x1d\n        /* \"#utility.yul\":10047:10050   */\n      dup4\n        /* \"#utility.yul\":9988:10055   */\n      tag_141\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":9981:10055   */\n      swap2\n      pop\n        /* \"#utility.yul\":10064:10157   */\n      tag_274\n        /* \"#utility.yul\":10153:10156   */\n      dup3\n        /* \"#utility.yul\":10064:10157   */\n      tag_168\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":10182:10184   */\n      0x20\n        /* \"#utility.yul\":10177:10180   */\n      dup3\n        /* \"#utility.yul\":10173:10185   */\n      add\n        /* \"#utility.yul\":10166:10185   */\n      swap1\n      pop\n        /* \"#utility.yul\":9825:10191   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10197:10616   */\n    tag_121:\n        /* \"#utility.yul\":10363:10367   */\n      0x00\n        /* \"#utility.yul\":10401:10403   */\n      0x20\n        /* \"#utility.yul\":10390:10399   */\n      dup3\n        /* \"#utility.yul\":10386:10404   */\n      add\n        /* \"#utility.yul\":10378:10404   */\n      swap1\n      pop\n        /* \"#utility.yul\":10450:10459   */\n      dup2\n        /* \"#utility.yul\":10444:10448   */\n      dup2\n        /* \"#utility.yul\":10440:10460   */\n      sub\n        /* \"#utility.yul\":10436:10437   */\n      0x00\n        /* \"#utility.yul\":10425:10434   */\n      dup4\n        /* \"#utility.yul\":10421:10438   */\n      add\n        /* \"#utility.yul\":10414:10461   */\n      mstore\n        /* \"#utility.yul\":10478:10609   */\n      tag_276\n        /* \"#utility.yul\":10604:10608   */\n      dup2\n        /* \"#utility.yul\":10478:10609   */\n      tag_169\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":10470:10609   */\n      swap1\n      pop\n        /* \"#utility.yul\":10197:10616   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10622:10846   */\n    tag_170:\n        /* \"#utility.yul\":10762:10796   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":10758:10759   */\n      0x00\n        /* \"#utility.yul\":10750:10756   */\n      dup3\n        /* \"#utility.yul\":10746:10760   */\n      add\n        /* \"#utility.yul\":10739:10797   */\n      mstore\n        /* \"#utility.yul\":10831:10838   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10826:10828   */\n      0x20\n        /* \"#utility.yul\":10818:10824   */\n      dup3\n        /* \"#utility.yul\":10814:10829   */\n      add\n        /* \"#utility.yul\":10807:10839   */\n      mstore\n        /* \"#utility.yul\":10622:10846   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10852:11218   */\n    tag_171:\n        /* \"#utility.yul\":10994:10997   */\n      0x00\n        /* \"#utility.yul\":11015:11082   */\n      tag_279\n        /* \"#utility.yul\":11079:11081   */\n      0x25\n        /* \"#utility.yul\":11074:11077   */\n      dup4\n        /* \"#utility.yul\":11015:11082   */\n      tag_141\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":11008:11082   */\n      swap2\n      pop\n        /* \"#utility.yul\":11091:11184   */\n      tag_280\n        /* \"#utility.yul\":11180:11183   */\n      dup3\n        /* \"#utility.yul\":11091:11184   */\n      tag_170\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":11209:11211   */\n      0x40\n        /* \"#utility.yul\":11204:11207   */\n      dup3\n        /* \"#utility.yul\":11200:11212   */\n      add\n        /* \"#utility.yul\":11193:11212   */\n      swap1\n      pop\n        /* \"#utility.yul\":10852:11218   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11224:11643   */\n    tag_126:\n        /* \"#utility.yul\":11390:11394   */\n      0x00\n        /* \"#utility.yul\":11428:11430   */\n      0x20\n        /* \"#utility.yul\":11417:11426   */\n      dup3\n        /* \"#utility.yul\":11413:11431   */\n      add\n        /* \"#utility.yul\":11405:11431   */\n      swap1\n      pop\n        /* \"#utility.yul\":11477:11486   */\n      dup2\n        /* \"#utility.yul\":11471:11475   */\n      dup2\n        /* \"#utility.yul\":11467:11487   */\n      sub\n        /* \"#utility.yul\":11463:11464   */\n      0x00\n        /* \"#utility.yul\":11452:11461   */\n      dup4\n        /* \"#utility.yul\":11448:11465   */\n      add\n        /* \"#utility.yul\":11441:11488   */\n      mstore\n        /* \"#utility.yul\":11505:11636   */\n      tag_282\n        /* \"#utility.yul\":11631:11635   */\n      dup2\n        /* \"#utility.yul\":11505:11636   */\n      tag_171\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":11497:11636   */\n      swap1\n      pop\n        /* \"#utility.yul\":11224:11643   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11649:11871   */\n    tag_172:\n        /* \"#utility.yul\":11789:11823   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":11785:11786   */\n      0x00\n        /* \"#utility.yul\":11777:11783   */\n      dup3\n        /* \"#utility.yul\":11773:11787   */\n      add\n        /* \"#utility.yul\":11766:11824   */\n      mstore\n        /* \"#utility.yul\":11858:11863   */\n      0x6573730000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11853:11855   */\n      0x20\n        /* \"#utility.yul\":11845:11851   */\n      dup3\n        /* \"#utility.yul\":11841:11856   */\n      add\n        /* \"#utility.yul\":11834:11864   */\n      mstore\n        /* \"#utility.yul\":11649:11871   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11877:12243   */\n    tag_173:\n        /* \"#utility.yul\":12019:12022   */\n      0x00\n        /* \"#utility.yul\":12040:12107   */\n      tag_285\n        /* \"#utility.yul\":12104:12106   */\n      0x23\n        /* \"#utility.yul\":12099:12102   */\n      dup4\n        /* \"#utility.yul\":12040:12107   */\n      tag_141\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":12033:12107   */\n      swap2\n      pop\n        /* \"#utility.yul\":12116:12209   */\n      tag_286\n        /* \"#utility.yul\":12205:12208   */\n      dup3\n        /* \"#utility.yul\":12116:12209   */\n      tag_172\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":12234:12236   */\n      0x40\n        /* \"#utility.yul\":12229:12232   */\n      dup3\n        /* \"#utility.yul\":12225:12237   */\n      add\n        /* \"#utility.yul\":12218:12237   */\n      swap1\n      pop\n        /* \"#utility.yul\":11877:12243   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12249:12668   */\n    tag_129:\n        /* \"#utility.yul\":12415:12419   */\n      0x00\n        /* \"#utility.yul\":12453:12455   */\n      0x20\n        /* \"#utility.yul\":12442:12451   */\n      dup3\n        /* \"#utility.yul\":12438:12456   */\n      add\n        /* \"#utility.yul\":12430:12456   */\n      swap1\n      pop\n        /* \"#utility.yul\":12502:12511   */\n      dup2\n        /* \"#utility.yul\":12496:12500   */\n      dup2\n        /* \"#utility.yul\":12492:12512   */\n      sub\n        /* \"#utility.yul\":12488:12489   */\n      0x00\n        /* \"#utility.yul\":12477:12486   */\n      dup4\n        /* \"#utility.yul\":12473:12490   */\n      add\n        /* \"#utility.yul\":12466:12513   */\n      mstore\n        /* \"#utility.yul\":12530:12661   */\n      tag_288\n        /* \"#utility.yul\":12656:12660   */\n      dup2\n        /* \"#utility.yul\":12530:12661   */\n      tag_173\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":12522:12661   */\n      swap1\n      pop\n        /* \"#utility.yul\":12249:12668   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12674:12899   */\n    tag_174:\n        /* \"#utility.yul\":12814:12848   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":12810:12811   */\n      0x00\n        /* \"#utility.yul\":12802:12808   */\n      dup3\n        /* \"#utility.yul\":12798:12812   */\n      add\n        /* \"#utility.yul\":12791:12849   */\n      mstore\n        /* \"#utility.yul\":12883:12891   */\n      0x616c616e63650000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12878:12880   */\n      0x20\n        /* \"#utility.yul\":12870:12876   */\n      dup3\n        /* \"#utility.yul\":12866:12881   */\n      add\n        /* \"#utility.yul\":12859:12892   */\n      mstore\n        /* \"#utility.yul\":12674:12899   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12905:13271   */\n    tag_175:\n        /* \"#utility.yul\":13047:13050   */\n      0x00\n        /* \"#utility.yul\":13068:13135   */\n      tag_291\n        /* \"#utility.yul\":13132:13134   */\n      0x26\n        /* \"#utility.yul\":13127:13130   */\n      dup4\n        /* \"#utility.yul\":13068:13135   */\n      tag_141\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":13061:13135   */\n      swap2\n      pop\n        /* \"#utility.yul\":13144:13237   */\n      tag_292\n        /* \"#utility.yul\":13233:13236   */\n      dup3\n        /* \"#utility.yul\":13144:13237   */\n      tag_174\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":13262:13264   */\n      0x40\n        /* \"#utility.yul\":13257:13260   */\n      dup3\n        /* \"#utility.yul\":13253:13265   */\n      add\n        /* \"#utility.yul\":13246:13265   */\n      swap1\n      pop\n        /* \"#utility.yul\":12905:13271   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13277:13696   */\n    tag_134:\n        /* \"#utility.yul\":13443:13447   */\n      0x00\n        /* \"#utility.yul\":13481:13483   */\n      0x20\n        /* \"#utility.yul\":13470:13479   */\n      dup3\n        /* \"#utility.yul\":13466:13484   */\n      add\n        /* \"#utility.yul\":13458:13484   */\n      swap1\n      pop\n        /* \"#utility.yul\":13530:13539   */\n      dup2\n        /* \"#utility.yul\":13524:13528   */\n      dup2\n        /* \"#utility.yul\":13520:13540   */\n      sub\n        /* \"#utility.yul\":13516:13517   */\n      0x00\n        /* \"#utility.yul\":13505:13514   */\n      dup4\n        /* \"#utility.yul\":13501:13518   */\n      add\n        /* \"#utility.yul\":13494:13541   */\n      mstore\n        /* \"#utility.yul\":13558:13689   */\n      tag_294\n        /* \"#utility.yul\":13684:13688   */\n      dup2\n        /* \"#utility.yul\":13558:13689   */\n      tag_175\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":13550:13689   */\n      swap1\n      pop\n        /* \"#utility.yul\":13277:13696   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220005f598b59a8ef1b830a8e6bb81db6c2d3d112539000d8e58b45a6286fcebbe164736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_44": {
									"entryPoint": null,
									"id": 44,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 376,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 451,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 502,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_memory": {
									"entryPoint": 247,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 99,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 278,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 746,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 635,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1067,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 882,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1028,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 902,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1222,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 332,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 767,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 693,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1192,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 193,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 892,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1160,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 646,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 146,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 942,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 119,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 124,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 114,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 109,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 129,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 783,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1147,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1000,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 796,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 952,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 995,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8574:6",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "423:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:12:6"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "546:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "563:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "566:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "556:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "556:12:6"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "628:54:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "638:38:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "663:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "672:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:28:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:6"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "611:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "621:6:6",
														"type": ""
													}
												],
												"src": "580:102:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "716:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "733:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "736:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "726:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "726:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "830:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "833:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "823:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "823:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "854:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "857:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "847:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "847:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "917:238:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:6",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:6"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "945:40:6"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "931:10:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1096:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:6"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:6"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1033:62:6"
															},
															"nodeType": "YulIf",
															"src": "1030:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:6",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1127:22:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:6"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "903:6:6",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "911:4:6",
														"type": ""
													}
												],
												"src": "874:281:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1202:88:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1212:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1222:20:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:6"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:6"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1251:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:6"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1186:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1195:6:6",
														"type": ""
													}
												],
												"src": "1161:129:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1363:241:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1468:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1437:30:6"
															},
															"nodeType": "YulIf",
															"src": "1434:56:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1500:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:6"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1508:29:6"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1574:23:6",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:15:6"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:6"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1347:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1358:4:6",
														"type": ""
													}
												],
												"src": "1296:308:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1672:184:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1682:10:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1691:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1686:1:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1751:63:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1776:3:6"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1781:1:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1772:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1772:11:6"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1795:3:6"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1800:1:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1791:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1791:11:6"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1785:5:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1785:18:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1765:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1765:39:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1765:39:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1712:1:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1715:6:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1709:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1709:13:6"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1723:19:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1725:15:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1734:1:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1737:2:6",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1730:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1730:10:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1725:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1705:3:6",
																"statements": []
															},
															"src": "1701:113:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1834:3:6"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1839:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1830:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1830:16:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1848:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1823:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1823:27:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1823:27:6"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1654:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1659:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1664:6:6",
														"type": ""
													}
												],
												"src": "1610:246:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1957:339:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1967:75:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2034:6:6"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "1992:41:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1992:49:6"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1976:15:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1976:66:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1967:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2065:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2051:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2051:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2051:21:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2081:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2096:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2103:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2092:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2092:16:6"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2085:3:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2146:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "2148:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2148:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2148:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2127:3:6"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2132:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2123:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2123:16:6"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2141:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2120:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2120:25:6"
															},
															"nodeType": "YulIf",
															"src": "2117:112:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2273:3:6"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2278:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2283:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "2238:34:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2238:52:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2238:52:6"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1930:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1935:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1943:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1951:5:6",
														"type": ""
													}
												],
												"src": "1862:434:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2389:282:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2438:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "2440:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2440:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2440:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2417:6:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2425:4:6",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2413:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2413:17:6"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2432:3:6"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2409:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2409:27:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2402:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2402:35:6"
															},
															"nodeType": "YulIf",
															"src": "2399:122:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2530:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2550:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2544:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2544:13:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2534:6:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2566:99:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2638:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2646:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2634:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2634:17:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2653:6:6"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2661:3:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "2575:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2575:90:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2566:5:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2367:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2375:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2383:5:6",
														"type": ""
													}
												],
												"src": "2316:355:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2791:739:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2837:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2839:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2839:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2839:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2812:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2821:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2808:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2808:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2833:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2804:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2804:32:6"
															},
															"nodeType": "YulIf",
															"src": "2801:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "2930:291:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2945:38:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2969:9:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2980:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2965:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2965:17:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2959:5:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2959:24:6"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2949:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3030:83:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3032:77:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3032:79:6"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3032:79:6"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3002:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3010:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2999:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2999:30:6"
																	},
																	"nodeType": "YulIf",
																	"src": "2996:117:6"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3127:84:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3183:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3194:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3179:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3179:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3203:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3137:41:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3137:74:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3127:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3231:292:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3246:39:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3270:9:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3281:2:6",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3266:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3266:18:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3260:5:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3260:25:6"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3250:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3332:83:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3334:77:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3334:79:6"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3334:79:6"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3304:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3312:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3301:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3301:30:6"
																	},
																	"nodeType": "YulIf",
																	"src": "3298:117:6"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3429:84:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3485:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3496:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3481:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3481:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3505:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3439:41:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3439:74:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3429:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2753:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2764:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2776:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2784:6:6",
														"type": ""
													}
												],
												"src": "2677:853:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3595:40:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3606:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3622:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3616:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3616:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3606:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3578:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3588:6:6",
														"type": ""
													}
												],
												"src": "3536:99:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3669:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3686:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3689:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3679:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3679:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3679:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3783:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3786:4:6",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3776:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3776:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3776:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3807:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3810:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3800:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3800:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3800:15:6"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "3641:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3878:269:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3888:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3902:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3908:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "3898:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3898:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3888:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3919:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3949:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3955:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3945:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3945:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "3923:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3996:51:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4010:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "4024:6:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4032:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "4020:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4020:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4010:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3976:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3969:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3969:26:6"
															},
															"nodeType": "YulIf",
															"src": "3966:81:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4099:42:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "4113:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4113:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4113:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4063:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4086:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4094:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4083:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4083:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4060:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4060:38:6"
															},
															"nodeType": "YulIf",
															"src": "4057:84:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3862:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3871:6:6",
														"type": ""
													}
												],
												"src": "3827:320:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4207:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4217:11:6",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "4225:3:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "4217:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4245:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "4248:3:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4238:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4238:14:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4238:14:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4261:26:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4279:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4282:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "4269:9:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4269:18:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "4261:4:6"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "4194:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4202:4:6",
														"type": ""
													}
												],
												"src": "4153:141:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4344:49:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4354:33:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4372:5:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4379:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4368:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4368:14:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4384:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "4364:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4364:23:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4354:6:6"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4327:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4337:6:6",
														"type": ""
													}
												],
												"src": "4300:93:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4452:54:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4462:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "4487:4:6"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4493:5:6"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "4483:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4483:16:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "4462:8:6"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "4427:4:6",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4433:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "4443:8:6",
														"type": ""
													}
												],
												"src": "4399:107:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4588:317:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4598:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "4619:10:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4631:1:6",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "4615:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4615:18:6"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "4602:9:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4642:109:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "4673:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4684:66:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "4654:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4654:97:6"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "4646:4:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4760:51:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "4791:9:6"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "4802:8:6"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "4772:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4772:39:6"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "4760:8:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4820:30:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4833:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "4844:4:6"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4840:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4840:9:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4829:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4829:21:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4820:5:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4859:40:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4872:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "4883:8:6"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "4893:4:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4879:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4879:19:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4869:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4869:30:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4859:6:6"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4549:5:6",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "4556:10:6",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "4568:8:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4581:6:6",
														"type": ""
													}
												],
												"src": "4512:393:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4956:32:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4966:16:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4977:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4966:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4938:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4948:7:6",
														"type": ""
													}
												],
												"src": "4911:77:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5026:28:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5036:12:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5043:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5036:3:6"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5012:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5022:3:6",
														"type": ""
													}
												],
												"src": "4994:60:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5120:82:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5130:66:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5188:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5170:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5170:24:6"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "5161:8:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5161:34:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5143:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5143:53:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "5130:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5100:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "5110:9:6",
														"type": ""
													}
												],
												"src": "5060:142:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5255:28:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5265:12:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5272:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5265:3:6"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5241:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5251:3:6",
														"type": ""
													}
												],
												"src": "5208:75:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5365:193:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5375:63:6",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "5430:7:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5399:30:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5399:39:6"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "5379:16:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "5454:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "5494:4:6"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "5488:5:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5488:11:6"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5501:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "5533:16:6"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5509:23:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5509:41:6"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "5460:27:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5460:91:6"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "5447:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5447:105:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5447:105:6"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "5342:4:6",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5348:6:6",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "5356:7:6",
														"type": ""
													}
												],
												"src": "5289:269:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5613:24:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5623:8:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5630:1:6",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5623:3:6"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5609:3:6",
														"type": ""
													}
												],
												"src": "5564:73:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5696:136:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5706:46:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5720:30:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5720:32:6"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "5710:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "5805:4:6"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5811:6:6"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "5819:6:6"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5761:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5761:65:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5761:65:6"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "5682:4:6",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5688:6:6",
														"type": ""
													}
												],
												"src": "5643:189:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5888:136:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5955:63:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "5999:5:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6006:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "5969:29:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5969:39:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5969:39:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "5908:5:6"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "5915:3:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5905:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5905:14:6"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5920:26:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5922:22:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "5935:5:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5942:1:6",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5931:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5931:13:6"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "5922:5:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5902:2:6",
																"statements": []
															},
															"src": "5898:120:6"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "5876:5:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5883:3:6",
														"type": ""
													}
												],
												"src": "5838:186:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6109:464:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6135:431:6",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6149:54:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "6197:5:6"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "6165:31:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6165:38:6"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "6153:8:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6216:63:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "6239:8:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "6267:10:6"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "6249:17:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6249:29:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6235:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6235:44:6"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "6220:11:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "6436:27:6",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "6438:23:6",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "6453:8:6"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "6438:11:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "6420:10:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6432:2:6",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "6417:2:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6417:18:6"
																		},
																		"nodeType": "YulIf",
																		"src": "6414:49:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "6505:11:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "6522:8:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "6550:3:6"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "6532:17:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6532:22:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6518:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6518:37:6"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "6476:28:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6476:80:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6476:80:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "6126:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6131:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6123:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6123:11:6"
															},
															"nodeType": "YulIf",
															"src": "6120:446:6"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "6085:5:6",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "6092:3:6",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "6097:10:6",
														"type": ""
													}
												],
												"src": "6030:543:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6642:54:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6652:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "6677:4:6"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6683:5:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6673:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6673:16:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "6652:8:6"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "6617:4:6",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6623:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "6633:8:6",
														"type": ""
													}
												],
												"src": "6579:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6753:118:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6763:68:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6812:1:6",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "6815:5:6"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "6808:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6808:13:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6827:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "6823:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6823:6:6"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "6779:28:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6779:51:6"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "6775:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6775:56:6"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "6767:4:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6840:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6854:4:6"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "6860:4:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6850:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6850:15:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "6840:6:6"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6730:4:6",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "6736:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "6746:6:6",
														"type": ""
													}
												],
												"src": "6702:169:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6957:214:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7090:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7117:4:6"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "7123:3:6"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "7098:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7098:29:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "7090:4:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7136:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7147:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7157:1:6",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "7160:3:6"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7153:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7153:11:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7144:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7144:21:6"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "7136:4:6"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6938:4:6",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "6944:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "6952:4:6",
														"type": ""
													}
												],
												"src": "6876:295:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7268:1303:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7279:51:6",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "7326:3:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "7293:32:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7293:37:6"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "7283:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7415:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7417:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7417:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7417:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7387:6:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7395:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7384:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7384:30:6"
															},
															"nodeType": "YulIf",
															"src": "7381:56:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7447:52:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "7493:4:6"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "7487:5:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7487:11:6"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "7461:25:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7461:38:6"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "7451:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "7592:4:6"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "7598:6:6"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7606:6:6"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "7546:45:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7546:67:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7546:67:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7623:18:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7640:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "7627:9:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7651:17:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7664:4:6",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "7651:9:6"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7715:611:6",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7729:37:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "7748:6:6"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "7760:4:6",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "7756:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7756:9:6"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "7744:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7744:22:6"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "7733:7:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7780:51:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "7826:4:6"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "7794:31:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7794:37:6"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "7784:6:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7844:10:6",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7853:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "7848:1:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "7912:163:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "7937:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "7955:3:6"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "7960:9:6"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "7951:3:6"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "7951:19:6"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "7945:5:6"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "7945:26:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "7930:6:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7930:42:6"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "7930:42:6"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "7989:24:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "8003:6:6"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8011:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7999:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7999:14:6"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "7989:6:6"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "8030:31:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "8047:9:6"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8058:2:6",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8043:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8043:18:6"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "8030:9:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "7878:1:6"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "7881:7:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "7875:2:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7875:14:6"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "7890:21:6",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "7892:17:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "7901:1:6"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7904:4:6",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7897:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7897:12:6"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "7892:1:6"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "7871:3:6",
																					"statements": []
																				},
																				"src": "7867:208:6"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8111:156:6",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "8129:43:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "8156:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "8161:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "8152:3:6"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8152:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "8146:5:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8146:26:6"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "8133:9:6",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "8196:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "8223:9:6"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "8238:6:6"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "8246:4:6",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "8234:3:6"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "8234:17:6"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "8204:18:6"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8204:48:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "8189:6:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8189:64:6"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "8189:64:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "8094:7:6"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "8103:6:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "8091:2:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8091:19:6"
																				},
																				"nodeType": "YulIf",
																				"src": "8088:179:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "8287:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "8301:6:6"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "8309:1:6",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "8297:3:6"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "8297:14:6"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "8313:1:6",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "8293:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8293:22:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "8280:6:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8280:36:6"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8280:36:6"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "7708:618:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7713:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8343:222:6",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "8357:14:6",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8370:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "8361:5:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8394:67:6",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "8412:35:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "8431:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "8436:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "8427:3:6"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8427:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "8421:5:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8421:26:6"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "8412:5:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "8387:6:6"
																				},
																				"nodeType": "YulIf",
																				"src": "8384:77:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "8481:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "8540:5:6"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "8547:6:6"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "8487:52:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8487:67:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "8474:6:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8474:81:6"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8474:81:6"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "8335:230:6",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7688:6:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7696:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7685:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7685:14:6"
															},
															"nodeType": "YulSwitch",
															"src": "7678:887:6"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "7257:4:6",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "7263:3:6",
														"type": ""
													}
												],
												"src": "7176:1395:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604051620017ec380380620017ec8339818101604052810190620000379190620001f6565b8160039081620000489190620004c6565b5080600490816200005a9190620004c6565b505050620005ad565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620000cc8262000081565b810181811067ffffffffffffffff82111715620000ee57620000ed62000092565b5b80604052505050565b60006200010362000063565b9050620001118282620000c1565b919050565b600067ffffffffffffffff82111562000134576200013362000092565b5b6200013f8262000081565b9050602081019050919050565b60005b838110156200016c5780820151818401526020810190506200014f565b60008484015250505050565b60006200018f620001898462000116565b620000f7565b905082815260208101848484011115620001ae57620001ad6200007c565b5b620001bb8482856200014c565b509392505050565b600082601f830112620001db57620001da62000077565b5b8151620001ed84826020860162000178565b91505092915050565b6000806040838503121562000210576200020f6200006d565b5b600083015167ffffffffffffffff81111562000231576200023062000072565b5b6200023f85828601620001c3565b925050602083015167ffffffffffffffff81111562000263576200026262000072565b5b6200027185828601620001c3565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620002ce57607f821691505b602082108103620002e457620002e362000286565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200034e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200030f565b6200035a86836200030f565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620003a7620003a16200039b8462000372565b6200037c565b62000372565b9050919050565b6000819050919050565b620003c38362000386565b620003db620003d282620003ae565b8484546200031c565b825550505050565b600090565b620003f2620003e3565b620003ff818484620003b8565b505050565b5b8181101562000427576200041b600082620003e8565b60018101905062000405565b5050565b601f82111562000476576200044081620002ea565b6200044b84620002ff565b810160208510156200045b578190505b620004736200046a85620002ff565b83018262000404565b50505b505050565b600082821c905092915050565b60006200049b600019846008026200047b565b1980831691505092915050565b6000620004b6838362000488565b9150826002028217905092915050565b620004d1826200027b565b67ffffffffffffffff811115620004ed57620004ec62000092565b5b620004f98254620002b5565b620005068282856200042b565b600060209050601f8311600181146200053e576000841562000529578287015190505b620005358582620004a8565b865550620005a5565b601f1984166200054e86620002ea565b60005b82811015620005785784890151825560018201915060208501945060208101905062000551565b8683101562000598578489015162000594601f89168262000488565b8355505b6001600288020188555050505b505050505050565b61122f80620005bd6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610b0c565b60405180910390f35b6100e660048036038101906100e19190610bc7565b610308565b6040516100f39190610c22565b60405180910390f35b61010461032b565b6040516101119190610c4c565b60405180910390f35b610134600480360381019061012f9190610c67565b610335565b6040516101419190610c22565b60405180910390f35b610152610364565b60405161015f9190610cd6565b60405180910390f35b610182600480360381019061017d9190610bc7565b61036d565b60405161018f9190610c22565b60405180910390f35b6101b260048036038101906101ad9190610cf1565b6103a4565b6040516101bf9190610c4c565b60405180910390f35b6101d06103ec565b6040516101dd9190610b0c565b60405180910390f35b61020060048036038101906101fb9190610bc7565b61047e565b60405161020d9190610c22565b60405180910390f35b610230600480360381019061022b9190610bc7565b6104f5565b60405161023d9190610c22565b60405180910390f35b610260600480360381019061025b9190610d1e565b610518565b60405161026d9190610c4c565b60405180910390f35b60606003805461028590610d8d565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610d8d565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b60008061031361059f565b90506103208185856105a7565b600191505092915050565b6000600254905090565b60008061034061059f565b905061034d858285610770565b6103588585856107fc565b60019150509392505050565b60006012905090565b60008061037861059f565b905061039981858561038a8589610518565b6103949190610ded565b6105a7565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546103fb90610d8d565b80601f016020809104026020016040519081016040528092919081815260200182805461042790610d8d565b80156104745780601f1061044957610100808354040283529160200191610474565b820191906000526020600020905b81548152906001019060200180831161045757829003601f168201915b5050505050905090565b60008061048961059f565b905060006104978286610518565b9050838110156104dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d390610e93565b60405180910390fd5b6104e982868684036105a7565b60019250505092915050565b60008061050061059f565b905061050d8185856107fc565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610616576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060d90610f25565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610685576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067c90610fb7565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107639190610c4c565b60405180910390a3505050565b600061077c8484610518565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f657818110156107e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107df90611023565b60405180910390fd5b6107f584848484036105a7565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361086b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610862906110b5565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d190611147565b60405180910390fd5b6108e5838383610a72565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561096b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610962906111d9565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a599190610c4c565b60405180910390a3610a6c848484610a77565b50505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ab6578082015181840152602081019050610a9b565b60008484015250505050565b6000601f19601f8301169050919050565b6000610ade82610a7c565b610ae88185610a87565b9350610af8818560208601610a98565b610b0181610ac2565b840191505092915050565b60006020820190508181036000830152610b268184610ad3565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b5e82610b33565b9050919050565b610b6e81610b53565b8114610b7957600080fd5b50565b600081359050610b8b81610b65565b92915050565b6000819050919050565b610ba481610b91565b8114610baf57600080fd5b50565b600081359050610bc181610b9b565b92915050565b60008060408385031215610bde57610bdd610b2e565b5b6000610bec85828601610b7c565b9250506020610bfd85828601610bb2565b9150509250929050565b60008115159050919050565b610c1c81610c07565b82525050565b6000602082019050610c376000830184610c13565b92915050565b610c4681610b91565b82525050565b6000602082019050610c616000830184610c3d565b92915050565b600080600060608486031215610c8057610c7f610b2e565b5b6000610c8e86828701610b7c565b9350506020610c9f86828701610b7c565b9250506040610cb086828701610bb2565b9150509250925092565b600060ff82169050919050565b610cd081610cba565b82525050565b6000602082019050610ceb6000830184610cc7565b92915050565b600060208284031215610d0757610d06610b2e565b5b6000610d1584828501610b7c565b91505092915050565b60008060408385031215610d3557610d34610b2e565b5b6000610d4385828601610b7c565b9250506020610d5485828601610b7c565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610da557607f821691505b602082108103610db857610db7610d5e565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610df882610b91565b9150610e0383610b91565b9250828201905080821115610e1b57610e1a610dbe565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000610e7d602583610a87565b9150610e8882610e21565b604082019050919050565b60006020820190508181036000830152610eac81610e70565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000610f0f602483610a87565b9150610f1a82610eb3565b604082019050919050565b60006020820190508181036000830152610f3e81610f02565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000610fa1602283610a87565b9150610fac82610f45565b604082019050919050565b60006020820190508181036000830152610fd081610f94565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b600061100d601d83610a87565b915061101882610fd7565b602082019050919050565b6000602082019050818103600083015261103c81611000565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b600061109f602583610a87565b91506110aa82611043565b604082019050919050565b600060208201905081810360008301526110ce81611092565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611131602383610a87565b915061113c826110d5565b604082019050919050565b6000602082019050818103600083015261116081611124565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006111c3602683610a87565b91506111ce82611167565b604082019050919050565b600060208201905081810360008301526111f2816111b6565b905091905056fea2646970667358221220005f598b59a8ef1b830a8e6bb81db6c2d3d112539000d8e58b45a6286fcebbe164736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x17EC CODESIZE SUB DUP1 PUSH3 0x17EC DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x1F6 JUMP JUMPDEST DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x48 SWAP2 SWAP1 PUSH3 0x4C6 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0x5A SWAP2 SWAP1 PUSH3 0x4C6 JUMP JUMPDEST POP POP POP PUSH3 0x5AD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0xCC DUP3 PUSH3 0x81 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0xEE JUMPI PUSH3 0xED PUSH3 0x92 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x103 PUSH3 0x63 JUMP JUMPDEST SWAP1 POP PUSH3 0x111 DUP3 DUP3 PUSH3 0xC1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x134 JUMPI PUSH3 0x133 PUSH3 0x92 JUMP JUMPDEST JUMPDEST PUSH3 0x13F DUP3 PUSH3 0x81 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x16C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x14F JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x18F PUSH3 0x189 DUP5 PUSH3 0x116 JUMP JUMPDEST PUSH3 0xF7 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x1AE JUMPI PUSH3 0x1AD PUSH3 0x7C JUMP JUMPDEST JUMPDEST PUSH3 0x1BB DUP5 DUP3 DUP6 PUSH3 0x14C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1DB JUMPI PUSH3 0x1DA PUSH3 0x77 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x1ED DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x178 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x210 JUMPI PUSH3 0x20F PUSH3 0x6D JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x231 JUMPI PUSH3 0x230 PUSH3 0x72 JUMP JUMPDEST JUMPDEST PUSH3 0x23F DUP6 DUP3 DUP7 ADD PUSH3 0x1C3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x263 JUMPI PUSH3 0x262 PUSH3 0x72 JUMP JUMPDEST JUMPDEST PUSH3 0x271 DUP6 DUP3 DUP7 ADD PUSH3 0x1C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2CE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2E4 JUMPI PUSH3 0x2E3 PUSH3 0x286 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x34E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x30F JUMP JUMPDEST PUSH3 0x35A DUP7 DUP4 PUSH3 0x30F JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3A7 PUSH3 0x3A1 PUSH3 0x39B DUP5 PUSH3 0x372 JUMP JUMPDEST PUSH3 0x37C JUMP JUMPDEST PUSH3 0x372 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3C3 DUP4 PUSH3 0x386 JUMP JUMPDEST PUSH3 0x3DB PUSH3 0x3D2 DUP3 PUSH3 0x3AE JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x31C JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x3F2 PUSH3 0x3E3 JUMP JUMPDEST PUSH3 0x3FF DUP2 DUP5 DUP5 PUSH3 0x3B8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x427 JUMPI PUSH3 0x41B PUSH1 0x0 DUP3 PUSH3 0x3E8 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x405 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x476 JUMPI PUSH3 0x440 DUP2 PUSH3 0x2EA JUMP JUMPDEST PUSH3 0x44B DUP5 PUSH3 0x2FF JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x45B JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x473 PUSH3 0x46A DUP6 PUSH3 0x2FF JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x404 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x49B PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x47B JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4B6 DUP4 DUP4 PUSH3 0x488 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x4D1 DUP3 PUSH3 0x27B JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x4ED JUMPI PUSH3 0x4EC PUSH3 0x92 JUMP JUMPDEST JUMPDEST PUSH3 0x4F9 DUP3 SLOAD PUSH3 0x2B5 JUMP JUMPDEST PUSH3 0x506 DUP3 DUP3 DUP6 PUSH3 0x42B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x53E JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x529 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x535 DUP6 DUP3 PUSH3 0x4A8 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x5A5 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x54E DUP7 PUSH3 0x2EA JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x578 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x551 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x598 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x594 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x488 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x122F DUP1 PUSH3 0x5BD PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xC67 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xCF1 JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xD1E JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x313 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x320 DUP2 DUP6 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x340 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x34D DUP6 DUP3 DUP6 PUSH2 0x770 JUMP JUMPDEST PUSH2 0x358 DUP6 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x378 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP2 DUP6 DUP6 PUSH2 0x38A DUP6 DUP10 PUSH2 0x518 JUMP JUMPDEST PUSH2 0x394 SWAP2 SWAP1 PUSH2 0xDED JUMP JUMPDEST PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3FB SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x427 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x474 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x449 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x474 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x457 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x489 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x497 DUP3 DUP7 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D3 SWAP1 PUSH2 0xE93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x500 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x50D DUP2 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x616 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60D SWAP1 PUSH2 0xF25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x685 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67C SWAP1 PUSH2 0xFB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x763 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77C DUP5 DUP5 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7F6 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DF SWAP1 PUSH2 0x1023 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F5 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x86B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x862 SWAP1 PUSH2 0x10B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D1 SWAP1 PUSH2 0x1147 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E5 DUP4 DUP4 DUP4 PUSH2 0xA72 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x96B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x962 SWAP1 PUSH2 0x11D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA59 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA6C DUP5 DUP5 DUP5 PUSH2 0xA77 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAB6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA9B JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xADE DUP3 PUSH2 0xA7C JUMP JUMPDEST PUSH2 0xAE8 DUP2 DUP6 PUSH2 0xA87 JUMP JUMPDEST SWAP4 POP PUSH2 0xAF8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA98 JUMP JUMPDEST PUSH2 0xB01 DUP2 PUSH2 0xAC2 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB26 DUP2 DUP5 PUSH2 0xAD3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB5E DUP3 PUSH2 0xB33 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB6E DUP2 PUSH2 0xB53 JUMP JUMPDEST DUP2 EQ PUSH2 0xB79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB8B DUP2 PUSH2 0xB65 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBA4 DUP2 PUSH2 0xB91 JUMP JUMPDEST DUP2 EQ PUSH2 0xBAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBC1 DUP2 PUSH2 0xB9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBDE JUMPI PUSH2 0xBDD PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBEC DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xBFD DUP6 DUP3 DUP7 ADD PUSH2 0xBB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC1C DUP2 PUSH2 0xC07 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC37 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC13 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC46 DUP2 PUSH2 0xB91 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC61 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC3D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC80 JUMPI PUSH2 0xC7F PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC8E DUP7 DUP3 DUP8 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC9F DUP7 DUP3 DUP8 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCB0 DUP7 DUP3 DUP8 ADD PUSH2 0xBB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCD0 DUP2 PUSH2 0xCBA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCEB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCC7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD07 JUMPI PUSH2 0xD06 PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD15 DUP5 DUP3 DUP6 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD35 JUMPI PUSH2 0xD34 PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD43 DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD54 DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xDA5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xDB8 JUMPI PUSH2 0xDB7 PUSH2 0xD5E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDF8 DUP3 PUSH2 0xB91 JUMP JUMPDEST SWAP2 POP PUSH2 0xE03 DUP4 PUSH2 0xB91 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE1B JUMPI PUSH2 0xE1A PUSH2 0xDBE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE7D PUSH1 0x25 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xE88 DUP3 PUSH2 0xE21 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEAC DUP2 PUSH2 0xE70 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF0F PUSH1 0x24 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xF1A DUP3 PUSH2 0xEB3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF3E DUP2 PUSH2 0xF02 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFA1 PUSH1 0x22 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xFAC DUP3 PUSH2 0xF45 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFD0 DUP2 PUSH2 0xF94 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100D PUSH1 0x1D DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x1018 DUP3 PUSH2 0xFD7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x103C DUP2 PUSH2 0x1000 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x109F PUSH1 0x25 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x10AA DUP3 PUSH2 0x1043 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10CE DUP2 PUSH2 0x1092 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1131 PUSH1 0x23 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x113C DUP3 PUSH2 0x10D5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1160 DUP2 PUSH2 0x1124 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11C3 PUSH1 0x26 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x11CE DUP3 PUSH2 0x1167 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11F2 DUP2 PUSH2 0x11B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP 0x5F MSIZE DUP12 MSIZE 0xA8 0xEF SHL DUP4 EXP DUP15 PUSH12 0xB81DB6C2D3D112539000D8E5 DUP12 GASLIMIT 0xA6 0x28 PUSH16 0xCEBBE164736F6C634300081200330000 ",
							"sourceMap": "1401:11610:0:-:0;;;1976:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2050:5;2042;:13;;;;;;:::i;:::-;;2075:7;2065;:17;;;;;;:::i;:::-;;1976:113;;1401:11610;;7:75:6;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:853::-;2776:6;2784;2833:2;2821:9;2812:7;2808:23;2804:32;2801:119;;;2839:79;;:::i;:::-;2801:119;2980:1;2969:9;2965:17;2959:24;3010:18;3002:6;2999:30;2996:117;;;3032:79;;:::i;:::-;2996:117;3137:74;3203:7;3194:6;3183:9;3179:22;3137:74;:::i;:::-;3127:84;;2930:291;3281:2;3270:9;3266:18;3260:25;3312:18;3304:6;3301:30;3298:117;;;3334:79;;:::i;:::-;3298:117;3439:74;3505:7;3496:6;3485:9;3481:22;3439:74;:::i;:::-;3429:84;;3231:292;2677:853;;;;;:::o;3536:99::-;3588:6;3622:5;3616:12;3606:22;;3536:99;;;:::o;3641:180::-;3689:77;3686:1;3679:88;3786:4;3783:1;3776:15;3810:4;3807:1;3800:15;3827:320;3871:6;3908:1;3902:4;3898:12;3888:22;;3955:1;3949:4;3945:12;3976:18;3966:81;;4032:4;4024:6;4020:17;4010:27;;3966:81;4094:2;4086:6;4083:14;4063:18;4060:38;4057:84;;4113:18;;:::i;:::-;4057:84;3878:269;3827:320;;;:::o;4153:141::-;4202:4;4225:3;4217:11;;4248:3;4245:1;4238:14;4282:4;4279:1;4269:18;4261:26;;4153:141;;;:::o;4300:93::-;4337:6;4384:2;4379;4372:5;4368:14;4364:23;4354:33;;4300:93;;;:::o;4399:107::-;4443:8;4493:5;4487:4;4483:16;4462:37;;4399:107;;;;:::o;4512:393::-;4581:6;4631:1;4619:10;4615:18;4654:97;4684:66;4673:9;4654:97;:::i;:::-;4772:39;4802:8;4791:9;4772:39;:::i;:::-;4760:51;;4844:4;4840:9;4833:5;4829:21;4820:30;;4893:4;4883:8;4879:19;4872:5;4869:30;4859:40;;4588:317;;4512:393;;;;;:::o;4911:77::-;4948:7;4977:5;4966:16;;4911:77;;;:::o;4994:60::-;5022:3;5043:5;5036:12;;4994:60;;;:::o;5060:142::-;5110:9;5143:53;5161:34;5170:24;5188:5;5170:24;:::i;:::-;5161:34;:::i;:::-;5143:53;:::i;:::-;5130:66;;5060:142;;;:::o;5208:75::-;5251:3;5272:5;5265:12;;5208:75;;;:::o;5289:269::-;5399:39;5430:7;5399:39;:::i;:::-;5460:91;5509:41;5533:16;5509:41;:::i;:::-;5501:6;5494:4;5488:11;5460:91;:::i;:::-;5454:4;5447:105;5365:193;5289:269;;;:::o;5564:73::-;5609:3;5564:73;:::o;5643:189::-;5720:32;;:::i;:::-;5761:65;5819:6;5811;5805:4;5761:65;:::i;:::-;5696:136;5643:189;;:::o;5838:186::-;5898:120;5915:3;5908:5;5905:14;5898:120;;;5969:39;6006:1;5999:5;5969:39;:::i;:::-;5942:1;5935:5;5931:13;5922:22;;5898:120;;;5838:186;;:::o;6030:543::-;6131:2;6126:3;6123:11;6120:446;;;6165:38;6197:5;6165:38;:::i;:::-;6249:29;6267:10;6249:29;:::i;:::-;6239:8;6235:44;6432:2;6420:10;6417:18;6414:49;;;6453:8;6438:23;;6414:49;6476:80;6532:22;6550:3;6532:22;:::i;:::-;6522:8;6518:37;6505:11;6476:80;:::i;:::-;6135:431;;6120:446;6030:543;;;:::o;6579:117::-;6633:8;6683:5;6677:4;6673:16;6652:37;;6579:117;;;;:::o;6702:169::-;6746:6;6779:51;6827:1;6823:6;6815:5;6812:1;6808:13;6779:51;:::i;:::-;6775:56;6860:4;6854;6850:15;6840:25;;6753:118;6702:169;;;;:::o;6876:295::-;6952:4;7098:29;7123:3;7117:4;7098:29;:::i;:::-;7090:37;;7160:3;7157:1;7153:11;7147:4;7144:21;7136:29;;6876:295;;;;:::o;7176:1395::-;7293:37;7326:3;7293:37;:::i;:::-;7395:18;7387:6;7384:30;7381:56;;;7417:18;;:::i;:::-;7381:56;7461:38;7493:4;7487:11;7461:38;:::i;:::-;7546:67;7606:6;7598;7592:4;7546:67;:::i;:::-;7640:1;7664:4;7651:17;;7696:2;7688:6;7685:14;7713:1;7708:618;;;;8370:1;8387:6;8384:77;;;8436:9;8431:3;8427:19;8421:26;8412:35;;8384:77;8487:67;8547:6;8540:5;8487:67;:::i;:::-;8481:4;8474:81;8343:222;7678:887;;7708:618;7760:4;7756:9;7748:6;7744:22;7794:37;7826:4;7794:37;:::i;:::-;7853:1;7867:208;7881:7;7878:1;7875:14;7867:208;;;7960:9;7955:3;7951:19;7945:26;7937:6;7930:42;8011:1;8003:6;7999:14;7989:24;;8058:2;8047:9;8043:18;8030:31;;7904:4;7901:1;7897:12;7892:17;;7867:208;;;8103:6;8094:7;8091:19;8088:179;;;8161:9;8156:3;8152:19;8146:26;8204:48;8246:4;8238:6;8234:17;8223:9;8204:48;:::i;:::-;8196:6;8189:64;8111:156;8088:179;8313:1;8309;8301:6;8297:14;8293:22;8287:4;8280:36;7715:611;;;7678:887;;7268:1303;;;7176:1395;;:::o;1401:11610:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_585": {
									"entryPoint": 2679,
									"id": 585,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_520": {
									"entryPoint": 1447,
									"id": 520,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_574": {
									"entryPoint": 2674,
									"id": 574,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_701": {
									"entryPoint": 1439,
									"id": 701,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_563": {
									"entryPoint": 1904,
									"id": 563,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_346": {
									"entryPoint": 2044,
									"id": 346,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_141": {
									"entryPoint": 1304,
									"id": 141,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_166": {
									"entryPoint": 776,
									"id": 166,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_98": {
									"entryPoint": 932,
									"id": 98,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_74": {
									"entryPoint": 868,
									"id": 74,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_269": {
									"entryPoint": 1150,
									"id": 269,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_228": {
									"entryPoint": 877,
									"id": 228,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_54": {
									"entryPoint": 630,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_64": {
									"entryPoint": 1004,
									"id": 64,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_84": {
									"entryPoint": 811,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_199": {
									"entryPoint": 821,
									"id": 199,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_123": {
									"entryPoint": 1269,
									"id": 123,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 2940,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2994,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3313,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3358,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3175,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3015,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3091,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2771,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4388,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3988,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4096,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4534,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4242,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3842,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3696,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3133,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 3271,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3106,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2828,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4423,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4023,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4131,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4569,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4277,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3877,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3731,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3148,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 3286,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2684,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2695,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3565,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2899,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3079,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2867,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2961,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 3258,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 2712,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 3469,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3518,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 3422,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2862,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 2754,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f": {
									"entryPoint": 4309,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029": {
									"entryPoint": 3909,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe": {
									"entryPoint": 4055,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6": {
									"entryPoint": 4455,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea": {
									"entryPoint": 4163,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208": {
									"entryPoint": 3763,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8": {
									"entryPoint": 3617,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2917,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2971,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:13699:6",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:40:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "87:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "49:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "59:6:6",
														"type": ""
													}
												],
												"src": "7:99:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "208:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "218:19:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "218:19:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "246:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "270:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "261:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "180:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "185:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "196:11:6",
														"type": ""
													}
												],
												"src": "112:169:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "349:184:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "359:10:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "368:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "363:1:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "428:63:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "453:3:6"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "458:1:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "449:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "449:11:6"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "472:3:6"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "477:1:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "468:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "468:11:6"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "462:5:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "462:18:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "442:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "442:39:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "442:39:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "389:1:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "392:6:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "386:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "386:13:6"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "400:19:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "402:15:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "411:1:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "414:2:6",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "407:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "407:10:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "402:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "382:3:6",
																"statements": []
															},
															"src": "378:113:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "511:3:6"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "507:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "507:16:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "525:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "500:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "500:27:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "500:27:6"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "331:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "336:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "341:6:6",
														"type": ""
													}
												],
												"src": "287:246:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "587:54:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "597:38:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "615:5:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "622:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "611:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "611:14:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "631:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "627:7:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "607:28:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:6"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "570:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "580:6:6",
														"type": ""
													}
												],
												"src": "539:102:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "739:285:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "749:53:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "796:5:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "763:32:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "763:39:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "753:6:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "811:78:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "877:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "882:6:6"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "818:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "818:71:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "937:5:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "944:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "933:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "933:16:6"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "951:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "956:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "898:34:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "898:65:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "898:65:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "972:46:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "983:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1010:6:6"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "988:21:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "988:29:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "979:39:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "972:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "720:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "727:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "735:3:6",
														"type": ""
													}
												],
												"src": "647:377:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1148:195:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1158:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1205:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1216:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1201:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1201:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1224:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1230:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1220:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1194:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1250:86:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1322:6:6"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1331:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1258:63:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1258:78:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1250:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1120:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1132:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1143:4:6",
														"type": ""
													}
												],
												"src": "1030:313:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1389:35:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1399:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1415:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1409:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1409:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1399:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1382:6:6",
														"type": ""
													}
												],
												"src": "1349:75:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1519:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1536:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1539:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1529:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1529:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1529:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1430:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1642:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1662:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1652:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1652:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1553:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1721:81:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1731:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1746:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1753:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1742:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1742:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1731:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1703:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1713:7:6",
														"type": ""
													}
												],
												"src": "1676:126:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1853:51:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1863:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1892:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1874:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1874:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1863:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1835:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1845:7:6",
														"type": ""
													}
												],
												"src": "1808:96:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1953:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2010:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2019:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2022:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2012:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2012:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2012:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1976:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2001:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1983:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1983:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1973:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1973:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1966:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1966:43:6"
															},
															"nodeType": "YulIf",
															"src": "1963:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1946:5:6",
														"type": ""
													}
												],
												"src": "1910:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2090:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2100:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2122:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2109:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2109:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2100:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2165:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2138:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2138:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2138:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2068:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2076:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2084:5:6",
														"type": ""
													}
												],
												"src": "2038:139:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2228:32:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2238:16:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2249:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2238:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2210:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2220:7:6",
														"type": ""
													}
												],
												"src": "2183:77:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2309:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2366:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2375:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2378:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2368:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2368:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2368:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2332:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2357:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2339:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2339:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2329:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2329:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2322:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2322:43:6"
															},
															"nodeType": "YulIf",
															"src": "2319:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2302:5:6",
														"type": ""
													}
												],
												"src": "2266:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2446:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2456:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2478:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2465:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2465:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2456:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2521:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2494:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2494:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2494:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2424:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2432:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2440:5:6",
														"type": ""
													}
												],
												"src": "2394:139:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2622:391:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2668:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2670:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2670:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2670:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2643:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2652:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2639:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2639:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2664:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2635:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2635:32:6"
															},
															"nodeType": "YulIf",
															"src": "2632:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "2761:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2776:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2790:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2780:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2805:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2840:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2851:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2836:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2836:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2860:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2815:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2815:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2805:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2888:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2903:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2917:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2907:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2933:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2968:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2979:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2964:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2964:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2988:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2943:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2943:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2933:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2584:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2595:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2607:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2615:6:6",
														"type": ""
													}
												],
												"src": "2539:474:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3061:48:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3071:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3096:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3089:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3089:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3082:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3082:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3071:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3043:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3053:7:6",
														"type": ""
													}
												],
												"src": "3019:90:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3174:50:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3191:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3211:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "3196:14:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3196:21:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3184:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3184:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3184:34:6"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3162:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3169:3:6",
														"type": ""
													}
												],
												"src": "3115:109:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3322:118:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3332:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3344:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3355:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3340:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3340:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3332:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3406:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3419:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3430:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3415:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3415:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3368:37:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3368:65:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3368:65:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3294:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3306:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3317:4:6",
														"type": ""
													}
												],
												"src": "3230:210:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3511:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3528:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3551:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3533:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3533:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3521:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3521:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3521:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3499:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3506:3:6",
														"type": ""
													}
												],
												"src": "3446:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3668:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3678:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3690:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3701:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3686:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3686:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3678:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3758:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3771:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3782:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3767:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3767:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3714:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3714:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3714:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3640:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3652:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3663:4:6",
														"type": ""
													}
												],
												"src": "3570:222:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3898:519:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3944:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3946:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3946:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3946:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3919:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3928:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3915:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3915:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3940:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3911:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3911:32:6"
															},
															"nodeType": "YulIf",
															"src": "3908:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "4037:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4052:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4066:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4056:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4081:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4116:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4127:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4112:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4112:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4136:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4091:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4091:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4081:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4164:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4179:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4193:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4183:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4209:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4244:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4255:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4240:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4240:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4264:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4219:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4219:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4209:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4292:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4307:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4321:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4311:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4337:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4372:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4383:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4368:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4368:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4392:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4347:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4347:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "4337:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3852:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3863:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3875:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3883:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3891:6:6",
														"type": ""
													}
												],
												"src": "3798:619:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4466:43:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4476:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4491:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4498:4:6",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4487:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4487:16:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4476:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4448:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4458:7:6",
														"type": ""
													}
												],
												"src": "4423:86:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4576:51:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4593:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4614:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "4598:15:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4598:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4586:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4586:35:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4586:35:6"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4564:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4571:3:6",
														"type": ""
													}
												],
												"src": "4515:112:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4727:120:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4737:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4749:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4760:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4745:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4745:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4737:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4813:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4826:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4837:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4822:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4822:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4773:39:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4773:67:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4773:67:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4699:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4711:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4722:4:6",
														"type": ""
													}
												],
												"src": "4633:214:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4919:263:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4965:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4967:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4967:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4967:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4940:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4949:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4936:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4936:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4961:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4932:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4932:32:6"
															},
															"nodeType": "YulIf",
															"src": "4929:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "5058:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5073:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5087:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5077:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5102:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5137:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5148:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5133:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5133:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5157:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5112:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5112:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5102:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4889:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4900:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4912:6:6",
														"type": ""
													}
												],
												"src": "4853:329:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5271:391:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5317:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5319:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5319:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5319:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5292:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5301:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5288:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5288:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5313:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5284:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5284:32:6"
															},
															"nodeType": "YulIf",
															"src": "5281:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "5410:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5425:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5439:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5429:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5454:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5489:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5500:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5485:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5485:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5509:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5464:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5464:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5454:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5537:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5552:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5566:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5556:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5582:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5617:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5628:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5613:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5613:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5637:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5592:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5592:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5582:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5233:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5244:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5256:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5264:6:6",
														"type": ""
													}
												],
												"src": "5188:474:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5696:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5713:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5716:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5706:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5706:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5706:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5810:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5813:4:6",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5803:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5803:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5803:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5834:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5837:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5827:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5827:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5827:15:6"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "5668:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5905:269:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5915:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5929:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5935:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "5925:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5925:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "5915:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5946:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5976:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5982:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5972:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5972:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "5950:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6023:51:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6037:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "6051:6:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6059:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "6047:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6047:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6037:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6003:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5996:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5996:26:6"
															},
															"nodeType": "YulIf",
															"src": "5993:81:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6126:42:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "6140:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6140:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6140:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6090:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6113:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6121:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "6110:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6110:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "6087:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6087:38:6"
															},
															"nodeType": "YulIf",
															"src": "6084:84:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "5889:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5898:6:6",
														"type": ""
													}
												],
												"src": "5854:320:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6208:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6225:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6228:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6218:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6218:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6218:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6322:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6325:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6315:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6315:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6315:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6346:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6349:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6339:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6339:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6339:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "6180:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6410:147:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6420:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6443:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6425:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6425:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "6420:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6454:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6477:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6459:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6459:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "6454:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6488:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6499:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6502:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6495:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6495:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "6488:3:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6528:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6530:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6530:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6530:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6520:1:6"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "6523:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6517:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6517:10:6"
															},
															"nodeType": "YulIf",
															"src": "6514:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6397:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6400:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "6406:3:6",
														"type": ""
													}
												],
												"src": "6366:191:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6669:118:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6691:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6699:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6687:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6687:14:6"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6703:34:6",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6680:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6680:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6680:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6759:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6767:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6755:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6755:15:6"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6772:7:6",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6748:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6748:32:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6748:32:6"
														}
													]
												},
												"name": "store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6661:6:6",
														"type": ""
													}
												],
												"src": "6563:224:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6939:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6949:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7015:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7020:2:6",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6956:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6956:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6949:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7121:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																	"nodeType": "YulIdentifier",
																	"src": "7032:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7032:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7032:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7134:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7145:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7150:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7141:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7141:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7134:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6927:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6935:3:6",
														"type": ""
													}
												],
												"src": "6793:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7336:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7346:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7358:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7369:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7354:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7354:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7346:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7393:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7404:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7389:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7389:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7412:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7418:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7408:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7408:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7382:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7382:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7382:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7438:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7572:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7446:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7446:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7438:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7316:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7331:4:6",
														"type": ""
													}
												],
												"src": "7165:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7696:117:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7718:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7726:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7714:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7714:14:6"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7730:34:6",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7707:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7707:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7707:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7786:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7794:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7782:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7782:15:6"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7799:6:6",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7775:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7775:31:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7775:31:6"
														}
													]
												},
												"name": "store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7688:6:6",
														"type": ""
													}
												],
												"src": "7590:223:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7965:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7975:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8041:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8046:2:6",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7982:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7982:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7975:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8147:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																	"nodeType": "YulIdentifier",
																	"src": "8058:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8058:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8058:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8160:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8171:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8176:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8167:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8167:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8160:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7953:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7961:3:6",
														"type": ""
													}
												],
												"src": "7819:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8362:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8372:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8384:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8395:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8380:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8380:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8372:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8419:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8430:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8415:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8415:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8438:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8444:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8434:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8434:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8408:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8408:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8408:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8464:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8598:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8472:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8472:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8464:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8342:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8357:4:6",
														"type": ""
													}
												],
												"src": "8191:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8722:115:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8744:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8752:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8740:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8740:14:6"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8756:34:6",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8733:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8733:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8733:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8812:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8820:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8808:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8808:15:6"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8825:4:6",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8801:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8801:29:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8801:29:6"
														}
													]
												},
												"name": "store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8714:6:6",
														"type": ""
													}
												],
												"src": "8616:221:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8989:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8999:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9065:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9070:2:6",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9006:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9006:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8999:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9171:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																	"nodeType": "YulIdentifier",
																	"src": "9082:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9082:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9082:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9184:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9195:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9200:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9191:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9191:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9184:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8977:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8985:3:6",
														"type": ""
													}
												],
												"src": "8843:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9386:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9396:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9408:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9419:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9404:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9404:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9396:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9443:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9454:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9439:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9439:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9462:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9468:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9458:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9458:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9432:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9432:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9432:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9488:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9622:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9496:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9496:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9488:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9366:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9381:4:6",
														"type": ""
													}
												],
												"src": "9215:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9746:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9768:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9776:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9764:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9764:14:6"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9780:31:6",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9757:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9757:55:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9757:55:6"
														}
													]
												},
												"name": "store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9738:6:6",
														"type": ""
													}
												],
												"src": "9640:179:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9971:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9981:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10047:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10052:2:6",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9988:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9988:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9981:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10153:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																	"nodeType": "YulIdentifier",
																	"src": "10064:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10064:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10064:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10166:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10177:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10182:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10173:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10173:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10166:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9959:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9967:3:6",
														"type": ""
													}
												],
												"src": "9825:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10368:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10378:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10390:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10401:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10386:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10386:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10378:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10425:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10436:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10421:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10421:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10444:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10450:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10440:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10440:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10414:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10414:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10414:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10470:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10604:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10478:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10478:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10470:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10348:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10363:4:6",
														"type": ""
													}
												],
												"src": "10197:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10728:118:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10750:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10758:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10746:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10746:14:6"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10762:34:6",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10739:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10739:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10739:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10818:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10826:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10814:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10814:15:6"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10831:7:6",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10807:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10807:32:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10807:32:6"
														}
													]
												},
												"name": "store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10720:6:6",
														"type": ""
													}
												],
												"src": "10622:224:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10998:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11008:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11074:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11079:2:6",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11015:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11015:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11008:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11180:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																	"nodeType": "YulIdentifier",
																	"src": "11091:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11091:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11091:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11193:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11204:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11209:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11200:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11200:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11193:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10986:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10994:3:6",
														"type": ""
													}
												],
												"src": "10852:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11395:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11405:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11417:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11428:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11413:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11413:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11405:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11452:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11463:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11448:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11448:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11471:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11477:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11467:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11467:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11441:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11441:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11441:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11497:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11631:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11505:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11505:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11497:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11375:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11390:4:6",
														"type": ""
													}
												],
												"src": "11224:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11755:116:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11777:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11785:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11773:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11773:14:6"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11789:34:6",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11766:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11766:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11766:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11845:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11853:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11841:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11841:15:6"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11858:5:6",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11834:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11834:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11834:30:6"
														}
													]
												},
												"name": "store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11747:6:6",
														"type": ""
													}
												],
												"src": "11649:222:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12023:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12033:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12099:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12104:2:6",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12040:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12040:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12033:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12205:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																	"nodeType": "YulIdentifier",
																	"src": "12116:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12116:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12116:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12218:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12229:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12234:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12225:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12225:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12218:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12011:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12019:3:6",
														"type": ""
													}
												],
												"src": "11877:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12420:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12430:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12442:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12453:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12438:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12438:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12430:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12477:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12488:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12473:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12473:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12496:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12502:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12492:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12492:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12466:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12466:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12466:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12522:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12656:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12530:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12530:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12522:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12400:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12415:4:6",
														"type": ""
													}
												],
												"src": "12249:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12780:119:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12802:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12810:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12798:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12798:14:6"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12814:34:6",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12791:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12791:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12791:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12870:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12878:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12866:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12866:15:6"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12883:8:6",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12859:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12859:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12859:33:6"
														}
													]
												},
												"name": "store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12772:6:6",
														"type": ""
													}
												],
												"src": "12674:225:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13051:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13061:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13127:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13132:2:6",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13068:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13068:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13061:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13233:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"nodeType": "YulIdentifier",
																	"src": "13144:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13144:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13144:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13246:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13257:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13262:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13253:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13253:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13246:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13039:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13047:3:6",
														"type": ""
													}
												],
												"src": "12905:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13448:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13458:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13470:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13481:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13466:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13466:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13458:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13505:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13516:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13501:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13501:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13524:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13530:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13520:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13520:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13494:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13494:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13494:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13550:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13684:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13558:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13558:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13550:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13428:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13443:4:6",
														"type": ""
													}
												],
												"src": "13277:419:6"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: insufficient allowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610b0c565b60405180910390f35b6100e660048036038101906100e19190610bc7565b610308565b6040516100f39190610c22565b60405180910390f35b61010461032b565b6040516101119190610c4c565b60405180910390f35b610134600480360381019061012f9190610c67565b610335565b6040516101419190610c22565b60405180910390f35b610152610364565b60405161015f9190610cd6565b60405180910390f35b610182600480360381019061017d9190610bc7565b61036d565b60405161018f9190610c22565b60405180910390f35b6101b260048036038101906101ad9190610cf1565b6103a4565b6040516101bf9190610c4c565b60405180910390f35b6101d06103ec565b6040516101dd9190610b0c565b60405180910390f35b61020060048036038101906101fb9190610bc7565b61047e565b60405161020d9190610c22565b60405180910390f35b610230600480360381019061022b9190610bc7565b6104f5565b60405161023d9190610c22565b60405180910390f35b610260600480360381019061025b9190610d1e565b610518565b60405161026d9190610c4c565b60405180910390f35b60606003805461028590610d8d565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610d8d565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b60008061031361059f565b90506103208185856105a7565b600191505092915050565b6000600254905090565b60008061034061059f565b905061034d858285610770565b6103588585856107fc565b60019150509392505050565b60006012905090565b60008061037861059f565b905061039981858561038a8589610518565b6103949190610ded565b6105a7565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546103fb90610d8d565b80601f016020809104026020016040519081016040528092919081815260200182805461042790610d8d565b80156104745780601f1061044957610100808354040283529160200191610474565b820191906000526020600020905b81548152906001019060200180831161045757829003601f168201915b5050505050905090565b60008061048961059f565b905060006104978286610518565b9050838110156104dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d390610e93565b60405180910390fd5b6104e982868684036105a7565b60019250505092915050565b60008061050061059f565b905061050d8185856107fc565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610616576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060d90610f25565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610685576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067c90610fb7565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107639190610c4c565b60405180910390a3505050565b600061077c8484610518565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f657818110156107e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107df90611023565b60405180910390fd5b6107f584848484036105a7565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361086b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610862906110b5565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d190611147565b60405180910390fd5b6108e5838383610a72565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561096b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610962906111d9565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a599190610c4c565b60405180910390a3610a6c848484610a77565b50505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ab6578082015181840152602081019050610a9b565b60008484015250505050565b6000601f19601f8301169050919050565b6000610ade82610a7c565b610ae88185610a87565b9350610af8818560208601610a98565b610b0181610ac2565b840191505092915050565b60006020820190508181036000830152610b268184610ad3565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b5e82610b33565b9050919050565b610b6e81610b53565b8114610b7957600080fd5b50565b600081359050610b8b81610b65565b92915050565b6000819050919050565b610ba481610b91565b8114610baf57600080fd5b50565b600081359050610bc181610b9b565b92915050565b60008060408385031215610bde57610bdd610b2e565b5b6000610bec85828601610b7c565b9250506020610bfd85828601610bb2565b9150509250929050565b60008115159050919050565b610c1c81610c07565b82525050565b6000602082019050610c376000830184610c13565b92915050565b610c4681610b91565b82525050565b6000602082019050610c616000830184610c3d565b92915050565b600080600060608486031215610c8057610c7f610b2e565b5b6000610c8e86828701610b7c565b9350506020610c9f86828701610b7c565b9250506040610cb086828701610bb2565b9150509250925092565b600060ff82169050919050565b610cd081610cba565b82525050565b6000602082019050610ceb6000830184610cc7565b92915050565b600060208284031215610d0757610d06610b2e565b5b6000610d1584828501610b7c565b91505092915050565b60008060408385031215610d3557610d34610b2e565b5b6000610d4385828601610b7c565b9250506020610d5485828601610b7c565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610da557607f821691505b602082108103610db857610db7610d5e565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610df882610b91565b9150610e0383610b91565b9250828201905080821115610e1b57610e1a610dbe565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000610e7d602583610a87565b9150610e8882610e21565b604082019050919050565b60006020820190508181036000830152610eac81610e70565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000610f0f602483610a87565b9150610f1a82610eb3565b604082019050919050565b60006020820190508181036000830152610f3e81610f02565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000610fa1602283610a87565b9150610fac82610f45565b604082019050919050565b60006020820190508181036000830152610fd081610f94565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b600061100d601d83610a87565b915061101882610fd7565b602082019050919050565b6000602082019050818103600083015261103c81611000565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b600061109f602583610a87565b91506110aa82611043565b604082019050919050565b600060208201905081810360008301526110ce81611092565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611131602383610a87565b915061113c826110d5565b604082019050919050565b6000602082019050818103600083015261116081611124565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006111c3602683610a87565b91506111ce82611167565b604082019050919050565b600060208201905081810360008301526111f2816111b6565b905091905056fea2646970667358221220005f598b59a8ef1b830a8e6bb81db6c2d3d112539000d8e58b45a6286fcebbe164736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xC67 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xCF1 JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xD1E JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x313 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x320 DUP2 DUP6 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x340 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x34D DUP6 DUP3 DUP6 PUSH2 0x770 JUMP JUMPDEST PUSH2 0x358 DUP6 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x378 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP2 DUP6 DUP6 PUSH2 0x38A DUP6 DUP10 PUSH2 0x518 JUMP JUMPDEST PUSH2 0x394 SWAP2 SWAP1 PUSH2 0xDED JUMP JUMPDEST PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3FB SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x427 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x474 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x449 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x474 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x457 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x489 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x497 DUP3 DUP7 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D3 SWAP1 PUSH2 0xE93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x500 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x50D DUP2 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x616 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60D SWAP1 PUSH2 0xF25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x685 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67C SWAP1 PUSH2 0xFB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x763 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77C DUP5 DUP5 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7F6 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DF SWAP1 PUSH2 0x1023 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F5 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x86B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x862 SWAP1 PUSH2 0x10B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D1 SWAP1 PUSH2 0x1147 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E5 DUP4 DUP4 DUP4 PUSH2 0xA72 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x96B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x962 SWAP1 PUSH2 0x11D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA59 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA6C DUP5 DUP5 DUP5 PUSH2 0xA77 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAB6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA9B JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xADE DUP3 PUSH2 0xA7C JUMP JUMPDEST PUSH2 0xAE8 DUP2 DUP6 PUSH2 0xA87 JUMP JUMPDEST SWAP4 POP PUSH2 0xAF8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA98 JUMP JUMPDEST PUSH2 0xB01 DUP2 PUSH2 0xAC2 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB26 DUP2 DUP5 PUSH2 0xAD3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB5E DUP3 PUSH2 0xB33 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB6E DUP2 PUSH2 0xB53 JUMP JUMPDEST DUP2 EQ PUSH2 0xB79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB8B DUP2 PUSH2 0xB65 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBA4 DUP2 PUSH2 0xB91 JUMP JUMPDEST DUP2 EQ PUSH2 0xBAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBC1 DUP2 PUSH2 0xB9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBDE JUMPI PUSH2 0xBDD PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBEC DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xBFD DUP6 DUP3 DUP7 ADD PUSH2 0xBB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC1C DUP2 PUSH2 0xC07 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC37 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC13 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC46 DUP2 PUSH2 0xB91 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC61 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC3D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC80 JUMPI PUSH2 0xC7F PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC8E DUP7 DUP3 DUP8 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC9F DUP7 DUP3 DUP8 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCB0 DUP7 DUP3 DUP8 ADD PUSH2 0xBB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCD0 DUP2 PUSH2 0xCBA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCEB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCC7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD07 JUMPI PUSH2 0xD06 PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD15 DUP5 DUP3 DUP6 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD35 JUMPI PUSH2 0xD34 PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD43 DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD54 DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xDA5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xDB8 JUMPI PUSH2 0xDB7 PUSH2 0xD5E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDF8 DUP3 PUSH2 0xB91 JUMP JUMPDEST SWAP2 POP PUSH2 0xE03 DUP4 PUSH2 0xB91 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE1B JUMPI PUSH2 0xE1A PUSH2 0xDBE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE7D PUSH1 0x25 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xE88 DUP3 PUSH2 0xE21 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEAC DUP2 PUSH2 0xE70 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF0F PUSH1 0x24 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xF1A DUP3 PUSH2 0xEB3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF3E DUP2 PUSH2 0xF02 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFA1 PUSH1 0x22 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xFAC DUP3 PUSH2 0xF45 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFD0 DUP2 PUSH2 0xF94 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100D PUSH1 0x1D DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x1018 DUP3 PUSH2 0xFD7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x103C DUP2 PUSH2 0x1000 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x109F PUSH1 0x25 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x10AA DUP3 PUSH2 0x1043 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10CE DUP2 PUSH2 0x1092 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1131 PUSH1 0x23 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x113C DUP3 PUSH2 0x10D5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1160 DUP2 PUSH2 0x1124 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11C3 PUSH1 0x26 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x11CE DUP3 PUSH2 0x1167 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11F2 DUP2 PUSH2 0x11B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP 0x5F MSIZE DUP12 MSIZE 0xA8 0xEF SHL DUP4 EXP DUP15 PUSH12 0xB81DB6C2D3D112539000D8E5 DUP12 GASLIMIT 0xA6 0x28 PUSH16 0xCEBBE164736F6C634300081200330000 ",
							"sourceMap": "1401:11610:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4431:197;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3242:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5190:286;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3091:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5871:234;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3406:125;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2365:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6592:427;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3727:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3974:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2154:98;2208:13;2240:5;2233:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98;:::o;4431:197::-;4514:4;4530:13;4546:12;:10;:12::i;:::-;4530:28;;4568:32;4577:5;4584:7;4593:6;4568:8;:32::i;:::-;4617:4;4610:11;;;4431:197;;;;:::o;3242:106::-;3303:7;3329:12;;3322:19;;3242:106;:::o;5190:286::-;5317:4;5333:15;5351:12;:10;:12::i;:::-;5333:30;;5373:38;5389:4;5395:7;5404:6;5373:15;:38::i;:::-;5421:27;5431:4;5437:2;5441:6;5421:9;:27::i;:::-;5465:4;5458:11;;;5190:286;;;;;:::o;3091:91::-;3149:5;3173:2;3166:9;;3091:91;:::o;5871:234::-;5959:4;5975:13;5991:12;:10;:12::i;:::-;5975:28;;6013:64;6022:5;6029:7;6066:10;6038:25;6048:5;6055:7;6038:9;:25::i;:::-;:38;;;;:::i;:::-;6013:8;:64::i;:::-;6094:4;6087:11;;;5871:234;;;;:::o;3406:125::-;3480:7;3506:9;:18;3516:7;3506:18;;;;;;;;;;;;;;;;3499:25;;3406:125;;;:::o;2365:102::-;2421:13;2453:7;2446:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2365:102;:::o;6592:427::-;6685:4;6701:13;6717:12;:10;:12::i;:::-;6701:28;;6739:24;6766:25;6776:5;6783:7;6766:9;:25::i;:::-;6739:52;;6829:15;6809:16;:35;;6801:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;6920:60;6929:5;6936:7;6964:15;6945:16;:34;6920:8;:60::i;:::-;7008:4;7001:11;;;;6592:427;;;;:::o;3727:189::-;3806:4;3822:13;3838:12;:10;:12::i;:::-;3822:28;;3860;3870:5;3877:2;3881:6;3860:9;:28::i;:::-;3905:4;3898:11;;;3727:189;;;;:::o;3974:149::-;4063:7;4089:11;:18;4101:5;4089:18;;;;;;;;;;;;;;;:27;4108:7;4089:27;;;;;;;;;;;;;;;;4082:34;;3974:149;;;;:::o;640:96:3:-;693:7;719:10;712:17;;640:96;:::o;10504:370:0:-;10652:1;10635:19;;:5;:19;;;10627:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10732:1;10713:21;;:7;:21;;;10705:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10814:6;10784:11;:18;10796:5;10784:18;;;;;;;;;;;;;;;:27;10803:7;10784:27;;;;;;;;;;;;;;;:36;;;;10851:7;10835:32;;10844:5;10835:32;;;10860:6;10835:32;;;;;;:::i;:::-;;;;;;;;10504:370;;;:::o;11155:441::-;11285:24;11312:25;11322:5;11329:7;11312:9;:25::i;:::-;11285:52;;11371:17;11351:16;:37;11347:243;;11432:6;11412:16;:26;;11404:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11514:51;11523:5;11530:7;11558:6;11539:16;:25;11514:8;:51::i;:::-;11347:243;11275:321;11155:441;;;:::o;7473:818::-;7615:1;7599:18;;:4;:18;;;7591:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7691:1;7677:16;;:2;:16;;;7669:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;7744:38;7765:4;7771:2;7775:6;7744:20;:38::i;:::-;7793:19;7815:9;:15;7825:4;7815:15;;;;;;;;;;;;;;;;7793:37;;7863:6;7848:11;:21;;7840:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;7978:6;7964:11;:20;7946:9;:15;7956:4;7946:15;;;;;;;;;;;;;;;:38;;;;8178:6;8161:9;:13;8171:2;8161:13;;;;;;;;;;;;;;;;:23;;;;;;;;;;;8225:2;8210:26;;8219:4;8210:26;;;8229:6;8210:26;;;;;;:::i;:::-;;;;;;;;8247:37;8267:4;8273:2;8277:6;8247:19;:37::i;:::-;7581:710;7473:818;;;:::o;12180:121::-;;;;:::o;12889:120::-;;;;:::o;7:99:6:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:329::-;4912:6;4961:2;4949:9;4940:7;4936:23;4932:32;4929:119;;;4967:79;;:::i;:::-;4929:119;5087:1;5112:53;5157:7;5148:6;5137:9;5133:22;5112:53;:::i;:::-;5102:63;;5058:117;4853:329;;;;:::o;5188:474::-;5256:6;5264;5313:2;5301:9;5292:7;5288:23;5284:32;5281:119;;;5319:79;;:::i;:::-;5281:119;5439:1;5464:53;5509:7;5500:6;5489:9;5485:22;5464:53;:::i;:::-;5454:63;;5410:117;5566:2;5592:53;5637:7;5628:6;5617:9;5613:22;5592:53;:::i;:::-;5582:63;;5537:118;5188:474;;;;;:::o;5668:180::-;5716:77;5713:1;5706:88;5813:4;5810:1;5803:15;5837:4;5834:1;5827:15;5854:320;5898:6;5935:1;5929:4;5925:12;5915:22;;5982:1;5976:4;5972:12;6003:18;5993:81;;6059:4;6051:6;6047:17;6037:27;;5993:81;6121:2;6113:6;6110:14;6090:18;6087:38;6084:84;;6140:18;;:::i;:::-;6084:84;5905:269;5854:320;;;:::o;6180:180::-;6228:77;6225:1;6218:88;6325:4;6322:1;6315:15;6349:4;6346:1;6339:15;6366:191;6406:3;6425:20;6443:1;6425:20;:::i;:::-;6420:25;;6459:20;6477:1;6459:20;:::i;:::-;6454:25;;6502:1;6499;6495:9;6488:16;;6523:3;6520:1;6517:10;6514:36;;;6530:18;;:::i;:::-;6514:36;6366:191;;;;:::o;6563:224::-;6703:34;6699:1;6691:6;6687:14;6680:58;6772:7;6767:2;6759:6;6755:15;6748:32;6563:224;:::o;6793:366::-;6935:3;6956:67;7020:2;7015:3;6956:67;:::i;:::-;6949:74;;7032:93;7121:3;7032:93;:::i;:::-;7150:2;7145:3;7141:12;7134:19;;6793:366;;;:::o;7165:419::-;7331:4;7369:2;7358:9;7354:18;7346:26;;7418:9;7412:4;7408:20;7404:1;7393:9;7389:17;7382:47;7446:131;7572:4;7446:131;:::i;:::-;7438:139;;7165:419;;;:::o;7590:223::-;7730:34;7726:1;7718:6;7714:14;7707:58;7799:6;7794:2;7786:6;7782:15;7775:31;7590:223;:::o;7819:366::-;7961:3;7982:67;8046:2;8041:3;7982:67;:::i;:::-;7975:74;;8058:93;8147:3;8058:93;:::i;:::-;8176:2;8171:3;8167:12;8160:19;;7819:366;;;:::o;8191:419::-;8357:4;8395:2;8384:9;8380:18;8372:26;;8444:9;8438:4;8434:20;8430:1;8419:9;8415:17;8408:47;8472:131;8598:4;8472:131;:::i;:::-;8464:139;;8191:419;;;:::o;8616:221::-;8756:34;8752:1;8744:6;8740:14;8733:58;8825:4;8820:2;8812:6;8808:15;8801:29;8616:221;:::o;8843:366::-;8985:3;9006:67;9070:2;9065:3;9006:67;:::i;:::-;8999:74;;9082:93;9171:3;9082:93;:::i;:::-;9200:2;9195:3;9191:12;9184:19;;8843:366;;;:::o;9215:419::-;9381:4;9419:2;9408:9;9404:18;9396:26;;9468:9;9462:4;9458:20;9454:1;9443:9;9439:17;9432:47;9496:131;9622:4;9496:131;:::i;:::-;9488:139;;9215:419;;;:::o;9640:179::-;9780:31;9776:1;9768:6;9764:14;9757:55;9640:179;:::o;9825:366::-;9967:3;9988:67;10052:2;10047:3;9988:67;:::i;:::-;9981:74;;10064:93;10153:3;10064:93;:::i;:::-;10182:2;10177:3;10173:12;10166:19;;9825:366;;;:::o;10197:419::-;10363:4;10401:2;10390:9;10386:18;10378:26;;10450:9;10444:4;10440:20;10436:1;10425:9;10421:17;10414:47;10478:131;10604:4;10478:131;:::i;:::-;10470:139;;10197:419;;;:::o;10622:224::-;10762:34;10758:1;10750:6;10746:14;10739:58;10831:7;10826:2;10818:6;10814:15;10807:32;10622:224;:::o;10852:366::-;10994:3;11015:67;11079:2;11074:3;11015:67;:::i;:::-;11008:74;;11091:93;11180:3;11091:93;:::i;:::-;11209:2;11204:3;11200:12;11193:19;;10852:366;;;:::o;11224:419::-;11390:4;11428:2;11417:9;11413:18;11405:26;;11477:9;11471:4;11467:20;11463:1;11452:9;11448:17;11441:47;11505:131;11631:4;11505:131;:::i;:::-;11497:139;;11224:419;;;:::o;11649:222::-;11789:34;11785:1;11777:6;11773:14;11766:58;11858:5;11853:2;11845:6;11841:15;11834:30;11649:222;:::o;11877:366::-;12019:3;12040:67;12104:2;12099:3;12040:67;:::i;:::-;12033:74;;12116:93;12205:3;12116:93;:::i;:::-;12234:2;12229:3;12225:12;12218:19;;11877:366;;;:::o;12249:419::-;12415:4;12453:2;12442:9;12438:18;12430:26;;12502:9;12496:4;12492:20;12488:1;12477:9;12473:17;12466:47;12530:131;12656:4;12530:131;:::i;:::-;12522:139;;12249:419;;;:::o;12674:225::-;12814:34;12810:1;12802:6;12798:14;12791:58;12883:8;12878:2;12870:6;12866:15;12859:33;12674:225;:::o;12905:366::-;13047:3;13068:67;13132:2;13127:3;13068:67;:::i;:::-;13061:74;;13144:93;13233:3;13144:93;:::i;:::-;13262:2;13257:3;13253:12;13246:19;;12905:366;;;:::o;13277:419::-;13443:4;13481:2;13470:9;13466:18;13458:26;;13530:9;13524:4;13520:20;13516:1;13505:9;13501:17;13494:47;13558:131;13684:4;13558:131;:::i;:::-;13550:139;;13277:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "931000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2863",
								"decimals()": "432",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2482",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "15",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "15",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1976,
									"end": 2089,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2050,
									"end": 2055,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2042,
									"end": 2047,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2042,
									"end": 2055,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2075,
									"end": 2082,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2065,
									"end": 2072,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2065,
									"end": 2082,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1691,
									"end": 1692,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1715,
									"end": 1721,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1712,
									"end": 1713,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1709,
									"end": 1722,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1800,
									"end": 1801,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1795,
									"end": 1798,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1791,
									"end": 1802,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1785,
									"end": 1803,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1781,
									"end": 1782,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1776,
									"end": 1779,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1772,
									"end": 1783,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1765,
									"end": 1804,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1737,
									"end": 1739,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1734,
									"end": 1735,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1730,
									"end": 1740,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1848,
									"end": 1849,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1839,
									"end": 1845,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1834,
									"end": 1837,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1830,
									"end": 1846,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1823,
									"end": 1850,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1672,
									"end": 1856,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1856,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "67"
								},
								{
									"begin": 2034,
									"end": 2040,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 1992,
									"end": 2041,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "tag",
									"source": 6,
									"value": "67"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 1976,
									"end": 2042,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "tag",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2065,
									"end": 2071,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2058,
									"end": 2063,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2051,
									"end": 2072,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2103,
									"end": 2107,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2096,
									"end": 2101,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2092,
									"end": 2108,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2141,
									"end": 2144,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2132,
									"end": 2138,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2127,
									"end": 2130,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2123,
									"end": 2139,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2120,
									"end": 2145,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "69"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 2148,
									"end": 2227,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "tag",
									"source": 6,
									"value": "69"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "tag",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 2283,
									"end": 2289,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2278,
									"end": 2281,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2273,
									"end": 2276,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2238,
									"end": 2290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "tag",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1957,
									"end": 2296,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1862,
									"end": 2296,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2383,
									"end": 2388,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2432,
									"end": 2435,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2425,
									"end": 2429,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 2417,
									"end": 2423,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2413,
									"end": 2430,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2409,
									"end": 2436,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "72"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 2440,
									"end": 2519,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "tag",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "tag",
									"source": 6,
									"value": "72"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2550,
									"end": 2556,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2544,
									"end": 2557,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "74"
								},
								{
									"begin": 2661,
									"end": 2664,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2653,
									"end": 2659,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2646,
									"end": 2650,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2638,
									"end": 2644,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 2634,
									"end": 2651,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 2575,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "tag",
									"source": 6,
									"value": "74"
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2389,
									"end": 2671,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2316,
									"end": 2671,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2776,
									"end": 2782,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2784,
									"end": 2790,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2833,
									"end": 2835,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2821,
									"end": 2830,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2812,
									"end": 2819,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2808,
									"end": 2831,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 2804,
									"end": 2836,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "76"
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "77"
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 2839,
									"end": 2918,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "tag",
									"source": 6,
									"value": "77"
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "tag",
									"source": 6,
									"value": "76"
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2980,
									"end": 2981,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2969,
									"end": 2978,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2965,
									"end": 2982,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2959,
									"end": 2983,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3010,
									"end": 3028,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3002,
									"end": 3008,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2999,
									"end": 3029,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "78"
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "79"
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 3032,
									"end": 3111,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "tag",
									"source": 6,
									"value": "79"
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "tag",
									"source": 6,
									"value": "78"
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 3203,
									"end": 3210,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3194,
									"end": 3200,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3183,
									"end": 3192,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 3179,
									"end": 3201,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 3137,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "tag",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3127,
									"end": 3211,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 3127,
									"end": 3211,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2930,
									"end": 3221,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3281,
									"end": 3283,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3270,
									"end": 3279,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3266,
									"end": 3284,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3260,
									"end": 3285,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3312,
									"end": 3330,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3304,
									"end": 3310,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3301,
									"end": 3331,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "81"
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "82"
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 3334,
									"end": 3413,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "tag",
									"source": 6,
									"value": "82"
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "tag",
									"source": 6,
									"value": "81"
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "83"
								},
								{
									"begin": 3505,
									"end": 3512,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3496,
									"end": 3502,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3485,
									"end": 3494,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 3481,
									"end": 3503,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 3439,
									"end": 3513,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "tag",
									"source": 6,
									"value": "83"
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3429,
									"end": 3513,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3429,
									"end": 3513,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3231,
									"end": 3523,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2677,
									"end": 3530,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3588,
									"end": 3594,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3622,
									"end": 3627,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3616,
									"end": 3628,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3606,
									"end": 3628,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3606,
									"end": 3628,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3536,
									"end": 3635,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3641,
									"end": 3821,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 3641,
									"end": 3821,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3689,
									"end": 3766,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3686,
									"end": 3687,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3679,
									"end": 3767,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3786,
									"end": 3790,
									"name": "PUSH",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 3783,
									"end": 3784,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 3776,
									"end": 3791,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3810,
									"end": 3814,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 3807,
									"end": 3808,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3800,
									"end": 3815,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "tag",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3871,
									"end": 3877,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3908,
									"end": 3909,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 3902,
									"end": 3906,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3898,
									"end": 3910,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 3888,
									"end": 3910,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3888,
									"end": 3910,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3955,
									"end": 3956,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3949,
									"end": 3953,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3945,
									"end": 3957,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3976,
									"end": 3994,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "87"
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4032,
									"end": 4036,
									"name": "PUSH",
									"source": 6,
									"value": "7F"
								},
								{
									"begin": 4024,
									"end": 4030,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4020,
									"end": 4037,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4010,
									"end": 4037,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4010,
									"end": 4037,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "tag",
									"source": 6,
									"value": "87"
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4094,
									"end": 4096,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4086,
									"end": 4092,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4083,
									"end": 4097,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 4063,
									"end": 4081,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4060,
									"end": 4098,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "88"
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "89"
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 4113,
									"end": 4131,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "tag",
									"source": 6,
									"value": "89"
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "tag",
									"source": 6,
									"value": "88"
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3878,
									"end": 4147,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3827,
									"end": 4147,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "tag",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4202,
									"end": 4206,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4225,
									"end": 4228,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4217,
									"end": 4228,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4217,
									"end": 4228,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4248,
									"end": 4251,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4245,
									"end": 4246,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4238,
									"end": 4252,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4282,
									"end": 4286,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4279,
									"end": 4280,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4269,
									"end": 4287,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 4261,
									"end": 4287,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4261,
									"end": 4287,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4153,
									"end": 4294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4337,
									"end": 4343,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4384,
									"end": 4386,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4379,
									"end": 4381,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 4372,
									"end": 4377,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4368,
									"end": 4382,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4364,
									"end": 4387,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 4354,
									"end": 4387,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4354,
									"end": 4387,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4300,
									"end": 4393,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4443,
									"end": 4451,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4493,
									"end": 4498,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4487,
									"end": 4491,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4483,
									"end": 4499,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 4462,
									"end": 4499,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4462,
									"end": 4499,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4399,
									"end": 4506,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4581,
									"end": 4587,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4631,
									"end": 4632,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 4619,
									"end": 4629,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4615,
									"end": 4633,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "94"
								},
								{
									"begin": 4684,
									"end": 4750,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4673,
									"end": 4682,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 4654,
									"end": 4751,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "tag",
									"source": 6,
									"value": "94"
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "95"
								},
								{
									"begin": 4802,
									"end": 4810,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 4791,
									"end": 4800,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 4772,
									"end": 4811,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "tag",
									"source": 6,
									"value": "95"
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4760,
									"end": 4811,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 4760,
									"end": 4811,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4844,
									"end": 4848,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4840,
									"end": 4849,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 4833,
									"end": 4838,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4829,
									"end": 4850,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4820,
									"end": 4850,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 4820,
									"end": 4850,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4893,
									"end": 4897,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4883,
									"end": 4891,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 4879,
									"end": 4898,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4872,
									"end": 4877,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4869,
									"end": 4899,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 4859,
									"end": 4899,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 4859,
									"end": 4899,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4588,
									"end": 4905,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4588,
									"end": 4905,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4512,
									"end": 4905,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "tag",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4948,
									"end": 4955,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4977,
									"end": 4982,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4966,
									"end": 4982,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4966,
									"end": 4982,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4911,
									"end": 4988,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "tag",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5022,
									"end": 5025,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5043,
									"end": 5048,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5036,
									"end": 5048,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5036,
									"end": 5048,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4994,
									"end": 5054,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "tag",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5110,
									"end": 5119,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "99"
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "101"
								},
								{
									"begin": 5188,
									"end": 5193,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 5170,
									"end": 5194,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "tag",
									"source": 6,
									"value": "101"
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 5161,
									"end": 5195,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "tag",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 5143,
									"end": 5196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "tag",
									"source": 6,
									"value": "99"
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5130,
									"end": 5196,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5130,
									"end": 5196,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5060,
									"end": 5202,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "tag",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5251,
									"end": 5254,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5272,
									"end": 5277,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5265,
									"end": 5277,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5265,
									"end": 5277,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5208,
									"end": 5283,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "tag",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "104"
								},
								{
									"begin": 5430,
									"end": 5437,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 5399,
									"end": 5438,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "tag",
									"source": 6,
									"value": "104"
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "105"
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "106"
								},
								{
									"begin": 5533,
									"end": 5549,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 5509,
									"end": 5550,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "tag",
									"source": 6,
									"value": "106"
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5501,
									"end": 5507,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5494,
									"end": 5498,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5488,
									"end": 5499,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 5460,
									"end": 5551,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "tag",
									"source": 6,
									"value": "105"
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5454,
									"end": 5458,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5447,
									"end": 5552,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 5365,
									"end": 5558,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5289,
									"end": 5558,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5564,
									"end": 5637,
									"name": "tag",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 5564,
									"end": 5637,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5609,
									"end": 5612,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5564,
									"end": 5637,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5564,
									"end": 5637,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "tag",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "109"
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 5720,
									"end": 5752,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "tag",
									"source": 6,
									"value": "109"
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "110"
								},
								{
									"begin": 5819,
									"end": 5825,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5811,
									"end": 5817,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5805,
									"end": 5809,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 5761,
									"end": 5826,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "tag",
									"source": 6,
									"value": "110"
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5696,
									"end": 5832,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5643,
									"end": 5832,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "tag",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "tag",
									"source": 6,
									"value": "112"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5915,
									"end": 5918,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5908,
									"end": 5913,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5905,
									"end": 5919,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "114"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "115"
								},
								{
									"begin": 6006,
									"end": 6007,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5999,
									"end": 6004,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 5969,
									"end": 6008,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "tag",
									"source": 6,
									"value": "115"
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5942,
									"end": 5943,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 5935,
									"end": 5940,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5931,
									"end": 5944,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5922,
									"end": 5944,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5922,
									"end": 5944,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "112"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "tag",
									"source": 6,
									"value": "114"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5838,
									"end": 6024,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "tag",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6131,
									"end": 6133,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 6126,
									"end": 6129,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6123,
									"end": 6134,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "117"
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "118"
								},
								{
									"begin": 6197,
									"end": 6202,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 6165,
									"end": 6203,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "tag",
									"source": 6,
									"value": "118"
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "119"
								},
								{
									"begin": 6267,
									"end": 6277,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 6249,
									"end": 6278,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "tag",
									"source": 6,
									"value": "119"
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6239,
									"end": 6247,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6235,
									"end": 6279,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6432,
									"end": 6434,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 6420,
									"end": 6430,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 6417,
									"end": 6435,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "120"
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 6453,
									"end": 6461,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6438,
									"end": 6461,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6438,
									"end": 6461,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "tag",
									"source": 6,
									"value": "120"
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "121"
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "122"
								},
								{
									"begin": 6550,
									"end": 6553,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 6532,
									"end": 6554,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "tag",
									"source": 6,
									"value": "122"
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6522,
									"end": 6530,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 6518,
									"end": 6555,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6505,
									"end": 6516,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 6476,
									"end": 6556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "tag",
									"source": 6,
									"value": "121"
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6135,
									"end": 6566,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6135,
									"end": 6566,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "tag",
									"source": 6,
									"value": "117"
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6030,
									"end": 6573,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "tag",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6633,
									"end": 6641,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6683,
									"end": 6688,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6677,
									"end": 6681,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6673,
									"end": 6689,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 6652,
									"end": 6689,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6652,
									"end": 6689,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6579,
									"end": 6696,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "tag",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6746,
									"end": 6752,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "125"
								},
								{
									"begin": 6827,
									"end": 6828,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6823,
									"end": 6829,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 6815,
									"end": 6820,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6812,
									"end": 6813,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 6808,
									"end": 6821,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 6779,
									"end": 6830,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "tag",
									"source": 6,
									"value": "125"
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6775,
									"end": 6831,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 6860,
									"end": 6864,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 6854,
									"end": 6858,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 6850,
									"end": 6865,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 6840,
									"end": 6865,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6840,
									"end": 6865,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6753,
									"end": 6871,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6702,
									"end": 6871,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "tag",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6952,
									"end": 6956,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "127"
								},
								{
									"begin": 7123,
									"end": 7126,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 7117,
									"end": 7121,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 7098,
									"end": 7127,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "tag",
									"source": 6,
									"value": "127"
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7090,
									"end": 7127,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7090,
									"end": 7127,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7160,
									"end": 7163,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7157,
									"end": 7158,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 7153,
									"end": 7164,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 7147,
									"end": 7151,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7144,
									"end": 7165,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 7136,
									"end": 7165,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7136,
									"end": 7165,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6876,
									"end": 7171,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "tag",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "129"
								},
								{
									"begin": 7326,
									"end": 7329,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 7293,
									"end": 7330,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "tag",
									"source": 6,
									"value": "129"
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7387,
									"end": 7393,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7384,
									"end": 7414,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "130"
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "131"
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 7417,
									"end": 7435,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "tag",
									"source": 6,
									"value": "131"
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "tag",
									"source": 6,
									"value": "130"
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "132"
								},
								{
									"begin": 7493,
									"end": 7497,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7487,
									"end": 7498,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 7461,
									"end": 7499,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "tag",
									"source": 6,
									"value": "132"
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "133"
								},
								{
									"begin": 7606,
									"end": 7612,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7598,
									"end": 7604,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7592,
									"end": 7596,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 7546,
									"end": 7613,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "tag",
									"source": 6,
									"value": "133"
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7640,
									"end": 7641,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7664,
									"end": 7668,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 7651,
									"end": 7668,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7651,
									"end": 7668,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7696,
									"end": 7698,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 7688,
									"end": 7694,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 7685,
									"end": 7699,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 7713,
									"end": 7714,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "135"
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 8370,
									"end": 8371,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 8387,
									"end": 8393,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "136"
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 8436,
									"end": 8445,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8431,
									"end": 8434,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 8427,
									"end": 8446,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 8421,
									"end": 8447,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 8412,
									"end": 8447,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 8412,
									"end": 8447,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "tag",
									"source": 6,
									"value": "136"
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "137"
								},
								{
									"begin": 8547,
									"end": 8553,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 8540,
									"end": 8545,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 8487,
									"end": 8554,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "tag",
									"source": 6,
									"value": "137"
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8481,
									"end": 8485,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 8474,
									"end": 8555,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 8343,
									"end": 8565,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "134"
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "tag",
									"source": 6,
									"value": "135"
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7760,
									"end": 7764,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 7756,
									"end": 7765,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 7748,
									"end": 7754,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 7744,
									"end": 7766,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "138"
								},
								{
									"begin": 7826,
									"end": 7830,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 7794,
									"end": 7831,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "tag",
									"source": 6,
									"value": "138"
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7853,
									"end": 7854,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "tag",
									"source": 6,
									"value": "139"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7881,
									"end": 7888,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7878,
									"end": 7879,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7875,
									"end": 7889,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "141"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 7960,
									"end": 7969,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 7955,
									"end": 7958,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 7951,
									"end": 7970,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7945,
									"end": 7971,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 7937,
									"end": 7943,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7930,
									"end": 7972,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 8011,
									"end": 8012,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 8003,
									"end": 8009,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7999,
									"end": 8013,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7989,
									"end": 8013,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7989,
									"end": 8013,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8058,
									"end": 8060,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 8047,
									"end": 8056,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 8043,
									"end": 8061,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 8030,
									"end": 8061,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 8030,
									"end": 8061,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7904,
									"end": 7908,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 7901,
									"end": 7902,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7897,
									"end": 7909,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7892,
									"end": 7909,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7892,
									"end": 7909,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "139"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "tag",
									"source": 6,
									"value": "141"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8103,
									"end": 8109,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 8094,
									"end": 8101,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 8091,
									"end": 8110,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "142"
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 8161,
									"end": 8170,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 8156,
									"end": 8159,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 8152,
									"end": 8171,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 8146,
									"end": 8172,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "143"
								},
								{
									"begin": 8246,
									"end": 8250,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 8238,
									"end": 8244,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 8234,
									"end": 8251,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 8223,
									"end": 8232,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 8204,
									"end": 8252,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "tag",
									"source": 6,
									"value": "143"
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8196,
									"end": 8202,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 8189,
									"end": 8253,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 8111,
									"end": 8267,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "tag",
									"source": 6,
									"value": "142"
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8313,
									"end": 8314,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 8309,
									"end": 8310,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 8301,
									"end": 8307,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 8297,
									"end": 8311,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 8293,
									"end": 8315,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 8287,
									"end": 8291,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 8280,
									"end": 8316,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 7715,
									"end": 8326,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7715,
									"end": 8326,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7715,
									"end": 8326,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "tag",
									"source": 6,
									"value": "134"
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7268,
									"end": 8571,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7268,
									"end": 8571,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7268,
									"end": 8571,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7176,
									"end": 8571,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220005f598b59a8ef1b830a8e6bb81db6c2d3d112539000d8e58b45a6286fcebbe164736f6c63430008120033",
									".code": [
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2154,
											"end": 2252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2154,
											"end": 2252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 4431,
											"end": 4628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 4431,
											"end": 4628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 4431,
											"end": 4628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3242,
											"end": 3348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 3242,
											"end": 3348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 5190,
											"end": 5476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 5190,
											"end": 5476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 5190,
											"end": 5476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3091,
											"end": 3182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 3091,
											"end": 3182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 5871,
											"end": 6105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5871,
											"end": 6105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 5871,
											"end": 6105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3406,
											"end": 3531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3406,
											"end": 3531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 3406,
											"end": 3531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2365,
											"end": 2467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2365,
											"end": 2467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 6592,
											"end": 7019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 6592,
											"end": 7019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 6592,
											"end": 7019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 3727,
											"end": 3916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3727,
											"end": 3916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 3727,
											"end": 3916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3974,
											"end": 4123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 3974,
											"end": 4123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 3974,
											"end": 4123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2208,
											"end": 2221,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2240,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2233,
											"end": 2245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2233,
											"end": 2245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2252,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4514,
											"end": 4518,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4530,
											"end": 4543,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4546,
											"end": 4558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 4546,
											"end": 4556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 4546,
											"end": 4558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4546,
											"end": 4558,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 4546,
											"end": 4558,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4530,
											"end": 4558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4530,
											"end": 4558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4568,
											"end": 4600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4577,
											"end": 4582,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4584,
											"end": 4591,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4593,
											"end": 4599,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4568,
											"end": 4576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 4568,
											"end": 4600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4568,
											"end": 4600,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4568,
											"end": 4600,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4617,
											"end": 4621,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4610,
											"end": 4621,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4610,
											"end": 4621,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4610,
											"end": 4621,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4628,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3303,
											"end": 3310,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3329,
											"end": 3341,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3329,
											"end": 3341,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3322,
											"end": 3341,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3322,
											"end": 3341,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3242,
											"end": 3348,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5317,
											"end": 5321,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5333,
											"end": 5348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5351,
											"end": 5363,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 5351,
											"end": 5361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 5351,
											"end": 5363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5351,
											"end": 5363,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 5351,
											"end": 5363,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5333,
											"end": 5363,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5333,
											"end": 5363,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5373,
											"end": 5411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 5389,
											"end": 5393,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5402,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5404,
											"end": 5410,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5373,
											"end": 5388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 5373,
											"end": 5411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5373,
											"end": 5411,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 5373,
											"end": 5411,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5448,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5431,
											"end": 5435,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5437,
											"end": 5439,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5447,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 5421,
											"end": 5448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5448,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5421,
											"end": 5448,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5465,
											"end": 5469,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5458,
											"end": 5469,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5458,
											"end": 5469,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5458,
											"end": 5469,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5190,
											"end": 5476,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3149,
											"end": 3154,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3173,
											"end": 3175,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 3166,
											"end": 3175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3166,
											"end": 3175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3091,
											"end": 3182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5959,
											"end": 5963,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5975,
											"end": 5988,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5991,
											"end": 6003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 5991,
											"end": 6001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 5991,
											"end": 6003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5991,
											"end": 6003,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 5991,
											"end": 6003,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5975,
											"end": 6003,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5975,
											"end": 6003,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6013,
											"end": 6077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 6022,
											"end": 6027,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6029,
											"end": 6036,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6066,
											"end": 6076,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 6048,
											"end": 6053,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6055,
											"end": 6062,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6047,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 6038,
											"end": 6063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6063,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 6038,
											"end": 6063,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 6038,
											"end": 6076,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6076,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 6038,
											"end": 6076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6076,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 6038,
											"end": 6076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6013,
											"end": 6021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 6013,
											"end": 6077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6013,
											"end": 6077,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 6013,
											"end": 6077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6098,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6087,
											"end": 6098,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6087,
											"end": 6098,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6087,
											"end": 6098,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 6105,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3480,
											"end": 3487,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3506,
											"end": 3515,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3516,
											"end": 3523,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3499,
											"end": 3524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3499,
											"end": 3524,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3531,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2421,
											"end": 2434,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2453,
											"end": 2460,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2446,
											"end": 2460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2446,
											"end": 2460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2365,
											"end": 2467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6685,
											"end": 6689,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6701,
											"end": 6714,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6717,
											"end": 6729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 6717,
											"end": 6727,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 6717,
											"end": 6729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6717,
											"end": 6729,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 6717,
											"end": 6729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6701,
											"end": 6729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6701,
											"end": 6729,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6739,
											"end": 6763,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6766,
											"end": 6791,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 6776,
											"end": 6781,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6783,
											"end": 6790,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6766,
											"end": 6775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 6766,
											"end": 6791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6766,
											"end": 6791,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 6766,
											"end": 6791,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6739,
											"end": 6791,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6739,
											"end": 6791,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6829,
											"end": 6844,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6809,
											"end": 6825,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6809,
											"end": 6844,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6809,
											"end": 6844,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 6801,
											"end": 6886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 6980,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 6929,
											"end": 6934,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6936,
											"end": 6943,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6964,
											"end": 6979,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6945,
											"end": 6961,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6945,
											"end": 6979,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 6928,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 6920,
											"end": 6980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 6980,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 6920,
											"end": 6980,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7008,
											"end": 7012,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7001,
											"end": 7012,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7001,
											"end": 7012,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7001,
											"end": 7012,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7001,
											"end": 7012,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 7019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3806,
											"end": 3810,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3822,
											"end": 3835,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3838,
											"end": 3850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 3838,
											"end": 3848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 3838,
											"end": 3850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3838,
											"end": 3850,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 3838,
											"end": 3850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3822,
											"end": 3850,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3822,
											"end": 3850,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3860,
											"end": 3888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 3870,
											"end": 3875,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3879,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3881,
											"end": 3887,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3860,
											"end": 3869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 3860,
											"end": 3888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3860,
											"end": 3888,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 3860,
											"end": 3888,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3905,
											"end": 3909,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3898,
											"end": 3909,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3898,
											"end": 3909,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3898,
											"end": 3909,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3727,
											"end": 3916,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4063,
											"end": 4070,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4089,
											"end": 4100,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4101,
											"end": 4106,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4108,
											"end": 4115,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4082,
											"end": 4116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4082,
											"end": 4116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 4123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 640,
											"end": 736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10504,
											"end": 10874,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 10504,
											"end": 10874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10652,
											"end": 10653,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10635,
											"end": 10654,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10635,
											"end": 10654,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10635,
											"end": 10640,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10635,
											"end": 10654,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10635,
											"end": 10654,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10635,
											"end": 10654,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 10627,
											"end": 10695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10732,
											"end": 10733,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10713,
											"end": 10734,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10713,
											"end": 10734,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10713,
											"end": 10720,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10713,
											"end": 10734,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10713,
											"end": 10734,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10713,
											"end": 10734,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 10705,
											"end": 10773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10814,
											"end": 10820,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10784,
											"end": 10795,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10796,
											"end": 10801,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10803,
											"end": 10810,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10784,
											"end": 10820,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10784,
											"end": 10820,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10784,
											"end": 10820,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10784,
											"end": 10820,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10851,
											"end": 10858,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10844,
											"end": 10849,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10860,
											"end": 10866,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 10835,
											"end": 10867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 10504,
											"end": 10874,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10504,
											"end": 10874,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10504,
											"end": 10874,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10504,
											"end": 10874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11155,
											"end": 11596,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 11155,
											"end": 11596,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11285,
											"end": 11309,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11312,
											"end": 11337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 11322,
											"end": 11327,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11329,
											"end": 11336,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11312,
											"end": 11321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 11312,
											"end": 11337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11312,
											"end": 11337,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 11312,
											"end": 11337,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11285,
											"end": 11337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11285,
											"end": 11337,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11371,
											"end": 11388,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11351,
											"end": 11367,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11351,
											"end": 11388,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11347,
											"end": 11590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 11347,
											"end": 11590,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11432,
											"end": 11438,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11412,
											"end": 11428,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11412,
											"end": 11438,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11412,
											"end": 11438,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 11404,
											"end": 11472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11514,
											"end": 11565,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 11523,
											"end": 11528,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11530,
											"end": 11537,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11558,
											"end": 11564,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11539,
											"end": 11555,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11539,
											"end": 11564,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11514,
											"end": 11522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 11514,
											"end": 11565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11514,
											"end": 11565,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 11514,
											"end": 11565,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11347,
											"end": 11590,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 11347,
											"end": 11590,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11275,
											"end": 11596,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11155,
											"end": 11596,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11155,
											"end": 11596,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11155,
											"end": 11596,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11155,
											"end": 11596,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7473,
											"end": 8291,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 7473,
											"end": 8291,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7615,
											"end": 7616,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7599,
											"end": 7617,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7599,
											"end": 7617,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7599,
											"end": 7603,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7599,
											"end": 7617,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7599,
											"end": 7617,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7599,
											"end": 7617,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 7591,
											"end": 7659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7691,
											"end": 7692,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7677,
											"end": 7693,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7677,
											"end": 7693,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7677,
											"end": 7679,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7677,
											"end": 7693,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7677,
											"end": 7693,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7677,
											"end": 7693,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 7669,
											"end": 7733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7744,
											"end": 7782,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 7765,
											"end": 7769,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7771,
											"end": 7773,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7775,
											"end": 7781,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7744,
											"end": 7764,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 7744,
											"end": 7782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7744,
											"end": 7782,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 7744,
											"end": 7782,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7793,
											"end": 7812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7815,
											"end": 7824,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7825,
											"end": 7829,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7793,
											"end": 7830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7793,
											"end": 7830,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7863,
											"end": 7869,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7848,
											"end": 7859,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7848,
											"end": 7869,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7848,
											"end": 7869,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 7840,
											"end": 7912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7978,
											"end": 7984,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7964,
											"end": 7975,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7964,
											"end": 7984,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7946,
											"end": 7955,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7956,
											"end": 7960,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7946,
											"end": 7984,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7946,
											"end": 7984,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7946,
											"end": 7984,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7946,
											"end": 7984,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8178,
											"end": 8184,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8170,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8171,
											"end": 8173,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8225,
											"end": 8227,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8219,
											"end": 8223,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8229,
											"end": 8235,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 8210,
											"end": 8236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 8247,
											"end": 8284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 8267,
											"end": 8271,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8273,
											"end": 8275,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8277,
											"end": 8283,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8247,
											"end": 8266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 8247,
											"end": 8284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8247,
											"end": 8284,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 8247,
											"end": 8284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7581,
											"end": 8291,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7473,
											"end": 8291,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7473,
											"end": 8291,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7473,
											"end": 8291,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7473,
											"end": 8291,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12180,
											"end": 12301,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 12180,
											"end": 12301,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12180,
											"end": 12301,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12180,
											"end": 12301,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12180,
											"end": 12301,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12180,
											"end": 12301,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12889,
											"end": 13009,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 12889,
											"end": 13009,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12889,
											"end": 13009,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12889,
											"end": 13009,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12889,
											"end": 13009,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12889,
											"end": 13009,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 533,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 287,
											"end": 533,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 368,
											"end": 369,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 392,
											"end": 398,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 389,
											"end": 390,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 386,
											"end": 399,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 378,
											"end": 491,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 477,
											"end": 478,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 472,
											"end": 475,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 468,
											"end": 479,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 462,
											"end": 480,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 458,
											"end": 459,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 453,
											"end": 456,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 449,
											"end": 460,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 442,
											"end": 481,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 414,
											"end": 416,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 407,
											"end": 417,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 402,
											"end": 417,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 402,
											"end": 417,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 525,
											"end": 526,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 511,
											"end": 514,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 507,
											"end": 523,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 500,
											"end": 527,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 349,
											"end": 533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 539,
											"end": 641,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 539,
											"end": 641,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 580,
											"end": 586,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 634,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 622,
											"end": 624,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 615,
											"end": 620,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 607,
											"end": 635,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 597,
											"end": 635,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 597,
											"end": 635,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 539,
											"end": 641,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 539,
											"end": 641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 735,
											"end": 738,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 796,
											"end": 801,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 763,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 763,
											"end": 802,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 877,
											"end": 880,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 818,
											"end": 889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 818,
											"end": 889,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 818,
											"end": 889,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 811,
											"end": 889,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 811,
											"end": 889,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 956,
											"end": 962,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 951,
											"end": 954,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 944,
											"end": 948,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 933,
											"end": 949,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 898,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 898,
											"end": 963,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 898,
											"end": 963,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 988,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 983,
											"end": 986,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 979,
											"end": 1018,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 739,
											"end": 1024,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 647,
											"end": 1024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1143,
											"end": 1147,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1179,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1230,
											"end": 1239,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1220,
											"end": 1240,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1216,
											"end": 1217,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1214,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 1331,
											"end": 1335,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 1258,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1030,
											"end": 1343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1539,
											"end": 1540,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1537,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1529,
											"end": 1541,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1713,
											"end": 1720,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1795,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1751,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1742,
											"end": 1796,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1676,
											"end": 1802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1845,
											"end": 1852,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 1892,
											"end": 1897,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 1874,
											"end": 1898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1808,
											"end": 1904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 2001,
											"end": 2006,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 1983,
											"end": 2007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1976,
											"end": 1981,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1973,
											"end": 2008,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2019,
											"end": 2020,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2012,
											"end": 2024,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1910,
											"end": 2032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2084,
											"end": 2089,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2128,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2109,
											"end": 2129,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 2165,
											"end": 2170,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 2138,
											"end": 2171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2227,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 2357,
											"end": 2362,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 2339,
											"end": 2363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2332,
											"end": 2337,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2329,
											"end": 2364,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2378,
											"end": 2379,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2376,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2368,
											"end": 2380,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2266,
											"end": 2388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2440,
											"end": 2445,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2478,
											"end": 2484,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 2521,
											"end": 2526,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 2494,
											"end": 2527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2607,
											"end": 2613,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2615,
											"end": 2621,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2664,
											"end": 2666,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2652,
											"end": 2661,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2643,
											"end": 2650,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2639,
											"end": 2662,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2635,
											"end": 2667,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 2670,
											"end": 2749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2790,
											"end": 2791,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 2860,
											"end": 2867,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2851,
											"end": 2857,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2840,
											"end": 2849,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2836,
											"end": 2858,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 2815,
											"end": 2868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2761,
											"end": 2878,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2917,
											"end": 2919,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 2988,
											"end": 2995,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2979,
											"end": 2985,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2968,
											"end": 2977,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2964,
											"end": 2986,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 2943,
											"end": 2996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2888,
											"end": 3006,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 3013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3060,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3101,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3102,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3082,
											"end": 3103,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 3211,
											"end": 3216,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 3196,
											"end": 3217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3194,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3184,
											"end": 3218,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3115,
											"end": 3224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3317,
											"end": 3321,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3355,
											"end": 3357,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3344,
											"end": 3353,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3340,
											"end": 3358,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 3430,
											"end": 3431,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3415,
											"end": 3432,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3406,
											"end": 3412,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 3368,
											"end": 3433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3230,
											"end": 3440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 3551,
											"end": 3556,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 3533,
											"end": 3557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "tag",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3528,
											"end": 3531,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3446,
											"end": 3564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3663,
											"end": 3667,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3701,
											"end": 3703,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3690,
											"end": 3699,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 3782,
											"end": 3783,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3780,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3767,
											"end": 3784,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3758,
											"end": 3764,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 3714,
											"end": 3785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "tag",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3570,
											"end": 3792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3875,
											"end": 3881,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3891,
											"end": 3897,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3940,
											"end": 3942,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3928,
											"end": 3937,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3919,
											"end": 3926,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3915,
											"end": 3938,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3911,
											"end": 3943,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 3946,
											"end": 4025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "tag",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "tag",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4066,
											"end": 4067,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 4136,
											"end": 4143,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4127,
											"end": 4133,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4116,
											"end": 4125,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4112,
											"end": 4134,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 4091,
											"end": 4144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "tag",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4037,
											"end": 4154,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4193,
											"end": 4195,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 4264,
											"end": 4271,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4255,
											"end": 4261,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4253,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4240,
											"end": 4262,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 4219,
											"end": 4272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "tag",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4164,
											"end": 4282,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4321,
											"end": 4323,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 4392,
											"end": 4399,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4383,
											"end": 4389,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4372,
											"end": 4381,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4368,
											"end": 4390,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 4347,
											"end": 4400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "tag",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4292,
											"end": 4410,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 4417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4458,
											"end": 4465,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4498,
											"end": 4502,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4491,
											"end": 4496,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4487,
											"end": 4503,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4423,
											"end": 4509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 4614,
											"end": 4619,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 4598,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "tag",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4593,
											"end": 4596,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4586,
											"end": 4621,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4515,
											"end": 4627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4722,
											"end": 4726,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4760,
											"end": 4762,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4749,
											"end": 4758,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4745,
											"end": 4763,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 4837,
											"end": 4838,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4826,
											"end": 4835,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4822,
											"end": 4839,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4813,
											"end": 4819,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 4773,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "tag",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4633,
											"end": 4847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4912,
											"end": 4918,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4961,
											"end": 4963,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4949,
											"end": 4958,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4940,
											"end": 4947,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4936,
											"end": 4959,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4932,
											"end": 4964,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 4967,
											"end": 5046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "tag",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "tag",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5087,
											"end": 5088,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 5157,
											"end": 5164,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5148,
											"end": 5154,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5137,
											"end": 5146,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5133,
											"end": 5155,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 5112,
											"end": 5165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "tag",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5102,
											"end": 5165,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5102,
											"end": 5165,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5058,
											"end": 5175,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4853,
											"end": 5182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5256,
											"end": 5262,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5264,
											"end": 5270,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5313,
											"end": 5315,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5301,
											"end": 5310,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5292,
											"end": 5299,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5288,
											"end": 5311,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5284,
											"end": 5316,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 5281,
											"end": 5400,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5281,
											"end": 5400,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 5281,
											"end": 5400,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5319,
											"end": 5398,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 5319,
											"end": 5398,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 5319,
											"end": 5398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5319,
											"end": 5398,
											"name": "tag",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 5319,
											"end": 5398,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5281,
											"end": 5400,
											"name": "tag",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 5281,
											"end": 5400,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5439,
											"end": 5440,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5464,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 5509,
											"end": 5516,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5500,
											"end": 5506,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5489,
											"end": 5498,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5485,
											"end": 5507,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5464,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 5464,
											"end": 5517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5464,
											"end": 5517,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 5464,
											"end": 5517,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5454,
											"end": 5517,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5454,
											"end": 5517,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5410,
											"end": 5527,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5566,
											"end": 5568,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5592,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 5637,
											"end": 5644,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5628,
											"end": 5634,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5617,
											"end": 5626,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5613,
											"end": 5635,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5592,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 5592,
											"end": 5645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5592,
											"end": 5645,
											"name": "tag",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 5592,
											"end": 5645,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5582,
											"end": 5645,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5582,
											"end": 5645,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5537,
											"end": 5655,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5188,
											"end": 5662,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5668,
											"end": 5848,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 5668,
											"end": 5848,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5716,
											"end": 5793,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5713,
											"end": 5714,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5706,
											"end": 5794,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5813,
											"end": 5817,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 5810,
											"end": 5811,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5803,
											"end": 5818,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5837,
											"end": 5841,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5834,
											"end": 5835,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5827,
											"end": 5842,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5854,
											"end": 6174,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 5854,
											"end": 6174,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5898,
											"end": 5904,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5935,
											"end": 5936,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 5929,
											"end": 5933,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5925,
											"end": 5937,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 5915,
											"end": 5937,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5915,
											"end": 5937,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 5983,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5976,
											"end": 5980,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5972,
											"end": 5984,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6003,
											"end": 6021,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5993,
											"end": 6074,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 5993,
											"end": 6074,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6059,
											"end": 6063,
											"name": "PUSH",
											"source": 6,
											"value": "7F"
										},
										{
											"begin": 6051,
											"end": 6057,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6047,
											"end": 6064,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6037,
											"end": 6064,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6037,
											"end": 6064,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5993,
											"end": 6074,
											"name": "tag",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 5993,
											"end": 6074,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6121,
											"end": 6123,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6113,
											"end": 6119,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6110,
											"end": 6124,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6090,
											"end": 6108,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6087,
											"end": 6125,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6084,
											"end": 6168,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 6084,
											"end": 6168,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6140,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 6140,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 6140,
											"end": 6158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6140,
											"end": 6158,
											"name": "tag",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 6140,
											"end": 6158,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6084,
											"end": 6168,
											"name": "tag",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 6084,
											"end": 6168,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5905,
											"end": 6174,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5854,
											"end": 6174,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5854,
											"end": 6174,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5854,
											"end": 6174,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5854,
											"end": 6174,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6180,
											"end": 6360,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 6180,
											"end": 6360,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6228,
											"end": 6305,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6225,
											"end": 6226,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6218,
											"end": 6306,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6325,
											"end": 6329,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 6322,
											"end": 6323,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6315,
											"end": 6330,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6349,
											"end": 6353,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 6346,
											"end": 6347,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6339,
											"end": 6354,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6366,
											"end": 6557,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 6366,
											"end": 6557,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6406,
											"end": 6409,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6425,
											"end": 6445,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 6443,
											"end": 6444,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6425,
											"end": 6445,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 6425,
											"end": 6445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6425,
											"end": 6445,
											"name": "tag",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 6425,
											"end": 6445,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6420,
											"end": 6445,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6420,
											"end": 6445,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6459,
											"end": 6479,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 6477,
											"end": 6478,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6459,
											"end": 6479,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 6459,
											"end": 6479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6459,
											"end": 6479,
											"name": "tag",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 6459,
											"end": 6479,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6454,
											"end": 6479,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6454,
											"end": 6479,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6502,
											"end": 6503,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6499,
											"end": 6500,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6495,
											"end": 6504,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6488,
											"end": 6504,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6488,
											"end": 6504,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6523,
											"end": 6526,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6520,
											"end": 6521,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6517,
											"end": 6527,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 6514,
											"end": 6550,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6514,
											"end": 6550,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 6514,
											"end": 6550,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6530,
											"end": 6548,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 6530,
											"end": 6548,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 6530,
											"end": 6548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6530,
											"end": 6548,
											"name": "tag",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 6530,
											"end": 6548,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6514,
											"end": 6550,
											"name": "tag",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 6514,
											"end": 6550,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6366,
											"end": 6557,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6366,
											"end": 6557,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6366,
											"end": 6557,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6366,
											"end": 6557,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6366,
											"end": 6557,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6563,
											"end": 6787,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 6563,
											"end": 6787,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6703,
											"end": 6737,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 6699,
											"end": 6700,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6691,
											"end": 6697,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6687,
											"end": 6701,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6680,
											"end": 6738,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6772,
											"end": 6779,
											"name": "PUSH",
											"source": 6,
											"value": "207A65726F000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6767,
											"end": 6769,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6759,
											"end": 6765,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6755,
											"end": 6770,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6748,
											"end": 6780,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6563,
											"end": 6787,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6563,
											"end": 6787,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6793,
											"end": 7159,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 6793,
											"end": 7159,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6935,
											"end": 6938,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6956,
											"end": 7023,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 7020,
											"end": 7022,
											"name": "PUSH",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 7015,
											"end": 7018,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6956,
											"end": 7023,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 6956,
											"end": 7023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6956,
											"end": 7023,
											"name": "tag",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 6956,
											"end": 7023,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6949,
											"end": 7023,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6949,
											"end": 7023,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7032,
											"end": 7125,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 7121,
											"end": 7124,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7032,
											"end": 7125,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 7032,
											"end": 7125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7032,
											"end": 7125,
											"name": "tag",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 7032,
											"end": 7125,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7152,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7145,
											"end": 7148,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7141,
											"end": 7153,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7134,
											"end": 7153,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7134,
											"end": 7153,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6793,
											"end": 7159,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6793,
											"end": 7159,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6793,
											"end": 7159,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6793,
											"end": 7159,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7165,
											"end": 7584,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 7165,
											"end": 7584,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7331,
											"end": 7335,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7369,
											"end": 7371,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7358,
											"end": 7367,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7354,
											"end": 7372,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7346,
											"end": 7372,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7346,
											"end": 7372,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7418,
											"end": 7427,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7412,
											"end": 7416,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7408,
											"end": 7428,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7404,
											"end": 7405,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7393,
											"end": 7402,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7389,
											"end": 7406,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7382,
											"end": 7429,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7446,
											"end": 7577,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 7572,
											"end": 7576,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7446,
											"end": 7577,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 7446,
											"end": 7577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7446,
											"end": 7577,
											"name": "tag",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 7446,
											"end": 7577,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7438,
											"end": 7577,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7438,
											"end": 7577,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7165,
											"end": 7584,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7165,
											"end": 7584,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7165,
											"end": 7584,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7165,
											"end": 7584,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7590,
											"end": 7813,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 7590,
											"end": 7813,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7730,
											"end": 7764,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 7726,
											"end": 7727,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7718,
											"end": 7724,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7714,
											"end": 7728,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7707,
											"end": 7765,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7799,
											"end": 7805,
											"name": "PUSH",
											"source": 6,
											"value": "7265737300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7794,
											"end": 7796,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7786,
											"end": 7792,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7782,
											"end": 7797,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7775,
											"end": 7806,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7590,
											"end": 7813,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7590,
											"end": 7813,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7819,
											"end": 8185,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 7819,
											"end": 8185,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7961,
											"end": 7964,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7982,
											"end": 8049,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 8046,
											"end": 8048,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 8041,
											"end": 8044,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7982,
											"end": 8049,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 7982,
											"end": 8049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7982,
											"end": 8049,
											"name": "tag",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 7982,
											"end": 8049,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7975,
											"end": 8049,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7975,
											"end": 8049,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8058,
											"end": 8151,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 8147,
											"end": 8150,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8058,
											"end": 8151,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 8058,
											"end": 8151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8058,
											"end": 8151,
											"name": "tag",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 8058,
											"end": 8151,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8176,
											"end": 8178,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8171,
											"end": 8174,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8167,
											"end": 8179,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8160,
											"end": 8179,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8160,
											"end": 8179,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7819,
											"end": 8185,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7819,
											"end": 8185,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7819,
											"end": 8185,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7819,
											"end": 8185,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8191,
											"end": 8610,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 8191,
											"end": 8610,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8357,
											"end": 8361,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8395,
											"end": 8397,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8384,
											"end": 8393,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8380,
											"end": 8398,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8372,
											"end": 8398,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8372,
											"end": 8398,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8444,
											"end": 8453,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8438,
											"end": 8442,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8434,
											"end": 8454,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8430,
											"end": 8431,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8419,
											"end": 8428,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8415,
											"end": 8432,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8408,
											"end": 8455,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8472,
											"end": 8603,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 8598,
											"end": 8602,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8472,
											"end": 8603,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 8472,
											"end": 8603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8472,
											"end": 8603,
											"name": "tag",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 8472,
											"end": 8603,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8464,
											"end": 8603,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8464,
											"end": 8603,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8191,
											"end": 8610,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8191,
											"end": 8610,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8191,
											"end": 8610,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8191,
											"end": 8610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8616,
											"end": 8837,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 8616,
											"end": 8837,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8756,
											"end": 8790,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 8752,
											"end": 8753,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8744,
											"end": 8750,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8740,
											"end": 8754,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8733,
											"end": 8791,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8825,
											"end": 8829,
											"name": "PUSH",
											"source": 6,
											"value": "7373000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8820,
											"end": 8822,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8812,
											"end": 8818,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8808,
											"end": 8823,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8801,
											"end": 8830,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8616,
											"end": 8837,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8616,
											"end": 8837,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8843,
											"end": 9209,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 8843,
											"end": 9209,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8985,
											"end": 8988,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9006,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 9070,
											"end": 9072,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 9065,
											"end": 9068,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9006,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 9006,
											"end": 9073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9006,
											"end": 9073,
											"name": "tag",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 9006,
											"end": 9073,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8999,
											"end": 9073,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8999,
											"end": 9073,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9082,
											"end": 9175,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 9171,
											"end": 9174,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9082,
											"end": 9175,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 9082,
											"end": 9175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9082,
											"end": 9175,
											"name": "tag",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 9082,
											"end": 9175,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9200,
											"end": 9202,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9195,
											"end": 9198,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9191,
											"end": 9203,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9184,
											"end": 9203,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9184,
											"end": 9203,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8843,
											"end": 9209,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8843,
											"end": 9209,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8843,
											"end": 9209,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8843,
											"end": 9209,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9215,
											"end": 9634,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 9215,
											"end": 9634,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9381,
											"end": 9385,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9419,
											"end": 9421,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9408,
											"end": 9417,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9404,
											"end": 9422,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9396,
											"end": 9422,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9396,
											"end": 9422,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9468,
											"end": 9477,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9462,
											"end": 9466,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9458,
											"end": 9478,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9454,
											"end": 9455,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9443,
											"end": 9452,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9439,
											"end": 9456,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9432,
											"end": 9479,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9496,
											"end": 9627,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 9622,
											"end": 9626,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9496,
											"end": 9627,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 9496,
											"end": 9627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9496,
											"end": 9627,
											"name": "tag",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 9496,
											"end": 9627,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9488,
											"end": 9627,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9488,
											"end": 9627,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9215,
											"end": 9634,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9215,
											"end": 9634,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9215,
											"end": 9634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9215,
											"end": 9634,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9640,
											"end": 9819,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 9640,
											"end": 9819,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9780,
											"end": 9811,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 9776,
											"end": 9777,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9768,
											"end": 9774,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9764,
											"end": 9778,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9757,
											"end": 9812,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9640,
											"end": 9819,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9640,
											"end": 9819,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9825,
											"end": 10191,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 9825,
											"end": 10191,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9967,
											"end": 9970,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9988,
											"end": 10055,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 10052,
											"end": 10054,
											"name": "PUSH",
											"source": 6,
											"value": "1D"
										},
										{
											"begin": 10047,
											"end": 10050,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9988,
											"end": 10055,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 9988,
											"end": 10055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9988,
											"end": 10055,
											"name": "tag",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 9988,
											"end": 10055,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9981,
											"end": 10055,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9981,
											"end": 10055,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10064,
											"end": 10157,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 10153,
											"end": 10156,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10064,
											"end": 10157,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 10064,
											"end": 10157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10064,
											"end": 10157,
											"name": "tag",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 10064,
											"end": 10157,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10182,
											"end": 10184,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10177,
											"end": 10180,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10173,
											"end": 10185,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10166,
											"end": 10185,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10166,
											"end": 10185,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9825,
											"end": 10191,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9825,
											"end": 10191,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9825,
											"end": 10191,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9825,
											"end": 10191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10197,
											"end": 10616,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 10197,
											"end": 10616,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10363,
											"end": 10367,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10401,
											"end": 10403,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10390,
											"end": 10399,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10386,
											"end": 10404,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10378,
											"end": 10404,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10378,
											"end": 10404,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10450,
											"end": 10459,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10444,
											"end": 10448,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10440,
											"end": 10460,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10436,
											"end": 10437,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10425,
											"end": 10434,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10421,
											"end": 10438,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10414,
											"end": 10461,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10478,
											"end": 10609,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 10604,
											"end": 10608,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10478,
											"end": 10609,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 10478,
											"end": 10609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10478,
											"end": 10609,
											"name": "tag",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 10478,
											"end": 10609,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10470,
											"end": 10609,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10470,
											"end": 10609,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10197,
											"end": 10616,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10197,
											"end": 10616,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10197,
											"end": 10616,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10197,
											"end": 10616,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10622,
											"end": 10846,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 10622,
											"end": 10846,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10762,
											"end": 10796,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 10758,
											"end": 10759,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10750,
											"end": 10756,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10746,
											"end": 10760,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10739,
											"end": 10797,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10831,
											"end": 10838,
											"name": "PUSH",
											"source": 6,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10826,
											"end": 10828,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10818,
											"end": 10824,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10814,
											"end": 10829,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10807,
											"end": 10839,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10622,
											"end": 10846,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10622,
											"end": 10846,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10852,
											"end": 11218,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 10852,
											"end": 11218,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10994,
											"end": 10997,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11015,
											"end": 11082,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 11079,
											"end": 11081,
											"name": "PUSH",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 11074,
											"end": 11077,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11015,
											"end": 11082,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 11015,
											"end": 11082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11015,
											"end": 11082,
											"name": "tag",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 11015,
											"end": 11082,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11008,
											"end": 11082,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11008,
											"end": 11082,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11091,
											"end": 11184,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 11180,
											"end": 11183,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11091,
											"end": 11184,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 11091,
											"end": 11184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11091,
											"end": 11184,
											"name": "tag",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 11091,
											"end": 11184,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11209,
											"end": 11211,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11204,
											"end": 11207,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11200,
											"end": 11212,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11193,
											"end": 11212,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11193,
											"end": 11212,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10852,
											"end": 11218,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10852,
											"end": 11218,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10852,
											"end": 11218,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10852,
											"end": 11218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11224,
											"end": 11643,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 11224,
											"end": 11643,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11390,
											"end": 11394,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11428,
											"end": 11430,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11417,
											"end": 11426,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11413,
											"end": 11431,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11405,
											"end": 11431,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11405,
											"end": 11431,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11477,
											"end": 11486,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11471,
											"end": 11475,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11467,
											"end": 11487,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11463,
											"end": 11464,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11452,
											"end": 11461,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11448,
											"end": 11465,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11441,
											"end": 11488,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11505,
											"end": 11636,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 11631,
											"end": 11635,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11505,
											"end": 11636,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 11505,
											"end": 11636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11505,
											"end": 11636,
											"name": "tag",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 11505,
											"end": 11636,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11497,
											"end": 11636,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11497,
											"end": 11636,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11224,
											"end": 11643,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11224,
											"end": 11643,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11224,
											"end": 11643,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11224,
											"end": 11643,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11649,
											"end": 11871,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 11649,
											"end": 11871,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11789,
											"end": 11823,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 11785,
											"end": 11786,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11777,
											"end": 11783,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11773,
											"end": 11787,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11766,
											"end": 11824,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11858,
											"end": 11863,
											"name": "PUSH",
											"source": 6,
											"value": "6573730000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11853,
											"end": 11855,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11845,
											"end": 11851,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11841,
											"end": 11856,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11834,
											"end": 11864,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11649,
											"end": 11871,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11649,
											"end": 11871,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11877,
											"end": 12243,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 11877,
											"end": 12243,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12019,
											"end": 12022,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12040,
											"end": 12107,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 12104,
											"end": 12106,
											"name": "PUSH",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 12099,
											"end": 12102,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12040,
											"end": 12107,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 12040,
											"end": 12107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12040,
											"end": 12107,
											"name": "tag",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 12040,
											"end": 12107,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12033,
											"end": 12107,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12033,
											"end": 12107,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12116,
											"end": 12209,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 12205,
											"end": 12208,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12116,
											"end": 12209,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 12116,
											"end": 12209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12116,
											"end": 12209,
											"name": "tag",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 12116,
											"end": 12209,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12234,
											"end": 12236,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 12229,
											"end": 12232,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12225,
											"end": 12237,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12218,
											"end": 12237,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12218,
											"end": 12237,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11877,
											"end": 12243,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11877,
											"end": 12243,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11877,
											"end": 12243,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11877,
											"end": 12243,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12249,
											"end": 12668,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 12249,
											"end": 12668,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12415,
											"end": 12419,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12453,
											"end": 12455,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12442,
											"end": 12451,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12438,
											"end": 12456,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12430,
											"end": 12456,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12430,
											"end": 12456,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12502,
											"end": 12511,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12496,
											"end": 12500,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12492,
											"end": 12512,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 12488,
											"end": 12489,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12477,
											"end": 12486,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12473,
											"end": 12490,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12466,
											"end": 12513,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12530,
											"end": 12661,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 12656,
											"end": 12660,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12530,
											"end": 12661,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 12530,
											"end": 12661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12530,
											"end": 12661,
											"name": "tag",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 12530,
											"end": 12661,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12522,
											"end": 12661,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12522,
											"end": 12661,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12249,
											"end": 12668,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12249,
											"end": 12668,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12249,
											"end": 12668,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12249,
											"end": 12668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12674,
											"end": 12899,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 12674,
											"end": 12899,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12814,
											"end": 12848,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 12810,
											"end": 12811,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12802,
											"end": 12808,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12798,
											"end": 12812,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12791,
											"end": 12849,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12883,
											"end": 12891,
											"name": "PUSH",
											"source": 6,
											"value": "616C616E63650000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12878,
											"end": 12880,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12870,
											"end": 12876,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12866,
											"end": 12881,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12859,
											"end": 12892,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12674,
											"end": 12899,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12674,
											"end": 12899,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12905,
											"end": 13271,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 12905,
											"end": 13271,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13047,
											"end": 13050,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13068,
											"end": 13135,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 13132,
											"end": 13134,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 13127,
											"end": 13130,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13068,
											"end": 13135,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 13068,
											"end": 13135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13068,
											"end": 13135,
											"name": "tag",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 13068,
											"end": 13135,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13061,
											"end": 13135,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13061,
											"end": 13135,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13144,
											"end": 13237,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 13233,
											"end": 13236,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13144,
											"end": 13237,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 13144,
											"end": 13237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13144,
											"end": 13237,
											"name": "tag",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 13144,
											"end": 13237,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13262,
											"end": 13264,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 13257,
											"end": 13260,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13253,
											"end": 13265,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13246,
											"end": 13265,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13246,
											"end": 13265,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12905,
											"end": 13271,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12905,
											"end": 13271,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12905,
											"end": 13271,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12905,
											"end": 13271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13277,
											"end": 13696,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 13277,
											"end": 13696,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13443,
											"end": 13447,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13481,
											"end": 13483,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13470,
											"end": 13479,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13466,
											"end": 13484,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13458,
											"end": 13484,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13458,
											"end": 13484,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13530,
											"end": 13539,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13524,
											"end": 13528,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13520,
											"end": 13540,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 13516,
											"end": 13517,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13505,
											"end": 13514,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13501,
											"end": 13518,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13494,
											"end": 13541,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13558,
											"end": 13689,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 13684,
											"end": 13688,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13558,
											"end": 13689,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 13558,
											"end": 13689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13558,
											"end": 13689,
											"name": "tag",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 13558,
											"end": 13689,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13550,
											"end": 13689,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13550,
											"end": 13689,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13277,
											"end": 13696,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13277,
											"end": 13696,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13277,
											"end": 13696,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13277,
											"end": 13696,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"W6/simpleAMM/src/simpleAMMV6ERC.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 15,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 21,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 23,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 25,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 27,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:12504  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:12504  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208f63ffdaae21fc026dee9daad1bffb318e7c5b3a3259e486c6500b228f15508f64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208f63ffdaae21fc026dee9daad1bffb318e7c5b3a3259e486c6500b228f15508f64736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 PUSH4 0xFFDAAE21 0xFC MUL PUSH14 0xEE9DAAD1BFFB318E7C5B3A3259E4 DUP7 0xC6 POP SIGNEXTEND 0x22 DUP16 ISZERO POP DUP16 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "202:12302:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208f63ffdaae21fc026dee9daad1bffb318e7c5b3a3259e486c6500b228f15508f64736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 PUSH4 0xFFDAAE21 0xFC MUL PUSH14 0xEE9DAAD1BFFB318E7C5B3A3259E4 DUP7 0xC6 POP SIGNEXTEND 0x22 DUP16 ISZERO POP DUP16 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "202:12302:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208f63ffdaae21fc026dee9daad1bffb318e7c5b3a3259e486c6500b228f15508f64736f6c63430008120033",
									".code": [
										{
											"begin": 202,
											"end": 12504,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"W6/simpleAMM/src/simpleAMMV6ERC.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"W6/simpleAMM/src/simpleAMMV6ERC.sol": {
				"AMM": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_token1",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount1",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getERCPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "getPredictOutputToken0",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "getPredictOutputToken1",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "myShares",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "removeAllLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_shares",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_shares",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "reserve0",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "reserve1",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "sharesOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amountIn",
									"type": "uint256"
								}
							],
							"name": "swap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amountIn",
									"type": "uint256"
								}
							],
							"name": "swapTokenForToken1",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_forwardOutput",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_slipLock",
									"type": "uint256"
								}
							],
							"name": "swapTokenForToken1_WithSlipLock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_forwardOutput",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_slipLock",
									"type": "uint256"
								}
							],
							"name": "swap_WithSlipLock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":283:7579  contract AMM {... */\n  mstore(0x40, 0xc0)\n    /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":553:710  constructor(address _token0, address _token1) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":622:632  msg.sender */\n  caller\n    /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":610:619  developer */\n  0x00\n  dup1\n    /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":610:632  developer = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":659:666  _token0 */\n  dup2\n    /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":643:667  token0 = IERC20(_token0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":694:701  _token1 */\n  dup1\n    /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":678:702  token1 = IERC20(_token1) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xa0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":553:710  constructor(address _token0, address _token1) {... */\n  pop\n  pop\n    /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":283:7579  contract AMM {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_20\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_22\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_23:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_25\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1352   */\ntag_3:\n    /* \"#utility.yul\":924:930   */\n  0x00\n    /* \"#utility.yul\":932:938   */\n  dup1\n    /* \"#utility.yul\":981:983   */\n  0x40\n    /* \"#utility.yul\":969:978   */\n  dup4\n    /* \"#utility.yul\":960:967   */\n  dup6\n    /* \"#utility.yul\":956:979   */\n  sub\n    /* \"#utility.yul\":952:984   */\n  slt\n    /* \"#utility.yul\":949:1068   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":987:1066   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":949:1068   */\ntag_27:\n    /* \"#utility.yul\":1107:1108   */\n  0x00\n    /* \"#utility.yul\":1132:1196   */\n  tag_29\n    /* \"#utility.yul\":1188:1195   */\n  dup6\n    /* \"#utility.yul\":1179:1185   */\n  dup3\n    /* \"#utility.yul\":1168:1177   */\n  dup7\n    /* \"#utility.yul\":1164:1186   */\n  add\n    /* \"#utility.yul\":1132:1196   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1122:1196   */\n  swap3\n  pop\n    /* \"#utility.yul\":1078:1206   */\n  pop\n    /* \"#utility.yul\":1245:1247   */\n  0x20\n    /* \"#utility.yul\":1271:1335   */\n  tag_30\n    /* \"#utility.yul\":1327:1334   */\n  dup6\n    /* \"#utility.yul\":1318:1324   */\n  dup3\n    /* \"#utility.yul\":1307:1316   */\n  dup7\n    /* \"#utility.yul\":1303:1325   */\n  add\n    /* \"#utility.yul\":1271:1335   */\n  tag_13\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":1261:1335   */\n  swap2\n  pop\n    /* \"#utility.yul\":1216:1345   */\n  pop\n    /* \"#utility.yul\":845:1352   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":283:7579  contract AMM {... */\ntag_6:\n  mload(0x80)\n  mload(0xa0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x4bab0814faad1725fc18a3cfa3a1fcb95c36a46cacb7a7312c3d38e6b447adac\")\n  0x00\n  assignImmutable(\"0xe9ec5ebbfe521ba5a70e4c2b13332e74dda4e055153dc29723307e62e8ed0f2a\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":283:7579  contract AMM {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x94b918de\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xa201ccf6\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xa201ccf6\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xc9f4437e\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xd21220a7\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xf5eb42dc\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xfcc2ba08\n      eq\n      tag_21\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x94b918de\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x9c1e5375\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x9c8f9f23\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x9cd441da\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x9e7a4757\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x4d7d1598\n      gt\n      tag_24\n      jumpi\n      dup1\n      0x4d7d1598\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x5a76f25e\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x62279b65\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x7a6a5e1b\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x0dfe1681\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x443cb4bc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x46765bdc\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":329:359  IERC20 public immutable token0 */\n    tag_3:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":467:493  uint256 public totalSupply */\n    tag_4:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":405:428  uint256 public reserve0 */\n    tag_5:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":1731:2392  function swapTokenForToken1(uint256 _amountIn) public returns (uint256 amountOut) {... */\n    tag_6:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6956:7262  function getPredictOutputToken1(uint256 _amount) public view returns (uint256) {... */\n    tag_7:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_42:\n      tag_43\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":435:458  uint256 public reserve1 */\n    tag_8:\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":2400:3224  function swap_WithSlipLock(... */\n    tag_9:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":500:544  mapping(address => uint256) public balanceOf */\n    tag_10:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4910:5072  function removeAllLiquidity(address _user) external returns (uint256 amount0, uint256 amount1) {... */\n    tag_11:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_59:\n      tag_60\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_61\n      swap3\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":1139:1723  function swap(uint256 _amountIn) public returns (uint256 amountOut) {... */\n    tag_12:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_64:\n      tag_65\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":7270:7576  function getPredictOutputToken0(uint256 _amount) public view returns (uint256) {... */\n    tag_13:\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_68:\n      tag_69\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":5080:5313  function removeLiquidity(uint256 _shares) external returns (uint256 amount0, uint256 amount1) {... */\n    tag_14:\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_74\n      swap3\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4080:4902  function addLiquidity(uint256 _amount0, uint256 _amount1) external returns (uint256 shares) {... */\n    tag_15:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      tag_78\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6079:6176  function myShares() public view returns (uint256) {... */\n    tag_16:\n      tag_80\n      tag_81\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      tag_82\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":5321:5559  function removeLiquidity(address _user, uint256 _shares) external returns (uint256 amount0, uint256 amount1) {... */\n    tag_17:\n      tag_83\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      tag_86\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      tag_87\n      swap3\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":3230:4072  function swapTokenForToken1_WithSlipLock(... */\n    tag_18:\n      tag_88\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_89\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_89:\n      tag_90\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      tag_91\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":366:396  IERC20 public immutable token1 */\n    tag_19:\n      tag_92\n      tag_93\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      tag_94\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6182:6287  function sharesOf(address _user) public view returns (uint256) {... */\n    tag_20:\n      tag_95\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_96\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_96:\n      tag_97\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      tag_98\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6614:6948  function getERCPrice() public view returns (uint256) {... */\n    tag_21:\n      tag_99\n      tag_100\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      tag_101\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":329:359  IERC20 public immutable token0 */\n    tag_26:\n      immutable(\"0xe9ec5ebbfe521ba5a70e4c2b13332e74dda4e055153dc29723307e62e8ed0f2a\")\n      dup2\n      jump\t// out\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":467:493  uint256 public totalSupply */\n    tag_30:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":405:428  uint256 public reserve0 */\n    tag_34:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":1731:2392  function swapTokenForToken1(uint256 _amountIn) public returns (uint256 amountOut) {... */\n    tag_39:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":1794:1811  uint256 amountOut */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":1824:1830  token0 */\n      immutable(\"0xe9ec5ebbfe521ba5a70e4c2b13332e74dda4e055153dc29723307e62e8ed0f2a\")\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":1824:1843  token0.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":1844:1854  msg.sender */\n      caller\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":1864:1868  this */\n      address\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":1871:1880  _amountIn */\n      dup6\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":1824:1881  token0.transferFrom(msg.sender, address(this), _amountIn) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_103\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_103:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_106\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_106:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_107\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_107:\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":1892:1915  uint256 amountInWithFee */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":1938:1942  1000 */\n      0x03e8\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":1931:1934  997 */\n      0x03e5\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":1919:1928  _amountIn */\n      dup5\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":1919:1934  _amountIn * 997 */\n      tag_109\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":1918:1942  (_amountIn * 997) / 1000 */\n      tag_111\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_111:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":1892:1942  uint256 amountInWithFee = (_amountIn * 997) / 1000 */\n      swap1\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":2008:2023  amountInWithFee */\n      dup1\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":1997:2005  reserve0 */\n      sload(0x01)\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":1997:2023  reserve0 + amountInWithFee */\n      tag_113\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":1977:1992  amountInWithFee */\n      dup2\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":1966:1974  reserve1 */\n      sload(0x02)\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":1966:1992  reserve1 * amountInWithFee */\n      tag_115\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_115:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":1965:2024  (reserve1 * amountInWithFee) / (reserve0 + amountInWithFee) */\n      tag_116\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_116:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":1953:2024  amountOut = (reserve1 * amountInWithFee) / (reserve0 + amountInWithFee) */\n      swap2\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":2055:2056  0 */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":2043:2052  amountOut */\n      dup3\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":2043:2056  amountOut > 0 */\n      gt\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":2035:2087  require(amountOut > 0, \"Insufficient output amount\") */\n      tag_117\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_118\n      swap1\n      tag_119\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_117:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":2098:2120  uint256 feeToDeveloper */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":2165:2169  2000 */\n      0x07d0\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":2154:2162  reserve0 */\n      sload(0x01)\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":2154:2169  reserve0 * 2000 */\n      tag_120\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_120:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":2139:2150  totalSupply */\n      sload(0x03)\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":2135:2136  3 */\n      0x03\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":2123:2132  _amountIn */\n      dup7\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":2123:2136  _amountIn * 3 */\n      tag_121\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_121:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":2123:2150  _amountIn * 3 * totalSupply */\n      tag_122\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_122:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":2123:2170  _amountIn * 3 * totalSupply / (reserve0 * 2000) */\n      tag_123\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_123:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":2098:2170  uint256 feeToDeveloper = _amountIn * 3 * totalSupply / (reserve0 * 2000) */\n      swap1\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":2181:2213  _mint(developer, feeToDeveloper) */\n      tag_124\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":2187:2196  developer */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":2198:2212  feeToDeveloper */\n      dup3\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":2181:2186  _mint */\n      tag_125\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":2181:2213  _mint(developer, feeToDeveloper) */\n      jump\t// in\n    tag_124:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":2260:2266  token1 */\n      immutable(\"0x4bab0814faad1725fc18a3cfa3a1fcb95c36a46cacb7a7312c3d38e6b447adac\")\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":2260:2275  token1.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":2276:2286  msg.sender */\n      caller\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":2288:2297  amountOut */\n      dup6\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":2260:2298  token1.transfer(msg.sender, amountOut) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_126\n      swap3\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_126:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_129\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_129:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_130\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_130:\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":2311:2384  _update(token0.balanceOf(address(this)), token1.balanceOf(address(this))) */\n      tag_131\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":2319:2325  token0 */\n      immutable(\"0xe9ec5ebbfe521ba5a70e4c2b13332e74dda4e055153dc29723307e62e8ed0f2a\")\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":2319:2335  token0.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":2344:2348  this */\n      address\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":2319:2350  token0.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_132\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_132:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_135\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_135:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_136\n      swap2\n      swap1\n      tag_137\n      jump\t// in\n    tag_136:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":2352:2358  token1 */\n      immutable(\"0x4bab0814faad1725fc18a3cfa3a1fcb95c36a46cacb7a7312c3d38e6b447adac\")\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":2352:2368  token1.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":2377:2381  this */\n      address\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":2352:2383  token1.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_138\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_138:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_140\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_140:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_141\n      swap2\n      swap1\n      tag_137\n      jump\t// in\n    tag_141:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":2311:2318  _update */\n      tag_142\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":2311:2384  _update(token0.balanceOf(address(this)), token1.balanceOf(address(this))) */\n      jump\t// in\n    tag_131:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":1813:2392  {... */\n      pop\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":1731:2392  function swapTokenForToken1(uint256 _amountIn) public returns (uint256 amountOut) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6956:7262  function getPredictOutputToken1(uint256 _amount) public view returns (uint256) {... */\n    tag_43:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":7026:7033  uint256 */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":7065:7066  0 */\n      dup1\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":7054:7062  reserve0 */\n      sload(0x01)\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":7054:7066  reserve0 > 0 */\n      gt\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":7054:7082  reserve0 > 0 && reserve1 > 0 */\n      dup1\n      iszero\n      tag_144\n      jumpi\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":7081:7082  0 */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":7070:7078  reserve1 */\n      sload(0x02)\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":7070:7082  reserve1 > 0 */\n      gt\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":7054:7082  reserve0 > 0 && reserve1 > 0 */\n    tag_144:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":7054:7097  reserve0 > 0 && reserve1 > 0 && _amount > 0 */\n      dup1\n      iszero\n      tag_145\n      jumpi\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":7096:7097  0 */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":7086:7093  _amount */\n      dup3\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":7086:7097  _amount > 0 */\n      gt\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":7054:7097  reserve0 > 0 && reserve1 > 0 && _amount > 0 */\n    tag_145:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":7046:7118  require(reserve0 > 0 && reserve1 > 0 && _amount > 0, \"Invalid reserves\") */\n      tag_146\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_147\n      swap1\n      tag_148\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_146:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":7129:7152  uint256 amountInWithFee */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":7173:7177  1000 */\n      0x03e8\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":7166:7169  997 */\n      0x03e5\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":7156:7163  _amount */\n      dup5\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":7156:7169  _amount * 997 */\n      tag_149\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_149:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":7155:7177  (_amount * 997) / 1000 */\n      tag_150\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_150:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":7129:7177  uint256 amountInWithFee = (_amount * 997) / 1000 */\n      swap1\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":7238:7253  amountInWithFee */\n      dup1\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":7227:7235  reserve0 */\n      sload(0x01)\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":7227:7253  reserve0 + amountInWithFee */\n      tag_151\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_151:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":7207:7222  amountInWithFee */\n      dup2\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":7196:7204  reserve1 */\n      sload(0x02)\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":7196:7222  reserve1 * amountInWithFee */\n      tag_152\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_152:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":7195:7254  (reserve1 * amountInWithFee) / (reserve0 + amountInWithFee) */\n      tag_153\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_153:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":7188:7254  return (reserve1 * amountInWithFee) / (reserve0 + amountInWithFee) */\n      swap2\n      pop\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6956:7262  function getPredictOutputToken1(uint256 _amount) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":435:458  uint256 public reserve1 */\n    tag_46:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":2400:3224  function swap_WithSlipLock(... */\n    tag_51:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":2539:2556  uint256 amountOut */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":2569:2575  token1 */\n      immutable(\"0x4bab0814faad1725fc18a3cfa3a1fcb95c36a46cacb7a7312c3d38e6b447adac\")\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":2569:2588  token1.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":2589:2599  msg.sender */\n      caller\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":2609:2613  this */\n      address\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":2616:2625  _amountIn */\n      dup8\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":2569:2626  token1.transferFrom(msg.sender, address(this), _amountIn) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_155\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_155:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_157\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_157:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_158\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_158:\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":2637:2660  uint256 amountInWithFee */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":2683:2687  1000 */\n      0x03e8\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":2676:2679  997 */\n      0x03e5\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":2664:2673  _amountIn */\n      dup7\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":2664:2679  _amountIn * 997 */\n      tag_159\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_159:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":2663:2687  (_amountIn * 997) / 1000 */\n      tag_160\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_160:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":2637:2687  uint256 amountInWithFee = (_amountIn * 997) / 1000 */\n      swap1\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":2753:2768  amountInWithFee */\n      dup1\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":2742:2750  reserve0 */\n      sload(0x01)\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":2742:2768  reserve0 + amountInWithFee */\n      tag_161\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_161:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":2722:2737  amountInWithFee */\n      dup2\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":2711:2719  reserve1 */\n      sload(0x02)\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":2711:2737  reserve1 * amountInWithFee */\n      tag_162\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_162:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":2710:2769  (reserve1 * amountInWithFee) / (reserve0 + amountInWithFee) */\n      tag_163\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_163:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":2698:2769  amountOut = (reserve1 * amountInWithFee) / (reserve0 + amountInWithFee) */\n      swap2\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":2800:2801  0 */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":2788:2797  amountOut */\n      dup3\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":2788:2801  amountOut > 0 */\n      gt\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":2780:2832  require(amountOut > 0, \"Insufficient output amount\") */\n      tag_164\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_165\n      swap1\n      tag_119\n      jump\t// in\n    tag_165:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_164:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":2903:2907  1000 */\n      0x03e8\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":2890:2899  _slipLock */\n      dup4\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":2883:2887  1000 */\n      0x03e8\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":2883:2899  1000 - _slipLock */\n      tag_166\n      swap2\n      swap1\n      tag_167\n      jump\t// in\n    tag_166:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":2865:2879  _forwardOutput */\n      dup6\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":2865:2900  _forwardOutput * (1000 - _slipLock) */\n      tag_168\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_168:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":2865:2907  _forwardOutput * (1000 - _slipLock) / 1000 */\n      tag_169\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_169:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":2851:2860  amountOut */\n      dup3\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":2851:2908  amountOut >= (_forwardOutput * (1000 - _slipLock) / 1000) */\n      lt\n      iszero\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":2843:2921  require(amountOut >= (_forwardOutput * (1000 - _slipLock) / 1000), \"SlipLock\") */\n      tag_170\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap1\n      tag_172\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_170:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":2932:2954  uint256 feeToDeveloper */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":2999:3003  2000 */\n      0x07d0\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":2988:2996  reserve0 */\n      sload(0x01)\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":2988:3003  reserve0 * 2000 */\n      tag_173\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_173:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":2973:2984  totalSupply */\n      sload(0x03)\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":2969:2970  3 */\n      0x03\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":2957:2966  _amountIn */\n      dup9\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":2957:2970  _amountIn * 3 */\n      tag_174\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_174:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":2957:2984  _amountIn * 3 * totalSupply */\n      tag_175\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_175:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":2957:3004  _amountIn * 3 * totalSupply / (reserve0 * 2000) */\n      tag_176\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_176:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":2932:3004  uint256 feeToDeveloper = _amountIn * 3 * totalSupply / (reserve0 * 2000) */\n      swap1\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":3015:3047  _mint(developer, feeToDeveloper) */\n      tag_177\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":3021:3030  developer */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":3032:3046  feeToDeveloper */\n      dup3\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":3015:3020  _mint */\n      tag_125\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":3015:3047  _mint(developer, feeToDeveloper) */\n      jump\t// in\n    tag_177:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":3094:3100  token0 */\n      immutable(\"0xe9ec5ebbfe521ba5a70e4c2b13332e74dda4e055153dc29723307e62e8ed0f2a\")\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":3094:3109  token0.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":3110:3120  msg.sender */\n      caller\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":3122:3131  amountOut */\n      dup6\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":3094:3132  token0.transfer(msg.sender, amountOut) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_178\n      swap3\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_178:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_180\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_180:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_181\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_181:\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":3143:3216  _update(token0.balanceOf(address(this)), token1.balanceOf(address(this))) */\n      tag_182\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":3151:3157  token0 */\n      immutable(\"0xe9ec5ebbfe521ba5a70e4c2b13332e74dda4e055153dc29723307e62e8ed0f2a\")\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":3151:3167  token0.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":3176:3180  this */\n      address\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":3151:3182  token0.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_183\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_183:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_185\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_185:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_186\n      swap2\n      swap1\n      tag_137\n      jump\t// in\n    tag_186:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":3184:3190  token1 */\n      immutable(\"0x4bab0814faad1725fc18a3cfa3a1fcb95c36a46cacb7a7312c3d38e6b447adac\")\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":3184:3200  token1.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":3209:3213  this */\n      address\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":3184:3215  token1.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_187\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_187:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_189\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_189:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_190\n      swap2\n      swap1\n      tag_137\n      jump\t// in\n    tag_190:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":3143:3150  _update */\n      tag_142\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":3143:3216  _update(token0.balanceOf(address(this)), token1.balanceOf(address(this))) */\n      jump\t// in\n    tag_182:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":2558:3224  {... */\n      pop\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":2400:3224  function swap_WithSlipLock(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":500:544  mapping(address => uint256) public balanceOf */\n    tag_56:\n      mstore(0x20, 0x04)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4910:5072  function removeAllLiquidity(address _user) external returns (uint256 amount0, uint256 amount1) {... */\n    tag_60:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4971:4986  uint256 amount0 */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4988:5003  uint256 amount1 */\n      dup1\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":5023:5064  _removeLiquidity(_user, balanceOf[_user]) */\n      tag_192\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":5040:5045  _user */\n      dup4\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":5047:5056  balanceOf */\n      0x04\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":5047:5063  balanceOf[_user] */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":5057:5062  _user */\n      dup7\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":5047:5063  balanceOf[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":5023:5039  _removeLiquidity */\n      tag_193\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":5023:5064  _removeLiquidity(_user, balanceOf[_user]) */\n      jump\t// in\n    tag_192:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":5016:5064  return _removeLiquidity(_user, balanceOf[_user]) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4910:5072  function removeAllLiquidity(address _user) external returns (uint256 amount0, uint256 amount1) {... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":1139:1723  function swap(uint256 _amountIn) public returns (uint256 amountOut) {... */\n    tag_65:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":1188:1205  uint256 amountOut */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":1218:1224  token1 */\n      immutable(\"0x4bab0814faad1725fc18a3cfa3a1fcb95c36a46cacb7a7312c3d38e6b447adac\")\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":1218:1237  token1.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":1238:1248  msg.sender */\n      caller\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":1258:1262  this */\n      address\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":1265:1274  _amountIn */\n      dup6\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":1218:1275  token1.transferFrom(msg.sender, address(this), _amountIn) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_195\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_195:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_197\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_197:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_198\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_198:\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":1286:1309  uint256 amountInWithFee */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":1332:1336  1000 */\n      0x03e8\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":1325:1328  997 */\n      0x03e5\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":1313:1322  _amountIn */\n      dup5\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":1313:1328  _amountIn * 997 */\n      tag_199\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_199:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":1312:1336  (_amountIn * 997) / 1000 */\n      tag_200\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_200:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":1286:1336  uint256 amountInWithFee = (_amountIn * 997) / 1000 */\n      swap1\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":1402:1417  amountInWithFee */\n      dup1\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":1391:1399  reserve0 */\n      sload(0x01)\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":1391:1417  reserve0 + amountInWithFee */\n      tag_201\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_201:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":1371:1386  amountInWithFee */\n      dup2\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":1360:1368  reserve1 */\n      sload(0x02)\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":1360:1386  reserve1 * amountInWithFee */\n      tag_202\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_202:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":1359:1418  (reserve1 * amountInWithFee) / (reserve0 + amountInWithFee) */\n      tag_203\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_203:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":1347:1418  amountOut = (reserve1 * amountInWithFee) / (reserve0 + amountInWithFee) */\n      swap2\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":1429:1451  uint256 feeToDeveloper */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":1496:1500  2000 */\n      0x07d0\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":1485:1493  reserve0 */\n      sload(0x01)\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":1485:1500  reserve0 * 2000 */\n      tag_204\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_204:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":1470:1481  totalSupply */\n      sload(0x03)\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":1466:1467  3 */\n      0x03\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":1454:1463  _amountIn */\n      dup7\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":1454:1467  _amountIn * 3 */\n      tag_205\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_205:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":1454:1481  _amountIn * 3 * totalSupply */\n      tag_206\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_206:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":1454:1501  _amountIn * 3 * totalSupply / (reserve0 * 2000) */\n      tag_207\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_207:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":1429:1501  uint256 feeToDeveloper = _amountIn * 3 * totalSupply / (reserve0 * 2000) */\n      swap1\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":1512:1544  _mint(developer, feeToDeveloper) */\n      tag_208\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":1518:1527  developer */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":1529:1543  feeToDeveloper */\n      dup3\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":1512:1517  _mint */\n      tag_125\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":1512:1544  _mint(developer, feeToDeveloper) */\n      jump\t// in\n    tag_208:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":1591:1597  token0 */\n      immutable(\"0xe9ec5ebbfe521ba5a70e4c2b13332e74dda4e055153dc29723307e62e8ed0f2a\")\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":1591:1606  token0.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":1607:1617  msg.sender */\n      caller\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":1619:1628  amountOut */\n      dup6\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":1591:1629  token0.transfer(msg.sender, amountOut) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_209\n      swap3\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_209:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_211\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_211:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_212\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_212:\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":1642:1715  _update(token0.balanceOf(address(this)), token1.balanceOf(address(this))) */\n      tag_213\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":1650:1656  token0 */\n      immutable(\"0xe9ec5ebbfe521ba5a70e4c2b13332e74dda4e055153dc29723307e62e8ed0f2a\")\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":1650:1666  token0.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":1675:1679  this */\n      address\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":1650:1681  token0.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_214\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_214:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_216\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_216:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_217\n      swap2\n      swap1\n      tag_137\n      jump\t// in\n    tag_217:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":1683:1689  token1 */\n      immutable(\"0x4bab0814faad1725fc18a3cfa3a1fcb95c36a46cacb7a7312c3d38e6b447adac\")\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":1683:1699  token1.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":1708:1712  this */\n      address\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":1683:1714  token1.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_218\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_218:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_220\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_220:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_221\n      swap2\n      swap1\n      tag_137\n      jump\t// in\n    tag_221:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":1642:1649  _update */\n      tag_142\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":1642:1715  _update(token0.balanceOf(address(this)), token1.balanceOf(address(this))) */\n      jump\t// in\n    tag_213:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":1207:1723  {... */\n      pop\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":1139:1723  function swap(uint256 _amountIn) public returns (uint256 amountOut) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":7270:7576  function getPredictOutputToken0(uint256 _amount) public view returns (uint256) {... */\n    tag_69:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":7340:7347  uint256 */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":7379:7380  0 */\n      dup1\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":7368:7376  reserve0 */\n      sload(0x01)\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":7368:7380  reserve0 > 0 */\n      gt\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":7368:7396  reserve0 > 0 && reserve1 > 0 */\n      dup1\n      iszero\n      tag_223\n      jumpi\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":7395:7396  0 */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":7384:7392  reserve1 */\n      sload(0x02)\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":7384:7396  reserve1 > 0 */\n      gt\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":7368:7396  reserve0 > 0 && reserve1 > 0 */\n    tag_223:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":7368:7411  reserve0 > 0 && reserve1 > 0 && _amount > 0 */\n      dup1\n      iszero\n      tag_224\n      jumpi\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":7410:7411  0 */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":7400:7407  _amount */\n      dup3\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":7400:7411  _amount > 0 */\n      gt\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":7368:7411  reserve0 > 0 && reserve1 > 0 && _amount > 0 */\n    tag_224:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":7360:7432  require(reserve0 > 0 && reserve1 > 0 && _amount > 0, \"Invalid reserves\") */\n      tag_225\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_226\n      swap1\n      tag_148\n      jump\t// in\n    tag_226:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_225:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":7443:7466  uint256 amountInWithFee */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":7487:7491  1000 */\n      0x03e8\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":7480:7483  997 */\n      0x03e5\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":7470:7477  _amount */\n      dup5\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":7470:7483  _amount * 997 */\n      tag_227\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_227:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":7469:7491  (_amount * 997) / 1000 */\n      tag_228\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_228:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":7443:7491  uint256 amountInWithFee = (_amount * 997) / 1000 */\n      swap1\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":7552:7567  amountInWithFee */\n      dup1\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":7541:7549  reserve1 */\n      sload(0x02)\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":7541:7567  reserve1 + amountInWithFee */\n      tag_229\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_229:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":7521:7536  amountInWithFee */\n      dup2\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":7510:7518  reserve0 */\n      sload(0x01)\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":7510:7536  reserve0 * amountInWithFee */\n      tag_230\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_230:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":7509:7568  (reserve0 * amountInWithFee) / (reserve1 + amountInWithFee) */\n      tag_231\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_231:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":7502:7568  return (reserve0 * amountInWithFee) / (reserve1 + amountInWithFee) */\n      swap2\n      pop\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":7270:7576  function getPredictOutputToken0(uint256 _amount) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":5080:5313  function removeLiquidity(uint256 _shares) external returns (uint256 amount0, uint256 amount1) {... */\n    tag_73:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":5140:5155  uint256 amount0 */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":5157:5172  uint256 amount1 */\n      dup1\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":5204:5213  balanceOf */\n      0x04\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":5204:5225  balanceOf[msg.sender] */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":5214:5224  msg.sender */\n      caller\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":5204:5225  balanceOf[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":5193:5200  _shares */\n      dup4\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":5193:5225  _shares <= balanceOf[msg.sender] */\n      gt\n      iszero\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":5185:5250  require(_shares <= balanceOf[msg.sender], \"Insufficient balance\") */\n      tag_233\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_234\n      swap1\n      tag_235\n      jump\t// in\n    tag_234:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_233:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":5268:5305  _removeLiquidity(msg.sender, _shares) */\n      tag_236\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":5285:5295  msg.sender */\n      caller\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":5297:5304  _shares */\n      dup5\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":5268:5284  _removeLiquidity */\n      tag_193\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":5268:5305  _removeLiquidity(msg.sender, _shares) */\n      jump\t// in\n    tag_236:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":5261:5305  return _removeLiquidity(msg.sender, _shares) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":5080:5313  function removeLiquidity(uint256 _shares) external returns (uint256 amount0, uint256 amount1) {... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4080:4902  function addLiquidity(uint256 _amount0, uint256 _amount1) external returns (uint256 shares) {... */\n    tag_78:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4156:4170  uint256 shares */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4183:4189  token0 */\n      immutable(\"0xe9ec5ebbfe521ba5a70e4c2b13332e74dda4e055153dc29723307e62e8ed0f2a\")\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4183:4202  token0.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4203:4213  msg.sender */\n      caller\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4223:4227  this */\n      address\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4230:4238  _amount0 */\n      dup7\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4183:4239  token0.transferFrom(msg.sender, address(this), _amount0) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_238\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_238:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_240\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_240:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_241\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_241:\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4250:4256  token1 */\n      immutable(\"0x4bab0814faad1725fc18a3cfa3a1fcb95c36a46cacb7a7312c3d38e6b447adac\")\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4250:4269  token1.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4270:4280  msg.sender */\n      caller\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4290:4294  this */\n      address\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4297:4305  _amount1 */\n      dup6\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4250:4306  token1.transferFrom(msg.sender, address(this), _amount1) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_242\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_242:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_244\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_244:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_245\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_245:\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4334:4335  0 */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4323:4331  reserve0 */\n      sload(0x01)\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4323:4335  reserve0 > 0 */\n      gt\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4323:4351  reserve0 > 0 || reserve1 > 0 */\n      dup1\n      tag_246\n      jumpi\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4350:4351  0 */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4339:4347  reserve1 */\n      sload(0x02)\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4339:4351  reserve1 > 0 */\n      gt\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4323:4351  reserve0 > 0 || reserve1 > 0 */\n    tag_246:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4319:4460  if (reserve0 > 0 || reserve1 > 0) {... */\n      iszero\n      tag_247\n      jumpi\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4412:4420  _amount1 */\n      dup2\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4400:4408  reserve0 */\n      sload(0x01)\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4388:4396  reserve1 */\n      sload(0x02)\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4377:4385  _amount0 */\n      dup6\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4377:4396  _amount0 * reserve1 */\n      tag_248\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_248:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4376:4408  (_amount0 * reserve1) / reserve0 */\n      tag_249\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_249:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4376:4420  (_amount0 * reserve1) / reserve0 == _amount1 */\n      eq\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4368:4448  require((_amount0 * reserve1) / reserve0 == _amount1, \"Invalid liquidity ratio\") */\n      tag_250\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_251\n      swap1\n      tag_252\n      jump\t// in\n    tag_251:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_250:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4319:4460  if (reserve0 > 0 || reserve1 > 0) {... */\n    tag_247:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4491:4492  0 */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4476:4487  totalSupply */\n      sload(0x03)\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4476:4492  totalSupply == 0 */\n      sub\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4472:4729  if (totalSupply == 0) {... */\n      tag_253\n      jumpi\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4518:4544  _sqrt(_amount0 * _amount1) */\n      tag_254\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4535:4543  _amount1 */\n      dup3\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4524:4532  _amount0 */\n      dup5\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4524:4543  _amount0 * _amount1 */\n      tag_255\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_255:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4518:4523  _sqrt */\n      tag_256\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4518:4544  _sqrt(_amount0 * _amount1) */\n      jump\t// in\n    tag_254:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4509:4544  shares = _sqrt(_amount0 * _amount1) */\n      swap1\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4472:4729  if (totalSupply == 0) {... */\n      jump(tag_257)\n    tag_253:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4586:4717  Math.min(... */\n      tag_258\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4640:4648  reserve0 */\n      sload(0x01)\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4625:4636  totalSupply */\n      sload(0x03)\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4614:4622  _amount0 */\n      dup6\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4614:4636  _amount0 * totalSupply */\n      tag_259\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_259:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4613:4648  (_amount0 * totalSupply) / reserve0 */\n      tag_260\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_260:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4694:4702  reserve1 */\n      sload(0x02)\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4679:4690  totalSupply */\n      sload(0x03)\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4668:4676  _amount1 */\n      dup6\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4668:4690  _amount1 * totalSupply */\n      tag_261\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_261:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4667:4702  (_amount1 * totalSupply) / reserve1 */\n      tag_262\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_262:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4586:4594  Math.min */\n      tag_263\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4586:4717  Math.min(... */\n      jump\t// in\n    tag_258:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4577:4717  shares = Math.min(... */\n      swap1\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4472:4729  if (totalSupply == 0) {... */\n    tag_257:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4756:4757  0 */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4747:4753  shares */\n      dup2\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4747:4757  shares > 0 */\n      gt\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4739:4772  require(shares > 0, \"shares = 0\") */\n      tag_264\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_265\n      swap1\n      tag_266\n      jump\t// in\n    tag_265:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_264:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4783:4808  _mint(msg.sender, shares) */\n      tag_267\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4789:4799  msg.sender */\n      caller\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4801:4807  shares */\n      dup3\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4783:4788  _mint */\n      tag_125\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4783:4808  _mint(msg.sender, shares) */\n      jump\t// in\n    tag_267:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4821:4894  _update(token0.balanceOf(address(this)), token1.balanceOf(address(this))) */\n      tag_268\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4829:4835  token0 */\n      immutable(\"0xe9ec5ebbfe521ba5a70e4c2b13332e74dda4e055153dc29723307e62e8ed0f2a\")\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4829:4845  token0.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4854:4858  this */\n      address\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4829:4860  token0.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_269\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_269:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_271\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_271:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_272\n      swap2\n      swap1\n      tag_137\n      jump\t// in\n    tag_272:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4862:4868  token1 */\n      immutable(\"0x4bab0814faad1725fc18a3cfa3a1fcb95c36a46cacb7a7312c3d38e6b447adac\")\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4862:4878  token1.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4887:4891  this */\n      address\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4862:4893  token1.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_273\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_273:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_275\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_275:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_276\n      swap2\n      swap1\n      tag_137\n      jump\t// in\n    tag_276:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4821:4828  _update */\n      tag_142\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4821:4894  _update(token0.balanceOf(address(this)), token1.balanceOf(address(this))) */\n      jump\t// in\n    tag_268:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4080:4902  function addLiquidity(uint256 _amount0, uint256 _amount1) external returns (uint256 shares) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6079:6176  function myShares() public view returns (uint256) {... */\n    tag_81:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6120:6127  uint256 */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6147:6156  balanceOf */\n      0x04\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6147:6168  balanceOf[msg.sender] */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6157:6167  msg.sender */\n      caller\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6147:6168  balanceOf[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6140:6168  return balanceOf[msg.sender] */\n      swap1\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6079:6176  function myShares() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":5321:5559  function removeLiquidity(address _user, uint256 _shares) external returns (uint256 amount0, uint256 amount1) {... */\n    tag_86:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":5396:5411  uint256 amount0 */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":5413:5428  uint256 amount1 */\n      dup1\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":5460:5469  balanceOf */\n      0x04\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":5460:5476  balanceOf[_user] */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":5470:5475  _user */\n      dup6\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":5460:5476  balanceOf[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":5449:5456  _shares */\n      dup4\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":5449:5476  _shares <= balanceOf[_user] */\n      gt\n      iszero\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":5441:5501  require(_shares <= balanceOf[_user], \"Insufficient balance\") */\n      tag_279\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_280\n      swap1\n      tag_235\n      jump\t// in\n    tag_280:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_279:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":5519:5551  _removeLiquidity(_user, _shares) */\n      tag_281\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":5536:5541  _user */\n      dup5\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":5543:5550  _shares */\n      dup5\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":5519:5535  _removeLiquidity */\n      tag_193\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":5519:5551  _removeLiquidity(_user, _shares) */\n      jump\t// in\n    tag_281:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":5512:5551  return _removeLiquidity(_user, _shares) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":5321:5559  function removeLiquidity(address _user, uint256 _shares) external returns (uint256 amount0, uint256 amount1) {... */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":3230:4072  function swapTokenForToken1_WithSlipLock(... */\n    tag_90:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":3383:3400  uint256 amountOut */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":3413:3419  token0 */\n      immutable(\"0xe9ec5ebbfe521ba5a70e4c2b13332e74dda4e055153dc29723307e62e8ed0f2a\")\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":3413:3432  token0.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":3433:3443  msg.sender */\n      caller\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":3453:3457  this */\n      address\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":3460:3469  _amountIn */\n      dup8\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":3413:3470  token0.transferFrom(msg.sender, address(this), _amountIn) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_283\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_283:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_285\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_285:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_286\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_286:\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":3481:3504  uint256 amountInWithFee */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":3527:3531  1000 */\n      0x03e8\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":3520:3523  997 */\n      0x03e5\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":3508:3517  _amountIn */\n      dup7\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":3508:3523  _amountIn * 997 */\n      tag_287\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_287:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":3507:3531  (_amountIn * 997) / 1000 */\n      tag_288\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_288:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":3481:3531  uint256 amountInWithFee = (_amountIn * 997) / 1000 */\n      swap1\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":3599:3614  amountInWithFee */\n      dup1\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":3588:3596  reserve0 */\n      sload(0x01)\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":3588:3614  reserve0 + amountInWithFee */\n      tag_289\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_289:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":3568:3583  amountInWithFee */\n      dup2\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":3557:3565  reserve1 */\n      sload(0x02)\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":3557:3583  reserve1 * amountInWithFee */\n      tag_290\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_290:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":3556:3615  (reserve1 * amountInWithFee) / (reserve0 + amountInWithFee) */\n      tag_291\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_291:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":3544:3615  amountOut = (reserve1 * amountInWithFee) / (reserve0 + amountInWithFee) */\n      swap2\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":3646:3647  0 */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":3634:3643  amountOut */\n      dup3\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":3634:3647  amountOut > 0 */\n      gt\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":3626:3678  require(amountOut > 0, \"Insufficient output amount\") */\n      tag_292\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_293\n      swap1\n      tag_119\n      jump\t// in\n    tag_293:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_292:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":3749:3753  1000 */\n      0x03e8\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":3736:3745  _slipLock */\n      dup4\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":3729:3733  1000 */\n      0x03e8\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":3729:3745  1000 - _slipLock */\n      tag_294\n      swap2\n      swap1\n      tag_167\n      jump\t// in\n    tag_294:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":3711:3725  _forwardOutput */\n      dup6\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":3711:3746  _forwardOutput * (1000 - _slipLock) */\n      tag_295\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_295:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":3711:3753  _forwardOutput * (1000 - _slipLock) / 1000 */\n      tag_296\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_296:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":3697:3706  amountOut */\n      dup3\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":3697:3754  amountOut >= (_forwardOutput * (1000 - _slipLock) / 1000) */\n      lt\n      iszero\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":3689:3767  require(amountOut >= (_forwardOutput * (1000 - _slipLock) / 1000), \"SlipLock\") */\n      tag_297\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_298\n      swap1\n      tag_172\n      jump\t// in\n    tag_298:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_297:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":3778:3800  uint256 feeToDeveloper */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":3845:3849  2000 */\n      0x07d0\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":3834:3842  reserve0 */\n      sload(0x01)\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":3834:3849  reserve0 * 2000 */\n      tag_299\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_299:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":3819:3830  totalSupply */\n      sload(0x03)\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":3815:3816  3 */\n      0x03\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":3803:3812  _amountIn */\n      dup9\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":3803:3816  _amountIn * 3 */\n      tag_300\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_300:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":3803:3830  _amountIn * 3 * totalSupply */\n      tag_301\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_301:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":3803:3850  _amountIn * 3 * totalSupply / (reserve0 * 2000) */\n      tag_302\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_302:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":3778:3850  uint256 feeToDeveloper = _amountIn * 3 * totalSupply / (reserve0 * 2000) */\n      swap1\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":3861:3893  _mint(developer, feeToDeveloper) */\n      tag_303\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":3867:3876  developer */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":3878:3892  feeToDeveloper */\n      dup3\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":3861:3866  _mint */\n      tag_125\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":3861:3893  _mint(developer, feeToDeveloper) */\n      jump\t// in\n    tag_303:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":3940:3946  token1 */\n      immutable(\"0x4bab0814faad1725fc18a3cfa3a1fcb95c36a46cacb7a7312c3d38e6b447adac\")\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":3940:3955  token1.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":3956:3966  msg.sender */\n      caller\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":3968:3977  amountOut */\n      dup6\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":3940:3978  token1.transfer(msg.sender, amountOut) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_304\n      swap3\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_304:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_306\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_306:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_307\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_307:\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":3991:4064  _update(token0.balanceOf(address(this)), token1.balanceOf(address(this))) */\n      tag_308\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":3999:4005  token0 */\n      immutable(\"0xe9ec5ebbfe521ba5a70e4c2b13332e74dda4e055153dc29723307e62e8ed0f2a\")\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":3999:4015  token0.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4024:4028  this */\n      address\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":3999:4030  token0.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_309\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_309:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_311\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_311:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_312\n      swap2\n      swap1\n      tag_137\n      jump\t// in\n    tag_312:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4032:4038  token1 */\n      immutable(\"0x4bab0814faad1725fc18a3cfa3a1fcb95c36a46cacb7a7312c3d38e6b447adac\")\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4032:4048  token1.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4057:4061  this */\n      address\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":4032:4063  token1.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_313\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_313:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_315\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_315:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_316\n      swap2\n      swap1\n      tag_137\n      jump\t// in\n    tag_316:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":3991:3998  _update */\n      tag_142\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":3991:4064  _update(token0.balanceOf(address(this)), token1.balanceOf(address(this))) */\n      jump\t// in\n    tag_308:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":3402:4072  {... */\n      pop\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":3230:4072  function swapTokenForToken1_WithSlipLock(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":366:396  IERC20 public immutable token1 */\n    tag_93:\n      immutable(\"0x4bab0814faad1725fc18a3cfa3a1fcb95c36a46cacb7a7312c3d38e6b447adac\")\n      dup2\n      jump\t// out\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6182:6287  function sharesOf(address _user) public view returns (uint256) {... */\n    tag_97:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6236:6243  uint256 */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6263:6272  balanceOf */\n      0x04\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6263:6279  balanceOf[_user] */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6273:6278  _user */\n      dup4\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6263:6279  balanceOf[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6256:6279  return balanceOf[_user] */\n      swap1\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6182:6287  function sharesOf(address _user) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6614:6948  function getERCPrice() public view returns (uint256) {... */\n    tag_100:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6658:6665  uint256 */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6697:6698  0 */\n      dup1\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6686:6694  reserve0 */\n      sload(0x01)\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6686:6698  reserve0 > 0 */\n      gt\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6686:6714  reserve0 > 0 && reserve1 > 0 */\n      dup1\n      iszero\n      tag_319\n      jumpi\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6713:6714  0 */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6702:6710  reserve1 */\n      sload(0x02)\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6702:6714  reserve1 > 0 */\n      gt\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6686:6714  reserve0 > 0 && reserve1 > 0 */\n    tag_319:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6678:6735  require(reserve0 > 0 && reserve1 > 0, \"Invalid reserves\") */\n      tag_320\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_321\n      swap1\n      tag_148\n      jump\t// in\n    tag_321:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_320:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6746:6763  uint256 decimals0 */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6780:6786  token0 */\n      immutable(\"0xe9ec5ebbfe521ba5a70e4c2b13332e74dda4e055153dc29723307e62e8ed0f2a\")\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6766:6797  ERC20(address(token0)).decimals */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x313ce567\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6766:6799  ERC20(address(token0)).decimals() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_323\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_323:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_324\n      swap2\n      swap1\n      tag_325\n      jump\t// in\n    tag_324:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6746:6799  uint256 decimals0 = ERC20(address(token0)).decimals() */\n      0xff\n      and\n      swap1\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6810:6827  uint256 decimals1 */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6844:6850  token1 */\n      immutable(\"0x4bab0814faad1725fc18a3cfa3a1fcb95c36a46cacb7a7312c3d38e6b447adac\")\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6830:6861  ERC20(address(token1)).decimals */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x313ce567\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6830:6863  ERC20(address(token1)).decimals() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_327\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_327:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_328\n      swap2\n      swap1\n      tag_325\n      jump\t// in\n    tag_328:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6810:6863  uint256 decimals1 = ERC20(address(token1)).decimals() */\n      0xff\n      and\n      swap1\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6929:6938  decimals0 */\n      dup2\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6925:6927  10 */\n      0x0a\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6925:6938  10**decimals0 */\n      tag_329\n      swap2\n      swap1\n      tag_330\n      jump\t// in\n    tag_329:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6913:6921  reserve1 */\n      sload(0x02)\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6913:6939  reserve1 * (10**decimals0) */\n      tag_331\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_331:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6898:6907  decimals1 */\n      dup2\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6894:6896  10 */\n      0x0a\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6894:6907  10**decimals1 */\n      tag_332\n      swap2\n      swap1\n      tag_330\n      jump\t// in\n    tag_332:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6882:6890  reserve0 */\n      sload(0x01)\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6882:6908  reserve0 * (10**decimals1) */\n      tag_333\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_333:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6881:6940  (reserve0 * (10**decimals1)) / (reserve1 * (10**decimals0)) */\n      tag_334\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_334:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6874:6940  return (reserve0 * (10**decimals1)) / (reserve1 * (10**decimals0)) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6614:6948  function getERCPrice() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":718:848  function _mint(address _to, uint256 _amount) private {... */\n    tag_125:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":800:807  _amount */\n      dup1\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":782:791  balanceOf */\n      0x04\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":782:796  balanceOf[_to] */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":792:795  _to */\n      dup5\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":782:796  balanceOf[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":782:807  balanceOf[_to] += _amount */\n      dup3\n      dup3\n      sload\n      tag_336\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_336:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":833:840  _amount */\n      dup1\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":818:829  totalSupply */\n      0x03\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":818:840  totalSupply += _amount */\n      dup3\n      dup3\n      sload\n      tag_337\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_337:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":718:848  function _mint(address _to, uint256 _amount) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":998:1131  function _update(uint256 _reserve0, uint256 _reserve1) private {... */\n    tag_142:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":1083:1092  _reserve0 */\n      dup2\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":1072:1080  reserve0 */\n      0x01\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":1072:1092  reserve0 = _reserve0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":1114:1123  _reserve1 */\n      dup1\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":1103:1111  reserve1 */\n      0x02\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":1103:1123  reserve1 = _reserve1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":998:1131  function _update(uint256 _reserve0, uint256 _reserve1) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":5567:6071  function _removeLiquidity(address _user, uint256 _shares) internal returns (uint256 amount0, uint256 amount1) {... */\n    tag_193:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":5643:5658  uint256 amount0 */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":5660:5675  uint256 amount1 */\n      dup1\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":5721:5732  totalSupply */\n      sload(0x03)\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":5709:5717  reserve0 */\n      sload(0x01)\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":5699:5706  _shares */\n      dup5\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":5699:5717  _shares * reserve0 */\n      tag_340\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_340:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":5698:5732  (_shares * reserve0) / totalSupply */\n      tag_341\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_341:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":5688:5732  amount0 = (_shares * reserve0) / totalSupply */\n      swap2\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":5776:5787  totalSupply */\n      sload(0x03)\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":5764:5772  reserve1 */\n      sload(0x02)\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":5754:5761  _shares */\n      dup5\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":5754:5772  _shares * reserve1 */\n      tag_342\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_342:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":5753:5787  (_shares * reserve1) / totalSupply */\n      tag_343\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_343:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":5743:5787  amount1 = (_shares * reserve1) / totalSupply */\n      swap1\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":5816:5817  0 */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":5806:5813  amount0 */\n      dup3\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":5806:5817  amount0 > 0 */\n      gt\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":5806:5832  amount0 > 0 && amount1 > 0 */\n      dup1\n      iszero\n      tag_344\n      jumpi\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":5831:5832  0 */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":5821:5828  amount1 */\n      dup2\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":5821:5832  amount1 > 0 */\n      gt\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":5806:5832  amount0 > 0 && amount1 > 0 */\n    tag_344:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":5798:5859  require(amount0 > 0 && amount1 > 0, \"amount0 or amount1 = 0\") */\n      tag_345\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_346\n      swap1\n      tag_347\n      jump\t// in\n    tag_346:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_345:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":5872:5893  _burn(_user, _shares) */\n      tag_348\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":5878:5883  _user */\n      dup5\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":5885:5892  _shares */\n      dup5\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":5872:5877  _burn */\n      tag_349\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":5872:5893  _burn(_user, _shares) */\n      jump\t// in\n    tag_348:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":5904:5977  _update(token0.balanceOf(address(this)), token1.balanceOf(address(this))) */\n      tag_350\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":5912:5918  token0 */\n      immutable(\"0xe9ec5ebbfe521ba5a70e4c2b13332e74dda4e055153dc29723307e62e8ed0f2a\")\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":5912:5928  token0.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":5937:5941  this */\n      address\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":5912:5943  token0.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_351\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_351:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_353\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_353:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_354\n      swap2\n      swap1\n      tag_137\n      jump\t// in\n    tag_354:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":5945:5951  token1 */\n      immutable(\"0x4bab0814faad1725fc18a3cfa3a1fcb95c36a46cacb7a7312c3d38e6b447adac\")\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":5945:5961  token1.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":5970:5974  this */\n      address\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":5945:5976  token1.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_355\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_355:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_357\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_357:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_358\n      swap2\n      swap1\n      tag_137\n      jump\t// in\n    tag_358:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":5904:5911  _update */\n      tag_142\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":5904:5977  _update(token0.balanceOf(address(this)), token1.balanceOf(address(this))) */\n      jump\t// in\n    tag_350:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":5990:5996  token0 */\n      immutable(\"0xe9ec5ebbfe521ba5a70e4c2b13332e74dda4e055153dc29723307e62e8ed0f2a\")\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":5990:6005  token0.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6006:6011  _user */\n      dup6\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6013:6020  amount0 */\n      dup5\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":5990:6021  token0.transfer(_user, amount0) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_359\n      swap3\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_359:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_361\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_361:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_362\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_362:\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6032:6038  token1 */\n      immutable(\"0x4bab0814faad1725fc18a3cfa3a1fcb95c36a46cacb7a7312c3d38e6b447adac\")\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6032:6047  token1.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6048:6053  _user */\n      dup6\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6055:6062  amount1 */\n      dup4\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6032:6063  token1.transfer(_user, amount1) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_363\n      swap3\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_363:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_365\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_365:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_366\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_366:\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":5567:6071  function _removeLiquidity(address _user, uint256 _shares) internal returns (uint256 amount0, uint256 amount1) {... */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6293:6606  function _sqrt(uint256 y) internal pure returns (uint256 z) {... */\n    tag_256:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6342:6351  uint256 z */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6372:6373  3 */\n      0x03\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6368:6369  y */\n      dup3\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6368:6373  y > 3 */\n      gt\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6364:6599  if (y > 3) {... */\n      iszero\n      tag_368\n      jumpi\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6394:6395  y */\n      dup2\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6390:6395  z = y */\n      swap1\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6410:6419  uint256 x */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6430:6431  1 */\n      0x01\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6426:6427  2 */\n      0x02\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6422:6423  y */\n      dup5\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6422:6427  y / 2 */\n      tag_369\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_369:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6422:6431  y / 2 + 1 */\n      tag_370\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_370:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6410:6431  uint256 x = y / 2 + 1 */\n      swap1\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6446:6538  while (x < z) {... */\n    tag_371:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6457:6458  z */\n      dup2\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6453:6454  x */\n      dup2\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6453:6458  x < z */\n      lt\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6446:6538  while (x < z) {... */\n      iszero\n      tag_372\n      jumpi\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6483:6484  x */\n      dup1\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6479:6484  z = x */\n      swap2\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6521:6522  2 */\n      0x02\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6516:6517  x */\n      dup2\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6512:6513  x */\n      dup3\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6508:6509  y */\n      dup6\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6508:6513  y / x */\n      tag_373\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_373:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6508:6517  y / x + x */\n      tag_374\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_374:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6507:6522  (y / x + x) / 2 */\n      tag_375\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_375:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6503:6522  x = (y / x + x) / 2 */\n      swap1\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6446:6538  while (x < z) {... */\n      jump(tag_371)\n    tag_372:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6375:6549  {... */\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6364:6599  if (y > 3) {... */\n      jump(tag_376)\n    tag_368:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6564:6565  0 */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6559:6560  y */\n      dup3\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6559:6565  y != 0 */\n      eq\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6555:6599  if (y != 0) {... */\n      tag_377\n      jumpi\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6586:6587  1 */\n      0x01\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6582:6587  z = 1 */\n      swap1\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6555:6599  if (y != 0) {... */\n    tag_377:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6364:6599  if (y > 3) {... */\n    tag_376:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":6293:6606  function _sqrt(uint256 y) internal pure returns (uint256 z) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":588:692  function min(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_263:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":646:653  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":676:677  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":672:673  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":672:677  a < b */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":672:685  a < b ? a : b */\n      tag_379\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":684:685  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":672:685  a < b ? a : b */\n      jump(tag_380)\n    tag_379:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":680:681  a */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":672:685  a < b ? a : b */\n    tag_380:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":665:685  return a < b ? a : b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":588:692  function min(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":856:990  function _burn(address _from, uint256 _amount) private {... */\n    tag_349:\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":942:949  _amount */\n      dup1\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":922:931  balanceOf */\n      0x04\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":922:938  balanceOf[_from] */\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":932:937  _from */\n      dup5\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":922:938  balanceOf[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":922:949  balanceOf[_from] -= _amount */\n      dup3\n      dup3\n      sload\n      tag_382\n      swap2\n      swap1\n      tag_167\n      jump\t// in\n    tag_382:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":975:982  _amount */\n      dup1\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":960:971  totalSupply */\n      0x03\n      0x00\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":960:982  totalSupply -= _amount */\n      dup3\n      dup3\n      sload\n      tag_383\n      swap2\n      swap1\n      tag_167\n      jump\t// in\n    tag_383:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"W6/simpleAMM/src/simpleAMMV6ERC.sol\":856:990  function _burn(address _from, uint256 _amount) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_384:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:199   */\n    tag_385:\n        /* \"#utility.yul\":167:170   */\n      0x00\n        /* \"#utility.yul\":188:193   */\n      dup2\n        /* \"#utility.yul\":181:193   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:199   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":205:347   */\n    tag_386:\n        /* \"#utility.yul\":255:264   */\n      0x00\n        /* \"#utility.yul\":288:341   */\n      tag_432\n        /* \"#utility.yul\":306:340   */\n      tag_433\n        /* \"#utility.yul\":315:339   */\n      tag_434\n        /* \"#utility.yul\":333:338   */\n      dup5\n        /* \"#utility.yul\":315:339   */\n      tag_384\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":306:340   */\n      tag_385\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":288:341   */\n      tag_384\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":275:341   */\n      swap1\n      pop\n        /* \"#utility.yul\":205:347   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":353:479   */\n    tag_387:\n        /* \"#utility.yul\":403:412   */\n      0x00\n        /* \"#utility.yul\":436:473   */\n      tag_436\n        /* \"#utility.yul\":467:472   */\n      dup3\n        /* \"#utility.yul\":436:473   */\n      tag_386\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":423:473   */\n      swap1\n      pop\n        /* \"#utility.yul\":353:479   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":485:625   */\n    tag_388:\n        /* \"#utility.yul\":549:558   */\n      0x00\n        /* \"#utility.yul\":582:619   */\n      tag_438\n        /* \"#utility.yul\":613:618   */\n      dup3\n        /* \"#utility.yul\":582:619   */\n      tag_387\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":569:619   */\n      swap1\n      pop\n        /* \"#utility.yul\":485:625   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":631:790   */\n    tag_389:\n        /* \"#utility.yul\":732:783   */\n      tag_440\n        /* \"#utility.yul\":777:782   */\n      dup2\n        /* \"#utility.yul\":732:783   */\n      tag_388\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":727:730   */\n      dup3\n        /* \"#utility.yul\":720:784   */\n      mstore\n        /* \"#utility.yul\":631:790   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":796:1046   */\n    tag_28:\n        /* \"#utility.yul\":903:907   */\n      0x00\n        /* \"#utility.yul\":941:943   */\n      0x20\n        /* \"#utility.yul\":930:939   */\n      dup3\n        /* \"#utility.yul\":926:944   */\n      add\n        /* \"#utility.yul\":918:944   */\n      swap1\n      pop\n        /* \"#utility.yul\":954:1039   */\n      tag_442\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1025:1034   */\n      dup4\n        /* \"#utility.yul\":1021:1038   */\n      add\n        /* \"#utility.yul\":1012:1018   */\n      dup5\n        /* \"#utility.yul\":954:1039   */\n      tag_389\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":796:1046   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1129   */\n    tag_390:\n        /* \"#utility.yul\":1089:1096   */\n      0x00\n        /* \"#utility.yul\":1118:1123   */\n      dup2\n        /* \"#utility.yul\":1107:1123   */\n      swap1\n      pop\n        /* \"#utility.yul\":1052:1129   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1135:1253   */\n    tag_391:\n        /* \"#utility.yul\":1222:1246   */\n      tag_445\n        /* \"#utility.yul\":1240:1245   */\n      dup2\n        /* \"#utility.yul\":1222:1246   */\n      tag_390\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":1217:1220   */\n      dup3\n        /* \"#utility.yul\":1210:1247   */\n      mstore\n        /* \"#utility.yul\":1135:1253   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1481   */\n    tag_32:\n        /* \"#utility.yul\":1352:1356   */\n      0x00\n        /* \"#utility.yul\":1390:1392   */\n      0x20\n        /* \"#utility.yul\":1379:1388   */\n      dup3\n        /* \"#utility.yul\":1375:1393   */\n      add\n        /* \"#utility.yul\":1367:1393   */\n      swap1\n      pop\n        /* \"#utility.yul\":1403:1474   */\n      tag_447\n        /* \"#utility.yul\":1471:1472   */\n      0x00\n        /* \"#utility.yul\":1460:1469   */\n      dup4\n        /* \"#utility.yul\":1456:1473   */\n      add\n        /* \"#utility.yul\":1447:1453   */\n      dup5\n        /* \"#utility.yul\":1403:1474   */\n      tag_391\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":1259:1481   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1568:1685   */\n    tag_393:\n        /* \"#utility.yul\":1677:1678   */\n      0x00\n        /* \"#utility.yul\":1674:1675   */\n      dup1\n        /* \"#utility.yul\":1667:1679   */\n      revert\n        /* \"#utility.yul\":1814:1936   */\n    tag_395:\n        /* \"#utility.yul\":1887:1911   */\n      tag_452\n        /* \"#utility.yul\":1905:1910   */\n      dup2\n        /* \"#utility.yul\":1887:1911   */\n      tag_390\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":1880:1885   */\n      dup2\n        /* \"#utility.yul\":1877:1912   */\n      eq\n        /* \"#utility.yul\":1867:1930   */\n      tag_453\n      jumpi\n        /* \"#utility.yul\":1926:1927   */\n      0x00\n        /* \"#utility.yul\":1923:1924   */\n      dup1\n        /* \"#utility.yul\":1916:1928   */\n      revert\n        /* \"#utility.yul\":1867:1930   */\n    tag_453:\n        /* \"#utility.yul\":1814:1936   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1942:2081   */\n    tag_396:\n        /* \"#utility.yul\":1988:1993   */\n      0x00\n        /* \"#utility.yul\":2026:2032   */\n      dup2\n        /* \"#utility.yul\":2013:2033   */\n      calldataload\n        /* \"#utility.yul\":2004:2033   */\n      swap1\n      pop\n        /* \"#utility.yul\":2042:2075   */\n      tag_455\n        /* \"#utility.yul\":2069:2074   */\n      dup2\n        /* \"#utility.yul\":2042:2075   */\n      tag_395\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":1942:2081   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2087:2416   */\n    tag_38:\n        /* \"#utility.yul\":2146:2152   */\n      0x00\n        /* \"#utility.yul\":2195:2197   */\n      0x20\n        /* \"#utility.yul\":2183:2192   */\n      dup3\n        /* \"#utility.yul\":2174:2181   */\n      dup5\n        /* \"#utility.yul\":2170:2193   */\n      sub\n        /* \"#utility.yul\":2166:2198   */\n      slt\n        /* \"#utility.yul\":2163:2282   */\n      iszero\n      tag_457\n      jumpi\n        /* \"#utility.yul\":2201:2280   */\n      tag_458\n      tag_393\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":2163:2282   */\n    tag_457:\n        /* \"#utility.yul\":2321:2322   */\n      0x00\n        /* \"#utility.yul\":2346:2399   */\n      tag_459\n        /* \"#utility.yul\":2391:2398   */\n      dup5\n        /* \"#utility.yul\":2382:2388   */\n      dup3\n        /* \"#utility.yul\":2371:2380   */\n      dup6\n        /* \"#utility.yul\":2367:2389   */\n      add\n        /* \"#utility.yul\":2346:2399   */\n      tag_396\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":2336:2399   */\n      swap2\n      pop\n        /* \"#utility.yul\":2292:2409   */\n      pop\n        /* \"#utility.yul\":2087:2416   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2422:3041   */\n    tag_50:\n        /* \"#utility.yul\":2499:2505   */\n      0x00\n        /* \"#utility.yul\":2507:2513   */\n      dup1\n        /* \"#utility.yul\":2515:2521   */\n      0x00\n        /* \"#utility.yul\":2564:2566   */\n      0x60\n        /* \"#utility.yul\":2552:2561   */\n      dup5\n        /* \"#utility.yul\":2543:2550   */\n      dup7\n        /* \"#utility.yul\":2539:2562   */\n      sub\n        /* \"#utility.yul\":2535:2567   */\n      slt\n        /* \"#utility.yul\":2532:2651   */\n      iszero\n      tag_461\n      jumpi\n        /* \"#utility.yul\":2570:2649   */\n      tag_462\n      tag_393\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":2532:2651   */\n    tag_461:\n        /* \"#utility.yul\":2690:2691   */\n      0x00\n        /* \"#utility.yul\":2715:2768   */\n      tag_463\n        /* \"#utility.yul\":2760:2767   */\n      dup7\n        /* \"#utility.yul\":2751:2757   */\n      dup3\n        /* \"#utility.yul\":2740:2749   */\n      dup8\n        /* \"#utility.yul\":2736:2758   */\n      add\n        /* \"#utility.yul\":2715:2768   */\n      tag_396\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":2705:2768   */\n      swap4\n      pop\n        /* \"#utility.yul\":2661:2778   */\n      pop\n        /* \"#utility.yul\":2817:2819   */\n      0x20\n        /* \"#utility.yul\":2843:2896   */\n      tag_464\n        /* \"#utility.yul\":2888:2895   */\n      dup7\n        /* \"#utility.yul\":2879:2885   */\n      dup3\n        /* \"#utility.yul\":2868:2877   */\n      dup8\n        /* \"#utility.yul\":2864:2886   */\n      add\n        /* \"#utility.yul\":2843:2896   */\n      tag_396\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":2833:2896   */\n      swap3\n      pop\n        /* \"#utility.yul\":2788:2906   */\n      pop\n        /* \"#utility.yul\":2945:2947   */\n      0x40\n        /* \"#utility.yul\":2971:3024   */\n      tag_465\n        /* \"#utility.yul\":3016:3023   */\n      dup7\n        /* \"#utility.yul\":3007:3013   */\n      dup3\n        /* \"#utility.yul\":2996:3005   */\n      dup8\n        /* \"#utility.yul\":2992:3014   */\n      add\n        /* \"#utility.yul\":2971:3024   */\n      tag_396\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":2961:3024   */\n      swap2\n      pop\n        /* \"#utility.yul\":2916:3034   */\n      pop\n        /* \"#utility.yul\":2422:3041   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":3047:3143   */\n    tag_397:\n        /* \"#utility.yul\":3084:3091   */\n      0x00\n        /* \"#utility.yul\":3113:3137   */\n      tag_467\n        /* \"#utility.yul\":3131:3136   */\n      dup3\n        /* \"#utility.yul\":3113:3137   */\n      tag_384\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":3102:3137   */\n      swap1\n      pop\n        /* \"#utility.yul\":3047:3143   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3149:3271   */\n    tag_398:\n        /* \"#utility.yul\":3222:3246   */\n      tag_469\n        /* \"#utility.yul\":3240:3245   */\n      dup2\n        /* \"#utility.yul\":3222:3246   */\n      tag_397\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":3215:3220   */\n      dup2\n        /* \"#utility.yul\":3212:3247   */\n      eq\n        /* \"#utility.yul\":3202:3265   */\n      tag_470\n      jumpi\n        /* \"#utility.yul\":3261:3262   */\n      0x00\n        /* \"#utility.yul\":3258:3259   */\n      dup1\n        /* \"#utility.yul\":3251:3263   */\n      revert\n        /* \"#utility.yul\":3202:3265   */\n    tag_470:\n        /* \"#utility.yul\":3149:3271   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3277:3416   */\n    tag_399:\n        /* \"#utility.yul\":3323:3328   */\n      0x00\n        /* \"#utility.yul\":3361:3367   */\n      dup2\n        /* \"#utility.yul\":3348:3368   */\n      calldataload\n        /* \"#utility.yul\":3339:3368   */\n      swap1\n      pop\n        /* \"#utility.yul\":3377:3410   */\n      tag_472\n        /* \"#utility.yul\":3404:3409   */\n      dup2\n        /* \"#utility.yul\":3377:3410   */\n      tag_398\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":3277:3416   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3422:3751   */\n    tag_55:\n        /* \"#utility.yul\":3481:3487   */\n      0x00\n        /* \"#utility.yul\":3530:3532   */\n      0x20\n        /* \"#utility.yul\":3518:3527   */\n      dup3\n        /* \"#utility.yul\":3509:3516   */\n      dup5\n        /* \"#utility.yul\":3505:3528   */\n      sub\n        /* \"#utility.yul\":3501:3533   */\n      slt\n        /* \"#utility.yul\":3498:3617   */\n      iszero\n      tag_474\n      jumpi\n        /* \"#utility.yul\":3536:3615   */\n      tag_475\n      tag_393\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":3498:3617   */\n    tag_474:\n        /* \"#utility.yul\":3656:3657   */\n      0x00\n        /* \"#utility.yul\":3681:3734   */\n      tag_476\n        /* \"#utility.yul\":3726:3733   */\n      dup5\n        /* \"#utility.yul\":3717:3723   */\n      dup3\n        /* \"#utility.yul\":3706:3715   */\n      dup6\n        /* \"#utility.yul\":3702:3724   */\n      add\n        /* \"#utility.yul\":3681:3734   */\n      tag_399\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":3671:3734   */\n      swap2\n      pop\n        /* \"#utility.yul\":3627:3744   */\n      pop\n        /* \"#utility.yul\":3422:3751   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3757:4089   */\n    tag_62:\n        /* \"#utility.yul\":3878:3882   */\n      0x00\n        /* \"#utility.yul\":3916:3918   */\n      0x40\n        /* \"#utility.yul\":3905:3914   */\n      dup3\n        /* \"#utility.yul\":3901:3919   */\n      add\n        /* \"#utility.yul\":3893:3919   */\n      swap1\n      pop\n        /* \"#utility.yul\":3929:4000   */\n      tag_478\n        /* \"#utility.yul\":3997:3998   */\n      0x00\n        /* \"#utility.yul\":3986:3995   */\n      dup4\n        /* \"#utility.yul\":3982:3999   */\n      add\n        /* \"#utility.yul\":3973:3979   */\n      dup6\n        /* \"#utility.yul\":3929:4000   */\n      tag_391\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":4010:4082   */\n      tag_479\n        /* \"#utility.yul\":4078:4080   */\n      0x20\n        /* \"#utility.yul\":4067:4076   */\n      dup4\n        /* \"#utility.yul\":4063:4081   */\n      add\n        /* \"#utility.yul\":4054:4060   */\n      dup5\n        /* \"#utility.yul\":4010:4082   */\n      tag_391\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":3757:4089   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4095:4569   */\n    tag_77:\n        /* \"#utility.yul\":4163:4169   */\n      0x00\n        /* \"#utility.yul\":4171:4177   */\n      dup1\n        /* \"#utility.yul\":4220:4222   */\n      0x40\n        /* \"#utility.yul\":4208:4217   */\n      dup4\n        /* \"#utility.yul\":4199:4206   */\n      dup6\n        /* \"#utility.yul\":4195:4218   */\n      sub\n        /* \"#utility.yul\":4191:4223   */\n      slt\n        /* \"#utility.yul\":4188:4307   */\n      iszero\n      tag_481\n      jumpi\n        /* \"#utility.yul\":4226:4305   */\n      tag_482\n      tag_393\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":4188:4307   */\n    tag_481:\n        /* \"#utility.yul\":4346:4347   */\n      0x00\n        /* \"#utility.yul\":4371:4424   */\n      tag_483\n        /* \"#utility.yul\":4416:4423   */\n      dup6\n        /* \"#utility.yul\":4407:4413   */\n      dup3\n        /* \"#utility.yul\":4396:4405   */\n      dup7\n        /* \"#utility.yul\":4392:4414   */\n      add\n        /* \"#utility.yul\":4371:4424   */\n      tag_396\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":4361:4424   */\n      swap3\n      pop\n        /* \"#utility.yul\":4317:4434   */\n      pop\n        /* \"#utility.yul\":4473:4475   */\n      0x20\n        /* \"#utility.yul\":4499:4552   */\n      tag_484\n        /* \"#utility.yul\":4544:4551   */\n      dup6\n        /* \"#utility.yul\":4535:4541   */\n      dup3\n        /* \"#utility.yul\":4524:4533   */\n      dup7\n        /* \"#utility.yul\":4520:4542   */\n      add\n        /* \"#utility.yul\":4499:4552   */\n      tag_396\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":4489:4552   */\n      swap2\n      pop\n        /* \"#utility.yul\":4444:4562   */\n      pop\n        /* \"#utility.yul\":4095:4569   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4575:5049   */\n    tag_85:\n        /* \"#utility.yul\":4643:4649   */\n      0x00\n        /* \"#utility.yul\":4651:4657   */\n      dup1\n        /* \"#utility.yul\":4700:4702   */\n      0x40\n        /* \"#utility.yul\":4688:4697   */\n      dup4\n        /* \"#utility.yul\":4679:4686   */\n      dup6\n        /* \"#utility.yul\":4675:4698   */\n      sub\n        /* \"#utility.yul\":4671:4703   */\n      slt\n        /* \"#utility.yul\":4668:4787   */\n      iszero\n      tag_486\n      jumpi\n        /* \"#utility.yul\":4706:4785   */\n      tag_487\n      tag_393\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":4668:4787   */\n    tag_486:\n        /* \"#utility.yul\":4826:4827   */\n      0x00\n        /* \"#utility.yul\":4851:4904   */\n      tag_488\n        /* \"#utility.yul\":4896:4903   */\n      dup6\n        /* \"#utility.yul\":4887:4893   */\n      dup3\n        /* \"#utility.yul\":4876:4885   */\n      dup7\n        /* \"#utility.yul\":4872:4894   */\n      add\n        /* \"#utility.yul\":4851:4904   */\n      tag_399\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":4841:4904   */\n      swap3\n      pop\n        /* \"#utility.yul\":4797:4914   */\n      pop\n        /* \"#utility.yul\":4953:4955   */\n      0x20\n        /* \"#utility.yul\":4979:5032   */\n      tag_489\n        /* \"#utility.yul\":5024:5031   */\n      dup6\n        /* \"#utility.yul\":5015:5021   */\n      dup3\n        /* \"#utility.yul\":5004:5013   */\n      dup7\n        /* \"#utility.yul\":5000:5022   */\n      add\n        /* \"#utility.yul\":4979:5032   */\n      tag_396\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":4969:5032   */\n      swap2\n      pop\n        /* \"#utility.yul\":4924:5042   */\n      pop\n        /* \"#utility.yul\":4575:5049   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5055:5173   */\n    tag_400:\n        /* \"#utility.yul\":5142:5166   */\n      tag_491\n        /* \"#utility.yul\":5160:5165   */\n      dup2\n        /* \"#utility.yul\":5142:5166   */\n      tag_397\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":5137:5140   */\n      dup3\n        /* \"#utility.yul\":5130:5167   */\n      mstore\n        /* \"#utility.yul\":5055:5173   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5179:5621   */\n    tag_104:\n        /* \"#utility.yul\":5328:5332   */\n      0x00\n        /* \"#utility.yul\":5366:5368   */\n      0x60\n        /* \"#utility.yul\":5355:5364   */\n      dup3\n        /* \"#utility.yul\":5351:5369   */\n      add\n        /* \"#utility.yul\":5343:5369   */\n      swap1\n      pop\n        /* \"#utility.yul\":5379:5450   */\n      tag_493\n        /* \"#utility.yul\":5447:5448   */\n      0x00\n        /* \"#utility.yul\":5436:5445   */\n      dup4\n        /* \"#utility.yul\":5432:5449   */\n      add\n        /* \"#utility.yul\":5423:5429   */\n      dup7\n        /* \"#utility.yul\":5379:5450   */\n      tag_400\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":5460:5532   */\n      tag_494\n        /* \"#utility.yul\":5528:5530   */\n      0x20\n        /* \"#utility.yul\":5517:5526   */\n      dup4\n        /* \"#utility.yul\":5513:5531   */\n      add\n        /* \"#utility.yul\":5504:5510   */\n      dup6\n        /* \"#utility.yul\":5460:5532   */\n      tag_400\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":5542:5614   */\n      tag_495\n        /* \"#utility.yul\":5610:5612   */\n      0x40\n        /* \"#utility.yul\":5599:5608   */\n      dup4\n        /* \"#utility.yul\":5595:5613   */\n      add\n        /* \"#utility.yul\":5586:5592   */\n      dup5\n        /* \"#utility.yul\":5542:5614   */\n      tag_391\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":5179:5621   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5627:5717   */\n    tag_401:\n        /* \"#utility.yul\":5661:5668   */\n      0x00\n        /* \"#utility.yul\":5704:5709   */\n      dup2\n        /* \"#utility.yul\":5697:5710   */\n      iszero\n        /* \"#utility.yul\":5690:5711   */\n      iszero\n        /* \"#utility.yul\":5679:5711   */\n      swap1\n      pop\n        /* \"#utility.yul\":5627:5717   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5723:5839   */\n    tag_402:\n        /* \"#utility.yul\":5793:5814   */\n      tag_498\n        /* \"#utility.yul\":5808:5813   */\n      dup2\n        /* \"#utility.yul\":5793:5814   */\n      tag_401\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":5786:5791   */\n      dup2\n        /* \"#utility.yul\":5783:5815   */\n      eq\n        /* \"#utility.yul\":5773:5833   */\n      tag_499\n      jumpi\n        /* \"#utility.yul\":5829:5830   */\n      0x00\n        /* \"#utility.yul\":5826:5827   */\n      dup1\n        /* \"#utility.yul\":5819:5831   */\n      revert\n        /* \"#utility.yul\":5773:5833   */\n    tag_499:\n        /* \"#utility.yul\":5723:5839   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5845:5982   */\n    tag_403:\n        /* \"#utility.yul\":5899:5904   */\n      0x00\n        /* \"#utility.yul\":5930:5936   */\n      dup2\n        /* \"#utility.yul\":5924:5937   */\n      mload\n        /* \"#utility.yul\":5915:5937   */\n      swap1\n      pop\n        /* \"#utility.yul\":5946:5976   */\n      tag_501\n        /* \"#utility.yul\":5970:5975   */\n      dup2\n        /* \"#utility.yul\":5946:5976   */\n      tag_402\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":5845:5982   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5988:6333   */\n    tag_108:\n        /* \"#utility.yul\":6055:6061   */\n      0x00\n        /* \"#utility.yul\":6104:6106   */\n      0x20\n        /* \"#utility.yul\":6092:6101   */\n      dup3\n        /* \"#utility.yul\":6083:6090   */\n      dup5\n        /* \"#utility.yul\":6079:6102   */\n      sub\n        /* \"#utility.yul\":6075:6107   */\n      slt\n        /* \"#utility.yul\":6072:6191   */\n      iszero\n      tag_503\n      jumpi\n        /* \"#utility.yul\":6110:6189   */\n      tag_504\n      tag_393\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":6072:6191   */\n    tag_503:\n        /* \"#utility.yul\":6230:6231   */\n      0x00\n        /* \"#utility.yul\":6255:6316   */\n      tag_505\n        /* \"#utility.yul\":6308:6315   */\n      dup5\n        /* \"#utility.yul\":6299:6305   */\n      dup3\n        /* \"#utility.yul\":6288:6297   */\n      dup6\n        /* \"#utility.yul\":6284:6306   */\n      add\n        /* \"#utility.yul\":6255:6316   */\n      tag_403\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":6245:6316   */\n      swap2\n      pop\n        /* \"#utility.yul\":6201:6326   */\n      pop\n        /* \"#utility.yul\":5988:6333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6339:6519   */\n    tag_404:\n        /* \"#utility.yul\":6387:6464   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6384:6385   */\n      0x00\n        /* \"#utility.yul\":6377:6465   */\n      mstore\n        /* \"#utility.yul\":6484:6488   */\n      0x11\n        /* \"#utility.yul\":6481:6482   */\n      0x04\n        /* \"#utility.yul\":6474:6489   */\n      mstore\n        /* \"#utility.yul\":6508:6512   */\n      0x24\n        /* \"#utility.yul\":6505:6506   */\n      0x00\n        /* \"#utility.yul\":6498:6513   */\n      revert\n        /* \"#utility.yul\":6525:6935   */\n    tag_110:\n        /* \"#utility.yul\":6565:6572   */\n      0x00\n        /* \"#utility.yul\":6588:6608   */\n      tag_508\n        /* \"#utility.yul\":6606:6607   */\n      dup3\n        /* \"#utility.yul\":6588:6608   */\n      tag_390\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":6583:6608   */\n      swap2\n      pop\n        /* \"#utility.yul\":6622:6642   */\n      tag_509\n        /* \"#utility.yul\":6640:6641   */\n      dup4\n        /* \"#utility.yul\":6622:6642   */\n      tag_390\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":6617:6642   */\n      swap3\n      pop\n        /* \"#utility.yul\":6677:6678   */\n      dup3\n        /* \"#utility.yul\":6674:6675   */\n      dup3\n        /* \"#utility.yul\":6670:6679   */\n      mul\n        /* \"#utility.yul\":6699:6729   */\n      tag_510\n        /* \"#utility.yul\":6717:6728   */\n      dup2\n        /* \"#utility.yul\":6699:6729   */\n      tag_390\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":6688:6729   */\n      swap2\n      pop\n        /* \"#utility.yul\":6878:6879   */\n      dup3\n        /* \"#utility.yul\":6869:6876   */\n      dup3\n        /* \"#utility.yul\":6865:6880   */\n      div\n        /* \"#utility.yul\":6862:6863   */\n      dup5\n        /* \"#utility.yul\":6859:6881   */\n      eq\n        /* \"#utility.yul\":6839:6840   */\n      dup4\n        /* \"#utility.yul\":6832:6841   */\n      iszero\n        /* \"#utility.yul\":6812:6895   */\n      or\n        /* \"#utility.yul\":6789:6928   */\n      tag_511\n      jumpi\n        /* \"#utility.yul\":6908:6926   */\n      tag_512\n      tag_404\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":6789:6928   */\n    tag_511:\n        /* \"#utility.yul\":6573:6935   */\n      pop\n        /* \"#utility.yul\":6525:6935   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6941:7121   */\n    tag_405:\n        /* \"#utility.yul\":6989:7066   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6986:6987   */\n      0x00\n        /* \"#utility.yul\":6979:7067   */\n      mstore\n        /* \"#utility.yul\":7086:7090   */\n      0x12\n        /* \"#utility.yul\":7083:7084   */\n      0x04\n        /* \"#utility.yul\":7076:7091   */\n      mstore\n        /* \"#utility.yul\":7110:7114   */\n      0x24\n        /* \"#utility.yul\":7107:7108   */\n      0x00\n        /* \"#utility.yul\":7100:7115   */\n      revert\n        /* \"#utility.yul\":7127:7312   */\n    tag_112:\n        /* \"#utility.yul\":7167:7168   */\n      0x00\n        /* \"#utility.yul\":7184:7204   */\n      tag_515\n        /* \"#utility.yul\":7202:7203   */\n      dup3\n        /* \"#utility.yul\":7184:7204   */\n      tag_390\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":7179:7204   */\n      swap2\n      pop\n        /* \"#utility.yul\":7218:7238   */\n      tag_516\n        /* \"#utility.yul\":7236:7237   */\n      dup4\n        /* \"#utility.yul\":7218:7238   */\n      tag_390\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":7213:7238   */\n      swap3\n      pop\n        /* \"#utility.yul\":7257:7258   */\n      dup3\n        /* \"#utility.yul\":7247:7282   */\n      tag_517\n      jumpi\n        /* \"#utility.yul\":7262:7280   */\n      tag_518\n      tag_405\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":7247:7282   */\n    tag_517:\n        /* \"#utility.yul\":7304:7305   */\n      dup3\n        /* \"#utility.yul\":7301:7302   */\n      dup3\n        /* \"#utility.yul\":7297:7306   */\n      div\n        /* \"#utility.yul\":7292:7306   */\n      swap1\n      pop\n        /* \"#utility.yul\":7127:7312   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7318:7509   */\n    tag_114:\n        /* \"#utility.yul\":7358:7361   */\n      0x00\n        /* \"#utility.yul\":7377:7397   */\n      tag_520\n        /* \"#utility.yul\":7395:7396   */\n      dup3\n        /* \"#utility.yul\":7377:7397   */\n      tag_390\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":7372:7397   */\n      swap2\n      pop\n        /* \"#utility.yul\":7411:7431   */\n      tag_521\n        /* \"#utility.yul\":7429:7430   */\n      dup4\n        /* \"#utility.yul\":7411:7431   */\n      tag_390\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":7406:7431   */\n      swap3\n      pop\n        /* \"#utility.yul\":7454:7455   */\n      dup3\n        /* \"#utility.yul\":7451:7452   */\n      dup3\n        /* \"#utility.yul\":7447:7456   */\n      add\n        /* \"#utility.yul\":7440:7456   */\n      swap1\n      pop\n        /* \"#utility.yul\":7475:7478   */\n      dup1\n        /* \"#utility.yul\":7472:7473   */\n      dup3\n        /* \"#utility.yul\":7469:7479   */\n      gt\n        /* \"#utility.yul\":7466:7502   */\n      iszero\n      tag_522\n      jumpi\n        /* \"#utility.yul\":7482:7500   */\n      tag_523\n      tag_404\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":7466:7502   */\n    tag_522:\n        /* \"#utility.yul\":7318:7509   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7515:7684   */\n    tag_406:\n        /* \"#utility.yul\":7599:7610   */\n      0x00\n        /* \"#utility.yul\":7633:7639   */\n      dup3\n        /* \"#utility.yul\":7628:7631   */\n      dup3\n        /* \"#utility.yul\":7621:7640   */\n      mstore\n        /* \"#utility.yul\":7673:7677   */\n      0x20\n        /* \"#utility.yul\":7668:7671   */\n      dup3\n        /* \"#utility.yul\":7664:7678   */\n      add\n        /* \"#utility.yul\":7649:7678   */\n      swap1\n      pop\n        /* \"#utility.yul\":7515:7684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7690:7866   */\n    tag_407:\n        /* \"#utility.yul\":7830:7858   */\n      0x496e73756666696369656e74206f757470757420616d6f756e74000000000000\n        /* \"#utility.yul\":7826:7827   */\n      0x00\n        /* \"#utility.yul\":7818:7824   */\n      dup3\n        /* \"#utility.yul\":7814:7828   */\n      add\n        /* \"#utility.yul\":7807:7859   */\n      mstore\n        /* \"#utility.yul\":7690:7866   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7872:8238   */\n    tag_408:\n        /* \"#utility.yul\":8014:8017   */\n      0x00\n        /* \"#utility.yul\":8035:8102   */\n      tag_527\n        /* \"#utility.yul\":8099:8101   */\n      0x1a\n        /* \"#utility.yul\":8094:8097   */\n      dup4\n        /* \"#utility.yul\":8035:8102   */\n      tag_406\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":8028:8102   */\n      swap2\n      pop\n        /* \"#utility.yul\":8111:8204   */\n      tag_528\n        /* \"#utility.yul\":8200:8203   */\n      dup3\n        /* \"#utility.yul\":8111:8204   */\n      tag_407\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":8229:8231   */\n      0x20\n        /* \"#utility.yul\":8224:8227   */\n      dup3\n        /* \"#utility.yul\":8220:8232   */\n      add\n        /* \"#utility.yul\":8213:8232   */\n      swap1\n      pop\n        /* \"#utility.yul\":7872:8238   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8244:8663   */\n    tag_119:\n        /* \"#utility.yul\":8410:8414   */\n      0x00\n        /* \"#utility.yul\":8448:8450   */\n      0x20\n        /* \"#utility.yul\":8437:8446   */\n      dup3\n        /* \"#utility.yul\":8433:8451   */\n      add\n        /* \"#utility.yul\":8425:8451   */\n      swap1\n      pop\n        /* \"#utility.yul\":8497:8506   */\n      dup2\n        /* \"#utility.yul\":8491:8495   */\n      dup2\n        /* \"#utility.yul\":8487:8507   */\n      sub\n        /* \"#utility.yul\":8483:8484   */\n      0x00\n        /* \"#utility.yul\":8472:8481   */\n      dup4\n        /* \"#utility.yul\":8468:8485   */\n      add\n        /* \"#utility.yul\":8461:8508   */\n      mstore\n        /* \"#utility.yul\":8525:8656   */\n      tag_530\n        /* \"#utility.yul\":8651:8655   */\n      dup2\n        /* \"#utility.yul\":8525:8656   */\n      tag_408\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":8517:8656   */\n      swap1\n      pop\n        /* \"#utility.yul\":8244:8663   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8669:9001   */\n    tag_127:\n        /* \"#utility.yul\":8790:8794   */\n      0x00\n        /* \"#utility.yul\":8828:8830   */\n      0x40\n        /* \"#utility.yul\":8817:8826   */\n      dup3\n        /* \"#utility.yul\":8813:8831   */\n      add\n        /* \"#utility.yul\":8805:8831   */\n      swap1\n      pop\n        /* \"#utility.yul\":8841:8912   */\n      tag_532\n        /* \"#utility.yul\":8909:8910   */\n      0x00\n        /* \"#utility.yul\":8898:8907   */\n      dup4\n        /* \"#utility.yul\":8894:8911   */\n      add\n        /* \"#utility.yul\":8885:8891   */\n      dup6\n        /* \"#utility.yul\":8841:8912   */\n      tag_400\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":8922:8994   */\n      tag_533\n        /* \"#utility.yul\":8990:8992   */\n      0x20\n        /* \"#utility.yul\":8979:8988   */\n      dup4\n        /* \"#utility.yul\":8975:8993   */\n      add\n        /* \"#utility.yul\":8966:8972   */\n      dup5\n        /* \"#utility.yul\":8922:8994   */\n      tag_391\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":8669:9001   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9007:9229   */\n    tag_133:\n        /* \"#utility.yul\":9100:9104   */\n      0x00\n        /* \"#utility.yul\":9138:9140   */\n      0x20\n        /* \"#utility.yul\":9127:9136   */\n      dup3\n        /* \"#utility.yul\":9123:9141   */\n      add\n        /* \"#utility.yul\":9115:9141   */\n      swap1\n      pop\n        /* \"#utility.yul\":9151:9222   */\n      tag_535\n        /* \"#utility.yul\":9219:9220   */\n      0x00\n        /* \"#utility.yul\":9208:9217   */\n      dup4\n        /* \"#utility.yul\":9204:9221   */\n      add\n        /* \"#utility.yul\":9195:9201   */\n      dup5\n        /* \"#utility.yul\":9151:9222   */\n      tag_400\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":9007:9229   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9235:9378   */\n    tag_409:\n        /* \"#utility.yul\":9292:9297   */\n      0x00\n        /* \"#utility.yul\":9323:9329   */\n      dup2\n        /* \"#utility.yul\":9317:9330   */\n      mload\n        /* \"#utility.yul\":9308:9330   */\n      swap1\n      pop\n        /* \"#utility.yul\":9339:9372   */\n      tag_537\n        /* \"#utility.yul\":9366:9371   */\n      dup2\n        /* \"#utility.yul\":9339:9372   */\n      tag_395\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":9235:9378   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9384:9735   */\n    tag_137:\n        /* \"#utility.yul\":9454:9460   */\n      0x00\n        /* \"#utility.yul\":9503:9505   */\n      0x20\n        /* \"#utility.yul\":9491:9500   */\n      dup3\n        /* \"#utility.yul\":9482:9489   */\n      dup5\n        /* \"#utility.yul\":9478:9501   */\n      sub\n        /* \"#utility.yul\":9474:9506   */\n      slt\n        /* \"#utility.yul\":9471:9590   */\n      iszero\n      tag_539\n      jumpi\n        /* \"#utility.yul\":9509:9588   */\n      tag_540\n      tag_393\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":9471:9590   */\n    tag_539:\n        /* \"#utility.yul\":9629:9630   */\n      0x00\n        /* \"#utility.yul\":9654:9718   */\n      tag_541\n        /* \"#utility.yul\":9710:9717   */\n      dup5\n        /* \"#utility.yul\":9701:9707   */\n      dup3\n        /* \"#utility.yul\":9690:9699   */\n      dup6\n        /* \"#utility.yul\":9686:9708   */\n      add\n        /* \"#utility.yul\":9654:9718   */\n      tag_409\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":9644:9718   */\n      swap2\n      pop\n        /* \"#utility.yul\":9600:9728   */\n      pop\n        /* \"#utility.yul\":9384:9735   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9741:9907   */\n    tag_410:\n        /* \"#utility.yul\":9881:9899   */\n      0x496e76616c696420726573657276657300000000000000000000000000000000\n        /* \"#utility.yul\":9877:9878   */\n      0x00\n        /* \"#utility.yul\":9869:9875   */\n      dup3\n        /* \"#utility.yul\":9865:9879   */\n      add\n        /* \"#utility.yul\":9858:9900   */\n      mstore\n        /* \"#utility.yul\":9741:9907   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9913:10279   */\n    tag_411:\n        /* \"#utility.yul\":10055:10058   */\n      0x00\n        /* \"#utility.yul\":10076:10143   */\n      tag_544\n        /* \"#utility.yul\":10140:10142   */\n      0x10\n        /* \"#utility.yul\":10135:10138   */\n      dup4\n        /* \"#utility.yul\":10076:10143   */\n      tag_406\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":10069:10143   */\n      swap2\n      pop\n        /* \"#utility.yul\":10152:10245   */\n      tag_545\n        /* \"#utility.yul\":10241:10244   */\n      dup3\n        /* \"#utility.yul\":10152:10245   */\n      tag_410\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":10270:10272   */\n      0x20\n        /* \"#utility.yul\":10265:10268   */\n      dup3\n        /* \"#utility.yul\":10261:10273   */\n      add\n        /* \"#utility.yul\":10254:10273   */\n      swap1\n      pop\n        /* \"#utility.yul\":9913:10279   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10285:10704   */\n    tag_148:\n        /* \"#utility.yul\":10451:10455   */\n      0x00\n        /* \"#utility.yul\":10489:10491   */\n      0x20\n        /* \"#utility.yul\":10478:10487   */\n      dup3\n        /* \"#utility.yul\":10474:10492   */\n      add\n        /* \"#utility.yul\":10466:10492   */\n      swap1\n      pop\n        /* \"#utility.yul\":10538:10547   */\n      dup2\n        /* \"#utility.yul\":10532:10536   */\n      dup2\n        /* \"#utility.yul\":10528:10548   */\n      sub\n        /* \"#utility.yul\":10524:10525   */\n      0x00\n        /* \"#utility.yul\":10513:10522   */\n      dup4\n        /* \"#utility.yul\":10509:10526   */\n      add\n        /* \"#utility.yul\":10502:10549   */\n      mstore\n        /* \"#utility.yul\":10566:10697   */\n      tag_547\n        /* \"#utility.yul\":10692:10696   */\n      dup2\n        /* \"#utility.yul\":10566:10697   */\n      tag_411\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":10558:10697   */\n      swap1\n      pop\n        /* \"#utility.yul\":10285:10704   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10710:10904   */\n    tag_167:\n        /* \"#utility.yul\":10750:10754   */\n      0x00\n        /* \"#utility.yul\":10770:10790   */\n      tag_549\n        /* \"#utility.yul\":10788:10789   */\n      dup3\n        /* \"#utility.yul\":10770:10790   */\n      tag_390\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":10765:10790   */\n      swap2\n      pop\n        /* \"#utility.yul\":10804:10824   */\n      tag_550\n        /* \"#utility.yul\":10822:10823   */\n      dup4\n        /* \"#utility.yul\":10804:10824   */\n      tag_390\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":10799:10824   */\n      swap3\n      pop\n        /* \"#utility.yul\":10848:10849   */\n      dup3\n        /* \"#utility.yul\":10845:10846   */\n      dup3\n        /* \"#utility.yul\":10841:10850   */\n      sub\n        /* \"#utility.yul\":10833:10850   */\n      swap1\n      pop\n        /* \"#utility.yul\":10872:10873   */\n      dup2\n        /* \"#utility.yul\":10866:10870   */\n      dup2\n        /* \"#utility.yul\":10863:10874   */\n      gt\n        /* \"#utility.yul\":10860:10897   */\n      iszero\n      tag_551\n      jumpi\n        /* \"#utility.yul\":10877:10895   */\n      tag_552\n      tag_404\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":10860:10897   */\n    tag_551:\n        /* \"#utility.yul\":10710:10904   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10910:11068   */\n    tag_412:\n        /* \"#utility.yul\":11050:11060   */\n      0x536c69704c6f636b000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11046:11047   */\n      0x00\n        /* \"#utility.yul\":11038:11044   */\n      dup3\n        /* \"#utility.yul\":11034:11048   */\n      add\n        /* \"#utility.yul\":11027:11061   */\n      mstore\n        /* \"#utility.yul\":10910:11068   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11074:11439   */\n    tag_413:\n        /* \"#utility.yul\":11216:11219   */\n      0x00\n        /* \"#utility.yul\":11237:11303   */\n      tag_555\n        /* \"#utility.yul\":11301:11302   */\n      0x08\n        /* \"#utility.yul\":11296:11299   */\n      dup4\n        /* \"#utility.yul\":11237:11303   */\n      tag_406\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":11230:11303   */\n      swap2\n      pop\n        /* \"#utility.yul\":11312:11405   */\n      tag_556\n        /* \"#utility.yul\":11401:11404   */\n      dup3\n        /* \"#utility.yul\":11312:11405   */\n      tag_412\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":11430:11432   */\n      0x20\n        /* \"#utility.yul\":11425:11428   */\n      dup3\n        /* \"#utility.yul\":11421:11433   */\n      add\n        /* \"#utility.yul\":11414:11433   */\n      swap1\n      pop\n        /* \"#utility.yul\":11074:11439   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11445:11864   */\n    tag_172:\n        /* \"#utility.yul\":11611:11615   */\n      0x00\n        /* \"#utility.yul\":11649:11651   */\n      0x20\n        /* \"#utility.yul\":11638:11647   */\n      dup3\n        /* \"#utility.yul\":11634:11652   */\n      add\n        /* \"#utility.yul\":11626:11652   */\n      swap1\n      pop\n        /* \"#utility.yul\":11698:11707   */\n      dup2\n        /* \"#utility.yul\":11692:11696   */\n      dup2\n        /* \"#utility.yul\":11688:11708   */\n      sub\n        /* \"#utility.yul\":11684:11685   */\n      0x00\n        /* \"#utility.yul\":11673:11682   */\n      dup4\n        /* \"#utility.yul\":11669:11686   */\n      add\n        /* \"#utility.yul\":11662:11709   */\n      mstore\n        /* \"#utility.yul\":11726:11857   */\n      tag_558\n        /* \"#utility.yul\":11852:11856   */\n      dup2\n        /* \"#utility.yul\":11726:11857   */\n      tag_413\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":11718:11857   */\n      swap1\n      pop\n        /* \"#utility.yul\":11445:11864   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11870:12040   */\n    tag_414:\n        /* \"#utility.yul\":12010:12032   */\n      0x496e73756666696369656e742062616c616e6365000000000000000000000000\n        /* \"#utility.yul\":12006:12007   */\n      0x00\n        /* \"#utility.yul\":11998:12004   */\n      dup3\n        /* \"#utility.yul\":11994:12008   */\n      add\n        /* \"#utility.yul\":11987:12033   */\n      mstore\n        /* \"#utility.yul\":11870:12040   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12046:12412   */\n    tag_415:\n        /* \"#utility.yul\":12188:12191   */\n      0x00\n        /* \"#utility.yul\":12209:12276   */\n      tag_561\n        /* \"#utility.yul\":12273:12275   */\n      0x14\n        /* \"#utility.yul\":12268:12271   */\n      dup4\n        /* \"#utility.yul\":12209:12276   */\n      tag_406\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":12202:12276   */\n      swap2\n      pop\n        /* \"#utility.yul\":12285:12378   */\n      tag_562\n        /* \"#utility.yul\":12374:12377   */\n      dup3\n        /* \"#utility.yul\":12285:12378   */\n      tag_414\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":12403:12405   */\n      0x20\n        /* \"#utility.yul\":12398:12401   */\n      dup3\n        /* \"#utility.yul\":12394:12406   */\n      add\n        /* \"#utility.yul\":12387:12406   */\n      swap1\n      pop\n        /* \"#utility.yul\":12046:12412   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12418:12837   */\n    tag_235:\n        /* \"#utility.yul\":12584:12588   */\n      0x00\n        /* \"#utility.yul\":12622:12624   */\n      0x20\n        /* \"#utility.yul\":12611:12620   */\n      dup3\n        /* \"#utility.yul\":12607:12625   */\n      add\n        /* \"#utility.yul\":12599:12625   */\n      swap1\n      pop\n        /* \"#utility.yul\":12671:12680   */\n      dup2\n        /* \"#utility.yul\":12665:12669   */\n      dup2\n        /* \"#utility.yul\":12661:12681   */\n      sub\n        /* \"#utility.yul\":12657:12658   */\n      0x00\n        /* \"#utility.yul\":12646:12655   */\n      dup4\n        /* \"#utility.yul\":12642:12659   */\n      add\n        /* \"#utility.yul\":12635:12682   */\n      mstore\n        /* \"#utility.yul\":12699:12830   */\n      tag_564\n        /* \"#utility.yul\":12825:12829   */\n      dup2\n        /* \"#utility.yul\":12699:12830   */\n      tag_415\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":12691:12830   */\n      swap1\n      pop\n        /* \"#utility.yul\":12418:12837   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12843:13016   */\n    tag_416:\n        /* \"#utility.yul\":12983:13008   */\n      0x496e76616c6964206c697175696469747920726174696f000000000000000000\n        /* \"#utility.yul\":12979:12980   */\n      0x00\n        /* \"#utility.yul\":12971:12977   */\n      dup3\n        /* \"#utility.yul\":12967:12981   */\n      add\n        /* \"#utility.yul\":12960:13009   */\n      mstore\n        /* \"#utility.yul\":12843:13016   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13022:13388   */\n    tag_417:\n        /* \"#utility.yul\":13164:13167   */\n      0x00\n        /* \"#utility.yul\":13185:13252   */\n      tag_567\n        /* \"#utility.yul\":13249:13251   */\n      0x17\n        /* \"#utility.yul\":13244:13247   */\n      dup4\n        /* \"#utility.yul\":13185:13252   */\n      tag_406\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":13178:13252   */\n      swap2\n      pop\n        /* \"#utility.yul\":13261:13354   */\n      tag_568\n        /* \"#utility.yul\":13350:13353   */\n      dup3\n        /* \"#utility.yul\":13261:13354   */\n      tag_416\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":13379:13381   */\n      0x20\n        /* \"#utility.yul\":13374:13377   */\n      dup3\n        /* \"#utility.yul\":13370:13382   */\n      add\n        /* \"#utility.yul\":13363:13382   */\n      swap1\n      pop\n        /* \"#utility.yul\":13022:13388   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13394:13813   */\n    tag_252:\n        /* \"#utility.yul\":13560:13564   */\n      0x00\n        /* \"#utility.yul\":13598:13600   */\n      0x20\n        /* \"#utility.yul\":13587:13596   */\n      dup3\n        /* \"#utility.yul\":13583:13601   */\n      add\n        /* \"#utility.yul\":13575:13601   */\n      swap1\n      pop\n        /* \"#utility.yul\":13647:13656   */\n      dup2\n        /* \"#utility.yul\":13641:13645   */\n      dup2\n        /* \"#utility.yul\":13637:13657   */\n      sub\n        /* \"#utility.yul\":13633:13634   */\n      0x00\n        /* \"#utility.yul\":13622:13631   */\n      dup4\n        /* \"#utility.yul\":13618:13635   */\n      add\n        /* \"#utility.yul\":13611:13658   */\n      mstore\n        /* \"#utility.yul\":13675:13806   */\n      tag_570\n        /* \"#utility.yul\":13801:13805   */\n      dup2\n        /* \"#utility.yul\":13675:13806   */\n      tag_417\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":13667:13806   */\n      swap1\n      pop\n        /* \"#utility.yul\":13394:13813   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13819:13979   */\n    tag_418:\n        /* \"#utility.yul\":13959:13971   */\n      0x736861726573203d203000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13955:13956   */\n      0x00\n        /* \"#utility.yul\":13947:13953   */\n      dup3\n        /* \"#utility.yul\":13943:13957   */\n      add\n        /* \"#utility.yul\":13936:13972   */\n      mstore\n        /* \"#utility.yul\":13819:13979   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13985:14351   */\n    tag_419:\n        /* \"#utility.yul\":14127:14130   */\n      0x00\n        /* \"#utility.yul\":14148:14215   */\n      tag_573\n        /* \"#utility.yul\":14212:14214   */\n      0x0a\n        /* \"#utility.yul\":14207:14210   */\n      dup4\n        /* \"#utility.yul\":14148:14215   */\n      tag_406\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":14141:14215   */\n      swap2\n      pop\n        /* \"#utility.yul\":14224:14317   */\n      tag_574\n        /* \"#utility.yul\":14313:14316   */\n      dup3\n        /* \"#utility.yul\":14224:14317   */\n      tag_418\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":14342:14344   */\n      0x20\n        /* \"#utility.yul\":14337:14340   */\n      dup3\n        /* \"#utility.yul\":14333:14345   */\n      add\n        /* \"#utility.yul\":14326:14345   */\n      swap1\n      pop\n        /* \"#utility.yul\":13985:14351   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14357:14776   */\n    tag_266:\n        /* \"#utility.yul\":14523:14527   */\n      0x00\n        /* \"#utility.yul\":14561:14563   */\n      0x20\n        /* \"#utility.yul\":14550:14559   */\n      dup3\n        /* \"#utility.yul\":14546:14564   */\n      add\n        /* \"#utility.yul\":14538:14564   */\n      swap1\n      pop\n        /* \"#utility.yul\":14610:14619   */\n      dup2\n        /* \"#utility.yul\":14604:14608   */\n      dup2\n        /* \"#utility.yul\":14600:14620   */\n      sub\n        /* \"#utility.yul\":14596:14597   */\n      0x00\n        /* \"#utility.yul\":14585:14594   */\n      dup4\n        /* \"#utility.yul\":14581:14598   */\n      add\n        /* \"#utility.yul\":14574:14621   */\n      mstore\n        /* \"#utility.yul\":14638:14769   */\n      tag_576\n        /* \"#utility.yul\":14764:14768   */\n      dup2\n        /* \"#utility.yul\":14638:14769   */\n      tag_419\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":14630:14769   */\n      swap1\n      pop\n        /* \"#utility.yul\":14357:14776   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14782:14868   */\n    tag_420:\n        /* \"#utility.yul\":14817:14824   */\n      0x00\n        /* \"#utility.yul\":14857:14861   */\n      0xff\n        /* \"#utility.yul\":14850:14855   */\n      dup3\n        /* \"#utility.yul\":14846:14862   */\n      and\n        /* \"#utility.yul\":14835:14862   */\n      swap1\n      pop\n        /* \"#utility.yul\":14782:14868   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14874:14992   */\n    tag_421:\n        /* \"#utility.yul\":14945:14967   */\n      tag_579\n        /* \"#utility.yul\":14961:14966   */\n      dup2\n        /* \"#utility.yul\":14945:14967   */\n      tag_420\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":14938:14943   */\n      dup2\n        /* \"#utility.yul\":14935:14968   */\n      eq\n        /* \"#utility.yul\":14925:14986   */\n      tag_580\n      jumpi\n        /* \"#utility.yul\":14982:14983   */\n      0x00\n        /* \"#utility.yul\":14979:14980   */\n      dup1\n        /* \"#utility.yul\":14972:14984   */\n      revert\n        /* \"#utility.yul\":14925:14986   */\n    tag_580:\n        /* \"#utility.yul\":14874:14992   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14998:15137   */\n    tag_422:\n        /* \"#utility.yul\":15053:15058   */\n      0x00\n        /* \"#utility.yul\":15084:15090   */\n      dup2\n        /* \"#utility.yul\":15078:15091   */\n      mload\n        /* \"#utility.yul\":15069:15091   */\n      swap1\n      pop\n        /* \"#utility.yul\":15100:15131   */\n      tag_582\n        /* \"#utility.yul\":15125:15130   */\n      dup2\n        /* \"#utility.yul\":15100:15131   */\n      tag_421\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":14998:15137   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15143:15490   */\n    tag_325:\n        /* \"#utility.yul\":15211:15217   */\n      0x00\n        /* \"#utility.yul\":15260:15262   */\n      0x20\n        /* \"#utility.yul\":15248:15257   */\n      dup3\n        /* \"#utility.yul\":15239:15246   */\n      dup5\n        /* \"#utility.yul\":15235:15258   */\n      sub\n        /* \"#utility.yul\":15231:15263   */\n      slt\n        /* \"#utility.yul\":15228:15347   */\n      iszero\n      tag_584\n      jumpi\n        /* \"#utility.yul\":15266:15345   */\n      tag_585\n      tag_393\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":15228:15347   */\n    tag_584:\n        /* \"#utility.yul\":15386:15387   */\n      0x00\n        /* \"#utility.yul\":15411:15473   */\n      tag_586\n        /* \"#utility.yul\":15465:15472   */\n      dup5\n        /* \"#utility.yul\":15456:15462   */\n      dup3\n        /* \"#utility.yul\":15445:15454   */\n      dup6\n        /* \"#utility.yul\":15441:15463   */\n      add\n        /* \"#utility.yul\":15411:15473   */\n      tag_422\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":15401:15473   */\n      swap2\n      pop\n        /* \"#utility.yul\":15357:15483   */\n      pop\n        /* \"#utility.yul\":15143:15490   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15496:15598   */\n    tag_423:\n        /* \"#utility.yul\":15538:15546   */\n      0x00\n        /* \"#utility.yul\":15585:15590   */\n      dup2\n        /* \"#utility.yul\":15582:15583   */\n      0x01\n        /* \"#utility.yul\":15578:15591   */\n      shr\n        /* \"#utility.yul\":15557:15591   */\n      swap1\n      pop\n        /* \"#utility.yul\":15496:15598   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15604:16452   */\n    tag_424:\n        /* \"#utility.yul\":15665:15670   */\n      0x00\n        /* \"#utility.yul\":15672:15676   */\n      dup1\n        /* \"#utility.yul\":15696:15702   */\n      dup3\n        /* \"#utility.yul\":15687:15702   */\n      swap2\n      pop\n        /* \"#utility.yul\":15720:15725   */\n      dup4\n        /* \"#utility.yul\":15711:15725   */\n      swap1\n      pop\n        /* \"#utility.yul\":15734:16446   */\n    tag_589:\n        /* \"#utility.yul\":15755:15756   */\n      0x01\n        /* \"#utility.yul\":15745:15753   */\n      dup6\n        /* \"#utility.yul\":15742:15757   */\n      gt\n        /* \"#utility.yul\":15734:16446   */\n      iszero\n      tag_591\n      jumpi\n        /* \"#utility.yul\":15850:15854   */\n      dup1\n        /* \"#utility.yul\":15845:15848   */\n      dup7\n        /* \"#utility.yul\":15841:15855   */\n      div\n        /* \"#utility.yul\":15835:15839   */\n      dup2\n        /* \"#utility.yul\":15832:15856   */\n      gt\n        /* \"#utility.yul\":15829:15879   */\n      iszero\n      tag_592\n      jumpi\n        /* \"#utility.yul\":15859:15877   */\n      tag_593\n      tag_404\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":15829:15879   */\n    tag_592:\n        /* \"#utility.yul\":15909:15910   */\n      0x01\n        /* \"#utility.yul\":15899:15907   */\n      dup6\n        /* \"#utility.yul\":15895:15911   */\n      and\n        /* \"#utility.yul\":15892:16343   */\n      iszero\n      tag_594\n      jumpi\n        /* \"#utility.yul\":16324:16328   */\n      dup1\n        /* \"#utility.yul\":16317:16322   */\n      dup3\n        /* \"#utility.yul\":16313:16329   */\n      mul\n        /* \"#utility.yul\":16304:16329   */\n      swap2\n      pop\n        /* \"#utility.yul\":15892:16343   */\n    tag_594:\n        /* \"#utility.yul\":16374:16378   */\n      dup1\n        /* \"#utility.yul\":16368:16372   */\n      dup2\n        /* \"#utility.yul\":16364:16379   */\n      mul\n        /* \"#utility.yul\":16356:16379   */\n      swap1\n      pop\n        /* \"#utility.yul\":16404:16436   */\n      tag_595\n        /* \"#utility.yul\":16427:16435   */\n      dup6\n        /* \"#utility.yul\":16404:16436   */\n      tag_423\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":16392:16436   */\n      swap5\n      pop\n        /* \"#utility.yul\":15734:16446   */\n      jump(tag_589)\n    tag_591:\n        /* \"#utility.yul\":15604:16452   */\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16458:17531   */\n    tag_425:\n        /* \"#utility.yul\":16512:16517   */\n      0x00\n        /* \"#utility.yul\":16703:16711   */\n      dup3\n        /* \"#utility.yul\":16693:16733   */\n      tag_597\n      jumpi\n        /* \"#utility.yul\":16724:16725   */\n      0x01\n        /* \"#utility.yul\":16715:16725   */\n      swap1\n      pop\n        /* \"#utility.yul\":16726:16731   */\n      jump(tag_596)\n        /* \"#utility.yul\":16693:16733   */\n    tag_597:\n        /* \"#utility.yul\":16752:16756   */\n      dup2\n        /* \"#utility.yul\":16742:16778   */\n      tag_598\n      jumpi\n        /* \"#utility.yul\":16769:16770   */\n      0x00\n        /* \"#utility.yul\":16760:16770   */\n      swap1\n      pop\n        /* \"#utility.yul\":16771:16776   */\n      jump(tag_596)\n        /* \"#utility.yul\":16742:16778   */\n    tag_598:\n        /* \"#utility.yul\":16838:16842   */\n      dup2\n        /* \"#utility.yul\":16886:16887   */\n      0x01\n        /* \"#utility.yul\":16881:16908   */\n      dup2\n      eq\n      tag_600\n      jumpi\n        /* \"#utility.yul\":16922:16923   */\n      0x02\n        /* \"#utility.yul\":16917:17108   */\n      dup2\n      eq\n      tag_601\n      jumpi\n        /* \"#utility.yul\":16831:17108   */\n      jump(tag_599)\n        /* \"#utility.yul\":16881:16908   */\n    tag_600:\n        /* \"#utility.yul\":16899:16900   */\n      0x01\n        /* \"#utility.yul\":16890:16900   */\n      swap2\n      pop\n        /* \"#utility.yul\":16901:16906   */\n      pop\n      jump(tag_596)\n        /* \"#utility.yul\":16917:17108   */\n    tag_601:\n        /* \"#utility.yul\":16962:16965   */\n      0xff\n        /* \"#utility.yul\":16952:16960   */\n      dup5\n        /* \"#utility.yul\":16949:16966   */\n      gt\n        /* \"#utility.yul\":16946:16989   */\n      iszero\n      tag_602\n      jumpi\n        /* \"#utility.yul\":16969:16987   */\n      tag_603\n      tag_404\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":16946:16989   */\n    tag_602:\n        /* \"#utility.yul\":17018:17026   */\n      dup4\n        /* \"#utility.yul\":17015:17016   */\n      0x02\n        /* \"#utility.yul\":17011:17027   */\n      exp\n        /* \"#utility.yul\":17002:17027   */\n      swap2\n      pop\n        /* \"#utility.yul\":17053:17056   */\n      dup5\n        /* \"#utility.yul\":17046:17051   */\n      dup3\n        /* \"#utility.yul\":17043:17057   */\n      gt\n        /* \"#utility.yul\":17040:17080   */\n      iszero\n      tag_604\n      jumpi\n        /* \"#utility.yul\":17060:17078   */\n      tag_605\n      tag_404\n      jump\t// in\n    tag_605:\n        /* \"#utility.yul\":17040:17080   */\n    tag_604:\n        /* \"#utility.yul\":17093:17098   */\n      pop\n      jump(tag_596)\n        /* \"#utility.yul\":16831:17108   */\n    tag_599:\n      pop\n        /* \"#utility.yul\":17217:17219   */\n      0x20\n        /* \"#utility.yul\":17207:17215   */\n      dup4\n        /* \"#utility.yul\":17204:17220   */\n      lt\n        /* \"#utility.yul\":17198:17201   */\n      0x0133\n        /* \"#utility.yul\":17192:17196   */\n      dup4\n        /* \"#utility.yul\":17189:17202   */\n      lt\n        /* \"#utility.yul\":17185:17221   */\n      and\n        /* \"#utility.yul\":17167:17169   */\n      0x4e\n        /* \"#utility.yul\":17157:17165   */\n      dup5\n        /* \"#utility.yul\":17154:17170   */\n      lt\n        /* \"#utility.yul\":17149:17151   */\n      0x0b\n        /* \"#utility.yul\":17143:17147   */\n      dup5\n        /* \"#utility.yul\":17140:17152   */\n      lt\n        /* \"#utility.yul\":17136:17171   */\n      and\n        /* \"#utility.yul\":17120:17231   */\n      or\n        /* \"#utility.yul\":17117:17363   */\n      iszero\n      tag_606\n      jumpi\n        /* \"#utility.yul\":17273:17281   */\n      dup3\n        /* \"#utility.yul\":17267:17271   */\n      dup3\n        /* \"#utility.yul\":17263:17282   */\n      exp\n        /* \"#utility.yul\":17254:17282   */\n      swap1\n      pop\n        /* \"#utility.yul\":17308:17311   */\n      dup4\n        /* \"#utility.yul\":17301:17306   */\n      dup2\n        /* \"#utility.yul\":17298:17312   */\n      gt\n        /* \"#utility.yul\":17295:17335   */\n      iszero\n      tag_607\n      jumpi\n        /* \"#utility.yul\":17315:17333   */\n      tag_608\n      tag_404\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":17295:17335   */\n    tag_607:\n        /* \"#utility.yul\":17348:17353   */\n      jump(tag_596)\n        /* \"#utility.yul\":17117:17363   */\n    tag_606:\n        /* \"#utility.yul\":17388:17430   */\n      tag_609\n        /* \"#utility.yul\":17426:17429   */\n      dup5\n        /* \"#utility.yul\":17416:17424   */\n      dup5\n        /* \"#utility.yul\":17410:17414   */\n      dup5\n        /* \"#utility.yul\":17407:17408   */\n      0x01\n        /* \"#utility.yul\":17388:17430   */\n      tag_424\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":17373:17430   */\n      swap3\n      pop\n      swap1\n      pop\n        /* \"#utility.yul\":17462:17466   */\n      dup2\n        /* \"#utility.yul\":17457:17460   */\n      dup5\n        /* \"#utility.yul\":17453:17467   */\n      div\n        /* \"#utility.yul\":17446:17451   */\n      dup2\n        /* \"#utility.yul\":17443:17468   */\n      gt\n        /* \"#utility.yul\":17440:17491   */\n      iszero\n      tag_610\n      jumpi\n        /* \"#utility.yul\":17471:17489   */\n      tag_611\n      tag_404\n      jump\t// in\n    tag_611:\n        /* \"#utility.yul\":17440:17491   */\n    tag_610:\n        /* \"#utility.yul\":17520:17524   */\n      dup2\n        /* \"#utility.yul\":17513:17518   */\n      dup2\n        /* \"#utility.yul\":17509:17525   */\n      mul\n        /* \"#utility.yul\":17500:17525   */\n      swap1\n      pop\n        /* \"#utility.yul\":16458:17531   */\n    tag_596:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17537:17822   */\n    tag_330:\n        /* \"#utility.yul\":17597:17602   */\n      0x00\n        /* \"#utility.yul\":17621:17644   */\n      tag_613\n        /* \"#utility.yul\":17639:17643   */\n      dup3\n        /* \"#utility.yul\":17621:17644   */\n      tag_390\n      jump\t// in\n    tag_613:\n        /* \"#utility.yul\":17613:17644   */\n      swap2\n      pop\n        /* \"#utility.yul\":17665:17692   */\n      tag_614\n        /* \"#utility.yul\":17683:17691   */\n      dup4\n        /* \"#utility.yul\":17665:17692   */\n      tag_390\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":17653:17692   */\n      swap3\n      pop\n        /* \"#utility.yul\":17711:17815   */\n      tag_615\n        /* \"#utility.yul\":17748:17814   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":17738:17746   */\n      dup5\n        /* \"#utility.yul\":17732:17736   */\n      dup5\n        /* \"#utility.yul\":17711:17815   */\n      tag_425\n      jump\t// in\n    tag_615:\n        /* \"#utility.yul\":17702:17815   */\n      swap1\n      pop\n        /* \"#utility.yul\":17537:17822   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17828:18000   */\n    tag_426:\n        /* \"#utility.yul\":17968:17992   */\n      0x616d6f756e7430206f7220616d6f756e7431203d203000000000000000000000\n        /* \"#utility.yul\":17964:17965   */\n      0x00\n        /* \"#utility.yul\":17956:17962   */\n      dup3\n        /* \"#utility.yul\":17952:17966   */\n      add\n        /* \"#utility.yul\":17945:17993   */\n      mstore\n        /* \"#utility.yul\":17828:18000   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18006:18372   */\n    tag_427:\n        /* \"#utility.yul\":18148:18151   */\n      0x00\n        /* \"#utility.yul\":18169:18236   */\n      tag_618\n        /* \"#utility.yul\":18233:18235   */\n      0x16\n        /* \"#utility.yul\":18228:18231   */\n      dup4\n        /* \"#utility.yul\":18169:18236   */\n      tag_406\n      jump\t// in\n    tag_618:\n        /* \"#utility.yul\":18162:18236   */\n      swap2\n      pop\n        /* \"#utility.yul\":18245:18338   */\n      tag_619\n        /* \"#utility.yul\":18334:18337   */\n      dup3\n        /* \"#utility.yul\":18245:18338   */\n      tag_426\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":18363:18365   */\n      0x20\n        /* \"#utility.yul\":18358:18361   */\n      dup3\n        /* \"#utility.yul\":18354:18366   */\n      add\n        /* \"#utility.yul\":18347:18366   */\n      swap1\n      pop\n        /* \"#utility.yul\":18006:18372   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18378:18797   */\n    tag_347:\n        /* \"#utility.yul\":18544:18548   */\n      0x00\n        /* \"#utility.yul\":18582:18584   */\n      0x20\n        /* \"#utility.yul\":18571:18580   */\n      dup3\n        /* \"#utility.yul\":18567:18585   */\n      add\n        /* \"#utility.yul\":18559:18585   */\n      swap1\n      pop\n        /* \"#utility.yul\":18631:18640   */\n      dup2\n        /* \"#utility.yul\":18625:18629   */\n      dup2\n        /* \"#utility.yul\":18621:18641   */\n      sub\n        /* \"#utility.yul\":18617:18618   */\n      0x00\n        /* \"#utility.yul\":18606:18615   */\n      dup4\n        /* \"#utility.yul\":18602:18619   */\n      add\n        /* \"#utility.yul\":18595:18642   */\n      mstore\n        /* \"#utility.yul\":18659:18790   */\n      tag_621\n        /* \"#utility.yul\":18785:18789   */\n      dup2\n        /* \"#utility.yul\":18659:18790   */\n      tag_427\n      jump\t// in\n    tag_621:\n        /* \"#utility.yul\":18651:18790   */\n      swap1\n      pop\n        /* \"#utility.yul\":18378:18797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220601235d6ce7d1875b069b3b46acee9450468d2f1aed68ee5dbe1551fdd09d31764736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1624": {
									"entryPoint": null,
									"id": 1624,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 314,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 337,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 268,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 236,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 231,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 288,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1355:6",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:6",
														"type": ""
													}
												],
												"src": "334:126:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:6",
														"type": ""
													}
												],
												"src": "466:96:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:6"
															},
															"nodeType": "YulIf",
															"src": "621:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:6",
														"type": ""
													}
												],
												"src": "568:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:6"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:6",
														"type": ""
													}
												],
												"src": "696:143:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "939:413:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "985:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "987:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "987:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "987:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "960:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "956:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "981:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "952:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "952:32:6"
															},
															"nodeType": "YulIf",
															"src": "949:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "1078:128:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1093:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1107:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1097:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1122:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1168:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1179:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1164:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1164:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1188:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1132:31:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1132:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1122:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1216:129:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1231:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1245:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1235:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1261:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1307:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1318:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1303:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1303:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1327:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1271:31:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1271:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1261:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "901:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "912:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "924:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "932:6:6",
														"type": ""
													}
												],
												"src": "845:507:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2D18 CODESIZE SUB DUP1 PUSH3 0x2D18 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x151 JUMP JUMPDEST CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP PUSH3 0x198 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x119 DUP3 PUSH3 0xEC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x12B DUP2 PUSH3 0x10C JUMP JUMPDEST DUP2 EQ PUSH3 0x137 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x14B DUP2 PUSH3 0x120 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x16B JUMPI PUSH3 0x16A PUSH3 0xE7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x17B DUP6 DUP3 DUP7 ADD PUSH3 0x13A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x18E DUP6 DUP3 DUP7 ADD PUSH3 0x13A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x2AA4 PUSH3 0x274 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x5FC ADD MSTORE DUP2 DUP2 PUSH2 0x738 ADD MSTORE DUP2 DUP2 PUSH2 0x893 ADD MSTORE DUP2 DUP2 PUSH2 0xBC4 ADD MSTORE DUP2 DUP2 PUSH2 0xCDB ADD MSTORE DUP2 DUP2 PUSH2 0xF61 ADD MSTORE DUP2 DUP2 PUSH2 0x11EF ADD MSTORE DUP2 DUP2 PUSH2 0x1455 ADD MSTORE DUP2 DUP2 PUSH2 0x17D2 ADD MSTORE DUP2 DUP2 PUSH2 0x190E ADD MSTORE DUP2 DUP2 PUSH2 0x19B6 ADD MSTORE DUP2 DUP2 PUSH2 0x1B0F ADD MSTORE DUP2 DUP2 PUSH2 0x1DA0 ADD MSTORE PUSH2 0x1EDE ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x43D ADD MSTORE DUP2 DUP2 PUSH2 0x46F ADD MSTORE DUP2 DUP2 PUSH2 0x69E ADD MSTORE DUP2 DUP2 PUSH2 0xA88 ADD MSTORE DUP2 DUP2 PUSH2 0xB2A ADD MSTORE DUP2 DUP2 PUSH2 0xE25 ADD MSTORE DUP2 DUP2 PUSH2 0xEC7 ADD MSTORE DUP2 DUP2 PUSH2 0x114E ADD MSTORE DUP2 DUP2 PUSH2 0x13BB ADD MSTORE DUP2 DUP2 PUSH2 0x15DD ADD MSTORE DUP2 DUP2 PUSH2 0x1874 ADD MSTORE DUP2 DUP2 PUSH2 0x1A79 ADD MSTORE DUP2 DUP2 PUSH2 0x1D06 ADD MSTORE PUSH2 0x1E3F ADD MSTORE PUSH2 0x2AA4 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x121 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x94B918DE GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xA201CCF6 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA201CCF6 EQ PUSH2 0x36E JUMPI DUP1 PUSH4 0xC9F4437E EQ PUSH2 0x39F JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x3CF JUMPI DUP1 PUSH4 0xF5EB42DC EQ PUSH2 0x3ED JUMPI DUP1 PUSH4 0xFCC2BA08 EQ PUSH2 0x41D JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x94B918DE EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0x9C1E5375 EQ PUSH2 0x2BF JUMPI DUP1 PUSH4 0x9C8F9F23 EQ PUSH2 0x2EF JUMPI DUP1 PUSH4 0x9CD441DA EQ PUSH2 0x320 JUMPI DUP1 PUSH4 0x9E7A4757 EQ PUSH2 0x350 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x4D7D1598 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x4D7D1598 EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0x5A76F25E EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x62279B65 EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0x7A6A5E1B EQ PUSH2 0x25E JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0xDFE1681 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0x443CB4BC EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0x46765BDC EQ PUSH2 0x180 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12E PUSH2 0x43B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13B SWAP2 SWAP1 PUSH2 0x2107 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14C PUSH2 0x45F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x159 SWAP2 SWAP1 PUSH2 0x213B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16A PUSH2 0x465 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x177 SWAP2 SWAP1 PUSH2 0x213B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x195 SWAP2 SWAP1 PUSH2 0x2187 JUMP JUMPDEST PUSH2 0x46B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A7 SWAP2 SWAP1 PUSH2 0x213B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C5 SWAP2 SWAP1 PUSH2 0x2187 JUMP JUMPDEST PUSH2 0x7DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D7 SWAP2 SWAP1 PUSH2 0x213B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E8 PUSH2 0x889 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F5 SWAP2 SWAP1 PUSH2 0x213B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x218 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x213 SWAP2 SWAP1 PUSH2 0x21B4 JUMP JUMPDEST PUSH2 0x88F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x225 SWAP2 SWAP1 PUSH2 0x213B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x248 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x243 SWAP2 SWAP1 PUSH2 0x2245 JUMP JUMPDEST PUSH2 0xC6A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x213B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x278 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x273 SWAP2 SWAP1 PUSH2 0x2245 JUMP JUMPDEST PUSH2 0xC82 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x286 SWAP3 SWAP2 SWAP1 PUSH2 0x2272 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A4 SWAP2 SWAP1 PUSH2 0x2187 JUMP JUMPDEST PUSH2 0xCD7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B6 SWAP2 SWAP1 PUSH2 0x213B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D4 SWAP2 SWAP1 PUSH2 0x2187 JUMP JUMPDEST PUSH2 0x1005 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E6 SWAP2 SWAP1 PUSH2 0x213B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x309 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x304 SWAP2 SWAP1 PUSH2 0x2187 JUMP JUMPDEST PUSH2 0x10B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x317 SWAP3 SWAP2 SWAP1 PUSH2 0x2272 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x335 SWAP2 SWAP1 PUSH2 0x229B JUMP JUMPDEST PUSH2 0x114A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x347 SWAP2 SWAP1 PUSH2 0x213B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x358 PUSH2 0x14F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x365 SWAP2 SWAP1 PUSH2 0x213B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x388 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x383 SWAP2 SWAP1 PUSH2 0x22DB JUMP JUMPDEST PUSH2 0x153F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x396 SWAP3 SWAP2 SWAP1 PUSH2 0x2272 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B4 SWAP2 SWAP1 PUSH2 0x21B4 JUMP JUMPDEST PUSH2 0x15D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C6 SWAP2 SWAP1 PUSH2 0x213B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D7 PUSH2 0x19B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E4 SWAP2 SWAP1 PUSH2 0x2107 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x407 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x402 SWAP2 SWAP1 PUSH2 0x2245 JUMP JUMPDEST PUSH2 0x19D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x414 SWAP2 SWAP1 PUSH2 0x213B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x425 PUSH2 0x1A21 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x432 SWAP2 SWAP1 PUSH2 0x213B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4CA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x232A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4E9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x50D SWAP2 SWAP1 PUSH2 0x2399 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x3E8 PUSH2 0x3E5 DUP5 PUSH2 0x521 SWAP2 SWAP1 PUSH2 0x23F5 JUMP JUMPDEST PUSH2 0x52B SWAP2 SWAP1 PUSH2 0x2466 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 SLOAD PUSH2 0x53B SWAP2 SWAP1 PUSH2 0x2497 JUMP JUMPDEST DUP2 PUSH1 0x2 SLOAD PUSH2 0x549 SWAP2 SWAP1 PUSH2 0x23F5 JUMP JUMPDEST PUSH2 0x553 SWAP2 SWAP1 PUSH2 0x2466 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 GT PUSH2 0x598 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58F SWAP1 PUSH2 0x2528 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x7D0 PUSH1 0x1 SLOAD PUSH2 0x5AA SWAP2 SWAP1 PUSH2 0x23F5 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x3 DUP7 PUSH2 0x5BA SWAP2 SWAP1 PUSH2 0x23F5 JUMP JUMPDEST PUSH2 0x5C4 SWAP2 SWAP1 PUSH2 0x23F5 JUMP JUMPDEST PUSH2 0x5CE SWAP2 SWAP1 PUSH2 0x2466 JUMP JUMPDEST SWAP1 POP PUSH2 0x5FA PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH2 0x1BE6 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x655 SWAP3 SWAP2 SWAP1 PUSH2 0x2548 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x674 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x698 SWAP2 SWAP1 PUSH2 0x2399 JUMP JUMPDEST POP PUSH2 0x7D5 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F5 SWAP2 SWAP1 PUSH2 0x2571 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x712 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x736 SWAP2 SWAP1 PUSH2 0x25A1 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x78F SWAP2 SWAP1 PUSH2 0x2571 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7AC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7D0 SWAP2 SWAP1 PUSH2 0x25A1 JUMP JUMPDEST PUSH2 0x1C59 JUMP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SLOAD GT DUP1 ISZERO PUSH2 0x7F1 JUMPI POP PUSH1 0x0 PUSH1 0x2 SLOAD GT JUMPDEST DUP1 ISZERO PUSH2 0x7FD JUMPI POP PUSH1 0x0 DUP3 GT JUMPDEST PUSH2 0x83C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x833 SWAP1 PUSH2 0x261A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3E8 PUSH2 0x3E5 DUP5 PUSH2 0x84F SWAP2 SWAP1 PUSH2 0x23F5 JUMP JUMPDEST PUSH2 0x859 SWAP2 SWAP1 PUSH2 0x2466 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 SLOAD PUSH2 0x869 SWAP2 SWAP1 PUSH2 0x2497 JUMP JUMPDEST DUP2 PUSH1 0x2 SLOAD PUSH2 0x877 SWAP2 SWAP1 PUSH2 0x23F5 JUMP JUMPDEST PUSH2 0x881 SWAP2 SWAP1 PUSH2 0x2466 JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8EE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x232A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x90D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x931 SWAP2 SWAP1 PUSH2 0x2399 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x3E8 PUSH2 0x3E5 DUP7 PUSH2 0x945 SWAP2 SWAP1 PUSH2 0x23F5 JUMP JUMPDEST PUSH2 0x94F SWAP2 SWAP1 PUSH2 0x2466 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 SLOAD PUSH2 0x95F SWAP2 SWAP1 PUSH2 0x2497 JUMP JUMPDEST DUP2 PUSH1 0x2 SLOAD PUSH2 0x96D SWAP2 SWAP1 PUSH2 0x23F5 JUMP JUMPDEST PUSH2 0x977 SWAP2 SWAP1 PUSH2 0x2466 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 GT PUSH2 0x9BC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9B3 SWAP1 PUSH2 0x2528 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3E8 DUP4 PUSH2 0x3E8 PUSH2 0x9CD SWAP2 SWAP1 PUSH2 0x263A JUMP JUMPDEST DUP6 PUSH2 0x9D8 SWAP2 SWAP1 PUSH2 0x23F5 JUMP JUMPDEST PUSH2 0x9E2 SWAP2 SWAP1 PUSH2 0x2466 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0xA24 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA1B SWAP1 PUSH2 0x26BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x7D0 PUSH1 0x1 SLOAD PUSH2 0xA36 SWAP2 SWAP1 PUSH2 0x23F5 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x3 DUP9 PUSH2 0xA46 SWAP2 SWAP1 PUSH2 0x23F5 JUMP JUMPDEST PUSH2 0xA50 SWAP2 SWAP1 PUSH2 0x23F5 JUMP JUMPDEST PUSH2 0xA5A SWAP2 SWAP1 PUSH2 0x2466 JUMP JUMPDEST SWAP1 POP PUSH2 0xA86 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH2 0x1BE6 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE1 SWAP3 SWAP2 SWAP1 PUSH2 0x2548 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB00 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB24 SWAP2 SWAP1 PUSH2 0x2399 JUMP JUMPDEST POP PUSH2 0xC61 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB81 SWAP2 SWAP1 PUSH2 0x2571 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB9E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBC2 SWAP2 SWAP1 PUSH2 0x25A1 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC1B SWAP2 SWAP1 PUSH2 0x2571 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC38 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC5C SWAP2 SWAP1 PUSH2 0x25A1 JUMP JUMPDEST PUSH2 0x1C59 JUMP JUMPDEST POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xCCE DUP4 PUSH1 0x4 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1C6B JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD36 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x232A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD55 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD79 SWAP2 SWAP1 PUSH2 0x2399 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x3E8 PUSH2 0x3E5 DUP5 PUSH2 0xD8D SWAP2 SWAP1 PUSH2 0x23F5 JUMP JUMPDEST PUSH2 0xD97 SWAP2 SWAP1 PUSH2 0x2466 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 SLOAD PUSH2 0xDA7 SWAP2 SWAP1 PUSH2 0x2497 JUMP JUMPDEST DUP2 PUSH1 0x2 SLOAD PUSH2 0xDB5 SWAP2 SWAP1 PUSH2 0x23F5 JUMP JUMPDEST PUSH2 0xDBF SWAP2 SWAP1 PUSH2 0x2466 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 PUSH2 0x7D0 PUSH1 0x1 SLOAD PUSH2 0xDD3 SWAP2 SWAP1 PUSH2 0x23F5 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x3 DUP7 PUSH2 0xDE3 SWAP2 SWAP1 PUSH2 0x23F5 JUMP JUMPDEST PUSH2 0xDED SWAP2 SWAP1 PUSH2 0x23F5 JUMP JUMPDEST PUSH2 0xDF7 SWAP2 SWAP1 PUSH2 0x2466 JUMP JUMPDEST SWAP1 POP PUSH2 0xE23 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH2 0x1BE6 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE7E SWAP3 SWAP2 SWAP1 PUSH2 0x2548 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE9D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEC1 SWAP2 SWAP1 PUSH2 0x2399 JUMP JUMPDEST POP PUSH2 0xFFE PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF1E SWAP2 SWAP1 PUSH2 0x2571 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF3B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF5F SWAP2 SWAP1 PUSH2 0x25A1 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB8 SWAP2 SWAP1 PUSH2 0x2571 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFD5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFF9 SWAP2 SWAP1 PUSH2 0x25A1 JUMP JUMPDEST PUSH2 0x1C59 JUMP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SLOAD GT DUP1 ISZERO PUSH2 0x101A JUMPI POP PUSH1 0x0 PUSH1 0x2 SLOAD GT JUMPDEST DUP1 ISZERO PUSH2 0x1026 JUMPI POP PUSH1 0x0 DUP3 GT JUMPDEST PUSH2 0x1065 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x105C SWAP1 PUSH2 0x261A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3E8 PUSH2 0x3E5 DUP5 PUSH2 0x1078 SWAP2 SWAP1 PUSH2 0x23F5 JUMP JUMPDEST PUSH2 0x1082 SWAP2 SWAP1 PUSH2 0x2466 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 SLOAD PUSH2 0x1092 SWAP2 SWAP1 PUSH2 0x2497 JUMP JUMPDEST DUP2 PUSH1 0x1 SLOAD PUSH2 0x10A0 SWAP2 SWAP1 PUSH2 0x23F5 JUMP JUMPDEST PUSH2 0x10AA SWAP2 SWAP1 PUSH2 0x2466 JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP4 GT ISZERO PUSH2 0x1137 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x112E SWAP1 PUSH2 0x2726 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1141 CALLER DUP5 PUSH2 0x1C6B JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11A9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x232A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11C8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11EC SWAP2 SWAP1 PUSH2 0x2399 JUMP JUMPDEST POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x124A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x232A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1269 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x128D SWAP2 SWAP1 PUSH2 0x2399 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x1 SLOAD GT DUP1 PUSH2 0x12A1 JUMPI POP PUSH1 0x0 PUSH1 0x2 SLOAD GT JUMPDEST ISZERO PUSH2 0x1303 JUMPI DUP2 PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD DUP6 PUSH2 0x12B8 SWAP2 SWAP1 PUSH2 0x23F5 JUMP JUMPDEST PUSH2 0x12C2 SWAP2 SWAP1 PUSH2 0x2466 JUMP JUMPDEST EQ PUSH2 0x1302 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12F9 SWAP1 PUSH2 0x2792 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SUB PUSH2 0x1328 JUMPI PUSH2 0x1321 DUP3 DUP5 PUSH2 0x131C SWAP2 SWAP1 PUSH2 0x23F5 JUMP JUMPDEST PUSH2 0x1F82 JUMP JUMPDEST SWAP1 POP PUSH2 0x1369 JUMP JUMPDEST PUSH2 0x1366 PUSH1 0x1 SLOAD PUSH1 0x3 SLOAD DUP6 PUSH2 0x133C SWAP2 SWAP1 PUSH2 0x23F5 JUMP JUMPDEST PUSH2 0x1346 SWAP2 SWAP1 PUSH2 0x2466 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD DUP6 PUSH2 0x1357 SWAP2 SWAP1 PUSH2 0x23F5 JUMP JUMPDEST PUSH2 0x1361 SWAP2 SWAP1 PUSH2 0x2466 JUMP JUMPDEST PUSH2 0x1FFC JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x13AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13A3 SWAP1 PUSH2 0x27FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13B6 CALLER DUP3 PUSH2 0x1BE6 JUMP JUMPDEST PUSH2 0x14F2 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1412 SWAP2 SWAP1 PUSH2 0x2571 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x142F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1453 SWAP2 SWAP1 PUSH2 0x25A1 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14AC SWAP2 SWAP1 PUSH2 0x2571 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x14C9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14ED SWAP2 SWAP1 PUSH2 0x25A1 JUMP JUMPDEST PUSH2 0x1C59 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP4 GT ISZERO PUSH2 0x15C4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15BB SWAP1 PUSH2 0x2726 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x15CE DUP5 DUP5 PUSH2 0x1C6B JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1638 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x232A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1657 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x167B SWAP2 SWAP1 PUSH2 0x2399 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x3E8 PUSH2 0x3E5 DUP7 PUSH2 0x168F SWAP2 SWAP1 PUSH2 0x23F5 JUMP JUMPDEST PUSH2 0x1699 SWAP2 SWAP1 PUSH2 0x2466 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 SLOAD PUSH2 0x16A9 SWAP2 SWAP1 PUSH2 0x2497 JUMP JUMPDEST DUP2 PUSH1 0x2 SLOAD PUSH2 0x16B7 SWAP2 SWAP1 PUSH2 0x23F5 JUMP JUMPDEST PUSH2 0x16C1 SWAP2 SWAP1 PUSH2 0x2466 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 GT PUSH2 0x1706 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16FD SWAP1 PUSH2 0x2528 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3E8 DUP4 PUSH2 0x3E8 PUSH2 0x1717 SWAP2 SWAP1 PUSH2 0x263A JUMP JUMPDEST DUP6 PUSH2 0x1722 SWAP2 SWAP1 PUSH2 0x23F5 JUMP JUMPDEST PUSH2 0x172C SWAP2 SWAP1 PUSH2 0x2466 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x176E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1765 SWAP1 PUSH2 0x26BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x7D0 PUSH1 0x1 SLOAD PUSH2 0x1780 SWAP2 SWAP1 PUSH2 0x23F5 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x3 DUP9 PUSH2 0x1790 SWAP2 SWAP1 PUSH2 0x23F5 JUMP JUMPDEST PUSH2 0x179A SWAP2 SWAP1 PUSH2 0x23F5 JUMP JUMPDEST PUSH2 0x17A4 SWAP2 SWAP1 PUSH2 0x2466 JUMP JUMPDEST SWAP1 POP PUSH2 0x17D0 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH2 0x1BE6 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x182B SWAP3 SWAP2 SWAP1 PUSH2 0x2548 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x184A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x186E SWAP2 SWAP1 PUSH2 0x2399 JUMP JUMPDEST POP PUSH2 0x19AB PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18CB SWAP2 SWAP1 PUSH2 0x2571 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x18E8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x190C SWAP2 SWAP1 PUSH2 0x25A1 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1965 SWAP2 SWAP1 PUSH2 0x2571 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1982 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x19A6 SWAP2 SWAP1 PUSH2 0x25A1 JUMP JUMPDEST PUSH2 0x1C59 JUMP JUMPDEST POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SLOAD GT DUP1 ISZERO PUSH2 0x1A36 JUMPI POP PUSH1 0x0 PUSH1 0x2 SLOAD GT JUMPDEST PUSH2 0x1A75 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A6C SWAP1 PUSH2 0x261A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1AE2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B06 SWAP2 SWAP1 PUSH2 0x2857 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B78 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B9C SWAP2 SWAP1 PUSH2 0x2857 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP DUP2 PUSH1 0xA PUSH2 0x1BAE SWAP2 SWAP1 PUSH2 0x29B7 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x1BBB SWAP2 SWAP1 PUSH2 0x23F5 JUMP JUMPDEST DUP2 PUSH1 0xA PUSH2 0x1BC8 SWAP2 SWAP1 PUSH2 0x29B7 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x1BD5 SWAP2 SWAP1 PUSH2 0x23F5 JUMP JUMPDEST PUSH2 0x1BDF SWAP2 SWAP1 PUSH2 0x2466 JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1C35 SWAP2 SWAP1 PUSH2 0x2497 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1C4E SWAP2 SWAP1 PUSH2 0x2497 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 SLOAD PUSH1 0x1 SLOAD DUP5 PUSH2 0x1C7F SWAP2 SWAP1 PUSH2 0x23F5 JUMP JUMPDEST PUSH2 0x1C89 SWAP2 SWAP1 PUSH2 0x2466 JUMP JUMPDEST SWAP2 POP PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD DUP5 PUSH2 0x1C9C SWAP2 SWAP1 PUSH2 0x23F5 JUMP JUMPDEST PUSH2 0x1CA6 SWAP2 SWAP1 PUSH2 0x2466 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0x1CB8 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST PUSH2 0x1CF7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CEE SWAP1 PUSH2 0x2A4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1D01 DUP5 DUP5 PUSH2 0x2015 JUMP JUMPDEST PUSH2 0x1E3D PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D5D SWAP2 SWAP1 PUSH2 0x2571 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D7A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D9E SWAP2 SWAP1 PUSH2 0x25A1 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DF7 SWAP2 SWAP1 PUSH2 0x2571 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E14 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E38 SWAP2 SWAP1 PUSH2 0x25A1 JUMP JUMPDEST PUSH2 0x1C59 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E98 SWAP3 SWAP2 SWAP1 PUSH2 0x2548 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1EB7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1EDB SWAP2 SWAP1 PUSH2 0x2399 JUMP JUMPDEST POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F37 SWAP3 SWAP2 SWAP1 PUSH2 0x2548 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1F56 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1F7A SWAP2 SWAP1 PUSH2 0x2399 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP3 GT ISZERO PUSH2 0x1FE9 JUMPI DUP2 SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 DUP5 PUSH2 0x1FA1 SWAP2 SWAP1 PUSH2 0x2466 JUMP JUMPDEST PUSH2 0x1FAB SWAP2 SWAP1 PUSH2 0x2497 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1FE3 JUMPI DUP1 SWAP2 POP PUSH1 0x2 DUP2 DUP3 DUP6 PUSH2 0x1FC8 SWAP2 SWAP1 PUSH2 0x2466 JUMP JUMPDEST PUSH2 0x1FD2 SWAP2 SWAP1 PUSH2 0x2497 JUMP JUMPDEST PUSH2 0x1FDC SWAP2 SWAP1 PUSH2 0x2466 JUMP JUMPDEST SWAP1 POP PUSH2 0x1FAE JUMP JUMPDEST POP PUSH2 0x1FF7 JUMP JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x1FF6 JUMPI PUSH1 0x1 SWAP1 POP JUMPDEST JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x200B JUMPI DUP2 PUSH2 0x200D JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2064 SWAP2 SWAP1 PUSH2 0x263A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x207D SWAP2 SWAP1 PUSH2 0x263A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20CD PUSH2 0x20C8 PUSH2 0x20C3 DUP5 PUSH2 0x2088 JUMP JUMPDEST PUSH2 0x20A8 JUMP JUMPDEST PUSH2 0x2088 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20DF DUP3 PUSH2 0x20B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20F1 DUP3 PUSH2 0x20D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2101 DUP2 PUSH2 0x20E6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x211C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x20F8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2135 DUP2 PUSH2 0x2122 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2150 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x212C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2164 DUP2 PUSH2 0x2122 JUMP JUMPDEST DUP2 EQ PUSH2 0x216F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2181 DUP2 PUSH2 0x215B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x219D JUMPI PUSH2 0x219C PUSH2 0x2156 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x21AB DUP5 DUP3 DUP6 ADD PUSH2 0x2172 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x21CD JUMPI PUSH2 0x21CC PUSH2 0x2156 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x21DB DUP7 DUP3 DUP8 ADD PUSH2 0x2172 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x21EC DUP7 DUP3 DUP8 ADD PUSH2 0x2172 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x21FD DUP7 DUP3 DUP8 ADD PUSH2 0x2172 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2212 DUP3 PUSH2 0x2088 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2222 DUP2 PUSH2 0x2207 JUMP JUMPDEST DUP2 EQ PUSH2 0x222D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x223F DUP2 PUSH2 0x2219 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x225B JUMPI PUSH2 0x225A PUSH2 0x2156 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2269 DUP5 DUP3 DUP6 ADD PUSH2 0x2230 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2287 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x212C JUMP JUMPDEST PUSH2 0x2294 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x212C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x22B2 JUMPI PUSH2 0x22B1 PUSH2 0x2156 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x22C0 DUP6 DUP3 DUP7 ADD PUSH2 0x2172 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x22D1 DUP6 DUP3 DUP7 ADD PUSH2 0x2172 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x22F2 JUMPI PUSH2 0x22F1 PUSH2 0x2156 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2300 DUP6 DUP3 DUP7 ADD PUSH2 0x2230 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2311 DUP6 DUP3 DUP7 ADD PUSH2 0x2172 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2324 DUP2 PUSH2 0x2207 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x233F PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x231B JUMP JUMPDEST PUSH2 0x234C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x231B JUMP JUMPDEST PUSH2 0x2359 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x212C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2376 DUP2 PUSH2 0x2361 JUMP JUMPDEST DUP2 EQ PUSH2 0x2381 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2393 DUP2 PUSH2 0x236D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23AF JUMPI PUSH2 0x23AE PUSH2 0x2156 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x23BD DUP5 DUP3 DUP6 ADD PUSH2 0x2384 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2400 DUP3 PUSH2 0x2122 JUMP JUMPDEST SWAP2 POP PUSH2 0x240B DUP4 PUSH2 0x2122 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2419 DUP2 PUSH2 0x2122 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2430 JUMPI PUSH2 0x242F PUSH2 0x23C6 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2471 DUP3 PUSH2 0x2122 JUMP JUMPDEST SWAP2 POP PUSH2 0x247C DUP4 PUSH2 0x2122 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x248C JUMPI PUSH2 0x248B PUSH2 0x2437 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24A2 DUP3 PUSH2 0x2122 JUMP JUMPDEST SWAP2 POP PUSH2 0x24AD DUP4 PUSH2 0x2122 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x24C5 JUMPI PUSH2 0x24C4 PUSH2 0x23C6 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74206F757470757420616D6F756E74000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2512 PUSH1 0x1A DUP4 PUSH2 0x24CB JUMP JUMPDEST SWAP2 POP PUSH2 0x251D DUP3 PUSH2 0x24DC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2541 DUP2 PUSH2 0x2505 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x255D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x231B JUMP JUMPDEST PUSH2 0x256A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x212C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2586 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x231B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x259B DUP2 PUSH2 0x215B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25B7 JUMPI PUSH2 0x25B6 PUSH2 0x2156 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x25C5 DUP5 DUP3 DUP6 ADD PUSH2 0x258C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420726573657276657300000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2604 PUSH1 0x10 DUP4 PUSH2 0x24CB JUMP JUMPDEST SWAP2 POP PUSH2 0x260F DUP3 PUSH2 0x25CE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2633 DUP2 PUSH2 0x25F7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2645 DUP3 PUSH2 0x2122 JUMP JUMPDEST SWAP2 POP PUSH2 0x2650 DUP4 PUSH2 0x2122 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2668 JUMPI PUSH2 0x2667 PUSH2 0x23C6 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x536C69704C6F636B000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26A4 PUSH1 0x8 DUP4 PUSH2 0x24CB JUMP JUMPDEST SWAP2 POP PUSH2 0x26AF DUP3 PUSH2 0x266E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x26D3 DUP2 PUSH2 0x2697 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2710 PUSH1 0x14 DUP4 PUSH2 0x24CB JUMP JUMPDEST SWAP2 POP PUSH2 0x271B DUP3 PUSH2 0x26DA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x273F DUP2 PUSH2 0x2703 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964206C697175696469747920726174696F000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x277C PUSH1 0x17 DUP4 PUSH2 0x24CB JUMP JUMPDEST SWAP2 POP PUSH2 0x2787 DUP3 PUSH2 0x2746 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x27AB DUP2 PUSH2 0x276F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x736861726573203D203000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27E8 PUSH1 0xA DUP4 PUSH2 0x24CB JUMP JUMPDEST SWAP2 POP PUSH2 0x27F3 DUP3 PUSH2 0x27B2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2817 DUP2 PUSH2 0x27DB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2834 DUP2 PUSH2 0x281E JUMP JUMPDEST DUP2 EQ PUSH2 0x283F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2851 DUP2 PUSH2 0x282B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x286D JUMPI PUSH2 0x286C PUSH2 0x2156 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x287B DUP5 DUP3 DUP6 ADD PUSH2 0x2842 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x28DB JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x28B7 JUMPI PUSH2 0x28B6 PUSH2 0x23C6 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x28C6 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x28D4 DUP6 PUSH2 0x2884 JUMP JUMPDEST SWAP5 POP PUSH2 0x289B JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x28F4 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x29B0 JUMP JUMPDEST DUP2 PUSH2 0x2902 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x29B0 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x2918 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x2922 JUMPI PUSH2 0x2951 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x29B0 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x2934 JUMPI PUSH2 0x2933 PUSH2 0x23C6 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x294B JUMPI PUSH2 0x294A PUSH2 0x23C6 JUMP JUMPDEST JUMPDEST POP PUSH2 0x29B0 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x2986 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x2981 JUMPI PUSH2 0x2980 PUSH2 0x23C6 JUMP JUMPDEST JUMPDEST PUSH2 0x29B0 JUMP JUMPDEST PUSH2 0x2993 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x2891 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x29AA JUMPI PUSH2 0x29A9 PUSH2 0x23C6 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29C2 DUP3 PUSH2 0x2122 JUMP JUMPDEST SWAP2 POP PUSH2 0x29CD DUP4 PUSH2 0x2122 JUMP JUMPDEST SWAP3 POP PUSH2 0x29FA PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x28E4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x616D6F756E7430206F7220616D6F756E7431203D203000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A38 PUSH1 0x16 DUP4 PUSH2 0x24CB JUMP JUMPDEST SWAP2 POP PUSH2 0x2A43 DUP3 PUSH2 0x2A02 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A67 DUP2 PUSH2 0x2A2B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH1 0x12 CALLDATALOAD 0xD6 0xCE PUSH30 0x1875B069B3B46ACEE9450468D2F1AED68EE5DBE1551FDD09D31764736F6C PUSH4 0x43000812 STOP CALLER ",
							"sourceMap": "283:7296:5:-:0;;;553:157;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;622:10;610:9;;:22;;;;;;;;;;;;;;;;;;659:7;643:24;;;;;;;;;;694:7;678:24;;;;;;;;;;553:157;;283:7296;;88:117:6;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;283:7296:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_burn_1660": {
									"entryPoint": 8213,
									"id": 1660,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_1642": {
									"entryPoint": 7142,
									"id": 1642,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_removeLiquidity_2334": {
									"entryPoint": 7275,
									"id": 2334,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@_sqrt_2411": {
									"entryPoint": 8066,
									"id": 2411,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_update_1676": {
									"entryPoint": 7257,
									"id": 1676,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@addLiquidity_2188": {
									"entryPoint": 4426,
									"id": 2188,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_1599": {
									"entryPoint": 3178,
									"id": 1599,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getERCPrice_2466": {
									"entryPoint": 6689,
									"id": 2466,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getPredictOutputToken0_2550": {
									"entryPoint": 4101,
									"id": 2550,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getPredictOutputToken1_2508": {
									"entryPoint": 2012,
									"id": 2508,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@min_754": {
									"entryPoint": 8188,
									"id": 754,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@myShares_2345": {
									"entryPoint": 5368,
									"id": 2345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@removeAllLiquidity_2205": {
									"entryPoint": 3202,
									"id": 2205,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@removeLiquidity_2231": {
									"entryPoint": 4274,
									"id": 2231,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@removeLiquidity_2257": {
									"entryPoint": 5439,
									"id": 2257,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@reserve0_1591": {
									"entryPoint": 1125,
									"id": 1591,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@reserve1_1593": {
									"entryPoint": 2185,
									"id": 1593,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sharesOf_2357": {
									"entryPoint": 6616,
									"id": 2357,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@swapTokenForToken1_1851": {
									"entryPoint": 1131,
									"id": 1851,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@swapTokenForToken1_WithSlipLock_2071": {
									"entryPoint": 5593,
									"id": 2071,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@swap_1760": {
									"entryPoint": 3287,
									"id": 1760,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@swap_WithSlipLock_1961": {
									"entryPoint": 2191,
									"id": 1961,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@token0_1586": {
									"entryPoint": 1083,
									"id": 1586,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@token1_1589": {
									"entryPoint": 6580,
									"id": 1589,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_1595": {
									"entryPoint": 1119,
									"id": 1595,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 8752,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 9092,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 8562,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 9612,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint8_fromMemory": {
									"entryPoint": 10306,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 8773,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 8923,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 9113,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 8583,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 9633,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 8859,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256t_uint256": {
									"entryPoint": 8628,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint8_fromMemory": {
									"entryPoint": 10327,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 8987,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$664_to_t_address_fromStack": {
									"entryPoint": 8440,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_07f0348f6c2c1a6f3350d18d3a915d48f775a408df0934a0d28dec896cf2d48d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10795,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_146985345a2b79e4aa6c7e4844006bcfe53a437d612514d7098dbcbad9d449dc_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9879,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_185a9d5da6de3eebfb2e4ad4adad189f402b098c61f6e8e0c8d2b4a20a1faa2a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9719,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2e4cfbebddcf91980949e97537f2af8b49e403c7efea6b51f4c200d1dd98a066_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10095,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9987,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4e208da9c6252e844e3faafb4bce1ac6103358d48cc8ab07bbca5bb9ee4b2f37_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10203,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9477,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 8492,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 9585,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 9002,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 9544,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$664__to_t_address__fromStack_reversed": {
									"entryPoint": 8455,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_07f0348f6c2c1a6f3350d18d3a915d48f775a408df0934a0d28dec896cf2d48d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10830,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_146985345a2b79e4aa6c7e4844006bcfe53a437d612514d7098dbcbad9d449dc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9914,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_185a9d5da6de3eebfb2e4ad4adad189f402b098c61f6e8e0c8d2b4a20a1faa2a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9754,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2e4cfbebddcf91980949e97537f2af8b49e403c7efea6b51f4c200d1dd98a066__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10130,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10022,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4e208da9c6252e844e3faafb4bce1ac6103358d48cc8ab07bbca5bb9ee4b2f37__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10238,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9512,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 8507,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8818,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 9419,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 9367,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 9318,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 10385,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint256": {
									"entryPoint": 10679,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 10468,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 9205,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 9786,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 8711,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 9057,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 8328,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 8482,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 10270,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$664_to_t_address": {
									"entryPoint": 8422,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 8404,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 8370,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 8360,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 9158,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 9271,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 8534,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_right_1_unsigned": {
									"entryPoint": 10372,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_07f0348f6c2c1a6f3350d18d3a915d48f775a408df0934a0d28dec896cf2d48d": {
									"entryPoint": 10754,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_146985345a2b79e4aa6c7e4844006bcfe53a437d612514d7098dbcbad9d449dc": {
									"entryPoint": 9838,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_185a9d5da6de3eebfb2e4ad4adad189f402b098c61f6e8e0c8d2b4a20a1faa2a": {
									"entryPoint": 9678,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_2e4cfbebddcf91980949e97537f2af8b49e403c7efea6b51f4c200d1dd98a066": {
									"entryPoint": 10054,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5": {
									"entryPoint": 9946,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4e208da9c6252e844e3faafb4bce1ac6103358d48cc8ab07bbca5bb9ee4b2f37": {
									"entryPoint": 10162,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90": {
									"entryPoint": 9436,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 8729,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 9069,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 8539,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 10283,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:18800:6",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:81:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "84:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "73:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:6",
														"type": ""
													}
												],
												"src": "7:126:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "171:28:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "181:12:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "188:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "181:3:6"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "157:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "167:3:6",
														"type": ""
													}
												],
												"src": "139:60:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "265:82:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "275:66:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "333:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "315:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "315:24:6"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "306:8:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "306:34:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "288:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "288:53:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "275:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "245:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "255:9:6",
														"type": ""
													}
												],
												"src": "205:142:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "413:66:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "423:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "467:5:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "436:30:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "436:37:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "423:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "393:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "403:9:6",
														"type": ""
													}
												],
												"src": "353:126:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "559:66:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "569:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "613:5:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "582:30:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "582:37:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "569:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$664_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "539:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "549:9:6",
														"type": ""
													}
												],
												"src": "485:140:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "710:80:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "727:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "777:5:6"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$664_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "732:44:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "732:51:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "720:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "720:64:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "720:64:6"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$664_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "698:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "705:3:6",
														"type": ""
													}
												],
												"src": "631:159:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "908:138:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "918:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "930:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "941:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "926:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "926:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1012:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1025:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1036:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1021:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1021:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$664_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "954:57:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "954:85:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "954:85:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$664__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "880:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "892:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "903:4:6",
														"type": ""
													}
												],
												"src": "796:250:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1097:32:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1107:16:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1118:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1107:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1079:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1089:7:6",
														"type": ""
													}
												],
												"src": "1052:77:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1200:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1217:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1240:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1222:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1222:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1210:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1210:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1210:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1188:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1195:3:6",
														"type": ""
													}
												],
												"src": "1135:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1357:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1367:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1379:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1390:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1375:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1375:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1367:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1447:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1460:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1471:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1456:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1456:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1403:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1403:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1403:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1329:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1341:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1352:4:6",
														"type": ""
													}
												],
												"src": "1259:222:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1527:35:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1537:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1553:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1547:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1547:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1537:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1520:6:6",
														"type": ""
													}
												],
												"src": "1487:75:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1657:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1674:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1677:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1667:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1667:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1667:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1568:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1780:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1797:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1800:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1790:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1790:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1790:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1691:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1857:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1914:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1923:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1926:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1916:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1916:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1916:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1880:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1905:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1887:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1887:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1877:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1877:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1870:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1870:43:6"
															},
															"nodeType": "YulIf",
															"src": "1867:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1850:5:6",
														"type": ""
													}
												],
												"src": "1814:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1994:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2004:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2026:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2013:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2013:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2004:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2069:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2042:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2042:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2042:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1972:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1980:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1988:5:6",
														"type": ""
													}
												],
												"src": "1942:139:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2153:263:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2199:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2201:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2201:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2201:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2174:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2183:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2170:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2170:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2195:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2166:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2166:32:6"
															},
															"nodeType": "YulIf",
															"src": "2163:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "2292:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2307:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2321:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2311:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2336:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2371:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2382:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2367:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2367:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2391:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2346:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2346:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2336:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2123:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2134:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2146:6:6",
														"type": ""
													}
												],
												"src": "2087:329:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2522:519:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2568:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2570:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2570:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2570:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2543:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2552:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2539:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2539:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2564:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2535:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2535:32:6"
															},
															"nodeType": "YulIf",
															"src": "2532:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "2661:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2676:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2690:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2680:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2705:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2740:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2751:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2736:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2736:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2760:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2715:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2715:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2705:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2788:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2803:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2817:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2807:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2833:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2868:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2879:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2864:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2864:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2888:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2843:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2843:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2833:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2916:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2931:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2945:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2935:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2961:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2996:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3007:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2992:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2992:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3016:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2971:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2971:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "2961:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2476:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2487:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2499:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2507:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2515:6:6",
														"type": ""
													}
												],
												"src": "2422:619:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3092:51:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3102:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3131:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3113:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3113:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3102:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3074:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3084:7:6",
														"type": ""
													}
												],
												"src": "3047:96:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3192:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3249:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3258:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3261:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3251:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3251:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3251:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3215:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3240:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "3222:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3222:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3212:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3212:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3205:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3205:43:6"
															},
															"nodeType": "YulIf",
															"src": "3202:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3185:5:6",
														"type": ""
													}
												],
												"src": "3149:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3329:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3339:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3361:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3348:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3348:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3339:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3404:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3377:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3377:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3377:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3307:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3315:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3323:5:6",
														"type": ""
													}
												],
												"src": "3277:139:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3488:263:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3534:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3536:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3536:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3536:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3509:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3518:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3505:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3505:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3530:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3501:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3501:32:6"
															},
															"nodeType": "YulIf",
															"src": "3498:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "3627:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3642:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3656:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3646:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3671:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3706:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3717:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3702:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3702:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3726:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3681:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3681:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3671:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3458:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3469:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3481:6:6",
														"type": ""
													}
												],
												"src": "3422:329:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3883:206:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3893:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3905:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3916:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3901:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3901:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3893:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3973:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3986:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3997:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3982:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3982:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3929:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3929:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3929:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4054:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4067:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4078:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4063:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4063:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4010:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4010:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4010:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3847:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3859:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3867:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3878:4:6",
														"type": ""
													}
												],
												"src": "3757:332:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4178:391:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4224:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4226:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4226:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4226:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4199:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4208:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4195:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4195:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4220:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4191:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4191:32:6"
															},
															"nodeType": "YulIf",
															"src": "4188:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "4317:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4332:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4346:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4336:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4361:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4396:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4407:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4392:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4392:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4416:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4371:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4371:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4361:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4444:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4459:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4473:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4463:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4489:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4524:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4535:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4520:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4520:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4544:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4499:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4499:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4489:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4140:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4151:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4163:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4171:6:6",
														"type": ""
													}
												],
												"src": "4095:474:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4658:391:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4704:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4706:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4706:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4706:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4679:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4688:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4675:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4675:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4700:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4671:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4671:32:6"
															},
															"nodeType": "YulIf",
															"src": "4668:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "4797:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4812:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4826:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4816:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4841:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4876:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4887:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4872:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4872:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4896:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4851:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4851:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4841:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4924:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4939:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4953:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4943:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4969:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5004:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5015:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5000:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5000:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5024:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4979:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4979:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4969:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4620:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4631:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4643:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4651:6:6",
														"type": ""
													}
												],
												"src": "4575:474:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5120:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5137:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5160:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5142:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5142:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5130:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5130:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5130:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5108:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5115:3:6",
														"type": ""
													}
												],
												"src": "5055:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5333:288:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5343:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5355:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5366:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5351:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5351:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5343:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5423:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5436:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5447:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5432:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5432:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5379:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5379:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5379:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5504:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5517:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5528:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5513:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5513:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5460:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5460:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5460:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "5586:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5599:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5610:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5595:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5595:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5542:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5542:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5542:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5289:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5301:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5309:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5317:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5328:4:6",
														"type": ""
													}
												],
												"src": "5179:442:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5669:48:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5679:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "5697:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5697:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5690:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5690:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5679:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5651:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5661:7:6",
														"type": ""
													}
												],
												"src": "5627:90:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5763:76:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5817:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5826:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5829:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5819:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5819:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5819:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5786:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5808:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "5793:14:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5793:21:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5783:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5783:32:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5776:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5776:40:6"
															},
															"nodeType": "YulIf",
															"src": "5773:60:6"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5756:5:6",
														"type": ""
													}
												],
												"src": "5723:116:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5905:77:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5915:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5930:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5924:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5924:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "5915:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5970:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "5946:23:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5946:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5946:30:6"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5883:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5891:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5899:5:6",
														"type": ""
													}
												],
												"src": "5845:137:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6062:271:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6108:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6110:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6110:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6110:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6083:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6092:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6079:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6079:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6104:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6075:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6075:32:6"
															},
															"nodeType": "YulIf",
															"src": "6072:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "6201:125:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6216:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6230:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6220:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6245:71:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6288:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6299:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6284:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6284:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6308:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "6255:28:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6255:61:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6245:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6032:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6043:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6055:6:6",
														"type": ""
													}
												],
												"src": "5988:345:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6367:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6384:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6387:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6377:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6377:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6377:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6481:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6484:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6474:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6474:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6474:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6505:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6508:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6498:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6498:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6498:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "6339:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6573:362:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6583:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6606:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6588:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6588:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "6583:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6617:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6640:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6622:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6622:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "6617:1:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6651:28:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6674:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6677:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "6670:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6670:9:6"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "6655:11:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6688:41:6",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "6717:11:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6699:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6699:30:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "6688:7:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6906:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6908:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6908:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6908:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "6839:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "6832:6:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6832:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "6862:1:6"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "6869:7:6"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "6878:1:6"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "6865:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6865:15:6"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "6859:2:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6859:22:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "6812:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6812:83:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6792:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6792:113:6"
															},
															"nodeType": "YulIf",
															"src": "6789:139:6"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6556:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6559:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "6565:7:6",
														"type": ""
													}
												],
												"src": "6525:410:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6969:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6986:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6989:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6979:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6979:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6979:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7083:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7086:4:6",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7076:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7076:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7076:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7107:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7110:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7100:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7100:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7100:15:6"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "6941:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7169:143:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7179:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7202:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7184:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7184:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "7179:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7213:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7236:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7218:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7218:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "7213:1:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7260:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "7262:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7262:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7262:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7257:1:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7250:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7250:9:6"
															},
															"nodeType": "YulIf",
															"src": "7247:35:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7292:14:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7301:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7304:1:6"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "7297:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7297:9:6"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7292:1:6"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7158:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7161:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "7167:1:6",
														"type": ""
													}
												],
												"src": "7127:185:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7362:147:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7372:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7395:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7377:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7377:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "7372:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7406:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7429:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7411:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7411:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "7406:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7440:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7451:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7454:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7447:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7447:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "7440:3:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7480:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7482:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7482:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7482:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7472:1:6"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "7475:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7469:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7469:10:6"
															},
															"nodeType": "YulIf",
															"src": "7466:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7349:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7352:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "7358:3:6",
														"type": ""
													}
												],
												"src": "7318:191:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7611:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7628:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7633:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7621:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7621:19:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7621:19:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7649:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7668:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7673:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7664:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7664:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "7649:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7583:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7588:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "7599:11:6",
														"type": ""
													}
												],
												"src": "7515:169:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7796:70:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7818:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7826:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7814:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7814:14:6"
																	},
																	{
																		"hexValue": "496e73756666696369656e74206f757470757420616d6f756e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7830:28:6",
																		"type": "",
																		"value": "Insufficient output amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7807:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7807:52:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7807:52:6"
														}
													]
												},
												"name": "store_literal_in_memory_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7788:6:6",
														"type": ""
													}
												],
												"src": "7690:176:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8018:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8028:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8094:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8099:2:6",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8035:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8035:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8028:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8200:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90",
																	"nodeType": "YulIdentifier",
																	"src": "8111:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8111:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8111:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8213:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8224:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8229:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8220:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8220:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8213:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8006:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8014:3:6",
														"type": ""
													}
												],
												"src": "7872:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8415:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8425:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8437:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8448:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8433:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8433:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8425:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8472:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8483:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8468:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8468:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8491:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8497:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8487:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8487:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8461:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8461:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8461:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8517:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8651:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8525:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8525:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8517:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8395:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8410:4:6",
														"type": ""
													}
												],
												"src": "8244:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8795:206:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8805:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8817:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8828:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8813:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8813:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8805:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8885:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8898:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8909:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8894:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8894:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8841:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8841:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8841:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8966:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8979:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8990:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8975:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8975:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8922:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8922:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8922:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8759:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8771:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8779:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8790:4:6",
														"type": ""
													}
												],
												"src": "8669:332:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9105:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9115:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9127:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9138:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9123:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9123:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9115:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9195:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9208:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9219:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9204:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9204:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9151:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9151:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9151:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9077:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9089:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9100:4:6",
														"type": ""
													}
												],
												"src": "9007:222:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9298:80:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9308:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "9323:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9317:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9317:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "9308:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9366:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9339:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9339:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9339:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "9276:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9284:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9292:5:6",
														"type": ""
													}
												],
												"src": "9235:143:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9461:274:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9507:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "9509:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9509:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9509:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9482:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9491:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9478:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9478:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9503:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9474:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9474:32:6"
															},
															"nodeType": "YulIf",
															"src": "9471:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "9600:128:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9615:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9629:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9619:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9644:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9690:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9701:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9686:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9686:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9710:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "9654:31:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9654:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9644:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9431:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9442:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9454:6:6",
														"type": ""
													}
												],
												"src": "9384:351:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9847:60:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9869:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9877:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9865:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9865:14:6"
																	},
																	{
																		"hexValue": "496e76616c6964207265736572766573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9881:18:6",
																		"type": "",
																		"value": "Invalid reserves"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9858:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9858:42:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9858:42:6"
														}
													]
												},
												"name": "store_literal_in_memory_185a9d5da6de3eebfb2e4ad4adad189f402b098c61f6e8e0c8d2b4a20a1faa2a",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9839:6:6",
														"type": ""
													}
												],
												"src": "9741:166:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10059:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10069:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10135:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10140:2:6",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10076:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10076:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10069:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10241:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_185a9d5da6de3eebfb2e4ad4adad189f402b098c61f6e8e0c8d2b4a20a1faa2a",
																	"nodeType": "YulIdentifier",
																	"src": "10152:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10152:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10152:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10254:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10265:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10270:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10261:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10261:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10254:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_185a9d5da6de3eebfb2e4ad4adad189f402b098c61f6e8e0c8d2b4a20a1faa2a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10047:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10055:3:6",
														"type": ""
													}
												],
												"src": "9913:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10456:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10466:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10478:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10489:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10474:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10474:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10466:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10513:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10524:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10509:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10509:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10532:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10538:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10528:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10528:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10502:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10502:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10502:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10558:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10692:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_185a9d5da6de3eebfb2e4ad4adad189f402b098c61f6e8e0c8d2b4a20a1faa2a_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10566:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10566:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10558:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_185a9d5da6de3eebfb2e4ad4adad189f402b098c61f6e8e0c8d2b4a20a1faa2a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10436:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10451:4:6",
														"type": ""
													}
												],
												"src": "10285:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10755:149:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10765:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10788:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10770:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10770:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "10765:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10799:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10822:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10804:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10804:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "10799:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10833:17:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10845:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10848:1:6"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "10841:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10841:9:6"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "10833:4:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10875:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10877:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10877:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10877:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "10866:4:6"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10872:1:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10863:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10863:11:6"
															},
															"nodeType": "YulIf",
															"src": "10860:37:6"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10741:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10744:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "10750:4:6",
														"type": ""
													}
												],
												"src": "10710:194:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11016:52:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11038:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11046:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11034:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11034:14:6"
																	},
																	{
																		"hexValue": "536c69704c6f636b",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11050:10:6",
																		"type": "",
																		"value": "SlipLock"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11027:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11027:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11027:34:6"
														}
													]
												},
												"name": "store_literal_in_memory_146985345a2b79e4aa6c7e4844006bcfe53a437d612514d7098dbcbad9d449dc",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11008:6:6",
														"type": ""
													}
												],
												"src": "10910:158:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11220:219:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11230:73:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11296:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11301:1:6",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11237:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11237:66:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11230:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11401:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_146985345a2b79e4aa6c7e4844006bcfe53a437d612514d7098dbcbad9d449dc",
																	"nodeType": "YulIdentifier",
																	"src": "11312:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11312:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11312:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11414:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11425:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11430:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11421:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11421:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11414:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_146985345a2b79e4aa6c7e4844006bcfe53a437d612514d7098dbcbad9d449dc_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11208:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11216:3:6",
														"type": ""
													}
												],
												"src": "11074:365:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11616:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11626:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11638:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11649:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11634:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11634:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11626:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11673:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11684:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11669:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11669:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11692:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11698:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11688:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11688:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11662:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11662:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11662:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11718:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11852:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_146985345a2b79e4aa6c7e4844006bcfe53a437d612514d7098dbcbad9d449dc_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11726:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11726:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11718:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_146985345a2b79e4aa6c7e4844006bcfe53a437d612514d7098dbcbad9d449dc__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11596:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11611:4:6",
														"type": ""
													}
												],
												"src": "11445:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11976:64:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11998:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12006:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11994:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11994:14:6"
																	},
																	{
																		"hexValue": "496e73756666696369656e742062616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12010:22:6",
																		"type": "",
																		"value": "Insufficient balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11987:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11987:46:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11987:46:6"
														}
													]
												},
												"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11968:6:6",
														"type": ""
													}
												],
												"src": "11870:170:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12192:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12202:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12268:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12273:2:6",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12209:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12209:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12202:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12374:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																	"nodeType": "YulIdentifier",
																	"src": "12285:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12285:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12285:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12387:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12398:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12403:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12394:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12394:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12387:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12180:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12188:3:6",
														"type": ""
													}
												],
												"src": "12046:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12589:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12599:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12611:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12622:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12607:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12607:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12599:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12646:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12657:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12642:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12642:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12665:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12671:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12661:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12661:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12635:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12635:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12635:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12691:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12825:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12699:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12699:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12691:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12569:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12584:4:6",
														"type": ""
													}
												],
												"src": "12418:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12949:67:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12971:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12979:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12967:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12967:14:6"
																	},
																	{
																		"hexValue": "496e76616c6964206c697175696469747920726174696f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12983:25:6",
																		"type": "",
																		"value": "Invalid liquidity ratio"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12960:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12960:49:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12960:49:6"
														}
													]
												},
												"name": "store_literal_in_memory_2e4cfbebddcf91980949e97537f2af8b49e403c7efea6b51f4c200d1dd98a066",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12941:6:6",
														"type": ""
													}
												],
												"src": "12843:173:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13168:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13178:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13244:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13249:2:6",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13185:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13185:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13178:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13350:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2e4cfbebddcf91980949e97537f2af8b49e403c7efea6b51f4c200d1dd98a066",
																	"nodeType": "YulIdentifier",
																	"src": "13261:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13261:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13261:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13363:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13374:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13379:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13370:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13370:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13363:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2e4cfbebddcf91980949e97537f2af8b49e403c7efea6b51f4c200d1dd98a066_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13156:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13164:3:6",
														"type": ""
													}
												],
												"src": "13022:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13565:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13575:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13587:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13598:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13583:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13583:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13575:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13622:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13633:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13618:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13618:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13641:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13647:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13637:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13637:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13611:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13611:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13611:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13667:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13801:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2e4cfbebddcf91980949e97537f2af8b49e403c7efea6b51f4c200d1dd98a066_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13675:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13675:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13667:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2e4cfbebddcf91980949e97537f2af8b49e403c7efea6b51f4c200d1dd98a066__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13545:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13560:4:6",
														"type": ""
													}
												],
												"src": "13394:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13925:54:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13947:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13955:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13943:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13943:14:6"
																	},
																	{
																		"hexValue": "736861726573203d2030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13959:12:6",
																		"type": "",
																		"value": "shares = 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13936:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13936:36:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13936:36:6"
														}
													]
												},
												"name": "store_literal_in_memory_4e208da9c6252e844e3faafb4bce1ac6103358d48cc8ab07bbca5bb9ee4b2f37",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13917:6:6",
														"type": ""
													}
												],
												"src": "13819:160:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14131:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14141:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14207:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14212:2:6",
																		"type": "",
																		"value": "10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14148:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14148:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14141:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14313:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4e208da9c6252e844e3faafb4bce1ac6103358d48cc8ab07bbca5bb9ee4b2f37",
																	"nodeType": "YulIdentifier",
																	"src": "14224:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14224:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14224:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14326:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14337:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14342:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14333:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14333:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14326:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4e208da9c6252e844e3faafb4bce1ac6103358d48cc8ab07bbca5bb9ee4b2f37_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14119:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14127:3:6",
														"type": ""
													}
												],
												"src": "13985:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14528:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14538:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14550:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14561:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14546:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14546:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14538:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14585:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14596:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14581:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14581:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14604:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14610:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14600:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14600:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14574:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14574:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14574:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14630:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14764:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4e208da9c6252e844e3faafb4bce1ac6103358d48cc8ab07bbca5bb9ee4b2f37_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14638:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14638:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14630:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4e208da9c6252e844e3faafb4bce1ac6103358d48cc8ab07bbca5bb9ee4b2f37__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14508:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14523:4:6",
														"type": ""
													}
												],
												"src": "14357:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14825:43:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14835:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14850:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14857:4:6",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "14846:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14846:16:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "14835:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14807:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "14817:7:6",
														"type": ""
													}
												],
												"src": "14782:86:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14915:77:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14970:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14979:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14982:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14972:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14972:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14972:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14938:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "14961:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nodeType": "YulIdentifier",
																					"src": "14945:15:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14945:22:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "14935:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14935:33:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14928:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14928:41:6"
															},
															"nodeType": "YulIf",
															"src": "14925:61:6"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14908:5:6",
														"type": ""
													}
												],
												"src": "14874:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15059:78:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15069:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "15084:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "15078:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "15078:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "15069:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15125:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "15100:24:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "15100:31:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15100:31:6"
														}
													]
												},
												"name": "abi_decode_t_uint8_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "15037:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15045:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15053:5:6",
														"type": ""
													}
												],
												"src": "14998:139:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15218:272:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15264:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "15266:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15266:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15266:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15239:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15248:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15235:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15235:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15260:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "15231:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "15231:32:6"
															},
															"nodeType": "YulIf",
															"src": "15228:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "15357:126:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "15372:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15386:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "15376:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "15401:72:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "15445:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "15456:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15441:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15441:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15465:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "15411:29:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15411:62:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "15401:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint8_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15188:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "15199:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15211:6:6",
														"type": ""
													}
												],
												"src": "15143:347:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15547:51:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15557:34:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15582:1:6",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15585:5:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "15578:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "15578:13:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "15557:8:6"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15528:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "15538:8:6",
														"type": ""
													}
												],
												"src": "15496:102:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15677:775:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15687:15:6",
															"value": {
																"name": "_power",
																"nodeType": "YulIdentifier",
																"src": "15696:6:6"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "15687:5:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15711:14:6",
															"value": {
																"name": "_base",
																"nodeType": "YulIdentifier",
																"src": "15720:5:6"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "15711:4:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15769:677:6",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "15857:22:6",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "15859:16:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "15859:18:6"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "15859:18:6"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "15835:4:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nodeType": "YulIdentifier",
																							"src": "15845:3:6"
																						},
																						{
																							"name": "base",
																							"nodeType": "YulIdentifier",
																							"src": "15850:4:6"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "15841:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15841:14:6"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "15832:2:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15832:24:6"
																		},
																		"nodeType": "YulIf",
																		"src": "15829:50:6"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "15924:419:6",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "16304:25:6",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nodeType": "YulIdentifier",
																								"src": "16317:5:6"
																							},
																							{
																								"name": "base",
																								"nodeType": "YulIdentifier",
																								"src": "16324:4:6"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "16313:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "16313:16:6"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "16304:5:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "15899:8:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15909:1:6",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "15895:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15895:16:6"
																		},
																		"nodeType": "YulIf",
																		"src": "15892:451:6"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "16356:23:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "16368:4:6"
																				},
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "16374:4:6"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nodeType": "YulIdentifier",
																				"src": "16364:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16364:15:6"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "16356:4:6"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "16392:44:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "16427:8:6"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nodeType": "YulIdentifier",
																				"src": "16404:22:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16404:32:6"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "16392:8:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "15745:8:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15755:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "15742:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "15742:15:6"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "15758:2:6",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "15738:3:6",
																"statements": []
															},
															"src": "15734:712:6"
														}
													]
												},
												"name": "checked_exp_helper",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nodeType": "YulTypedName",
														"src": "15632:6:6",
														"type": ""
													},
													{
														"name": "_base",
														"nodeType": "YulTypedName",
														"src": "15640:5:6",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "15647:8:6",
														"type": ""
													},
													{
														"name": "max",
														"nodeType": "YulTypedName",
														"src": "15657:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "15665:5:6",
														"type": ""
													},
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "15672:4:6",
														"type": ""
													}
												],
												"src": "15604:848:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16518:1013:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16713:20:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "16715:10:6",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "16724:1:6",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "16715:5:6"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "16726:5:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "16703:8:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "16696:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "16696:16:6"
															},
															"nodeType": "YulIf",
															"src": "16693:40:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16758:20:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "16760:10:6",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "16769:1:6",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "16760:5:6"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "16771:5:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "16752:4:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "16745:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "16745:12:6"
															},
															"nodeType": "YulIf",
															"src": "16742:36:6"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "16888:20:6",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "16890:10:6",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16899:1:6",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "16890:5:6"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "16901:5:6"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "16881:27:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16886:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "16932:176:6",
																		"statements": [
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "16967:22:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "16969:16:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "16969:18:6"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "16969:18:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "16952:8:6"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "16962:3:6",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "16949:2:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "16949:17:6"
																				},
																				"nodeType": "YulIf",
																				"src": "16946:43:6"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "17002:25:6",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "17015:1:6",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "17018:8:6"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nodeType": "YulIdentifier",
																						"src": "17011:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "17011:16:6"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "17002:5:6"
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "17058:22:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "17060:16:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "17060:18:6"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "17060:18:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "17046:5:6"
																						},
																						{
																							"name": "max",
																							"nodeType": "YulIdentifier",
																							"src": "17053:3:6"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "17043:2:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "17043:14:6"
																				},
																				"nodeType": "YulIf",
																				"src": "17040:40:6"
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "17093:5:6"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "16917:191:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16922:1:6",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "16838:4:6"
															},
															"nodeType": "YulSwitch",
															"src": "16831:277:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17240:123:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "17254:28:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "17267:4:6"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "17273:8:6"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nodeType": "YulIdentifier",
																				"src": "17263:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17263:19:6"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "17254:5:6"
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "17313:22:6",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "17315:16:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "17315:18:6"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "17315:18:6"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nodeType": "YulIdentifier",
																					"src": "17301:5:6"
																				},
																				{
																					"name": "max",
																					"nodeType": "YulIdentifier",
																					"src": "17308:3:6"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "17298:2:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17298:14:6"
																		},
																		"nodeType": "YulIf",
																		"src": "17295:40:6"
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "17348:5:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "17143:4:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "17149:2:6",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "17140:2:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17140:12:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "17157:8:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "17167:2:6",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "17154:2:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17154:16:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "17136:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17136:35:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "17192:4:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "17198:3:6",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "17189:2:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17189:13:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "17207:8:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "17217:2:6",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "17204:2:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17204:16:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "17185:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17185:36:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "17120:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "17120:111:6"
															},
															"nodeType": "YulIf",
															"src": "17117:246:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17373:57:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17407:1:6",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "17410:4:6"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "17416:8:6"
																	},
																	{
																		"name": "max",
																		"nodeType": "YulIdentifier",
																		"src": "17426:3:6"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nodeType": "YulIdentifier",
																	"src": "17388:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "17388:42:6"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "17373:5:6"
																},
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "17380:4:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17469:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "17471:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17471:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17471:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nodeType": "YulIdentifier",
																		"src": "17446:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nodeType": "YulIdentifier",
																				"src": "17457:3:6"
																			},
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "17462:4:6"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "17453:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17453:14:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "17443:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "17443:25:6"
															},
															"nodeType": "YulIf",
															"src": "17440:51:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17500:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nodeType": "YulIdentifier",
																		"src": "17513:5:6"
																	},
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "17520:4:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "17509:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "17509:16:6"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "17500:5:6"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "16488:4:6",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "16494:8:6",
														"type": ""
													},
													{
														"name": "max",
														"nodeType": "YulTypedName",
														"src": "16504:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "16512:5:6",
														"type": ""
													}
												],
												"src": "16458:1073:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17603:219:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17613:31:6",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "17639:4:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "17621:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "17621:23:6"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "17613:4:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "17653:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "17683:8:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "17665:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "17665:27:6"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nodeType": "YulIdentifier",
																	"src": "17653:8:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "17702:113:6",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "17732:4:6"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "17738:8:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17748:66:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nodeType": "YulIdentifier",
																	"src": "17711:20:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "17711:104:6"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "17702:5:6"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "17578:4:6",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "17584:8:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "17597:5:6",
														"type": ""
													}
												],
												"src": "17537:285:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17934:66:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17956:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17964:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17952:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17952:14:6"
																	},
																	{
																		"hexValue": "616d6f756e7430206f7220616d6f756e7431203d2030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17968:24:6",
																		"type": "",
																		"value": "amount0 or amount1 = 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17945:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "17945:48:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17945:48:6"
														}
													]
												},
												"name": "store_literal_in_memory_07f0348f6c2c1a6f3350d18d3a915d48f775a408df0934a0d28dec896cf2d48d",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17926:6:6",
														"type": ""
													}
												],
												"src": "17828:172:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18152:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18162:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18228:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18233:2:6",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18169:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "18169:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "18162:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18334:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_07f0348f6c2c1a6f3350d18d3a915d48f775a408df0934a0d28dec896cf2d48d",
																	"nodeType": "YulIdentifier",
																	"src": "18245:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "18245:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18245:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18347:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18358:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18363:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18354:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "18354:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "18347:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_07f0348f6c2c1a6f3350d18d3a915d48f775a408df0934a0d28dec896cf2d48d_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18140:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18148:3:6",
														"type": ""
													}
												],
												"src": "18006:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18549:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18559:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18571:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18582:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18567:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "18567:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18559:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18606:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18617:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18602:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18602:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18625:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18631:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18621:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18621:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18595:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "18595:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18595:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18651:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18785:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_07f0348f6c2c1a6f3350d18d3a915d48f775a408df0934a0d28dec896cf2d48d_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18659:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "18659:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18651:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_07f0348f6c2c1a6f3350d18d3a915d48f775a408df0934a0d28dec896cf2d48d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18529:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18544:4:6",
														"type": ""
													}
												],
												"src": "18378:419:6"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$664_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$664_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$664_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$664__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$664_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient output amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_185a9d5da6de3eebfb2e4ad4adad189f402b098c61f6e8e0c8d2b4a20a1faa2a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid reserves\")\n\n    }\n\n    function abi_encode_t_stringliteral_185a9d5da6de3eebfb2e4ad4adad189f402b098c61f6e8e0c8d2b4a20a1faa2a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_185a9d5da6de3eebfb2e4ad4adad189f402b098c61f6e8e0c8d2b4a20a1faa2a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_185a9d5da6de3eebfb2e4ad4adad189f402b098c61f6e8e0c8d2b4a20a1faa2a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_185a9d5da6de3eebfb2e4ad4adad189f402b098c61f6e8e0c8d2b4a20a1faa2a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_146985345a2b79e4aa6c7e4844006bcfe53a437d612514d7098dbcbad9d449dc(memPtr) {\n\n        mstore(add(memPtr, 0), \"SlipLock\")\n\n    }\n\n    function abi_encode_t_stringliteral_146985345a2b79e4aa6c7e4844006bcfe53a437d612514d7098dbcbad9d449dc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 8)\n        store_literal_in_memory_146985345a2b79e4aa6c7e4844006bcfe53a437d612514d7098dbcbad9d449dc(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_146985345a2b79e4aa6c7e4844006bcfe53a437d612514d7098dbcbad9d449dc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_146985345a2b79e4aa6c7e4844006bcfe53a437d612514d7098dbcbad9d449dc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2e4cfbebddcf91980949e97537f2af8b49e403c7efea6b51f4c200d1dd98a066(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid liquidity ratio\")\n\n    }\n\n    function abi_encode_t_stringliteral_2e4cfbebddcf91980949e97537f2af8b49e403c7efea6b51f4c200d1dd98a066_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_2e4cfbebddcf91980949e97537f2af8b49e403c7efea6b51f4c200d1dd98a066(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2e4cfbebddcf91980949e97537f2af8b49e403c7efea6b51f4c200d1dd98a066__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2e4cfbebddcf91980949e97537f2af8b49e403c7efea6b51f4c200d1dd98a066_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4e208da9c6252e844e3faafb4bce1ac6103358d48cc8ab07bbca5bb9ee4b2f37(memPtr) {\n\n        mstore(add(memPtr, 0), \"shares = 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_4e208da9c6252e844e3faafb4bce1ac6103358d48cc8ab07bbca5bb9ee4b2f37_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 10)\n        store_literal_in_memory_4e208da9c6252e844e3faafb4bce1ac6103358d48cc8ab07bbca5bb9ee4b2f37(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4e208da9c6252e844e3faafb4bce1ac6103358d48cc8ab07bbca5bb9ee4b2f37__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4e208da9c6252e844e3faafb4bce1ac6103358d48cc8ab07bbca5bb9ee4b2f37_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint8_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint256(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function store_literal_in_memory_07f0348f6c2c1a6f3350d18d3a915d48f775a408df0934a0d28dec896cf2d48d(memPtr) {\n\n        mstore(add(memPtr, 0), \"amount0 or amount1 = 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_07f0348f6c2c1a6f3350d18d3a915d48f775a408df0934a0d28dec896cf2d48d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_07f0348f6c2c1a6f3350d18d3a915d48f775a408df0934a0d28dec896cf2d48d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_07f0348f6c2c1a6f3350d18d3a915d48f775a408df0934a0d28dec896cf2d48d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_07f0348f6c2c1a6f3350d18d3a915d48f775a408df0934a0d28dec896cf2d48d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"1586": [
									{
										"length": 32,
										"start": 1085
									},
									{
										"length": 32,
										"start": 1135
									},
									{
										"length": 32,
										"start": 1694
									},
									{
										"length": 32,
										"start": 2696
									},
									{
										"length": 32,
										"start": 2858
									},
									{
										"length": 32,
										"start": 3621
									},
									{
										"length": 32,
										"start": 3783
									},
									{
										"length": 32,
										"start": 4430
									},
									{
										"length": 32,
										"start": 5051
									},
									{
										"length": 32,
										"start": 5597
									},
									{
										"length": 32,
										"start": 6260
									},
									{
										"length": 32,
										"start": 6777
									},
									{
										"length": 32,
										"start": 7430
									},
									{
										"length": 32,
										"start": 7743
									}
								],
								"1589": [
									{
										"length": 32,
										"start": 1532
									},
									{
										"length": 32,
										"start": 1848
									},
									{
										"length": 32,
										"start": 2195
									},
									{
										"length": 32,
										"start": 3012
									},
									{
										"length": 32,
										"start": 3291
									},
									{
										"length": 32,
										"start": 3937
									},
									{
										"length": 32,
										"start": 4591
									},
									{
										"length": 32,
										"start": 5205
									},
									{
										"length": 32,
										"start": 6098
									},
									{
										"length": 32,
										"start": 6414
									},
									{
										"length": 32,
										"start": 6582
									},
									{
										"length": 32,
										"start": 6927
									},
									{
										"length": 32,
										"start": 7584
									},
									{
										"length": 32,
										"start": 7902
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101215760003560e01c806394b918de116100ad578063a201ccf611610071578063a201ccf61461036e578063c9f4437e1461039f578063d21220a7146103cf578063f5eb42dc146103ed578063fcc2ba081461041d57610121565b806394b918de1461028f5780639c1e5375146102bf5780639c8f9f23146102ef5780639cd441da146103205780639e7a47571461035057610121565b80634d7d1598116100f45780634d7d1598146101b05780635a76f25e146101e057806362279b65146101fe57806370a082311461022e5780637a6a5e1b1461025e57610121565b80630dfe16811461012657806318160ddd14610144578063443cb4bc1461016257806346765bdc14610180575b600080fd5b61012e61043b565b60405161013b9190612107565b60405180910390f35b61014c61045f565b604051610159919061213b565b60405180910390f35b61016a610465565b604051610177919061213b565b60405180910390f35b61019a60048036038101906101959190612187565b61046b565b6040516101a7919061213b565b60405180910390f35b6101ca60048036038101906101c59190612187565b6107dc565b6040516101d7919061213b565b60405180910390f35b6101e8610889565b6040516101f5919061213b565b60405180910390f35b610218600480360381019061021391906121b4565b61088f565b604051610225919061213b565b60405180910390f35b61024860048036038101906102439190612245565b610c6a565b604051610255919061213b565b60405180910390f35b61027860048036038101906102739190612245565b610c82565b604051610286929190612272565b60405180910390f35b6102a960048036038101906102a49190612187565b610cd7565b6040516102b6919061213b565b60405180910390f35b6102d960048036038101906102d49190612187565b611005565b6040516102e6919061213b565b60405180910390f35b61030960048036038101906103049190612187565b6110b2565b604051610317929190612272565b60405180910390f35b61033a6004803603810190610335919061229b565b61114a565b604051610347919061213b565b60405180910390f35b6103586114f8565b604051610365919061213b565b60405180910390f35b610388600480360381019061038391906122db565b61153f565b604051610396929190612272565b60405180910390f35b6103b960048036038101906103b491906121b4565b6115d9565b6040516103c6919061213b565b60405180910390f35b6103d76119b4565b6040516103e49190612107565b60405180910390f35b61040760048036038101906104029190612245565b6119d8565b604051610414919061213b565b60405180910390f35b610425611a21565b604051610432919061213b565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b60035481565b60015481565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016104ca9392919061232a565b6020604051808303816000875af11580156104e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050d9190612399565b5060006103e86103e58461052191906123f5565b61052b9190612466565b90508060015461053b9190612497565b8160025461054991906123f5565b6105539190612466565b915060008211610598576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058f90612528565b60405180910390fd5b60006107d06001546105aa91906123f5565b6003546003866105ba91906123f5565b6105c491906123f5565b6105ce9190612466565b90506105fa60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682611be6565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b8152600401610655929190612548565b6020604051808303816000875af1158015610674573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106989190612399565b506107d57f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016106f59190612571565b602060405180830381865afa158015610712573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073691906125a1565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161078f9190612571565b602060405180830381865afa1580156107ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d091906125a1565b611c59565b5050919050565b6000806001541180156107f157506000600254115b80156107fd5750600082115b61083c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108339061261a565b60405180910390fd5b60006103e86103e58461084f91906123f5565b6108599190612466565b9050806001546108699190612497565b8160025461087791906123f5565b6108819190612466565b915050919050565b60025481565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b81526004016108ee9392919061232a565b6020604051808303816000875af115801561090d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109319190612399565b5060006103e86103e58661094591906123f5565b61094f9190612466565b90508060015461095f9190612497565b8160025461096d91906123f5565b6109779190612466565b9150600082116109bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109b390612528565b60405180910390fd5b6103e8836103e86109cd919061263a565b856109d891906123f5565b6109e29190612466565b821015610a24576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1b906126ba565b60405180910390fd5b60006107d0600154610a3691906123f5565b600354600388610a4691906123f5565b610a5091906123f5565b610a5a9190612466565b9050610a8660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682611be6565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b8152600401610ae1929190612548565b6020604051808303816000875af1158015610b00573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b249190612399565b50610c617f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610b819190612571565b602060405180830381865afa158015610b9e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bc291906125a1565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610c1b9190612571565b602060405180830381865afa158015610c38573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5c91906125a1565b611c59565b50509392505050565b60046020528060005260406000206000915090505481565b600080610cce83600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611c6b565b91509150915091565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610d369392919061232a565b6020604051808303816000875af1158015610d55573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d799190612399565b5060006103e86103e584610d8d91906123f5565b610d979190612466565b905080600154610da79190612497565b81600254610db591906123f5565b610dbf9190612466565b915060006107d0600154610dd391906123f5565b600354600386610de391906123f5565b610ded91906123f5565b610df79190612466565b9050610e2360008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682611be6565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b8152600401610e7e929190612548565b6020604051808303816000875af1158015610e9d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ec19190612399565b50610ffe7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610f1e9190612571565b602060405180830381865afa158015610f3b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f5f91906125a1565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610fb89190612571565b602060405180830381865afa158015610fd5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ff991906125a1565b611c59565b5050919050565b60008060015411801561101a57506000600254115b80156110265750600082115b611065576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161105c9061261a565b60405180910390fd5b60006103e86103e58461107891906123f5565b6110829190612466565b9050806002546110929190612497565b816001546110a091906123f5565b6110aa9190612466565b915050919050565b600080600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054831115611137576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161112e90612726565b60405180910390fd5b6111413384611c6b565b91509150915091565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b81526004016111a99392919061232a565b6020604051808303816000875af11580156111c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ec9190612399565b507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161124a9392919061232a565b6020604051808303816000875af1158015611269573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061128d9190612399565b50600060015411806112a157506000600254115b156113035781600154600254856112b891906123f5565b6112c29190612466565b14611302576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112f990612792565b60405180910390fd5b5b60006003540361132857611321828461131c91906123f5565b611f82565b9050611369565b6113666001546003548561133c91906123f5565b6113469190612466565b6002546003548561135791906123f5565b6113619190612466565b611ffc565b90505b600081116113ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113a3906127fe565b60405180910390fd5b6113b63382611be6565b6114f27f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016114129190612571565b602060405180830381865afa15801561142f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061145391906125a1565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016114ac9190612571565b602060405180830381865afa1580156114c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114ed91906125a1565b611c59565b92915050565b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b600080600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548311156115c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115bb90612726565b60405180910390fd5b6115ce8484611c6b565b915091509250929050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b81526004016116389392919061232a565b6020604051808303816000875af1158015611657573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061167b9190612399565b5060006103e86103e58661168f91906123f5565b6116999190612466565b9050806001546116a99190612497565b816002546116b791906123f5565b6116c19190612466565b915060008211611706576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116fd90612528565b60405180910390fd5b6103e8836103e8611717919061263a565b8561172291906123f5565b61172c9190612466565b82101561176e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611765906126ba565b60405180910390fd5b60006107d060015461178091906123f5565b60035460038861179091906123f5565b61179a91906123f5565b6117a49190612466565b90506117d060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682611be6565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b815260040161182b929190612548565b6020604051808303816000875af115801561184a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061186e9190612399565b506119ab7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016118cb9190612571565b602060405180830381865afa1580156118e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061190c91906125a1565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016119659190612571565b602060405180830381865afa158015611982573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119a691906125a1565b611c59565b50509392505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600080600154118015611a3657506000600254115b611a75576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a6c9061261a565b60405180910390fd5b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611ae2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b069190612857565b60ff16905060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611b78573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b9c9190612857565b60ff16905081600a611bae91906129b7565b600254611bbb91906123f5565b81600a611bc891906129b7565b600154611bd591906123f5565b611bdf9190612466565b9250505090565b80600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611c359190612497565b925050819055508060036000828254611c4e9190612497565b925050819055505050565b81600181905550806002819055505050565b60008060035460015484611c7f91906123f5565b611c899190612466565b915060035460025484611c9c91906123f5565b611ca69190612466565b9050600082118015611cb85750600081115b611cf7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611cee90612a4e565b60405180910390fd5b611d018484612015565b611e3d7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611d5d9190612571565b602060405180830381865afa158015611d7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d9e91906125a1565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611df79190612571565b602060405180830381865afa158015611e14573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e3891906125a1565b611c59565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85846040518363ffffffff1660e01b8152600401611e98929190612548565b6020604051808303816000875af1158015611eb7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611edb9190612399565b507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85836040518363ffffffff1660e01b8152600401611f37929190612548565b6020604051808303816000875af1158015611f56573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f7a9190612399565b509250929050565b60006003821115611fe95781905060006001600284611fa19190612466565b611fab9190612497565b90505b81811015611fe3578091506002818285611fc89190612466565b611fd29190612497565b611fdc9190612466565b9050611fae565b50611ff7565b60008214611ff657600190505b5b919050565b600081831061200b578161200d565b825b905092915050565b80600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254612064919061263a565b92505081905550806003600082825461207d919061263a565b925050819055505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006120cd6120c86120c384612088565b6120a8565b612088565b9050919050565b60006120df826120b2565b9050919050565b60006120f1826120d4565b9050919050565b612101816120e6565b82525050565b600060208201905061211c60008301846120f8565b92915050565b6000819050919050565b61213581612122565b82525050565b6000602082019050612150600083018461212c565b92915050565b600080fd5b61216481612122565b811461216f57600080fd5b50565b6000813590506121818161215b565b92915050565b60006020828403121561219d5761219c612156565b5b60006121ab84828501612172565b91505092915050565b6000806000606084860312156121cd576121cc612156565b5b60006121db86828701612172565b93505060206121ec86828701612172565b92505060406121fd86828701612172565b9150509250925092565b600061221282612088565b9050919050565b61222281612207565b811461222d57600080fd5b50565b60008135905061223f81612219565b92915050565b60006020828403121561225b5761225a612156565b5b600061226984828501612230565b91505092915050565b6000604082019050612287600083018561212c565b612294602083018461212c565b9392505050565b600080604083850312156122b2576122b1612156565b5b60006122c085828601612172565b92505060206122d185828601612172565b9150509250929050565b600080604083850312156122f2576122f1612156565b5b600061230085828601612230565b925050602061231185828601612172565b9150509250929050565b61232481612207565b82525050565b600060608201905061233f600083018661231b565b61234c602083018561231b565b612359604083018461212c565b949350505050565b60008115159050919050565b61237681612361565b811461238157600080fd5b50565b6000815190506123938161236d565b92915050565b6000602082840312156123af576123ae612156565b5b60006123bd84828501612384565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061240082612122565b915061240b83612122565b925082820261241981612122565b915082820484148315176124305761242f6123c6565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061247182612122565b915061247c83612122565b92508261248c5761248b612437565b5b828204905092915050565b60006124a282612122565b91506124ad83612122565b92508282019050808211156124c5576124c46123c6565b5b92915050565b600082825260208201905092915050565b7f496e73756666696369656e74206f757470757420616d6f756e74000000000000600082015250565b6000612512601a836124cb565b915061251d826124dc565b602082019050919050565b6000602082019050818103600083015261254181612505565b9050919050565b600060408201905061255d600083018561231b565b61256a602083018461212c565b9392505050565b6000602082019050612586600083018461231b565b92915050565b60008151905061259b8161215b565b92915050565b6000602082840312156125b7576125b6612156565b5b60006125c58482850161258c565b91505092915050565b7f496e76616c696420726573657276657300000000000000000000000000000000600082015250565b60006126046010836124cb565b915061260f826125ce565b602082019050919050565b60006020820190508181036000830152612633816125f7565b9050919050565b600061264582612122565b915061265083612122565b9250828203905081811115612668576126676123c6565b5b92915050565b7f536c69704c6f636b000000000000000000000000000000000000000000000000600082015250565b60006126a46008836124cb565b91506126af8261266e565b602082019050919050565b600060208201905081810360008301526126d381612697565b9050919050565b7f496e73756666696369656e742062616c616e6365000000000000000000000000600082015250565b60006127106014836124cb565b915061271b826126da565b602082019050919050565b6000602082019050818103600083015261273f81612703565b9050919050565b7f496e76616c6964206c697175696469747920726174696f000000000000000000600082015250565b600061277c6017836124cb565b915061278782612746565b602082019050919050565b600060208201905081810360008301526127ab8161276f565b9050919050565b7f736861726573203d203000000000000000000000000000000000000000000000600082015250565b60006127e8600a836124cb565b91506127f3826127b2565b602082019050919050565b60006020820190508181036000830152612817816127db565b9050919050565b600060ff82169050919050565b6128348161281e565b811461283f57600080fd5b50565b6000815190506128518161282b565b92915050565b60006020828403121561286d5761286c612156565b5b600061287b84828501612842565b91505092915050565b60008160011c9050919050565b6000808291508390505b60018511156128db578086048111156128b7576128b66123c6565b5b60018516156128c65780820291505b80810290506128d485612884565b945061289b565b94509492505050565b6000826128f457600190506129b0565b8161290257600090506129b0565b8160018114612918576002811461292257612951565b60019150506129b0565b60ff841115612934576129336123c6565b5b8360020a91508482111561294b5761294a6123c6565b5b506129b0565b5060208310610133831016604e8410600b84101617156129865782820a905083811115612981576129806123c6565b5b6129b0565b6129938484846001612891565b925090508184048111156129aa576129a96123c6565b5b81810290505b9392505050565b60006129c282612122565b91506129cd83612122565b92506129fa7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846128e4565b905092915050565b7f616d6f756e7430206f7220616d6f756e7431203d203000000000000000000000600082015250565b6000612a386016836124cb565b9150612a4382612a02565b602082019050919050565b60006020820190508181036000830152612a6781612a2b565b905091905056fea2646970667358221220601235d6ce7d1875b069b3b46acee9450468d2f1aed68ee5dbe1551fdd09d31764736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x121 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x94B918DE GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xA201CCF6 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA201CCF6 EQ PUSH2 0x36E JUMPI DUP1 PUSH4 0xC9F4437E EQ PUSH2 0x39F JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x3CF JUMPI DUP1 PUSH4 0xF5EB42DC EQ PUSH2 0x3ED JUMPI DUP1 PUSH4 0xFCC2BA08 EQ PUSH2 0x41D JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x94B918DE EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0x9C1E5375 EQ PUSH2 0x2BF JUMPI DUP1 PUSH4 0x9C8F9F23 EQ PUSH2 0x2EF JUMPI DUP1 PUSH4 0x9CD441DA EQ PUSH2 0x320 JUMPI DUP1 PUSH4 0x9E7A4757 EQ PUSH2 0x350 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x4D7D1598 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x4D7D1598 EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0x5A76F25E EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x62279B65 EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0x7A6A5E1B EQ PUSH2 0x25E JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0xDFE1681 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0x443CB4BC EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0x46765BDC EQ PUSH2 0x180 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12E PUSH2 0x43B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13B SWAP2 SWAP1 PUSH2 0x2107 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14C PUSH2 0x45F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x159 SWAP2 SWAP1 PUSH2 0x213B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16A PUSH2 0x465 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x177 SWAP2 SWAP1 PUSH2 0x213B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x195 SWAP2 SWAP1 PUSH2 0x2187 JUMP JUMPDEST PUSH2 0x46B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A7 SWAP2 SWAP1 PUSH2 0x213B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C5 SWAP2 SWAP1 PUSH2 0x2187 JUMP JUMPDEST PUSH2 0x7DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D7 SWAP2 SWAP1 PUSH2 0x213B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E8 PUSH2 0x889 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F5 SWAP2 SWAP1 PUSH2 0x213B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x218 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x213 SWAP2 SWAP1 PUSH2 0x21B4 JUMP JUMPDEST PUSH2 0x88F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x225 SWAP2 SWAP1 PUSH2 0x213B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x248 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x243 SWAP2 SWAP1 PUSH2 0x2245 JUMP JUMPDEST PUSH2 0xC6A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x213B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x278 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x273 SWAP2 SWAP1 PUSH2 0x2245 JUMP JUMPDEST PUSH2 0xC82 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x286 SWAP3 SWAP2 SWAP1 PUSH2 0x2272 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A4 SWAP2 SWAP1 PUSH2 0x2187 JUMP JUMPDEST PUSH2 0xCD7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B6 SWAP2 SWAP1 PUSH2 0x213B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D4 SWAP2 SWAP1 PUSH2 0x2187 JUMP JUMPDEST PUSH2 0x1005 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E6 SWAP2 SWAP1 PUSH2 0x213B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x309 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x304 SWAP2 SWAP1 PUSH2 0x2187 JUMP JUMPDEST PUSH2 0x10B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x317 SWAP3 SWAP2 SWAP1 PUSH2 0x2272 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x335 SWAP2 SWAP1 PUSH2 0x229B JUMP JUMPDEST PUSH2 0x114A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x347 SWAP2 SWAP1 PUSH2 0x213B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x358 PUSH2 0x14F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x365 SWAP2 SWAP1 PUSH2 0x213B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x388 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x383 SWAP2 SWAP1 PUSH2 0x22DB JUMP JUMPDEST PUSH2 0x153F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x396 SWAP3 SWAP2 SWAP1 PUSH2 0x2272 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B4 SWAP2 SWAP1 PUSH2 0x21B4 JUMP JUMPDEST PUSH2 0x15D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C6 SWAP2 SWAP1 PUSH2 0x213B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D7 PUSH2 0x19B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E4 SWAP2 SWAP1 PUSH2 0x2107 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x407 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x402 SWAP2 SWAP1 PUSH2 0x2245 JUMP JUMPDEST PUSH2 0x19D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x414 SWAP2 SWAP1 PUSH2 0x213B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x425 PUSH2 0x1A21 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x432 SWAP2 SWAP1 PUSH2 0x213B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4CA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x232A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4E9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x50D SWAP2 SWAP1 PUSH2 0x2399 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x3E8 PUSH2 0x3E5 DUP5 PUSH2 0x521 SWAP2 SWAP1 PUSH2 0x23F5 JUMP JUMPDEST PUSH2 0x52B SWAP2 SWAP1 PUSH2 0x2466 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 SLOAD PUSH2 0x53B SWAP2 SWAP1 PUSH2 0x2497 JUMP JUMPDEST DUP2 PUSH1 0x2 SLOAD PUSH2 0x549 SWAP2 SWAP1 PUSH2 0x23F5 JUMP JUMPDEST PUSH2 0x553 SWAP2 SWAP1 PUSH2 0x2466 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 GT PUSH2 0x598 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58F SWAP1 PUSH2 0x2528 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x7D0 PUSH1 0x1 SLOAD PUSH2 0x5AA SWAP2 SWAP1 PUSH2 0x23F5 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x3 DUP7 PUSH2 0x5BA SWAP2 SWAP1 PUSH2 0x23F5 JUMP JUMPDEST PUSH2 0x5C4 SWAP2 SWAP1 PUSH2 0x23F5 JUMP JUMPDEST PUSH2 0x5CE SWAP2 SWAP1 PUSH2 0x2466 JUMP JUMPDEST SWAP1 POP PUSH2 0x5FA PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH2 0x1BE6 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x655 SWAP3 SWAP2 SWAP1 PUSH2 0x2548 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x674 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x698 SWAP2 SWAP1 PUSH2 0x2399 JUMP JUMPDEST POP PUSH2 0x7D5 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F5 SWAP2 SWAP1 PUSH2 0x2571 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x712 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x736 SWAP2 SWAP1 PUSH2 0x25A1 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x78F SWAP2 SWAP1 PUSH2 0x2571 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7AC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7D0 SWAP2 SWAP1 PUSH2 0x25A1 JUMP JUMPDEST PUSH2 0x1C59 JUMP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SLOAD GT DUP1 ISZERO PUSH2 0x7F1 JUMPI POP PUSH1 0x0 PUSH1 0x2 SLOAD GT JUMPDEST DUP1 ISZERO PUSH2 0x7FD JUMPI POP PUSH1 0x0 DUP3 GT JUMPDEST PUSH2 0x83C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x833 SWAP1 PUSH2 0x261A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3E8 PUSH2 0x3E5 DUP5 PUSH2 0x84F SWAP2 SWAP1 PUSH2 0x23F5 JUMP JUMPDEST PUSH2 0x859 SWAP2 SWAP1 PUSH2 0x2466 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 SLOAD PUSH2 0x869 SWAP2 SWAP1 PUSH2 0x2497 JUMP JUMPDEST DUP2 PUSH1 0x2 SLOAD PUSH2 0x877 SWAP2 SWAP1 PUSH2 0x23F5 JUMP JUMPDEST PUSH2 0x881 SWAP2 SWAP1 PUSH2 0x2466 JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8EE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x232A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x90D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x931 SWAP2 SWAP1 PUSH2 0x2399 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x3E8 PUSH2 0x3E5 DUP7 PUSH2 0x945 SWAP2 SWAP1 PUSH2 0x23F5 JUMP JUMPDEST PUSH2 0x94F SWAP2 SWAP1 PUSH2 0x2466 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 SLOAD PUSH2 0x95F SWAP2 SWAP1 PUSH2 0x2497 JUMP JUMPDEST DUP2 PUSH1 0x2 SLOAD PUSH2 0x96D SWAP2 SWAP1 PUSH2 0x23F5 JUMP JUMPDEST PUSH2 0x977 SWAP2 SWAP1 PUSH2 0x2466 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 GT PUSH2 0x9BC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9B3 SWAP1 PUSH2 0x2528 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3E8 DUP4 PUSH2 0x3E8 PUSH2 0x9CD SWAP2 SWAP1 PUSH2 0x263A JUMP JUMPDEST DUP6 PUSH2 0x9D8 SWAP2 SWAP1 PUSH2 0x23F5 JUMP JUMPDEST PUSH2 0x9E2 SWAP2 SWAP1 PUSH2 0x2466 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0xA24 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA1B SWAP1 PUSH2 0x26BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x7D0 PUSH1 0x1 SLOAD PUSH2 0xA36 SWAP2 SWAP1 PUSH2 0x23F5 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x3 DUP9 PUSH2 0xA46 SWAP2 SWAP1 PUSH2 0x23F5 JUMP JUMPDEST PUSH2 0xA50 SWAP2 SWAP1 PUSH2 0x23F5 JUMP JUMPDEST PUSH2 0xA5A SWAP2 SWAP1 PUSH2 0x2466 JUMP JUMPDEST SWAP1 POP PUSH2 0xA86 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH2 0x1BE6 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE1 SWAP3 SWAP2 SWAP1 PUSH2 0x2548 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB00 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB24 SWAP2 SWAP1 PUSH2 0x2399 JUMP JUMPDEST POP PUSH2 0xC61 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB81 SWAP2 SWAP1 PUSH2 0x2571 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB9E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBC2 SWAP2 SWAP1 PUSH2 0x25A1 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC1B SWAP2 SWAP1 PUSH2 0x2571 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC38 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC5C SWAP2 SWAP1 PUSH2 0x25A1 JUMP JUMPDEST PUSH2 0x1C59 JUMP JUMPDEST POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xCCE DUP4 PUSH1 0x4 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1C6B JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD36 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x232A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD55 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD79 SWAP2 SWAP1 PUSH2 0x2399 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x3E8 PUSH2 0x3E5 DUP5 PUSH2 0xD8D SWAP2 SWAP1 PUSH2 0x23F5 JUMP JUMPDEST PUSH2 0xD97 SWAP2 SWAP1 PUSH2 0x2466 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 SLOAD PUSH2 0xDA7 SWAP2 SWAP1 PUSH2 0x2497 JUMP JUMPDEST DUP2 PUSH1 0x2 SLOAD PUSH2 0xDB5 SWAP2 SWAP1 PUSH2 0x23F5 JUMP JUMPDEST PUSH2 0xDBF SWAP2 SWAP1 PUSH2 0x2466 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 PUSH2 0x7D0 PUSH1 0x1 SLOAD PUSH2 0xDD3 SWAP2 SWAP1 PUSH2 0x23F5 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x3 DUP7 PUSH2 0xDE3 SWAP2 SWAP1 PUSH2 0x23F5 JUMP JUMPDEST PUSH2 0xDED SWAP2 SWAP1 PUSH2 0x23F5 JUMP JUMPDEST PUSH2 0xDF7 SWAP2 SWAP1 PUSH2 0x2466 JUMP JUMPDEST SWAP1 POP PUSH2 0xE23 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH2 0x1BE6 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE7E SWAP3 SWAP2 SWAP1 PUSH2 0x2548 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE9D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEC1 SWAP2 SWAP1 PUSH2 0x2399 JUMP JUMPDEST POP PUSH2 0xFFE PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF1E SWAP2 SWAP1 PUSH2 0x2571 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF3B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF5F SWAP2 SWAP1 PUSH2 0x25A1 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB8 SWAP2 SWAP1 PUSH2 0x2571 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFD5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFF9 SWAP2 SWAP1 PUSH2 0x25A1 JUMP JUMPDEST PUSH2 0x1C59 JUMP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SLOAD GT DUP1 ISZERO PUSH2 0x101A JUMPI POP PUSH1 0x0 PUSH1 0x2 SLOAD GT JUMPDEST DUP1 ISZERO PUSH2 0x1026 JUMPI POP PUSH1 0x0 DUP3 GT JUMPDEST PUSH2 0x1065 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x105C SWAP1 PUSH2 0x261A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3E8 PUSH2 0x3E5 DUP5 PUSH2 0x1078 SWAP2 SWAP1 PUSH2 0x23F5 JUMP JUMPDEST PUSH2 0x1082 SWAP2 SWAP1 PUSH2 0x2466 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 SLOAD PUSH2 0x1092 SWAP2 SWAP1 PUSH2 0x2497 JUMP JUMPDEST DUP2 PUSH1 0x1 SLOAD PUSH2 0x10A0 SWAP2 SWAP1 PUSH2 0x23F5 JUMP JUMPDEST PUSH2 0x10AA SWAP2 SWAP1 PUSH2 0x2466 JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP4 GT ISZERO PUSH2 0x1137 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x112E SWAP1 PUSH2 0x2726 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1141 CALLER DUP5 PUSH2 0x1C6B JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11A9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x232A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11C8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11EC SWAP2 SWAP1 PUSH2 0x2399 JUMP JUMPDEST POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x124A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x232A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1269 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x128D SWAP2 SWAP1 PUSH2 0x2399 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x1 SLOAD GT DUP1 PUSH2 0x12A1 JUMPI POP PUSH1 0x0 PUSH1 0x2 SLOAD GT JUMPDEST ISZERO PUSH2 0x1303 JUMPI DUP2 PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD DUP6 PUSH2 0x12B8 SWAP2 SWAP1 PUSH2 0x23F5 JUMP JUMPDEST PUSH2 0x12C2 SWAP2 SWAP1 PUSH2 0x2466 JUMP JUMPDEST EQ PUSH2 0x1302 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12F9 SWAP1 PUSH2 0x2792 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SUB PUSH2 0x1328 JUMPI PUSH2 0x1321 DUP3 DUP5 PUSH2 0x131C SWAP2 SWAP1 PUSH2 0x23F5 JUMP JUMPDEST PUSH2 0x1F82 JUMP JUMPDEST SWAP1 POP PUSH2 0x1369 JUMP JUMPDEST PUSH2 0x1366 PUSH1 0x1 SLOAD PUSH1 0x3 SLOAD DUP6 PUSH2 0x133C SWAP2 SWAP1 PUSH2 0x23F5 JUMP JUMPDEST PUSH2 0x1346 SWAP2 SWAP1 PUSH2 0x2466 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD DUP6 PUSH2 0x1357 SWAP2 SWAP1 PUSH2 0x23F5 JUMP JUMPDEST PUSH2 0x1361 SWAP2 SWAP1 PUSH2 0x2466 JUMP JUMPDEST PUSH2 0x1FFC JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x13AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13A3 SWAP1 PUSH2 0x27FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13B6 CALLER DUP3 PUSH2 0x1BE6 JUMP JUMPDEST PUSH2 0x14F2 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1412 SWAP2 SWAP1 PUSH2 0x2571 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x142F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1453 SWAP2 SWAP1 PUSH2 0x25A1 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14AC SWAP2 SWAP1 PUSH2 0x2571 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x14C9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14ED SWAP2 SWAP1 PUSH2 0x25A1 JUMP JUMPDEST PUSH2 0x1C59 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP4 GT ISZERO PUSH2 0x15C4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15BB SWAP1 PUSH2 0x2726 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x15CE DUP5 DUP5 PUSH2 0x1C6B JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1638 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x232A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1657 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x167B SWAP2 SWAP1 PUSH2 0x2399 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x3E8 PUSH2 0x3E5 DUP7 PUSH2 0x168F SWAP2 SWAP1 PUSH2 0x23F5 JUMP JUMPDEST PUSH2 0x1699 SWAP2 SWAP1 PUSH2 0x2466 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 SLOAD PUSH2 0x16A9 SWAP2 SWAP1 PUSH2 0x2497 JUMP JUMPDEST DUP2 PUSH1 0x2 SLOAD PUSH2 0x16B7 SWAP2 SWAP1 PUSH2 0x23F5 JUMP JUMPDEST PUSH2 0x16C1 SWAP2 SWAP1 PUSH2 0x2466 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 GT PUSH2 0x1706 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16FD SWAP1 PUSH2 0x2528 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3E8 DUP4 PUSH2 0x3E8 PUSH2 0x1717 SWAP2 SWAP1 PUSH2 0x263A JUMP JUMPDEST DUP6 PUSH2 0x1722 SWAP2 SWAP1 PUSH2 0x23F5 JUMP JUMPDEST PUSH2 0x172C SWAP2 SWAP1 PUSH2 0x2466 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x176E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1765 SWAP1 PUSH2 0x26BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x7D0 PUSH1 0x1 SLOAD PUSH2 0x1780 SWAP2 SWAP1 PUSH2 0x23F5 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x3 DUP9 PUSH2 0x1790 SWAP2 SWAP1 PUSH2 0x23F5 JUMP JUMPDEST PUSH2 0x179A SWAP2 SWAP1 PUSH2 0x23F5 JUMP JUMPDEST PUSH2 0x17A4 SWAP2 SWAP1 PUSH2 0x2466 JUMP JUMPDEST SWAP1 POP PUSH2 0x17D0 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH2 0x1BE6 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x182B SWAP3 SWAP2 SWAP1 PUSH2 0x2548 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x184A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x186E SWAP2 SWAP1 PUSH2 0x2399 JUMP JUMPDEST POP PUSH2 0x19AB PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18CB SWAP2 SWAP1 PUSH2 0x2571 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x18E8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x190C SWAP2 SWAP1 PUSH2 0x25A1 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1965 SWAP2 SWAP1 PUSH2 0x2571 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1982 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x19A6 SWAP2 SWAP1 PUSH2 0x25A1 JUMP JUMPDEST PUSH2 0x1C59 JUMP JUMPDEST POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SLOAD GT DUP1 ISZERO PUSH2 0x1A36 JUMPI POP PUSH1 0x0 PUSH1 0x2 SLOAD GT JUMPDEST PUSH2 0x1A75 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A6C SWAP1 PUSH2 0x261A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1AE2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B06 SWAP2 SWAP1 PUSH2 0x2857 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B78 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B9C SWAP2 SWAP1 PUSH2 0x2857 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP DUP2 PUSH1 0xA PUSH2 0x1BAE SWAP2 SWAP1 PUSH2 0x29B7 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x1BBB SWAP2 SWAP1 PUSH2 0x23F5 JUMP JUMPDEST DUP2 PUSH1 0xA PUSH2 0x1BC8 SWAP2 SWAP1 PUSH2 0x29B7 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x1BD5 SWAP2 SWAP1 PUSH2 0x23F5 JUMP JUMPDEST PUSH2 0x1BDF SWAP2 SWAP1 PUSH2 0x2466 JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1C35 SWAP2 SWAP1 PUSH2 0x2497 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1C4E SWAP2 SWAP1 PUSH2 0x2497 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 SLOAD PUSH1 0x1 SLOAD DUP5 PUSH2 0x1C7F SWAP2 SWAP1 PUSH2 0x23F5 JUMP JUMPDEST PUSH2 0x1C89 SWAP2 SWAP1 PUSH2 0x2466 JUMP JUMPDEST SWAP2 POP PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD DUP5 PUSH2 0x1C9C SWAP2 SWAP1 PUSH2 0x23F5 JUMP JUMPDEST PUSH2 0x1CA6 SWAP2 SWAP1 PUSH2 0x2466 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0x1CB8 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST PUSH2 0x1CF7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CEE SWAP1 PUSH2 0x2A4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1D01 DUP5 DUP5 PUSH2 0x2015 JUMP JUMPDEST PUSH2 0x1E3D PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D5D SWAP2 SWAP1 PUSH2 0x2571 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D7A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D9E SWAP2 SWAP1 PUSH2 0x25A1 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DF7 SWAP2 SWAP1 PUSH2 0x2571 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E14 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E38 SWAP2 SWAP1 PUSH2 0x25A1 JUMP JUMPDEST PUSH2 0x1C59 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E98 SWAP3 SWAP2 SWAP1 PUSH2 0x2548 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1EB7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1EDB SWAP2 SWAP1 PUSH2 0x2399 JUMP JUMPDEST POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F37 SWAP3 SWAP2 SWAP1 PUSH2 0x2548 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1F56 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1F7A SWAP2 SWAP1 PUSH2 0x2399 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP3 GT ISZERO PUSH2 0x1FE9 JUMPI DUP2 SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 DUP5 PUSH2 0x1FA1 SWAP2 SWAP1 PUSH2 0x2466 JUMP JUMPDEST PUSH2 0x1FAB SWAP2 SWAP1 PUSH2 0x2497 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1FE3 JUMPI DUP1 SWAP2 POP PUSH1 0x2 DUP2 DUP3 DUP6 PUSH2 0x1FC8 SWAP2 SWAP1 PUSH2 0x2466 JUMP JUMPDEST PUSH2 0x1FD2 SWAP2 SWAP1 PUSH2 0x2497 JUMP JUMPDEST PUSH2 0x1FDC SWAP2 SWAP1 PUSH2 0x2466 JUMP JUMPDEST SWAP1 POP PUSH2 0x1FAE JUMP JUMPDEST POP PUSH2 0x1FF7 JUMP JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x1FF6 JUMPI PUSH1 0x1 SWAP1 POP JUMPDEST JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x200B JUMPI DUP2 PUSH2 0x200D JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2064 SWAP2 SWAP1 PUSH2 0x263A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x207D SWAP2 SWAP1 PUSH2 0x263A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20CD PUSH2 0x20C8 PUSH2 0x20C3 DUP5 PUSH2 0x2088 JUMP JUMPDEST PUSH2 0x20A8 JUMP JUMPDEST PUSH2 0x2088 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20DF DUP3 PUSH2 0x20B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20F1 DUP3 PUSH2 0x20D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2101 DUP2 PUSH2 0x20E6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x211C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x20F8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2135 DUP2 PUSH2 0x2122 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2150 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x212C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2164 DUP2 PUSH2 0x2122 JUMP JUMPDEST DUP2 EQ PUSH2 0x216F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2181 DUP2 PUSH2 0x215B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x219D JUMPI PUSH2 0x219C PUSH2 0x2156 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x21AB DUP5 DUP3 DUP6 ADD PUSH2 0x2172 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x21CD JUMPI PUSH2 0x21CC PUSH2 0x2156 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x21DB DUP7 DUP3 DUP8 ADD PUSH2 0x2172 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x21EC DUP7 DUP3 DUP8 ADD PUSH2 0x2172 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x21FD DUP7 DUP3 DUP8 ADD PUSH2 0x2172 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2212 DUP3 PUSH2 0x2088 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2222 DUP2 PUSH2 0x2207 JUMP JUMPDEST DUP2 EQ PUSH2 0x222D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x223F DUP2 PUSH2 0x2219 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x225B JUMPI PUSH2 0x225A PUSH2 0x2156 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2269 DUP5 DUP3 DUP6 ADD PUSH2 0x2230 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2287 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x212C JUMP JUMPDEST PUSH2 0x2294 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x212C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x22B2 JUMPI PUSH2 0x22B1 PUSH2 0x2156 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x22C0 DUP6 DUP3 DUP7 ADD PUSH2 0x2172 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x22D1 DUP6 DUP3 DUP7 ADD PUSH2 0x2172 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x22F2 JUMPI PUSH2 0x22F1 PUSH2 0x2156 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2300 DUP6 DUP3 DUP7 ADD PUSH2 0x2230 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2311 DUP6 DUP3 DUP7 ADD PUSH2 0x2172 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2324 DUP2 PUSH2 0x2207 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x233F PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x231B JUMP JUMPDEST PUSH2 0x234C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x231B JUMP JUMPDEST PUSH2 0x2359 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x212C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2376 DUP2 PUSH2 0x2361 JUMP JUMPDEST DUP2 EQ PUSH2 0x2381 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2393 DUP2 PUSH2 0x236D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23AF JUMPI PUSH2 0x23AE PUSH2 0x2156 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x23BD DUP5 DUP3 DUP6 ADD PUSH2 0x2384 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2400 DUP3 PUSH2 0x2122 JUMP JUMPDEST SWAP2 POP PUSH2 0x240B DUP4 PUSH2 0x2122 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2419 DUP2 PUSH2 0x2122 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2430 JUMPI PUSH2 0x242F PUSH2 0x23C6 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2471 DUP3 PUSH2 0x2122 JUMP JUMPDEST SWAP2 POP PUSH2 0x247C DUP4 PUSH2 0x2122 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x248C JUMPI PUSH2 0x248B PUSH2 0x2437 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24A2 DUP3 PUSH2 0x2122 JUMP JUMPDEST SWAP2 POP PUSH2 0x24AD DUP4 PUSH2 0x2122 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x24C5 JUMPI PUSH2 0x24C4 PUSH2 0x23C6 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74206F757470757420616D6F756E74000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2512 PUSH1 0x1A DUP4 PUSH2 0x24CB JUMP JUMPDEST SWAP2 POP PUSH2 0x251D DUP3 PUSH2 0x24DC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2541 DUP2 PUSH2 0x2505 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x255D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x231B JUMP JUMPDEST PUSH2 0x256A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x212C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2586 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x231B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x259B DUP2 PUSH2 0x215B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25B7 JUMPI PUSH2 0x25B6 PUSH2 0x2156 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x25C5 DUP5 DUP3 DUP6 ADD PUSH2 0x258C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420726573657276657300000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2604 PUSH1 0x10 DUP4 PUSH2 0x24CB JUMP JUMPDEST SWAP2 POP PUSH2 0x260F DUP3 PUSH2 0x25CE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2633 DUP2 PUSH2 0x25F7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2645 DUP3 PUSH2 0x2122 JUMP JUMPDEST SWAP2 POP PUSH2 0x2650 DUP4 PUSH2 0x2122 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2668 JUMPI PUSH2 0x2667 PUSH2 0x23C6 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x536C69704C6F636B000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26A4 PUSH1 0x8 DUP4 PUSH2 0x24CB JUMP JUMPDEST SWAP2 POP PUSH2 0x26AF DUP3 PUSH2 0x266E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x26D3 DUP2 PUSH2 0x2697 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2710 PUSH1 0x14 DUP4 PUSH2 0x24CB JUMP JUMPDEST SWAP2 POP PUSH2 0x271B DUP3 PUSH2 0x26DA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x273F DUP2 PUSH2 0x2703 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964206C697175696469747920726174696F000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x277C PUSH1 0x17 DUP4 PUSH2 0x24CB JUMP JUMPDEST SWAP2 POP PUSH2 0x2787 DUP3 PUSH2 0x2746 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x27AB DUP2 PUSH2 0x276F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x736861726573203D203000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27E8 PUSH1 0xA DUP4 PUSH2 0x24CB JUMP JUMPDEST SWAP2 POP PUSH2 0x27F3 DUP3 PUSH2 0x27B2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2817 DUP2 PUSH2 0x27DB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2834 DUP2 PUSH2 0x281E JUMP JUMPDEST DUP2 EQ PUSH2 0x283F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2851 DUP2 PUSH2 0x282B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x286D JUMPI PUSH2 0x286C PUSH2 0x2156 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x287B DUP5 DUP3 DUP6 ADD PUSH2 0x2842 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x28DB JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x28B7 JUMPI PUSH2 0x28B6 PUSH2 0x23C6 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x28C6 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x28D4 DUP6 PUSH2 0x2884 JUMP JUMPDEST SWAP5 POP PUSH2 0x289B JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x28F4 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x29B0 JUMP JUMPDEST DUP2 PUSH2 0x2902 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x29B0 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x2918 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x2922 JUMPI PUSH2 0x2951 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x29B0 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x2934 JUMPI PUSH2 0x2933 PUSH2 0x23C6 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x294B JUMPI PUSH2 0x294A PUSH2 0x23C6 JUMP JUMPDEST JUMPDEST POP PUSH2 0x29B0 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x2986 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x2981 JUMPI PUSH2 0x2980 PUSH2 0x23C6 JUMP JUMPDEST JUMPDEST PUSH2 0x29B0 JUMP JUMPDEST PUSH2 0x2993 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x2891 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x29AA JUMPI PUSH2 0x29A9 PUSH2 0x23C6 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29C2 DUP3 PUSH2 0x2122 JUMP JUMPDEST SWAP2 POP PUSH2 0x29CD DUP4 PUSH2 0x2122 JUMP JUMPDEST SWAP3 POP PUSH2 0x29FA PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x28E4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x616D6F756E7430206F7220616D6F756E7431203D203000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A38 PUSH1 0x16 DUP4 PUSH2 0x24CB JUMP JUMPDEST SWAP2 POP PUSH2 0x2A43 DUP3 PUSH2 0x2A02 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A67 DUP2 PUSH2 0x2A2B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH1 0x12 CALLDATALOAD 0xD6 0xCE PUSH30 0x1875B069B3B46ACEE9450468D2F1AED68EE5DBE1551FDD09D31764736F6C PUSH4 0x43000812 STOP CALLER ",
							"sourceMap": "283:7296:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;329:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;467:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;405:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1731:661;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6956:306;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;435:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2400:824;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;500:44;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4910:162;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1139:584;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7270:306;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5080:233;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;4080:822;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6079:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5321:238;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;3230:842;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;366:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6182:105;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6614:334;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;329:30;;;:::o;467:26::-;;;;:::o;405:23::-;;;;:::o;1731:661::-;1794:17;1824:6;:19;;;1844:10;1864:4;1871:9;1824:57;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1892:23;1938:4;1931:3;1919:9;:15;;;;:::i;:::-;1918:24;;;;:::i;:::-;1892:50;;2008:15;1997:8;;:26;;;;:::i;:::-;1977:15;1966:8;;:26;;;;:::i;:::-;1965:59;;;;:::i;:::-;1953:71;;2055:1;2043:9;:13;2035:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;2098:22;2165:4;2154:8;;:15;;;;:::i;:::-;2139:11;;2135:1;2123:9;:13;;;;:::i;:::-;:27;;;;:::i;:::-;:47;;;;:::i;:::-;2098:72;;2181:32;2187:9;;;;;;;;;;2198:14;2181:5;:32::i;:::-;2260:6;:15;;;2276:10;2288:9;2260:38;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2311:73;2319:6;:16;;;2344:4;2319:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2352:6;:16;;;2377:4;2352:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2311:7;:73::i;:::-;1813:579;;1731:661;;;:::o;6956:306::-;7026:7;7065:1;7054:8;;:12;:28;;;;;7081:1;7070:8;;:12;7054:28;:43;;;;;7096:1;7086:7;:11;7054:43;7046:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;7129:23;7173:4;7166:3;7156:7;:13;;;;:::i;:::-;7155:22;;;;:::i;:::-;7129:48;;7238:15;7227:8;;:26;;;;:::i;:::-;7207:15;7196:8;;:26;;;;:::i;:::-;7195:59;;;;:::i;:::-;7188:66;;;6956:306;;;:::o;435:23::-;;;;:::o;2400:824::-;2539:17;2569:6;:19;;;2589:10;2609:4;2616:9;2569:57;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2637:23;2683:4;2676:3;2664:9;:15;;;;:::i;:::-;2663:24;;;;:::i;:::-;2637:50;;2753:15;2742:8;;:26;;;;:::i;:::-;2722:15;2711:8;;:26;;;;:::i;:::-;2710:59;;;;:::i;:::-;2698:71;;2800:1;2788:9;:13;2780:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;2903:4;2890:9;2883:4;:16;;;;:::i;:::-;2865:14;:35;;;;:::i;:::-;:42;;;;:::i;:::-;2851:9;:57;;2843:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;2932:22;2999:4;2988:8;;:15;;;;:::i;:::-;2973:11;;2969:1;2957:9;:13;;;;:::i;:::-;:27;;;;:::i;:::-;:47;;;;:::i;:::-;2932:72;;3015:32;3021:9;;;;;;;;;;3032:14;3015:5;:32::i;:::-;3094:6;:15;;;3110:10;3122:9;3094:38;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3143:73;3151:6;:16;;;3176:4;3151:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3184:6;:16;;;3209:4;3184:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3143:7;:73::i;:::-;2558:666;;2400:824;;;;;:::o;500:44::-;;;;;;;;;;;;;;;;;:::o;4910:162::-;4971:15;4988;5023:41;5040:5;5047:9;:16;5057:5;5047:16;;;;;;;;;;;;;;;;5023;:41::i;:::-;5016:48;;;;4910:162;;;:::o;1139:584::-;1188:17;1218:6;:19;;;1238:10;1258:4;1265:9;1218:57;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1286:23;1332:4;1325:3;1313:9;:15;;;;:::i;:::-;1312:24;;;;:::i;:::-;1286:50;;1402:15;1391:8;;:26;;;;:::i;:::-;1371:15;1360:8;;:26;;;;:::i;:::-;1359:59;;;;:::i;:::-;1347:71;;1429:22;1496:4;1485:8;;:15;;;;:::i;:::-;1470:11;;1466:1;1454:9;:13;;;;:::i;:::-;:27;;;;:::i;:::-;:47;;;;:::i;:::-;1429:72;;1512:32;1518:9;;;;;;;;;;1529:14;1512:5;:32::i;:::-;1591:6;:15;;;1607:10;1619:9;1591:38;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1642:73;1650:6;:16;;;1675:4;1650:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1683:6;:16;;;1708:4;1683:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1642:7;:73::i;:::-;1207:516;;1139:584;;;:::o;7270:306::-;7340:7;7379:1;7368:8;;:12;:28;;;;;7395:1;7384:8;;:12;7368:28;:43;;;;;7410:1;7400:7;:11;7368:43;7360:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;7443:23;7487:4;7480:3;7470:7;:13;;;;:::i;:::-;7469:22;;;;:::i;:::-;7443:48;;7552:15;7541:8;;:26;;;;:::i;:::-;7521:15;7510:8;;:26;;;;:::i;:::-;7509:59;;;;:::i;:::-;7502:66;;;7270:306;;;:::o;5080:233::-;5140:15;5157;5204:9;:21;5214:10;5204:21;;;;;;;;;;;;;;;;5193:7;:32;;5185:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;5268:37;5285:10;5297:7;5268:16;:37::i;:::-;5261:44;;;;5080:233;;;:::o;4080:822::-;4156:14;4183:6;:19;;;4203:10;4223:4;4230:8;4183:56;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4250:6;:19;;;4270:10;4290:4;4297:8;4250:56;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4334:1;4323:8;;:12;:28;;;;4350:1;4339:8;;:12;4323:28;4319:141;;;4412:8;4400;;4388;;4377;:19;;;;:::i;:::-;4376:32;;;;:::i;:::-;:44;4368:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;4319:141;4491:1;4476:11;;:16;4472:257;;4518:26;4535:8;4524;:19;;;;:::i;:::-;4518:5;:26::i;:::-;4509:35;;4472:257;;;4586:131;4640:8;;4625:11;;4614:8;:22;;;;:::i;:::-;4613:35;;;;:::i;:::-;4694:8;;4679:11;;4668:8;:22;;;;:::i;:::-;4667:35;;;;:::i;:::-;4586:8;:131::i;:::-;4577:140;;4472:257;4756:1;4747:6;:10;4739:33;;;;;;;;;;;;:::i;:::-;;;;;;;;;4783:25;4789:10;4801:6;4783:5;:25::i;:::-;4821:73;4829:6;:16;;;4854:4;4829:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4862:6;:16;;;4887:4;4862:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4821:7;:73::i;:::-;4080:822;;;;:::o;6079:97::-;6120:7;6147:9;:21;6157:10;6147:21;;;;;;;;;;;;;;;;6140:28;;6079:97;:::o;5321:238::-;5396:15;5413;5460:9;:16;5470:5;5460:16;;;;;;;;;;;;;;;;5449:7;:27;;5441:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;5519:32;5536:5;5543:7;5519:16;:32::i;:::-;5512:39;;;;5321:238;;;;;:::o;3230:842::-;3383:17;3413:6;:19;;;3433:10;3453:4;3460:9;3413:57;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3481:23;3527:4;3520:3;3508:9;:15;;;;:::i;:::-;3507:24;;;;:::i;:::-;3481:50;;3599:15;3588:8;;:26;;;;:::i;:::-;3568:15;3557:8;;:26;;;;:::i;:::-;3556:59;;;;:::i;:::-;3544:71;;3646:1;3634:9;:13;3626:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;3749:4;3736:9;3729:4;:16;;;;:::i;:::-;3711:14;:35;;;;:::i;:::-;:42;;;;:::i;:::-;3697:9;:57;;3689:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;3778:22;3845:4;3834:8;;:15;;;;:::i;:::-;3819:11;;3815:1;3803:9;:13;;;;:::i;:::-;:27;;;;:::i;:::-;:47;;;;:::i;:::-;3778:72;;3861:32;3867:9;;;;;;;;;;3878:14;3861:5;:32::i;:::-;3940:6;:15;;;3956:10;3968:9;3940:38;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3991:73;3999:6;:16;;;4024:4;3999:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4032:6;:16;;;4057:4;4032:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3991:7;:73::i;:::-;3402:670;;3230:842;;;;;:::o;366:30::-;;;:::o;6182:105::-;6236:7;6263:9;:16;6273:5;6263:16;;;;;;;;;;;;;;;;6256:23;;6182:105;;;:::o;6614:334::-;6658:7;6697:1;6686:8;;:12;:28;;;;;6713:1;6702:8;;:12;6686:28;6678:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;6746:17;6780:6;6766:31;;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6746:53;;;;6810:17;6844:6;6830:31;;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6810:53;;;;6929:9;6925:2;:13;;;;:::i;:::-;6913:8;;:26;;;;:::i;:::-;6898:9;6894:2;:13;;;;:::i;:::-;6882:8;;:26;;;;:::i;:::-;6881:59;;;;:::i;:::-;6874:66;;;;6614:334;:::o;718:130::-;800:7;782:9;:14;792:3;782:14;;;;;;;;;;;;;;;;:25;;;;;;;:::i;:::-;;;;;;;;833:7;818:11;;:22;;;;;;;:::i;:::-;;;;;;;;718:130;;:::o;998:133::-;1083:9;1072:8;:20;;;;1114:9;1103:8;:20;;;;998:133;;:::o;5567:504::-;5643:15;5660;5721:11;;5709:8;;5699:7;:18;;;;:::i;:::-;5698:34;;;;:::i;:::-;5688:44;;5776:11;;5764:8;;5754:7;:18;;;;:::i;:::-;5753:34;;;;:::i;:::-;5743:44;;5816:1;5806:7;:11;:26;;;;;5831:1;5821:7;:11;5806:26;5798:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;5872:21;5878:5;5885:7;5872:5;:21::i;:::-;5904:73;5912:6;:16;;;5937:4;5912:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5945:6;:16;;;5970:4;5945:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5904:7;:73::i;:::-;5990:6;:15;;;6006:5;6013:7;5990:31;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6032:6;:15;;;6048:5;6055:7;6032:31;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5567:504;;;;;:::o;6293:313::-;6342:9;6372:1;6368;:5;6364:235;;;6394:1;6390:5;;6410:9;6430:1;6426;6422;:5;;;;:::i;:::-;:9;;;;:::i;:::-;6410:21;;6446:92;6457:1;6453;:5;6446:92;;;6483:1;6479:5;;6521:1;6516;6512;6508;:5;;;;:::i;:::-;:9;;;;:::i;:::-;6507:15;;;;:::i;:::-;6503:19;;6446:92;;;6375:174;6364:235;;;6564:1;6559;:6;6555:44;;6586:1;6582:5;;6555:44;6364:235;6293:313;;;:::o;588:104:4:-;646:7;676:1;672;:5;:13;;684:1;672:13;;;680:1;672:13;665:20;;588:104;;;;:::o;856:134:5:-;942:7;922:9;:16;932:5;922:16;;;;;;;;;;;;;;;;:27;;;;;;;:::i;:::-;;;;;;;;975:7;960:11;;:22;;;;;;;:::i;:::-;;;;;;;;856:134;;:::o;7:126:6:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:60::-;167:3;188:5;181:12;;139:60;;;:::o;205:142::-;255:9;288:53;306:34;315:24;333:5;315:24;:::i;:::-;306:34;:::i;:::-;288:53;:::i;:::-;275:66;;205:142;;;:::o;353:126::-;403:9;436:37;467:5;436:37;:::i;:::-;423:50;;353:126;;;:::o;485:140::-;549:9;582:37;613:5;582:37;:::i;:::-;569:50;;485:140;;;:::o;631:159::-;732:51;777:5;732:51;:::i;:::-;727:3;720:64;631:159;;:::o;796:250::-;903:4;941:2;930:9;926:18;918:26;;954:85;1036:1;1025:9;1021:17;1012:6;954:85;:::i;:::-;796:250;;;;:::o;1052:77::-;1089:7;1118:5;1107:16;;1052:77;;;:::o;1135:118::-;1222:24;1240:5;1222:24;:::i;:::-;1217:3;1210:37;1135:118;;:::o;1259:222::-;1352:4;1390:2;1379:9;1375:18;1367:26;;1403:71;1471:1;1460:9;1456:17;1447:6;1403:71;:::i;:::-;1259:222;;;;:::o;1568:117::-;1677:1;1674;1667:12;1814:122;1887:24;1905:5;1887:24;:::i;:::-;1880:5;1877:35;1867:63;;1926:1;1923;1916:12;1867:63;1814:122;:::o;1942:139::-;1988:5;2026:6;2013:20;2004:29;;2042:33;2069:5;2042:33;:::i;:::-;1942:139;;;;:::o;2087:329::-;2146:6;2195:2;2183:9;2174:7;2170:23;2166:32;2163:119;;;2201:79;;:::i;:::-;2163:119;2321:1;2346:53;2391:7;2382:6;2371:9;2367:22;2346:53;:::i;:::-;2336:63;;2292:117;2087:329;;;;:::o;2422:619::-;2499:6;2507;2515;2564:2;2552:9;2543:7;2539:23;2535:32;2532:119;;;2570:79;;:::i;:::-;2532:119;2690:1;2715:53;2760:7;2751:6;2740:9;2736:22;2715:53;:::i;:::-;2705:63;;2661:117;2817:2;2843:53;2888:7;2879:6;2868:9;2864:22;2843:53;:::i;:::-;2833:63;;2788:118;2945:2;2971:53;3016:7;3007:6;2996:9;2992:22;2971:53;:::i;:::-;2961:63;;2916:118;2422:619;;;;;:::o;3047:96::-;3084:7;3113:24;3131:5;3113:24;:::i;:::-;3102:35;;3047:96;;;:::o;3149:122::-;3222:24;3240:5;3222:24;:::i;:::-;3215:5;3212:35;3202:63;;3261:1;3258;3251:12;3202:63;3149:122;:::o;3277:139::-;3323:5;3361:6;3348:20;3339:29;;3377:33;3404:5;3377:33;:::i;:::-;3277:139;;;;:::o;3422:329::-;3481:6;3530:2;3518:9;3509:7;3505:23;3501:32;3498:119;;;3536:79;;:::i;:::-;3498:119;3656:1;3681:53;3726:7;3717:6;3706:9;3702:22;3681:53;:::i;:::-;3671:63;;3627:117;3422:329;;;;:::o;3757:332::-;3878:4;3916:2;3905:9;3901:18;3893:26;;3929:71;3997:1;3986:9;3982:17;3973:6;3929:71;:::i;:::-;4010:72;4078:2;4067:9;4063:18;4054:6;4010:72;:::i;:::-;3757:332;;;;;:::o;4095:474::-;4163:6;4171;4220:2;4208:9;4199:7;4195:23;4191:32;4188:119;;;4226:79;;:::i;:::-;4188:119;4346:1;4371:53;4416:7;4407:6;4396:9;4392:22;4371:53;:::i;:::-;4361:63;;4317:117;4473:2;4499:53;4544:7;4535:6;4524:9;4520:22;4499:53;:::i;:::-;4489:63;;4444:118;4095:474;;;;;:::o;4575:::-;4643:6;4651;4700:2;4688:9;4679:7;4675:23;4671:32;4668:119;;;4706:79;;:::i;:::-;4668:119;4826:1;4851:53;4896:7;4887:6;4876:9;4872:22;4851:53;:::i;:::-;4841:63;;4797:117;4953:2;4979:53;5024:7;5015:6;5004:9;5000:22;4979:53;:::i;:::-;4969:63;;4924:118;4575:474;;;;;:::o;5055:118::-;5142:24;5160:5;5142:24;:::i;:::-;5137:3;5130:37;5055:118;;:::o;5179:442::-;5328:4;5366:2;5355:9;5351:18;5343:26;;5379:71;5447:1;5436:9;5432:17;5423:6;5379:71;:::i;:::-;5460:72;5528:2;5517:9;5513:18;5504:6;5460:72;:::i;:::-;5542;5610:2;5599:9;5595:18;5586:6;5542:72;:::i;:::-;5179:442;;;;;;:::o;5627:90::-;5661:7;5704:5;5697:13;5690:21;5679:32;;5627:90;;;:::o;5723:116::-;5793:21;5808:5;5793:21;:::i;:::-;5786:5;5783:32;5773:60;;5829:1;5826;5819:12;5773:60;5723:116;:::o;5845:137::-;5899:5;5930:6;5924:13;5915:22;;5946:30;5970:5;5946:30;:::i;:::-;5845:137;;;;:::o;5988:345::-;6055:6;6104:2;6092:9;6083:7;6079:23;6075:32;6072:119;;;6110:79;;:::i;:::-;6072:119;6230:1;6255:61;6308:7;6299:6;6288:9;6284:22;6255:61;:::i;:::-;6245:71;;6201:125;5988:345;;;;:::o;6339:180::-;6387:77;6384:1;6377:88;6484:4;6481:1;6474:15;6508:4;6505:1;6498:15;6525:410;6565:7;6588:20;6606:1;6588:20;:::i;:::-;6583:25;;6622:20;6640:1;6622:20;:::i;:::-;6617:25;;6677:1;6674;6670:9;6699:30;6717:11;6699:30;:::i;:::-;6688:41;;6878:1;6869:7;6865:15;6862:1;6859:22;6839:1;6832:9;6812:83;6789:139;;6908:18;;:::i;:::-;6789:139;6573:362;6525:410;;;;:::o;6941:180::-;6989:77;6986:1;6979:88;7086:4;7083:1;7076:15;7110:4;7107:1;7100:15;7127:185;7167:1;7184:20;7202:1;7184:20;:::i;:::-;7179:25;;7218:20;7236:1;7218:20;:::i;:::-;7213:25;;7257:1;7247:35;;7262:18;;:::i;:::-;7247:35;7304:1;7301;7297:9;7292:14;;7127:185;;;;:::o;7318:191::-;7358:3;7377:20;7395:1;7377:20;:::i;:::-;7372:25;;7411:20;7429:1;7411:20;:::i;:::-;7406:25;;7454:1;7451;7447:9;7440:16;;7475:3;7472:1;7469:10;7466:36;;;7482:18;;:::i;:::-;7466:36;7318:191;;;;:::o;7515:169::-;7599:11;7633:6;7628:3;7621:19;7673:4;7668:3;7664:14;7649:29;;7515:169;;;;:::o;7690:176::-;7830:28;7826:1;7818:6;7814:14;7807:52;7690:176;:::o;7872:366::-;8014:3;8035:67;8099:2;8094:3;8035:67;:::i;:::-;8028:74;;8111:93;8200:3;8111:93;:::i;:::-;8229:2;8224:3;8220:12;8213:19;;7872:366;;;:::o;8244:419::-;8410:4;8448:2;8437:9;8433:18;8425:26;;8497:9;8491:4;8487:20;8483:1;8472:9;8468:17;8461:47;8525:131;8651:4;8525:131;:::i;:::-;8517:139;;8244:419;;;:::o;8669:332::-;8790:4;8828:2;8817:9;8813:18;8805:26;;8841:71;8909:1;8898:9;8894:17;8885:6;8841:71;:::i;:::-;8922:72;8990:2;8979:9;8975:18;8966:6;8922:72;:::i;:::-;8669:332;;;;;:::o;9007:222::-;9100:4;9138:2;9127:9;9123:18;9115:26;;9151:71;9219:1;9208:9;9204:17;9195:6;9151:71;:::i;:::-;9007:222;;;;:::o;9235:143::-;9292:5;9323:6;9317:13;9308:22;;9339:33;9366:5;9339:33;:::i;:::-;9235:143;;;;:::o;9384:351::-;9454:6;9503:2;9491:9;9482:7;9478:23;9474:32;9471:119;;;9509:79;;:::i;:::-;9471:119;9629:1;9654:64;9710:7;9701:6;9690:9;9686:22;9654:64;:::i;:::-;9644:74;;9600:128;9384:351;;;;:::o;9741:166::-;9881:18;9877:1;9869:6;9865:14;9858:42;9741:166;:::o;9913:366::-;10055:3;10076:67;10140:2;10135:3;10076:67;:::i;:::-;10069:74;;10152:93;10241:3;10152:93;:::i;:::-;10270:2;10265:3;10261:12;10254:19;;9913:366;;;:::o;10285:419::-;10451:4;10489:2;10478:9;10474:18;10466:26;;10538:9;10532:4;10528:20;10524:1;10513:9;10509:17;10502:47;10566:131;10692:4;10566:131;:::i;:::-;10558:139;;10285:419;;;:::o;10710:194::-;10750:4;10770:20;10788:1;10770:20;:::i;:::-;10765:25;;10804:20;10822:1;10804:20;:::i;:::-;10799:25;;10848:1;10845;10841:9;10833:17;;10872:1;10866:4;10863:11;10860:37;;;10877:18;;:::i;:::-;10860:37;10710:194;;;;:::o;10910:158::-;11050:10;11046:1;11038:6;11034:14;11027:34;10910:158;:::o;11074:365::-;11216:3;11237:66;11301:1;11296:3;11237:66;:::i;:::-;11230:73;;11312:93;11401:3;11312:93;:::i;:::-;11430:2;11425:3;11421:12;11414:19;;11074:365;;;:::o;11445:419::-;11611:4;11649:2;11638:9;11634:18;11626:26;;11698:9;11692:4;11688:20;11684:1;11673:9;11669:17;11662:47;11726:131;11852:4;11726:131;:::i;:::-;11718:139;;11445:419;;;:::o;11870:170::-;12010:22;12006:1;11998:6;11994:14;11987:46;11870:170;:::o;12046:366::-;12188:3;12209:67;12273:2;12268:3;12209:67;:::i;:::-;12202:74;;12285:93;12374:3;12285:93;:::i;:::-;12403:2;12398:3;12394:12;12387:19;;12046:366;;;:::o;12418:419::-;12584:4;12622:2;12611:9;12607:18;12599:26;;12671:9;12665:4;12661:20;12657:1;12646:9;12642:17;12635:47;12699:131;12825:4;12699:131;:::i;:::-;12691:139;;12418:419;;;:::o;12843:173::-;12983:25;12979:1;12971:6;12967:14;12960:49;12843:173;:::o;13022:366::-;13164:3;13185:67;13249:2;13244:3;13185:67;:::i;:::-;13178:74;;13261:93;13350:3;13261:93;:::i;:::-;13379:2;13374:3;13370:12;13363:19;;13022:366;;;:::o;13394:419::-;13560:4;13598:2;13587:9;13583:18;13575:26;;13647:9;13641:4;13637:20;13633:1;13622:9;13618:17;13611:47;13675:131;13801:4;13675:131;:::i;:::-;13667:139;;13394:419;;;:::o;13819:160::-;13959:12;13955:1;13947:6;13943:14;13936:36;13819:160;:::o;13985:366::-;14127:3;14148:67;14212:2;14207:3;14148:67;:::i;:::-;14141:74;;14224:93;14313:3;14224:93;:::i;:::-;14342:2;14337:3;14333:12;14326:19;;13985:366;;;:::o;14357:419::-;14523:4;14561:2;14550:9;14546:18;14538:26;;14610:9;14604:4;14600:20;14596:1;14585:9;14581:17;14574:47;14638:131;14764:4;14638:131;:::i;:::-;14630:139;;14357:419;;;:::o;14782:86::-;14817:7;14857:4;14850:5;14846:16;14835:27;;14782:86;;;:::o;14874:118::-;14945:22;14961:5;14945:22;:::i;:::-;14938:5;14935:33;14925:61;;14982:1;14979;14972:12;14925:61;14874:118;:::o;14998:139::-;15053:5;15084:6;15078:13;15069:22;;15100:31;15125:5;15100:31;:::i;:::-;14998:139;;;;:::o;15143:347::-;15211:6;15260:2;15248:9;15239:7;15235:23;15231:32;15228:119;;;15266:79;;:::i;:::-;15228:119;15386:1;15411:62;15465:7;15456:6;15445:9;15441:22;15411:62;:::i;:::-;15401:72;;15357:126;15143:347;;;;:::o;15496:102::-;15538:8;15585:5;15582:1;15578:13;15557:34;;15496:102;;;:::o;15604:848::-;15665:5;15672:4;15696:6;15687:15;;15720:5;15711:14;;15734:712;15755:1;15745:8;15742:15;15734:712;;;15850:4;15845:3;15841:14;15835:4;15832:24;15829:50;;;15859:18;;:::i;:::-;15829:50;15909:1;15899:8;15895:16;15892:451;;;16324:4;16317:5;16313:16;16304:25;;15892:451;16374:4;16368;16364:15;16356:23;;16404:32;16427:8;16404:32;:::i;:::-;16392:44;;15734:712;;;15604:848;;;;;;;:::o;16458:1073::-;16512:5;16703:8;16693:40;;16724:1;16715:10;;16726:5;;16693:40;16752:4;16742:36;;16769:1;16760:10;;16771:5;;16742:36;16838:4;16886:1;16881:27;;;;16922:1;16917:191;;;;16831:277;;16881:27;16899:1;16890:10;;16901:5;;;16917:191;16962:3;16952:8;16949:17;16946:43;;;16969:18;;:::i;:::-;16946:43;17018:8;17015:1;17011:16;17002:25;;17053:3;17046:5;17043:14;17040:40;;;17060:18;;:::i;:::-;17040:40;17093:5;;;16831:277;;17217:2;17207:8;17204:16;17198:3;17192:4;17189:13;17185:36;17167:2;17157:8;17154:16;17149:2;17143:4;17140:12;17136:35;17120:111;17117:246;;;17273:8;17267:4;17263:19;17254:28;;17308:3;17301:5;17298:14;17295:40;;;17315:18;;:::i;:::-;17295:40;17348:5;;17117:246;17388:42;17426:3;17416:8;17410:4;17407:1;17388:42;:::i;:::-;17373:57;;;;17462:4;17457:3;17453:14;17446:5;17443:25;17440:51;;;17471:18;;:::i;:::-;17440:51;17520:4;17513:5;17509:16;17500:25;;16458:1073;;;;;;:::o;17537:285::-;17597:5;17621:23;17639:4;17621:23;:::i;:::-;17613:31;;17665:27;17683:8;17665:27;:::i;:::-;17653:39;;17711:104;17748:66;17738:8;17732:4;17711:104;:::i;:::-;17702:113;;17537:285;;;;:::o;17828:172::-;17968:24;17964:1;17956:6;17952:14;17945:48;17828:172;:::o;18006:366::-;18148:3;18169:67;18233:2;18228:3;18169:67;:::i;:::-;18162:74;;18245:93;18334:3;18245:93;:::i;:::-;18363:2;18358:3;18354:12;18347:19;;18006:366;;;:::o;18378:419::-;18544:4;18582:2;18571:9;18567:18;18559:26;;18631:9;18625:4;18621:20;18617:1;18606:9;18602:17;18595:47;18659:131;18785:4;18659:131;:::i;:::-;18651:139;;18378:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2183200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addLiquidity(uint256,uint256)": "infinite",
								"balanceOf(address)": "2903",
								"getERCPrice()": "infinite",
								"getPredictOutputToken0(uint256)": "infinite",
								"getPredictOutputToken1(uint256)": "infinite",
								"myShares()": "2637",
								"removeAllLiquidity(address)": "infinite",
								"removeLiquidity(address,uint256)": "infinite",
								"removeLiquidity(uint256)": "infinite",
								"reserve0()": "2497",
								"reserve1()": "2474",
								"sharesOf(address)": "2929",
								"swap(uint256)": "infinite",
								"swapTokenForToken1(uint256)": "infinite",
								"swapTokenForToken1_WithSlipLock(uint256,uint256,uint256)": "infinite",
								"swap_WithSlipLock(uint256,uint256,uint256)": "infinite",
								"token0()": "infinite",
								"token1()": "infinite",
								"totalSupply()": "2475"
							},
							"internal": {
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_removeLiquidity(address,uint256)": "infinite",
								"_sqrt(uint256)": "infinite",
								"_update(uint256,uint256)": "44241"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 283,
									"end": 7579,
									"name": "PUSH",
									"source": 5,
									"value": "C0"
								},
								{
									"begin": 283,
									"end": 7579,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 283,
									"end": 7579,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 553,
									"end": 710,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 553,
									"end": 710,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 553,
									"end": 710,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 553,
									"end": 710,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 553,
									"end": 710,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 553,
									"end": 710,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 553,
									"end": 710,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 553,
									"end": 710,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 553,
									"end": 710,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 553,
									"end": 710,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 553,
									"end": 710,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 553,
									"end": 710,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 553,
									"end": 710,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 553,
									"end": 710,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 553,
									"end": 710,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 553,
									"end": 710,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 553,
									"end": 710,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 553,
									"end": 710,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 553,
									"end": 710,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 553,
									"end": 710,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 553,
									"end": 710,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 553,
									"end": 710,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 553,
									"end": 710,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 553,
									"end": 710,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 553,
									"end": 710,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 553,
									"end": 710,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 553,
									"end": 710,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 553,
									"end": 710,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 553,
									"end": 710,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 553,
									"end": 710,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 553,
									"end": 710,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 553,
									"end": 710,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 553,
									"end": 710,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 553,
									"end": 710,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 553,
									"end": 710,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 622,
									"end": 632,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": 610,
									"end": 619,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 610,
									"end": 619,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 610,
									"end": 632,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 610,
									"end": 632,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 610,
									"end": 632,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 610,
									"end": 632,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 610,
									"end": 632,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 610,
									"end": 632,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 610,
									"end": 632,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 610,
									"end": 632,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 610,
									"end": 632,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 610,
									"end": 632,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 610,
									"end": 632,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 610,
									"end": 632,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 610,
									"end": 632,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 610,
									"end": 632,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 610,
									"end": 632,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 610,
									"end": 632,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 610,
									"end": 632,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 610,
									"end": 632,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 659,
									"end": 666,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 643,
									"end": 667,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 643,
									"end": 667,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 643,
									"end": 667,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 643,
									"end": 667,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 643,
									"end": 667,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 643,
									"end": 667,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 643,
									"end": 667,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 643,
									"end": 667,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 643,
									"end": 667,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 643,
									"end": 667,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 694,
									"end": 701,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 678,
									"end": 702,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 678,
									"end": 702,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 678,
									"end": 702,
									"name": "PUSH",
									"source": 5,
									"value": "A0"
								},
								{
									"begin": 678,
									"end": 702,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 678,
									"end": 702,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 678,
									"end": 702,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 678,
									"end": 702,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 678,
									"end": 702,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 678,
									"end": 702,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 678,
									"end": 702,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 553,
									"end": 710,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 553,
									"end": 710,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 283,
									"end": 7579,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 283,
									"end": 7579,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 924,
									"end": 930,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 938,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 981,
									"end": 983,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 969,
									"end": 978,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 960,
									"end": 967,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 956,
									"end": 979,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 952,
									"end": 984,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 987,
									"end": 1066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1107,
									"end": 1108,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 1188,
									"end": 1195,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1179,
									"end": 1185,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1168,
									"end": 1177,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1164,
									"end": 1186,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 1132,
									"end": 1196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1078,
									"end": 1206,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1245,
									"end": 1247,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 1327,
									"end": 1334,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1307,
									"end": 1316,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1303,
									"end": 1325,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 1271,
									"end": 1335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "tag",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1216,
									"end": 1345,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 283,
									"end": 7579,
									"name": "tag",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 283,
									"end": 7579,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 283,
									"end": 7579,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 283,
									"end": 7579,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 283,
									"end": 7579,
									"name": "PUSH",
									"source": 5,
									"value": "A0"
								},
								{
									"begin": 283,
									"end": 7579,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 283,
									"end": 7579,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 283,
									"end": 7579,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 283,
									"end": 7579,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 283,
									"end": 7579,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 283,
									"end": 7579,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 283,
									"end": 7579,
									"name": "ASSIGNIMMUTABLE",
									"source": 5,
									"value": "1589"
								},
								{
									"begin": 283,
									"end": 7579,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 283,
									"end": 7579,
									"name": "ASSIGNIMMUTABLE",
									"source": 5,
									"value": "1586"
								},
								{
									"begin": 283,
									"end": 7579,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 283,
									"end": 7579,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 283,
									"end": 7579,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220601235d6ce7d1875b069b3b46acee9450468d2f1aed68ee5dbe1551fdd09d31764736f6c63430008120033",
									".code": [
										{
											"begin": 283,
											"end": 7579,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "PUSH",
											"source": 5,
											"value": "94B918DE"
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "PUSH",
											"source": 5,
											"value": "A201CCF6"
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "PUSH",
											"source": 5,
											"value": "A201CCF6"
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "PUSH",
											"source": 5,
											"value": "C9F4437E"
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "PUSH",
											"source": 5,
											"value": "D21220A7"
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "PUSH",
											"source": 5,
											"value": "F5EB42DC"
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "PUSH",
											"source": 5,
											"value": "FCC2BA08"
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "PUSH",
											"source": 5,
											"value": "94B918DE"
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "PUSH",
											"source": 5,
											"value": "9C1E5375"
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "PUSH",
											"source": 5,
											"value": "9C8F9F23"
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "PUSH",
											"source": 5,
											"value": "9CD441DA"
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "PUSH",
											"source": 5,
											"value": "9E7A4757"
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "PUSH",
											"source": 5,
											"value": "4D7D1598"
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "PUSH",
											"source": 5,
											"value": "4D7D1598"
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "PUSH",
											"source": 5,
											"value": "5A76F25E"
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "PUSH",
											"source": 5,
											"value": "62279B65"
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "PUSH",
											"source": 5,
											"value": "7A6A5E1B"
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "PUSH",
											"source": 5,
											"value": "DFE1681"
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "PUSH",
											"source": 5,
											"value": "18160DDD"
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "PUSH",
											"source": 5,
											"value": "443CB4BC"
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "PUSH",
											"source": 5,
											"value": "46765BDC"
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 283,
											"end": 7579,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 329,
											"end": 359,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 329,
											"end": 359,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 329,
											"end": 359,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 329,
											"end": 359,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 329,
											"end": 359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 329,
											"end": 359,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 329,
											"end": 359,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 329,
											"end": 359,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 329,
											"end": 359,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 329,
											"end": 359,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 329,
											"end": 359,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 329,
											"end": 359,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 329,
											"end": 359,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 329,
											"end": 359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 329,
											"end": 359,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 329,
											"end": 359,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 329,
											"end": 359,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 329,
											"end": 359,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 329,
											"end": 359,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 329,
											"end": 359,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 329,
											"end": 359,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 329,
											"end": 359,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 329,
											"end": 359,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 467,
											"end": 493,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 467,
											"end": 493,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 467,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 467,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 467,
											"end": 493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 467,
											"end": 493,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 467,
											"end": 493,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 467,
											"end": 493,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 467,
											"end": 493,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 467,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 467,
											"end": 493,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 467,
											"end": 493,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 467,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 467,
											"end": 493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 467,
											"end": 493,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 467,
											"end": 493,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 467,
											"end": 493,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 467,
											"end": 493,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 467,
											"end": 493,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 467,
											"end": 493,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 467,
											"end": 493,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 467,
											"end": 493,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 467,
											"end": 493,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 405,
											"end": 428,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 405,
											"end": 428,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 405,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 405,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 405,
											"end": 428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 405,
											"end": 428,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 405,
											"end": 428,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 405,
											"end": 428,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 405,
											"end": 428,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 405,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 405,
											"end": 428,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 405,
											"end": 428,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 405,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 405,
											"end": 428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 405,
											"end": 428,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 405,
											"end": 428,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 405,
											"end": 428,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 405,
											"end": 428,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 405,
											"end": 428,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 405,
											"end": 428,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 405,
											"end": 428,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 405,
											"end": 428,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 405,
											"end": 428,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1731,
											"end": 2392,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 1731,
											"end": 2392,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1731,
											"end": 2392,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 1731,
											"end": 2392,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1731,
											"end": 2392,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1731,
											"end": 2392,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1731,
											"end": 2392,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1731,
											"end": 2392,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1731,
											"end": 2392,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1731,
											"end": 2392,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1731,
											"end": 2392,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 1731,
											"end": 2392,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1731,
											"end": 2392,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1731,
											"end": 2392,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 1731,
											"end": 2392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1731,
											"end": 2392,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 1731,
											"end": 2392,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1731,
											"end": 2392,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 1731,
											"end": 2392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1731,
											"end": 2392,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 1731,
											"end": 2392,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1731,
											"end": 2392,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1731,
											"end": 2392,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1731,
											"end": 2392,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1731,
											"end": 2392,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1731,
											"end": 2392,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1731,
											"end": 2392,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 1731,
											"end": 2392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1731,
											"end": 2392,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1731,
											"end": 2392,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1731,
											"end": 2392,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1731,
											"end": 2392,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1731,
											"end": 2392,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1731,
											"end": 2392,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1731,
											"end": 2392,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1731,
											"end": 2392,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1731,
											"end": 2392,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 6956,
											"end": 7262,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 6956,
											"end": 7262,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6956,
											"end": 7262,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 6956,
											"end": 7262,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6956,
											"end": 7262,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6956,
											"end": 7262,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 6956,
											"end": 7262,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6956,
											"end": 7262,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6956,
											"end": 7262,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6956,
											"end": 7262,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6956,
											"end": 7262,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 6956,
											"end": 7262,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6956,
											"end": 7262,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6956,
											"end": 7262,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 6956,
											"end": 7262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6956,
											"end": 7262,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 6956,
											"end": 7262,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6956,
											"end": 7262,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 6956,
											"end": 7262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6956,
											"end": 7262,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 6956,
											"end": 7262,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6956,
											"end": 7262,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6956,
											"end": 7262,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6956,
											"end": 7262,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 6956,
											"end": 7262,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6956,
											"end": 7262,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6956,
											"end": 7262,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 6956,
											"end": 7262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6956,
											"end": 7262,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 6956,
											"end": 7262,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6956,
											"end": 7262,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6956,
											"end": 7262,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6956,
											"end": 7262,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6956,
											"end": 7262,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6956,
											"end": 7262,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6956,
											"end": 7262,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6956,
											"end": 7262,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 435,
											"end": 458,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 435,
											"end": 458,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 435,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 435,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 435,
											"end": 458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 435,
											"end": 458,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 435,
											"end": 458,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 435,
											"end": 458,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 435,
											"end": 458,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 435,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 435,
											"end": 458,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 435,
											"end": 458,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 435,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 435,
											"end": 458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 435,
											"end": 458,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 435,
											"end": 458,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 435,
											"end": 458,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 435,
											"end": 458,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 435,
											"end": 458,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 435,
											"end": 458,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 435,
											"end": 458,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 435,
											"end": 458,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 435,
											"end": 458,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2400,
											"end": 3224,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 2400,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2400,
											"end": 3224,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 2400,
											"end": 3224,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2400,
											"end": 3224,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2400,
											"end": 3224,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2400,
											"end": 3224,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2400,
											"end": 3224,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2400,
											"end": 3224,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2400,
											"end": 3224,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2400,
											"end": 3224,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 2400,
											"end": 3224,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2400,
											"end": 3224,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2400,
											"end": 3224,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 2400,
											"end": 3224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2400,
											"end": 3224,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 2400,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2400,
											"end": 3224,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 2400,
											"end": 3224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2400,
											"end": 3224,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 2400,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2400,
											"end": 3224,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2400,
											"end": 3224,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2400,
											"end": 3224,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 2400,
											"end": 3224,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2400,
											"end": 3224,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2400,
											"end": 3224,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 2400,
											"end": 3224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2400,
											"end": 3224,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 2400,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2400,
											"end": 3224,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2400,
											"end": 3224,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2400,
											"end": 3224,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2400,
											"end": 3224,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2400,
											"end": 3224,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2400,
											"end": 3224,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2400,
											"end": 3224,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 500,
											"end": 544,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 500,
											"end": 544,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 500,
											"end": 544,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 500,
											"end": 544,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 500,
											"end": 544,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 500,
											"end": 544,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 500,
											"end": 544,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 500,
											"end": 544,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 500,
											"end": 544,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 500,
											"end": 544,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 500,
											"end": 544,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 500,
											"end": 544,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 500,
											"end": 544,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 500,
											"end": 544,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 500,
											"end": 544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 500,
											"end": 544,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 500,
											"end": 544,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 500,
											"end": 544,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 500,
											"end": 544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 500,
											"end": 544,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 500,
											"end": 544,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 500,
											"end": 544,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 500,
											"end": 544,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 500,
											"end": 544,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 500,
											"end": 544,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 500,
											"end": 544,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 500,
											"end": 544,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 500,
											"end": 544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 500,
											"end": 544,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 500,
											"end": 544,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 500,
											"end": 544,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 500,
											"end": 544,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 500,
											"end": 544,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 500,
											"end": 544,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 500,
											"end": 544,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 500,
											"end": 544,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 500,
											"end": 544,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 4910,
											"end": 5072,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 4910,
											"end": 5072,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4910,
											"end": 5072,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 4910,
											"end": 5072,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4910,
											"end": 5072,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4910,
											"end": 5072,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4910,
											"end": 5072,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4910,
											"end": 5072,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4910,
											"end": 5072,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4910,
											"end": 5072,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4910,
											"end": 5072,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 4910,
											"end": 5072,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4910,
											"end": 5072,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4910,
											"end": 5072,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 4910,
											"end": 5072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4910,
											"end": 5072,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 4910,
											"end": 5072,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4910,
											"end": 5072,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 4910,
											"end": 5072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4910,
											"end": 5072,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 4910,
											"end": 5072,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4910,
											"end": 5072,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4910,
											"end": 5072,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4910,
											"end": 5072,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 4910,
											"end": 5072,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4910,
											"end": 5072,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4910,
											"end": 5072,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4910,
											"end": 5072,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 4910,
											"end": 5072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4910,
											"end": 5072,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 4910,
											"end": 5072,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4910,
											"end": 5072,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4910,
											"end": 5072,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4910,
											"end": 5072,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4910,
											"end": 5072,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4910,
											"end": 5072,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4910,
											"end": 5072,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4910,
											"end": 5072,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1723,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 1139,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 1139,
											"end": 1723,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1139,
											"end": 1723,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1723,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1723,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1723,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1723,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1723,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1139,
											"end": 1723,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1723,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 1139,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1723,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1139,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 1139,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1723,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 1139,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1723,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1139,
											"end": 1723,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 1139,
											"end": 1723,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1723,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 1139,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1723,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 1139,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1723,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1139,
											"end": 1723,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1723,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1723,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1723,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1723,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1723,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 7270,
											"end": 7576,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 7270,
											"end": 7576,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7270,
											"end": 7576,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 7270,
											"end": 7576,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7270,
											"end": 7576,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7270,
											"end": 7576,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 7270,
											"end": 7576,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7270,
											"end": 7576,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7270,
											"end": 7576,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7270,
											"end": 7576,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7270,
											"end": 7576,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 7270,
											"end": 7576,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7270,
											"end": 7576,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7270,
											"end": 7576,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 7270,
											"end": 7576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7270,
											"end": 7576,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 7270,
											"end": 7576,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7270,
											"end": 7576,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 7270,
											"end": 7576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7270,
											"end": 7576,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 7270,
											"end": 7576,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7270,
											"end": 7576,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7270,
											"end": 7576,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7270,
											"end": 7576,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 7270,
											"end": 7576,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7270,
											"end": 7576,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7270,
											"end": 7576,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 7270,
											"end": 7576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7270,
											"end": 7576,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 7270,
											"end": 7576,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7270,
											"end": 7576,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7270,
											"end": 7576,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7270,
											"end": 7576,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7270,
											"end": 7576,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7270,
											"end": 7576,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7270,
											"end": 7576,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7270,
											"end": 7576,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 5080,
											"end": 5313,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 5080,
											"end": 5313,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5080,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 5080,
											"end": 5313,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5080,
											"end": 5313,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5080,
											"end": 5313,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 5080,
											"end": 5313,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5080,
											"end": 5313,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5080,
											"end": 5313,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5080,
											"end": 5313,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5080,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 5080,
											"end": 5313,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5080,
											"end": 5313,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5080,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 5080,
											"end": 5313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5080,
											"end": 5313,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 5080,
											"end": 5313,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5080,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 5080,
											"end": 5313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5080,
											"end": 5313,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 5080,
											"end": 5313,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5080,
											"end": 5313,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5080,
											"end": 5313,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5080,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 5080,
											"end": 5313,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5080,
											"end": 5313,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5080,
											"end": 5313,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5080,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 5080,
											"end": 5313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5080,
											"end": 5313,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 5080,
											"end": 5313,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5080,
											"end": 5313,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5080,
											"end": 5313,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5080,
											"end": 5313,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5080,
											"end": 5313,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5080,
											"end": 5313,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5080,
											"end": 5313,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5080,
											"end": 5313,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 4080,
											"end": 4902,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 4080,
											"end": 4902,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4080,
											"end": 4902,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 4080,
											"end": 4902,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4080,
											"end": 4902,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4080,
											"end": 4902,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4080,
											"end": 4902,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4080,
											"end": 4902,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4080,
											"end": 4902,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4080,
											"end": 4902,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4080,
											"end": 4902,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 4080,
											"end": 4902,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4080,
											"end": 4902,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4080,
											"end": 4902,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 4080,
											"end": 4902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4080,
											"end": 4902,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 4080,
											"end": 4902,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4080,
											"end": 4902,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 4080,
											"end": 4902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4080,
											"end": 4902,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 4080,
											"end": 4902,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4080,
											"end": 4902,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4080,
											"end": 4902,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4080,
											"end": 4902,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 4080,
											"end": 4902,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4080,
											"end": 4902,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4080,
											"end": 4902,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 4080,
											"end": 4902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4080,
											"end": 4902,
											"name": "tag",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 4080,
											"end": 4902,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4080,
											"end": 4902,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4080,
											"end": 4902,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4080,
											"end": 4902,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4080,
											"end": 4902,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4080,
											"end": 4902,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4080,
											"end": 4902,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4080,
											"end": 4902,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 6079,
											"end": 6176,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 6079,
											"end": 6176,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6079,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 6079,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 6079,
											"end": 6176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6079,
											"end": 6176,
											"name": "tag",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 6079,
											"end": 6176,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6079,
											"end": 6176,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6079,
											"end": 6176,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6079,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 6079,
											"end": 6176,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6079,
											"end": 6176,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6079,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 6079,
											"end": 6176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6079,
											"end": 6176,
											"name": "tag",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 6079,
											"end": 6176,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6079,
											"end": 6176,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6079,
											"end": 6176,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6079,
											"end": 6176,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6079,
											"end": 6176,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6079,
											"end": 6176,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6079,
											"end": 6176,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6079,
											"end": 6176,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 5321,
											"end": 5559,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 5321,
											"end": 5559,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5321,
											"end": 5559,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 5321,
											"end": 5559,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5321,
											"end": 5559,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5321,
											"end": 5559,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 5321,
											"end": 5559,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5321,
											"end": 5559,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5321,
											"end": 5559,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5321,
											"end": 5559,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5321,
											"end": 5559,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 5321,
											"end": 5559,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5321,
											"end": 5559,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5321,
											"end": 5559,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 5321,
											"end": 5559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5321,
											"end": 5559,
											"name": "tag",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 5321,
											"end": 5559,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5321,
											"end": 5559,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 5321,
											"end": 5559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5321,
											"end": 5559,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 5321,
											"end": 5559,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5321,
											"end": 5559,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5321,
											"end": 5559,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5321,
											"end": 5559,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 5321,
											"end": 5559,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5321,
											"end": 5559,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5321,
											"end": 5559,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5321,
											"end": 5559,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 5321,
											"end": 5559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5321,
											"end": 5559,
											"name": "tag",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 5321,
											"end": 5559,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5321,
											"end": 5559,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5321,
											"end": 5559,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5321,
											"end": 5559,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5321,
											"end": 5559,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5321,
											"end": 5559,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5321,
											"end": 5559,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5321,
											"end": 5559,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3230,
											"end": 4072,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 3230,
											"end": 4072,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3230,
											"end": 4072,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 3230,
											"end": 4072,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3230,
											"end": 4072,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3230,
											"end": 4072,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3230,
											"end": 4072,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3230,
											"end": 4072,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3230,
											"end": 4072,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3230,
											"end": 4072,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3230,
											"end": 4072,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 3230,
											"end": 4072,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3230,
											"end": 4072,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3230,
											"end": 4072,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 3230,
											"end": 4072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3230,
											"end": 4072,
											"name": "tag",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 3230,
											"end": 4072,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3230,
											"end": 4072,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 3230,
											"end": 4072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3230,
											"end": 4072,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 3230,
											"end": 4072,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3230,
											"end": 4072,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3230,
											"end": 4072,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3230,
											"end": 4072,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 3230,
											"end": 4072,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3230,
											"end": 4072,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3230,
											"end": 4072,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 3230,
											"end": 4072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3230,
											"end": 4072,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 3230,
											"end": 4072,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3230,
											"end": 4072,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3230,
											"end": 4072,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3230,
											"end": 4072,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3230,
											"end": 4072,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3230,
											"end": 4072,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3230,
											"end": 4072,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3230,
											"end": 4072,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 366,
											"end": 396,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 366,
											"end": 396,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 366,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 366,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 366,
											"end": 396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 366,
											"end": 396,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 366,
											"end": 396,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 366,
											"end": 396,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 366,
											"end": 396,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 366,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 366,
											"end": 396,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 366,
											"end": 396,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 366,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 366,
											"end": 396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 366,
											"end": 396,
											"name": "tag",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 366,
											"end": 396,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 366,
											"end": 396,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 366,
											"end": 396,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 366,
											"end": 396,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 366,
											"end": 396,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 366,
											"end": 396,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 366,
											"end": 396,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 366,
											"end": 396,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 6182,
											"end": 6287,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6182,
											"end": 6287,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6182,
											"end": 6287,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 6182,
											"end": 6287,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6182,
											"end": 6287,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6182,
											"end": 6287,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 6182,
											"end": 6287,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6182,
											"end": 6287,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6182,
											"end": 6287,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6182,
											"end": 6287,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6182,
											"end": 6287,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 6182,
											"end": 6287,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6182,
											"end": 6287,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6182,
											"end": 6287,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 6182,
											"end": 6287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6182,
											"end": 6287,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 6182,
											"end": 6287,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6182,
											"end": 6287,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 6182,
											"end": 6287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6182,
											"end": 6287,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 6182,
											"end": 6287,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6182,
											"end": 6287,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6182,
											"end": 6287,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6182,
											"end": 6287,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 6182,
											"end": 6287,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6182,
											"end": 6287,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6182,
											"end": 6287,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 6182,
											"end": 6287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6182,
											"end": 6287,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 6182,
											"end": 6287,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6182,
											"end": 6287,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6182,
											"end": 6287,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6182,
											"end": 6287,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6182,
											"end": 6287,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6182,
											"end": 6287,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6182,
											"end": 6287,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6182,
											"end": 6287,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 6614,
											"end": 6948,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 6614,
											"end": 6948,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6614,
											"end": 6948,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 6614,
											"end": 6948,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 6614,
											"end": 6948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6614,
											"end": 6948,
											"name": "tag",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 6614,
											"end": 6948,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6614,
											"end": 6948,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6614,
											"end": 6948,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6614,
											"end": 6948,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 6614,
											"end": 6948,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6614,
											"end": 6948,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6614,
											"end": 6948,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 6614,
											"end": 6948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6614,
											"end": 6948,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 6614,
											"end": 6948,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6614,
											"end": 6948,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6614,
											"end": 6948,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6614,
											"end": 6948,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6614,
											"end": 6948,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6614,
											"end": 6948,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6614,
											"end": 6948,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6614,
											"end": 6948,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 329,
											"end": 359,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 329,
											"end": 359,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 329,
											"end": 359,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "1586"
										},
										{
											"begin": 329,
											"end": 359,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 329,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 467,
											"end": 493,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 467,
											"end": 493,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 467,
											"end": 493,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 467,
											"end": 493,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 467,
											"end": 493,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 467,
											"end": 493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 405,
											"end": 428,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 405,
											"end": 428,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 405,
											"end": 428,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 405,
											"end": 428,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 405,
											"end": 428,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 405,
											"end": 428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1731,
											"end": 2392,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 1731,
											"end": 2392,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1794,
											"end": 1811,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1824,
											"end": 1830,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "1586"
										},
										{
											"begin": 1824,
											"end": 1843,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1824,
											"end": 1843,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 1843,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 1844,
											"end": 1854,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1864,
											"end": 1868,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 1871,
											"end": 1880,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 1881,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1824,
											"end": 1881,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 1881,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 1881,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1824,
											"end": 1881,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 1881,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1824,
											"end": 1881,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 1881,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 1881,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 1881,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1824,
											"end": 1881,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 1881,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 1824,
											"end": 1881,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 1881,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 1881,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 1881,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 1881,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 1824,
											"end": 1881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 1881,
											"name": "tag",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 1824,
											"end": 1881,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 1881,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1824,
											"end": 1881,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1824,
											"end": 1881,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 1881,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 1881,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 1881,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 1881,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 1881,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1824,
											"end": 1881,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 1881,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 1881,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 1881,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 1881,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 1881,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 1881,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 1824,
											"end": 1881,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 1881,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 1881,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1824,
											"end": 1881,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 1881,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 1881,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 1881,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1824,
											"end": 1881,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 1881,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 1824,
											"end": 1881,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 1881,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 1881,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 1881,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 1881,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 1881,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1824,
											"end": 1881,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 1881,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 1881,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1824,
											"end": 1881,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 1881,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1824,
											"end": 1881,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 1881,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 1881,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 1881,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 1881,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 1881,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 1881,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1824,
											"end": 1881,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 1881,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 1881,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 1881,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 1881,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 1881,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 1824,
											"end": 1881,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 1881,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 1881,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 1824,
											"end": 1881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 1881,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 1824,
											"end": 1881,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 1881,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1892,
											"end": 1915,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1938,
											"end": 1942,
											"name": "PUSH",
											"source": 5,
											"value": "3E8"
										},
										{
											"begin": 1931,
											"end": 1934,
											"name": "PUSH",
											"source": 5,
											"value": "3E5"
										},
										{
											"begin": 1919,
											"end": 1928,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1919,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 1919,
											"end": 1934,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1919,
											"end": 1934,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1919,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 1919,
											"end": 1934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1919,
											"end": 1934,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 1919,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1918,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 1918,
											"end": 1942,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1918,
											"end": 1942,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1918,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 1918,
											"end": 1942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1918,
											"end": 1942,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 1918,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1892,
											"end": 1942,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1892,
											"end": 1942,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2008,
											"end": 2023,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1997,
											"end": 2005,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1997,
											"end": 2005,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1997,
											"end": 2023,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 1997,
											"end": 2023,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1997,
											"end": 2023,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1997,
											"end": 2023,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 1997,
											"end": 2023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1997,
											"end": 2023,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 1997,
											"end": 2023,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 1992,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1966,
											"end": 1974,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1966,
											"end": 1974,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1966,
											"end": 1992,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 1966,
											"end": 1992,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1966,
											"end": 1992,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1966,
											"end": 1992,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 1966,
											"end": 1992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1966,
											"end": 1992,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 1966,
											"end": 1992,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1965,
											"end": 2024,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 1965,
											"end": 2024,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1965,
											"end": 2024,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1965,
											"end": 2024,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 1965,
											"end": 2024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1965,
											"end": 2024,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 1965,
											"end": 2024,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1953,
											"end": 2024,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1953,
											"end": 2024,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2055,
											"end": 2056,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2043,
											"end": 2052,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2043,
											"end": 2056,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 2035,
											"end": 2087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "tag",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2098,
											"end": 2120,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2165,
											"end": 2169,
											"name": "PUSH",
											"source": 5,
											"value": "7D0"
										},
										{
											"begin": 2154,
											"end": 2162,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2154,
											"end": 2162,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2154,
											"end": 2169,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 2154,
											"end": 2169,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2154,
											"end": 2169,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2154,
											"end": 2169,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 2154,
											"end": 2169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2154,
											"end": 2169,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 2154,
											"end": 2169,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2139,
											"end": 2150,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 2139,
											"end": 2150,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2135,
											"end": 2136,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 2123,
											"end": 2132,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2123,
											"end": 2136,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 2123,
											"end": 2136,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2123,
											"end": 2136,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2123,
											"end": 2136,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 2123,
											"end": 2136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2123,
											"end": 2136,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 2123,
											"end": 2136,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2123,
											"end": 2150,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 2123,
											"end": 2150,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2123,
											"end": 2150,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2123,
											"end": 2150,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 2123,
											"end": 2150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2123,
											"end": 2150,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 2123,
											"end": 2150,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2123,
											"end": 2170,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 2123,
											"end": 2170,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2123,
											"end": 2170,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2123,
											"end": 2170,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 2123,
											"end": 2170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2123,
											"end": 2170,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 2123,
											"end": 2170,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2098,
											"end": 2170,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2098,
											"end": 2170,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2181,
											"end": 2213,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 2187,
											"end": 2196,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2196,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2187,
											"end": 2196,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2187,
											"end": 2196,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2187,
											"end": 2196,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2187,
											"end": 2196,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2187,
											"end": 2196,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2187,
											"end": 2196,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2187,
											"end": 2196,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2187,
											"end": 2196,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2198,
											"end": 2212,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2181,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 2181,
											"end": 2213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2181,
											"end": 2213,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 2181,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2260,
											"end": 2266,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "1589"
										},
										{
											"begin": 2260,
											"end": 2275,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2260,
											"end": 2275,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2260,
											"end": 2275,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 2276,
											"end": 2286,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2288,
											"end": 2297,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2260,
											"end": 2298,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2260,
											"end": 2298,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2260,
											"end": 2298,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2260,
											"end": 2298,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2260,
											"end": 2298,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2260,
											"end": 2298,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2260,
											"end": 2298,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2260,
											"end": 2298,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2260,
											"end": 2298,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2260,
											"end": 2298,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2260,
											"end": 2298,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2260,
											"end": 2298,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 2260,
											"end": 2298,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2260,
											"end": 2298,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2260,
											"end": 2298,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2260,
											"end": 2298,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 2260,
											"end": 2298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2260,
											"end": 2298,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 2260,
											"end": 2298,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2260,
											"end": 2298,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2260,
											"end": 2298,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2260,
											"end": 2298,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2260,
											"end": 2298,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2260,
											"end": 2298,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2260,
											"end": 2298,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2260,
											"end": 2298,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2260,
											"end": 2298,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2260,
											"end": 2298,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2260,
											"end": 2298,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 2260,
											"end": 2298,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 2260,
											"end": 2298,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2260,
											"end": 2298,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2260,
											"end": 2298,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2260,
											"end": 2298,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 2260,
											"end": 2298,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2260,
											"end": 2298,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2260,
											"end": 2298,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2260,
											"end": 2298,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2260,
											"end": 2298,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2260,
											"end": 2298,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2260,
											"end": 2298,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2260,
											"end": 2298,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2260,
											"end": 2298,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 2260,
											"end": 2298,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2260,
											"end": 2298,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2260,
											"end": 2298,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2260,
											"end": 2298,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2260,
											"end": 2298,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2260,
											"end": 2298,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2260,
											"end": 2298,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2260,
											"end": 2298,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2260,
											"end": 2298,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2260,
											"end": 2298,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2260,
											"end": 2298,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2260,
											"end": 2298,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2260,
											"end": 2298,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2260,
											"end": 2298,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2260,
											"end": 2298,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2260,
											"end": 2298,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2260,
											"end": 2298,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2260,
											"end": 2298,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2260,
											"end": 2298,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2260,
											"end": 2298,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2260,
											"end": 2298,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2260,
											"end": 2298,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2260,
											"end": 2298,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2260,
											"end": 2298,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 2260,
											"end": 2298,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2260,
											"end": 2298,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2260,
											"end": 2298,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 2260,
											"end": 2298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2260,
											"end": 2298,
											"name": "tag",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 2260,
											"end": 2298,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2260,
											"end": 2298,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2311,
											"end": 2384,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 2319,
											"end": 2325,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "1586"
										},
										{
											"begin": 2319,
											"end": 2335,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2319,
											"end": 2335,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2319,
											"end": 2335,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 2344,
											"end": 2348,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 2319,
											"end": 2350,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2319,
											"end": 2350,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2319,
											"end": 2350,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2319,
											"end": 2350,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2319,
											"end": 2350,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2319,
											"end": 2350,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2319,
											"end": 2350,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2319,
											"end": 2350,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2319,
											"end": 2350,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2319,
											"end": 2350,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2319,
											"end": 2350,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2319,
											"end": 2350,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 2319,
											"end": 2350,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2319,
											"end": 2350,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2319,
											"end": 2350,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 2319,
											"end": 2350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2319,
											"end": 2350,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 2319,
											"end": 2350,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2319,
											"end": 2350,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2319,
											"end": 2350,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2319,
											"end": 2350,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2319,
											"end": 2350,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2319,
											"end": 2350,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2319,
											"end": 2350,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2319,
											"end": 2350,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2319,
											"end": 2350,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2319,
											"end": 2350,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 2319,
											"end": 2350,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 2319,
											"end": 2350,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2319,
											"end": 2350,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2319,
											"end": 2350,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2319,
											"end": 2350,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 2319,
											"end": 2350,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2319,
											"end": 2350,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2319,
											"end": 2350,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2319,
											"end": 2350,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2319,
											"end": 2350,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2319,
											"end": 2350,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2319,
											"end": 2350,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2319,
											"end": 2350,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2319,
											"end": 2350,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 2319,
											"end": 2350,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2319,
											"end": 2350,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2319,
											"end": 2350,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2319,
											"end": 2350,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2319,
											"end": 2350,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2319,
											"end": 2350,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2319,
											"end": 2350,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2319,
											"end": 2350,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2319,
											"end": 2350,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2319,
											"end": 2350,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2319,
											"end": 2350,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2319,
											"end": 2350,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2319,
											"end": 2350,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2319,
											"end": 2350,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2319,
											"end": 2350,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2319,
											"end": 2350,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2319,
											"end": 2350,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2319,
											"end": 2350,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2319,
											"end": 2350,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2319,
											"end": 2350,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2319,
											"end": 2350,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2319,
											"end": 2350,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2319,
											"end": 2350,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2319,
											"end": 2350,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 2319,
											"end": 2350,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2319,
											"end": 2350,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2319,
											"end": 2350,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 2319,
											"end": 2350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2319,
											"end": 2350,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 2319,
											"end": 2350,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2358,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "1589"
										},
										{
											"begin": 2352,
											"end": 2368,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2352,
											"end": 2368,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2368,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 2377,
											"end": 2381,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2383,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2352,
											"end": 2383,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2383,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2383,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2352,
											"end": 2383,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2383,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2352,
											"end": 2383,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2383,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2383,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2383,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2352,
											"end": 2383,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2383,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 2352,
											"end": 2383,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2383,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2383,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 2352,
											"end": 2383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2383,
											"name": "tag",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 2352,
											"end": 2383,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2383,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2352,
											"end": 2383,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2352,
											"end": 2383,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2383,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2383,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2383,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2383,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2383,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2383,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2383,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2383,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2383,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2383,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2383,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 2352,
											"end": 2383,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2383,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2383,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2352,
											"end": 2383,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2383,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2383,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2383,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2352,
											"end": 2383,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2383,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 2352,
											"end": 2383,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2383,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2383,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2383,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2383,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2383,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2352,
											"end": 2383,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2383,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2383,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2352,
											"end": 2383,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2383,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2352,
											"end": 2383,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2383,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2383,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2383,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2383,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2383,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2383,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2352,
											"end": 2383,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2383,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2383,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2383,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2383,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2383,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 2352,
											"end": 2383,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2383,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2383,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 2352,
											"end": 2383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2383,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 2352,
											"end": 2383,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2311,
											"end": 2318,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 2311,
											"end": 2384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2311,
											"end": 2384,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 2311,
											"end": 2384,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1813,
											"end": 2392,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1813,
											"end": 2392,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1731,
											"end": 2392,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1731,
											"end": 2392,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1731,
											"end": 2392,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1731,
											"end": 2392,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6956,
											"end": 7262,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 6956,
											"end": 7262,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7026,
											"end": 7033,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7065,
											"end": 7066,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7054,
											"end": 7062,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 7054,
											"end": 7062,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7054,
											"end": 7066,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 7054,
											"end": 7082,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7054,
											"end": 7082,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7054,
											"end": 7082,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 7054,
											"end": 7082,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7054,
											"end": 7082,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7081,
											"end": 7082,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7070,
											"end": 7078,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 7070,
											"end": 7078,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7070,
											"end": 7082,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 7054,
											"end": 7082,
											"name": "tag",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 7054,
											"end": 7082,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7054,
											"end": 7097,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7054,
											"end": 7097,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7054,
											"end": 7097,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 7054,
											"end": 7097,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7054,
											"end": 7097,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7096,
											"end": 7097,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7086,
											"end": 7093,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7086,
											"end": 7097,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 7054,
											"end": 7097,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 7054,
											"end": 7097,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7046,
											"end": 7118,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 7046,
											"end": 7118,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7046,
											"end": 7118,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7046,
											"end": 7118,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7046,
											"end": 7118,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7046,
											"end": 7118,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7046,
											"end": 7118,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7046,
											"end": 7118,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7046,
											"end": 7118,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7046,
											"end": 7118,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 7046,
											"end": 7118,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7046,
											"end": 7118,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 7046,
											"end": 7118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7046,
											"end": 7118,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 7046,
											"end": 7118,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7046,
											"end": 7118,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7046,
											"end": 7118,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7046,
											"end": 7118,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7046,
											"end": 7118,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7046,
											"end": 7118,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7046,
											"end": 7118,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7046,
											"end": 7118,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7046,
											"end": 7118,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 7046,
											"end": 7118,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7129,
											"end": 7152,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7173,
											"end": 7177,
											"name": "PUSH",
											"source": 5,
											"value": "3E8"
										},
										{
											"begin": 7166,
											"end": 7169,
											"name": "PUSH",
											"source": 5,
											"value": "3E5"
										},
										{
											"begin": 7156,
											"end": 7163,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7156,
											"end": 7169,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 7156,
											"end": 7169,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7156,
											"end": 7169,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7156,
											"end": 7169,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 7156,
											"end": 7169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7156,
											"end": 7169,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 7156,
											"end": 7169,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7155,
											"end": 7177,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 7155,
											"end": 7177,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7155,
											"end": 7177,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7155,
											"end": 7177,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 7155,
											"end": 7177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7155,
											"end": 7177,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 7155,
											"end": 7177,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7129,
											"end": 7177,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7129,
											"end": 7177,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7238,
											"end": 7253,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7227,
											"end": 7235,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 7227,
											"end": 7235,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7227,
											"end": 7253,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 7227,
											"end": 7253,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7227,
											"end": 7253,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7227,
											"end": 7253,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 7227,
											"end": 7253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7227,
											"end": 7253,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 7227,
											"end": 7253,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7207,
											"end": 7222,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7196,
											"end": 7204,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 7196,
											"end": 7204,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7196,
											"end": 7222,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 7196,
											"end": 7222,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7196,
											"end": 7222,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7196,
											"end": 7222,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 7196,
											"end": 7222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7196,
											"end": 7222,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 7196,
											"end": 7222,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7195,
											"end": 7254,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 7195,
											"end": 7254,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7195,
											"end": 7254,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7195,
											"end": 7254,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 7195,
											"end": 7254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7195,
											"end": 7254,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 7195,
											"end": 7254,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7188,
											"end": 7254,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7188,
											"end": 7254,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7188,
											"end": 7254,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6956,
											"end": 7262,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6956,
											"end": 7262,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6956,
											"end": 7262,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6956,
											"end": 7262,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 435,
											"end": 458,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 435,
											"end": 458,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 435,
											"end": 458,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 435,
											"end": 458,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 435,
											"end": 458,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 435,
											"end": 458,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2400,
											"end": 3224,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 2400,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2539,
											"end": 2556,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2569,
											"end": 2575,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "1589"
										},
										{
											"begin": 2569,
											"end": 2588,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2569,
											"end": 2588,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2588,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 2589,
											"end": 2599,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2609,
											"end": 2613,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 2616,
											"end": 2625,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2626,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2569,
											"end": 2626,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2626,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2626,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2569,
											"end": 2626,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2626,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2569,
											"end": 2626,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2626,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2626,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2626,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2569,
											"end": 2626,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2626,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 2569,
											"end": 2626,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2626,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2626,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2626,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2626,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 2569,
											"end": 2626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2626,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 2569,
											"end": 2626,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2626,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2569,
											"end": 2626,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2569,
											"end": 2626,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2626,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2626,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2626,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2626,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2626,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2569,
											"end": 2626,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2626,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2626,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2626,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2626,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2626,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2626,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 2569,
											"end": 2626,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2626,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2626,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2569,
											"end": 2626,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2626,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2626,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2626,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2569,
											"end": 2626,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2626,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 2569,
											"end": 2626,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2626,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2626,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2626,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2626,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2626,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2569,
											"end": 2626,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2626,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2626,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2569,
											"end": 2626,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2626,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2569,
											"end": 2626,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2626,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2626,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2626,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2626,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2626,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2626,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2569,
											"end": 2626,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2626,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2626,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2626,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2626,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2626,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 2569,
											"end": 2626,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2626,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2626,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 2569,
											"end": 2626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2626,
											"name": "tag",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 2569,
											"end": 2626,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2626,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2637,
											"end": 2660,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2683,
											"end": 2687,
											"name": "PUSH",
											"source": 5,
											"value": "3E8"
										},
										{
											"begin": 2676,
											"end": 2679,
											"name": "PUSH",
											"source": 5,
											"value": "3E5"
										},
										{
											"begin": 2664,
											"end": 2673,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2664,
											"end": 2679,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 2664,
											"end": 2679,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2664,
											"end": 2679,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2664,
											"end": 2679,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 2664,
											"end": 2679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2664,
											"end": 2679,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 2664,
											"end": 2679,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2663,
											"end": 2687,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 2663,
											"end": 2687,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2663,
											"end": 2687,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2663,
											"end": 2687,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 2663,
											"end": 2687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2663,
											"end": 2687,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 2663,
											"end": 2687,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2637,
											"end": 2687,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2637,
											"end": 2687,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2753,
											"end": 2768,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2742,
											"end": 2750,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2742,
											"end": 2750,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2742,
											"end": 2768,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 2742,
											"end": 2768,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2742,
											"end": 2768,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2742,
											"end": 2768,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 2742,
											"end": 2768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2742,
											"end": 2768,
											"name": "tag",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 2742,
											"end": 2768,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2722,
											"end": 2737,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2711,
											"end": 2719,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2711,
											"end": 2719,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2711,
											"end": 2737,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 2711,
											"end": 2737,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2711,
											"end": 2737,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2711,
											"end": 2737,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 2711,
											"end": 2737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2711,
											"end": 2737,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 2711,
											"end": 2737,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2769,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 2710,
											"end": 2769,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2769,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2769,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 2710,
											"end": 2769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2769,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 2710,
											"end": 2769,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2698,
											"end": 2769,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2698,
											"end": 2769,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2800,
											"end": 2801,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2788,
											"end": 2797,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2788,
											"end": 2801,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2780,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 2780,
											"end": 2832,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2780,
											"end": 2832,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2780,
											"end": 2832,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2780,
											"end": 2832,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2780,
											"end": 2832,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2780,
											"end": 2832,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2780,
											"end": 2832,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2780,
											"end": 2832,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2780,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 2780,
											"end": 2832,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2780,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 2780,
											"end": 2832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2780,
											"end": 2832,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 2780,
											"end": 2832,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2780,
											"end": 2832,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2780,
											"end": 2832,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2780,
											"end": 2832,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2780,
											"end": 2832,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2780,
											"end": 2832,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2780,
											"end": 2832,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2780,
											"end": 2832,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2780,
											"end": 2832,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 2780,
											"end": 2832,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2903,
											"end": 2907,
											"name": "PUSH",
											"source": 5,
											"value": "3E8"
										},
										{
											"begin": 2890,
											"end": 2899,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2883,
											"end": 2887,
											"name": "PUSH",
											"source": 5,
											"value": "3E8"
										},
										{
											"begin": 2883,
											"end": 2899,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 2883,
											"end": 2899,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2883,
											"end": 2899,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2883,
											"end": 2899,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 2883,
											"end": 2899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2883,
											"end": 2899,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 2883,
											"end": 2899,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2865,
											"end": 2879,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2865,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 2865,
											"end": 2900,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2865,
											"end": 2900,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2865,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 2865,
											"end": 2900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2865,
											"end": 2900,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 2865,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2865,
											"end": 2907,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 2865,
											"end": 2907,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2865,
											"end": 2907,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2865,
											"end": 2907,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 2865,
											"end": 2907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2865,
											"end": 2907,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 2865,
											"end": 2907,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2851,
											"end": 2860,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2851,
											"end": 2908,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2851,
											"end": 2908,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2843,
											"end": 2921,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 2843,
											"end": 2921,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2843,
											"end": 2921,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2843,
											"end": 2921,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2843,
											"end": 2921,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2843,
											"end": 2921,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2843,
											"end": 2921,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2843,
											"end": 2921,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2843,
											"end": 2921,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2843,
											"end": 2921,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 2843,
											"end": 2921,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2843,
											"end": 2921,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 2843,
											"end": 2921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2843,
											"end": 2921,
											"name": "tag",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 2843,
											"end": 2921,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2843,
											"end": 2921,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2843,
											"end": 2921,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2843,
											"end": 2921,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2843,
											"end": 2921,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2843,
											"end": 2921,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2843,
											"end": 2921,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2843,
											"end": 2921,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2843,
											"end": 2921,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 2843,
											"end": 2921,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2932,
											"end": 2954,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2999,
											"end": 3003,
											"name": "PUSH",
											"source": 5,
											"value": "7D0"
										},
										{
											"begin": 2988,
											"end": 2996,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2988,
											"end": 2996,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2988,
											"end": 3003,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 2988,
											"end": 3003,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2988,
											"end": 3003,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2988,
											"end": 3003,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 2988,
											"end": 3003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2988,
											"end": 3003,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 2988,
											"end": 3003,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2973,
											"end": 2984,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 2973,
											"end": 2984,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2969,
											"end": 2970,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 2957,
											"end": 2966,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 2957,
											"end": 2970,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 2957,
											"end": 2970,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2957,
											"end": 2970,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2957,
											"end": 2970,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 2957,
											"end": 2970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2957,
											"end": 2970,
											"name": "tag",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 2957,
											"end": 2970,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2957,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 2957,
											"end": 2984,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2957,
											"end": 2984,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2957,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 2957,
											"end": 2984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2957,
											"end": 2984,
											"name": "tag",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 2957,
											"end": 2984,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2957,
											"end": 3004,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 2957,
											"end": 3004,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2957,
											"end": 3004,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2957,
											"end": 3004,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 2957,
											"end": 3004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2957,
											"end": 3004,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 2957,
											"end": 3004,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2932,
											"end": 3004,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2932,
											"end": 3004,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3015,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 3021,
											"end": 3030,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3021,
											"end": 3030,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3021,
											"end": 3030,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3021,
											"end": 3030,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3021,
											"end": 3030,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3021,
											"end": 3030,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 3021,
											"end": 3030,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3021,
											"end": 3030,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 3021,
											"end": 3030,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3021,
											"end": 3030,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3032,
											"end": 3046,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3015,
											"end": 3020,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 3015,
											"end": 3047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3015,
											"end": 3047,
											"name": "tag",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 3015,
											"end": 3047,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3094,
											"end": 3100,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "1586"
										},
										{
											"begin": 3094,
											"end": 3109,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3094,
											"end": 3109,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3094,
											"end": 3109,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 3110,
											"end": 3120,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3122,
											"end": 3131,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3094,
											"end": 3132,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3094,
											"end": 3132,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3094,
											"end": 3132,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3094,
											"end": 3132,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3094,
											"end": 3132,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3094,
											"end": 3132,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 3094,
											"end": 3132,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 3094,
											"end": 3132,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3094,
											"end": 3132,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3094,
											"end": 3132,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3094,
											"end": 3132,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3094,
											"end": 3132,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 3094,
											"end": 3132,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3094,
											"end": 3132,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3094,
											"end": 3132,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3094,
											"end": 3132,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 3094,
											"end": 3132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3094,
											"end": 3132,
											"name": "tag",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 3094,
											"end": 3132,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3094,
											"end": 3132,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3094,
											"end": 3132,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3094,
											"end": 3132,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3094,
											"end": 3132,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3094,
											"end": 3132,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3094,
											"end": 3132,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3094,
											"end": 3132,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3094,
											"end": 3132,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3094,
											"end": 3132,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 3094,
											"end": 3132,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 3094,
											"end": 3132,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 3094,
											"end": 3132,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3094,
											"end": 3132,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3094,
											"end": 3132,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3094,
											"end": 3132,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 3094,
											"end": 3132,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3094,
											"end": 3132,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3094,
											"end": 3132,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3094,
											"end": 3132,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3094,
											"end": 3132,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 3094,
											"end": 3132,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3094,
											"end": 3132,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3094,
											"end": 3132,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3094,
											"end": 3132,
											"name": "tag",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 3094,
											"end": 3132,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3094,
											"end": 3132,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3094,
											"end": 3132,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3094,
											"end": 3132,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3094,
											"end": 3132,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3094,
											"end": 3132,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3094,
											"end": 3132,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3094,
											"end": 3132,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3094,
											"end": 3132,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3094,
											"end": 3132,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 3094,
											"end": 3132,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3094,
											"end": 3132,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3094,
											"end": 3132,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3094,
											"end": 3132,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3094,
											"end": 3132,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3094,
											"end": 3132,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3094,
											"end": 3132,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3094,
											"end": 3132,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3094,
											"end": 3132,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3094,
											"end": 3132,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3094,
											"end": 3132,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3094,
											"end": 3132,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3094,
											"end": 3132,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3094,
											"end": 3132,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 3094,
											"end": 3132,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3094,
											"end": 3132,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3094,
											"end": 3132,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 3094,
											"end": 3132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3094,
											"end": 3132,
											"name": "tag",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 3094,
											"end": 3132,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3094,
											"end": 3132,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3143,
											"end": 3216,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 3151,
											"end": 3157,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "1586"
										},
										{
											"begin": 3151,
											"end": 3167,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3151,
											"end": 3167,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3151,
											"end": 3167,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 3176,
											"end": 3180,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 3151,
											"end": 3182,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3151,
											"end": 3182,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3151,
											"end": 3182,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3151,
											"end": 3182,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3151,
											"end": 3182,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3151,
											"end": 3182,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 3151,
											"end": 3182,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 3151,
											"end": 3182,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3151,
											"end": 3182,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3151,
											"end": 3182,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3151,
											"end": 3182,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3151,
											"end": 3182,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 3151,
											"end": 3182,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3151,
											"end": 3182,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3151,
											"end": 3182,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 3151,
											"end": 3182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3151,
											"end": 3182,
											"name": "tag",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 3151,
											"end": 3182,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3151,
											"end": 3182,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3151,
											"end": 3182,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3151,
											"end": 3182,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3151,
											"end": 3182,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3151,
											"end": 3182,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3151,
											"end": 3182,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3151,
											"end": 3182,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3151,
											"end": 3182,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3151,
											"end": 3182,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 3151,
											"end": 3182,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 3151,
											"end": 3182,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3151,
											"end": 3182,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3151,
											"end": 3182,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3151,
											"end": 3182,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 3151,
											"end": 3182,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3151,
											"end": 3182,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3151,
											"end": 3182,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3151,
											"end": 3182,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3151,
											"end": 3182,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 3151,
											"end": 3182,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3151,
											"end": 3182,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3151,
											"end": 3182,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3151,
											"end": 3182,
											"name": "tag",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 3151,
											"end": 3182,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3151,
											"end": 3182,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3151,
											"end": 3182,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3151,
											"end": 3182,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3151,
											"end": 3182,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3151,
											"end": 3182,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3151,
											"end": 3182,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3151,
											"end": 3182,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3151,
											"end": 3182,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3151,
											"end": 3182,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 3151,
											"end": 3182,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3151,
											"end": 3182,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3151,
											"end": 3182,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3151,
											"end": 3182,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3151,
											"end": 3182,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3151,
											"end": 3182,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3151,
											"end": 3182,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3151,
											"end": 3182,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3151,
											"end": 3182,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3151,
											"end": 3182,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3151,
											"end": 3182,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3151,
											"end": 3182,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3151,
											"end": 3182,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3151,
											"end": 3182,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 3151,
											"end": 3182,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3151,
											"end": 3182,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3151,
											"end": 3182,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 3151,
											"end": 3182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3151,
											"end": 3182,
											"name": "tag",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 3151,
											"end": 3182,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3184,
											"end": 3190,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "1589"
										},
										{
											"begin": 3184,
											"end": 3200,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3184,
											"end": 3200,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3184,
											"end": 3200,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 3209,
											"end": 3213,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 3184,
											"end": 3215,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3184,
											"end": 3215,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3184,
											"end": 3215,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3184,
											"end": 3215,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3184,
											"end": 3215,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3184,
											"end": 3215,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 3184,
											"end": 3215,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 3184,
											"end": 3215,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3184,
											"end": 3215,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3184,
											"end": 3215,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3184,
											"end": 3215,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3184,
											"end": 3215,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 3184,
											"end": 3215,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3184,
											"end": 3215,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3184,
											"end": 3215,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 3184,
											"end": 3215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3184,
											"end": 3215,
											"name": "tag",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 3184,
											"end": 3215,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3184,
											"end": 3215,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3184,
											"end": 3215,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3184,
											"end": 3215,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3184,
											"end": 3215,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3184,
											"end": 3215,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3184,
											"end": 3215,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3184,
											"end": 3215,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3184,
											"end": 3215,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3184,
											"end": 3215,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 3184,
											"end": 3215,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 3184,
											"end": 3215,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3184,
											"end": 3215,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3184,
											"end": 3215,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3184,
											"end": 3215,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 3184,
											"end": 3215,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3184,
											"end": 3215,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3184,
											"end": 3215,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3184,
											"end": 3215,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3184,
											"end": 3215,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 3184,
											"end": 3215,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3184,
											"end": 3215,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3184,
											"end": 3215,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3184,
											"end": 3215,
											"name": "tag",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 3184,
											"end": 3215,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3184,
											"end": 3215,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3184,
											"end": 3215,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3184,
											"end": 3215,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3184,
											"end": 3215,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3184,
											"end": 3215,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3184,
											"end": 3215,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3184,
											"end": 3215,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3184,
											"end": 3215,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3184,
											"end": 3215,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 3184,
											"end": 3215,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3184,
											"end": 3215,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3184,
											"end": 3215,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3184,
											"end": 3215,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3184,
											"end": 3215,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3184,
											"end": 3215,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3184,
											"end": 3215,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3184,
											"end": 3215,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3184,
											"end": 3215,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3184,
											"end": 3215,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3184,
											"end": 3215,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3184,
											"end": 3215,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3184,
											"end": 3215,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3184,
											"end": 3215,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 3184,
											"end": 3215,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3184,
											"end": 3215,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3184,
											"end": 3215,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 3184,
											"end": 3215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3184,
											"end": 3215,
											"name": "tag",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 3184,
											"end": 3215,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3143,
											"end": 3150,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 3143,
											"end": 3216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3143,
											"end": 3216,
											"name": "tag",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 3143,
											"end": 3216,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 3224,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 3224,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2400,
											"end": 3224,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2400,
											"end": 3224,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2400,
											"end": 3224,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2400,
											"end": 3224,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2400,
											"end": 3224,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2400,
											"end": 3224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 500,
											"end": 544,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 500,
											"end": 544,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 500,
											"end": 544,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 500,
											"end": 544,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 500,
											"end": 544,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 500,
											"end": 544,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 500,
											"end": 544,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 500,
											"end": 544,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 500,
											"end": 544,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 500,
											"end": 544,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 500,
											"end": 544,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 500,
											"end": 544,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 500,
											"end": 544,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 500,
											"end": 544,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 500,
											"end": 544,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 500,
											"end": 544,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 500,
											"end": 544,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 500,
											"end": 544,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 500,
											"end": 544,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4910,
											"end": 5072,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 4910,
											"end": 5072,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4971,
											"end": 4986,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4988,
											"end": 5003,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5023,
											"end": 5064,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 5040,
											"end": 5045,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5047,
											"end": 5056,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5047,
											"end": 5063,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5057,
											"end": 5062,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5047,
											"end": 5063,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5047,
											"end": 5063,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5047,
											"end": 5063,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5047,
											"end": 5063,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5047,
											"end": 5063,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5047,
											"end": 5063,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5047,
											"end": 5063,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5047,
											"end": 5063,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5047,
											"end": 5063,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5047,
											"end": 5063,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5047,
											"end": 5063,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5047,
											"end": 5063,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5047,
											"end": 5063,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5047,
											"end": 5063,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5047,
											"end": 5063,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5047,
											"end": 5063,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5023,
											"end": 5039,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 5023,
											"end": 5064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5023,
											"end": 5064,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 5023,
											"end": 5064,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5016,
											"end": 5064,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5016,
											"end": 5064,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5016,
											"end": 5064,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5016,
											"end": 5064,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4910,
											"end": 5072,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4910,
											"end": 5072,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4910,
											"end": 5072,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4910,
											"end": 5072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1723,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 1139,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1188,
											"end": 1205,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1218,
											"end": 1224,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "1589"
										},
										{
											"begin": 1218,
											"end": 1237,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1218,
											"end": 1237,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1237,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 1238,
											"end": 1248,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1258,
											"end": 1262,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 1265,
											"end": 1274,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1275,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1218,
											"end": 1275,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1275,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1275,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1218,
											"end": 1275,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1275,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1218,
											"end": 1275,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1275,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1275,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1275,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1218,
											"end": 1275,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1275,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 1218,
											"end": 1275,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1275,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1275,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1275,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1275,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 1218,
											"end": 1275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1275,
											"name": "tag",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 1218,
											"end": 1275,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1275,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1218,
											"end": 1275,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1218,
											"end": 1275,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1275,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1275,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1275,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1275,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1275,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1218,
											"end": 1275,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1275,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1275,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1275,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1275,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1275,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1275,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 1218,
											"end": 1275,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1275,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1275,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1218,
											"end": 1275,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1275,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1275,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1275,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1218,
											"end": 1275,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1275,
											"name": "tag",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 1218,
											"end": 1275,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1275,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1275,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1275,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1275,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1275,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1218,
											"end": 1275,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1275,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1275,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1218,
											"end": 1275,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1275,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1218,
											"end": 1275,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1275,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1275,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1275,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1275,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1275,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1275,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1218,
											"end": 1275,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1275,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1275,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1275,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1275,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1275,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 1218,
											"end": 1275,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1275,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1275,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 1218,
											"end": 1275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1275,
											"name": "tag",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 1218,
											"end": 1275,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1275,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1286,
											"end": 1309,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1332,
											"end": 1336,
											"name": "PUSH",
											"source": 5,
											"value": "3E8"
										},
										{
											"begin": 1325,
											"end": 1328,
											"name": "PUSH",
											"source": 5,
											"value": "3E5"
										},
										{
											"begin": 1313,
											"end": 1322,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1313,
											"end": 1328,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 1313,
											"end": 1328,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1313,
											"end": 1328,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1313,
											"end": 1328,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 1313,
											"end": 1328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1313,
											"end": 1328,
											"name": "tag",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 1313,
											"end": 1328,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1312,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 1312,
											"end": 1336,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1312,
											"end": 1336,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1312,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 1312,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1312,
											"end": 1336,
											"name": "tag",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 1312,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1286,
											"end": 1336,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1286,
											"end": 1336,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1402,
											"end": 1417,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1391,
											"end": 1399,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1391,
											"end": 1399,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1391,
											"end": 1417,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 1391,
											"end": 1417,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1391,
											"end": 1417,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1391,
											"end": 1417,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 1391,
											"end": 1417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1391,
											"end": 1417,
											"name": "tag",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 1391,
											"end": 1417,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1371,
											"end": 1386,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1360,
											"end": 1368,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1360,
											"end": 1368,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1360,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 1360,
											"end": 1386,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1360,
											"end": 1386,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1360,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 1360,
											"end": 1386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1360,
											"end": 1386,
											"name": "tag",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 1360,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1359,
											"end": 1418,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 1359,
											"end": 1418,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1359,
											"end": 1418,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1359,
											"end": 1418,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 1359,
											"end": 1418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1359,
											"end": 1418,
											"name": "tag",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 1359,
											"end": 1418,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1347,
											"end": 1418,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1347,
											"end": 1418,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1429,
											"end": 1451,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1496,
											"end": 1500,
											"name": "PUSH",
											"source": 5,
											"value": "7D0"
										},
										{
											"begin": 1485,
											"end": 1493,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1485,
											"end": 1493,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1485,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 1485,
											"end": 1500,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1485,
											"end": 1500,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1485,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 1485,
											"end": 1500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1485,
											"end": 1500,
											"name": "tag",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 1485,
											"end": 1500,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1470,
											"end": 1481,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1470,
											"end": 1481,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1466,
											"end": 1467,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1454,
											"end": 1463,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1454,
											"end": 1467,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 1454,
											"end": 1467,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1454,
											"end": 1467,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1454,
											"end": 1467,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 1454,
											"end": 1467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1454,
											"end": 1467,
											"name": "tag",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 1454,
											"end": 1467,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1454,
											"end": 1481,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 1454,
											"end": 1481,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1454,
											"end": 1481,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1454,
											"end": 1481,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 1454,
											"end": 1481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1454,
											"end": 1481,
											"name": "tag",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 1454,
											"end": 1481,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1454,
											"end": 1501,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 1454,
											"end": 1501,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1454,
											"end": 1501,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1454,
											"end": 1501,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 1454,
											"end": 1501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1454,
											"end": 1501,
											"name": "tag",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 1454,
											"end": 1501,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1429,
											"end": 1501,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1429,
											"end": 1501,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1512,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 1518,
											"end": 1527,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1518,
											"end": 1527,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1518,
											"end": 1527,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1518,
											"end": 1527,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1518,
											"end": 1527,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1518,
											"end": 1527,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1518,
											"end": 1527,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1518,
											"end": 1527,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1518,
											"end": 1527,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1518,
											"end": 1527,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1529,
											"end": 1543,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1512,
											"end": 1517,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 1512,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1512,
											"end": 1544,
											"name": "tag",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 1512,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1597,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "1586"
										},
										{
											"begin": 1591,
											"end": 1606,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1591,
											"end": 1606,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1606,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 1607,
											"end": 1617,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1628,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1629,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1591,
											"end": 1629,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1629,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1629,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1591,
											"end": 1629,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1629,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1591,
											"end": 1629,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1629,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1629,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1629,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1591,
											"end": 1629,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1629,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 1591,
											"end": 1629,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1629,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1629,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1629,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 1591,
											"end": 1629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1629,
											"name": "tag",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 1591,
											"end": 1629,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1629,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1591,
											"end": 1629,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1591,
											"end": 1629,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1629,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1629,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1629,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1629,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1629,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1591,
											"end": 1629,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1629,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1629,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1629,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1629,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1629,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1629,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 1591,
											"end": 1629,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1629,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1629,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1591,
											"end": 1629,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1629,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1629,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1629,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1591,
											"end": 1629,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1629,
											"name": "tag",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 1591,
											"end": 1629,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1629,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1629,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1629,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1629,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1629,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1591,
											"end": 1629,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1629,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1629,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1591,
											"end": 1629,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1629,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1591,
											"end": 1629,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1629,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1629,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1629,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1629,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1629,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1629,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1591,
											"end": 1629,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1629,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1629,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1629,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1629,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1629,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 1591,
											"end": 1629,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1629,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1629,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 1591,
											"end": 1629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1629,
											"name": "tag",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 1591,
											"end": 1629,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1629,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1642,
											"end": 1715,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 1650,
											"end": 1656,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "1586"
										},
										{
											"begin": 1650,
											"end": 1666,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1650,
											"end": 1666,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1650,
											"end": 1666,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 1675,
											"end": 1679,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 1650,
											"end": 1681,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1650,
											"end": 1681,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1650,
											"end": 1681,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1650,
											"end": 1681,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1650,
											"end": 1681,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1650,
											"end": 1681,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1650,
											"end": 1681,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1650,
											"end": 1681,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1650,
											"end": 1681,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1650,
											"end": 1681,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1650,
											"end": 1681,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1650,
											"end": 1681,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 1650,
											"end": 1681,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1650,
											"end": 1681,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1650,
											"end": 1681,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 1650,
											"end": 1681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1650,
											"end": 1681,
											"name": "tag",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 1650,
											"end": 1681,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1650,
											"end": 1681,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1650,
											"end": 1681,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1650,
											"end": 1681,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1650,
											"end": 1681,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1650,
											"end": 1681,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1650,
											"end": 1681,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1650,
											"end": 1681,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1650,
											"end": 1681,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1650,
											"end": 1681,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1650,
											"end": 1681,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 1650,
											"end": 1681,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1650,
											"end": 1681,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1650,
											"end": 1681,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1650,
											"end": 1681,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 1650,
											"end": 1681,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1650,
											"end": 1681,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1650,
											"end": 1681,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1650,
											"end": 1681,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1650,
											"end": 1681,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1650,
											"end": 1681,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1650,
											"end": 1681,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1650,
											"end": 1681,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1650,
											"end": 1681,
											"name": "tag",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 1650,
											"end": 1681,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1650,
											"end": 1681,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1650,
											"end": 1681,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1650,
											"end": 1681,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1650,
											"end": 1681,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1650,
											"end": 1681,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1650,
											"end": 1681,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1650,
											"end": 1681,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1650,
											"end": 1681,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1650,
											"end": 1681,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1650,
											"end": 1681,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1650,
											"end": 1681,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1650,
											"end": 1681,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1650,
											"end": 1681,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1650,
											"end": 1681,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1650,
											"end": 1681,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1650,
											"end": 1681,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1650,
											"end": 1681,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1650,
											"end": 1681,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1650,
											"end": 1681,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1650,
											"end": 1681,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1650,
											"end": 1681,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1650,
											"end": 1681,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1650,
											"end": 1681,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 1650,
											"end": 1681,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1650,
											"end": 1681,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1650,
											"end": 1681,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 1650,
											"end": 1681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1650,
											"end": 1681,
											"name": "tag",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 1650,
											"end": 1681,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1683,
											"end": 1689,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "1589"
										},
										{
											"begin": 1683,
											"end": 1699,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1683,
											"end": 1699,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1683,
											"end": 1699,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 1708,
											"end": 1712,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 1683,
											"end": 1714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "tag",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "tag",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 1683,
											"end": 1714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "tag",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1642,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 1642,
											"end": 1715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1642,
											"end": 1715,
											"name": "tag",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 1642,
											"end": 1715,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1207,
											"end": 1723,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1207,
											"end": 1723,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1723,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1723,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1723,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7270,
											"end": 7576,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 7270,
											"end": 7576,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7340,
											"end": 7347,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7379,
											"end": 7380,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7368,
											"end": 7376,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 7368,
											"end": 7376,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7368,
											"end": 7380,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 7368,
											"end": 7396,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7368,
											"end": 7396,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7368,
											"end": 7396,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 7368,
											"end": 7396,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7368,
											"end": 7396,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7395,
											"end": 7396,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7384,
											"end": 7392,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 7384,
											"end": 7392,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7384,
											"end": 7396,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 7368,
											"end": 7396,
											"name": "tag",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 7368,
											"end": 7396,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7368,
											"end": 7411,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7368,
											"end": 7411,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7368,
											"end": 7411,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 7368,
											"end": 7411,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7368,
											"end": 7411,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7410,
											"end": 7411,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7400,
											"end": 7407,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7400,
											"end": 7411,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 7368,
											"end": 7411,
											"name": "tag",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 7368,
											"end": 7411,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7360,
											"end": 7432,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 7360,
											"end": 7432,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7360,
											"end": 7432,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7360,
											"end": 7432,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7360,
											"end": 7432,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7360,
											"end": 7432,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7360,
											"end": 7432,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7360,
											"end": 7432,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7360,
											"end": 7432,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7360,
											"end": 7432,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 7360,
											"end": 7432,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7360,
											"end": 7432,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 7360,
											"end": 7432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7360,
											"end": 7432,
											"name": "tag",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 7360,
											"end": 7432,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7360,
											"end": 7432,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7360,
											"end": 7432,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7360,
											"end": 7432,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7360,
											"end": 7432,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7360,
											"end": 7432,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7360,
											"end": 7432,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7360,
											"end": 7432,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7360,
											"end": 7432,
											"name": "tag",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 7360,
											"end": 7432,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7443,
											"end": 7466,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7487,
											"end": 7491,
											"name": "PUSH",
											"source": 5,
											"value": "3E8"
										},
										{
											"begin": 7480,
											"end": 7483,
											"name": "PUSH",
											"source": 5,
											"value": "3E5"
										},
										{
											"begin": 7470,
											"end": 7477,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7470,
											"end": 7483,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 7470,
											"end": 7483,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7470,
											"end": 7483,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7470,
											"end": 7483,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 7470,
											"end": 7483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7470,
											"end": 7483,
											"name": "tag",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 7470,
											"end": 7483,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7469,
											"end": 7491,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 7469,
											"end": 7491,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7469,
											"end": 7491,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7469,
											"end": 7491,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 7469,
											"end": 7491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7469,
											"end": 7491,
											"name": "tag",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 7469,
											"end": 7491,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7443,
											"end": 7491,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7443,
											"end": 7491,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7552,
											"end": 7567,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7541,
											"end": 7549,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 7541,
											"end": 7549,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7541,
											"end": 7567,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 7541,
											"end": 7567,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7541,
											"end": 7567,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7541,
											"end": 7567,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 7541,
											"end": 7567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7541,
											"end": 7567,
											"name": "tag",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 7541,
											"end": 7567,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7521,
											"end": 7536,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7510,
											"end": 7518,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 7510,
											"end": 7518,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7510,
											"end": 7536,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 7510,
											"end": 7536,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7510,
											"end": 7536,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7510,
											"end": 7536,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 7510,
											"end": 7536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7510,
											"end": 7536,
											"name": "tag",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 7510,
											"end": 7536,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7509,
											"end": 7568,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 7509,
											"end": 7568,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7509,
											"end": 7568,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7509,
											"end": 7568,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 7509,
											"end": 7568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7509,
											"end": 7568,
											"name": "tag",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 7509,
											"end": 7568,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7502,
											"end": 7568,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7502,
											"end": 7568,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7502,
											"end": 7568,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7270,
											"end": 7576,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7270,
											"end": 7576,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7270,
											"end": 7576,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7270,
											"end": 7576,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5080,
											"end": 5313,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 5080,
											"end": 5313,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5140,
											"end": 5155,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5157,
											"end": 5172,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5204,
											"end": 5213,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5204,
											"end": 5225,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5214,
											"end": 5224,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 5204,
											"end": 5225,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5204,
											"end": 5225,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5204,
											"end": 5225,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5204,
											"end": 5225,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5204,
											"end": 5225,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5204,
											"end": 5225,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5204,
											"end": 5225,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5204,
											"end": 5225,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5204,
											"end": 5225,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5204,
											"end": 5225,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5204,
											"end": 5225,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5204,
											"end": 5225,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5204,
											"end": 5225,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5204,
											"end": 5225,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5204,
											"end": 5225,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5204,
											"end": 5225,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5193,
											"end": 5200,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5193,
											"end": 5225,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 5193,
											"end": 5225,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5185,
											"end": 5250,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 5185,
											"end": 5250,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5185,
											"end": 5250,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5185,
											"end": 5250,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5185,
											"end": 5250,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5185,
											"end": 5250,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5185,
											"end": 5250,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5185,
											"end": 5250,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5185,
											"end": 5250,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5185,
											"end": 5250,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 5185,
											"end": 5250,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5185,
											"end": 5250,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 5185,
											"end": 5250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5185,
											"end": 5250,
											"name": "tag",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 5185,
											"end": 5250,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5185,
											"end": 5250,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5185,
											"end": 5250,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5185,
											"end": 5250,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5185,
											"end": 5250,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5185,
											"end": 5250,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5185,
											"end": 5250,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5185,
											"end": 5250,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5185,
											"end": 5250,
											"name": "tag",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 5185,
											"end": 5250,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5268,
											"end": 5305,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 5285,
											"end": 5295,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 5297,
											"end": 5304,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5268,
											"end": 5284,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 5268,
											"end": 5305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5268,
											"end": 5305,
											"name": "tag",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 5268,
											"end": 5305,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5261,
											"end": 5305,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5261,
											"end": 5305,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5261,
											"end": 5305,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5261,
											"end": 5305,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5080,
											"end": 5313,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5080,
											"end": 5313,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5080,
											"end": 5313,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5080,
											"end": 5313,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4080,
											"end": 4902,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 4080,
											"end": 4902,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4156,
											"end": 4170,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4183,
											"end": 4189,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "1586"
										},
										{
											"begin": 4183,
											"end": 4202,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4183,
											"end": 4202,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4183,
											"end": 4202,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 4203,
											"end": 4213,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4223,
											"end": 4227,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 4230,
											"end": 4238,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4183,
											"end": 4239,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4183,
											"end": 4239,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4183,
											"end": 4239,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4183,
											"end": 4239,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4183,
											"end": 4239,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4183,
											"end": 4239,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 4183,
											"end": 4239,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 4183,
											"end": 4239,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4183,
											"end": 4239,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4183,
											"end": 4239,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4183,
											"end": 4239,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4183,
											"end": 4239,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 4183,
											"end": 4239,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4183,
											"end": 4239,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4183,
											"end": 4239,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4183,
											"end": 4239,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4183,
											"end": 4239,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 4183,
											"end": 4239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4183,
											"end": 4239,
											"name": "tag",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 4183,
											"end": 4239,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4183,
											"end": 4239,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4183,
											"end": 4239,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4183,
											"end": 4239,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4183,
											"end": 4239,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4183,
											"end": 4239,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4183,
											"end": 4239,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4183,
											"end": 4239,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4183,
											"end": 4239,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4183,
											"end": 4239,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 4183,
											"end": 4239,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 4183,
											"end": 4239,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 4183,
											"end": 4239,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4183,
											"end": 4239,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4183,
											"end": 4239,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4183,
											"end": 4239,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 4183,
											"end": 4239,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4183,
											"end": 4239,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4183,
											"end": 4239,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4183,
											"end": 4239,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4183,
											"end": 4239,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 4183,
											"end": 4239,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4183,
											"end": 4239,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4183,
											"end": 4239,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4183,
											"end": 4239,
											"name": "tag",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 4183,
											"end": 4239,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4183,
											"end": 4239,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4183,
											"end": 4239,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4183,
											"end": 4239,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4183,
											"end": 4239,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4183,
											"end": 4239,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4183,
											"end": 4239,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4183,
											"end": 4239,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4183,
											"end": 4239,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4183,
											"end": 4239,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 4183,
											"end": 4239,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4183,
											"end": 4239,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4183,
											"end": 4239,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4183,
											"end": 4239,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4183,
											"end": 4239,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4183,
											"end": 4239,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4183,
											"end": 4239,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4183,
											"end": 4239,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4183,
											"end": 4239,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4183,
											"end": 4239,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4183,
											"end": 4239,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4183,
											"end": 4239,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4183,
											"end": 4239,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4183,
											"end": 4239,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 4183,
											"end": 4239,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4183,
											"end": 4239,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4183,
											"end": 4239,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 4183,
											"end": 4239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4183,
											"end": 4239,
											"name": "tag",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 4183,
											"end": 4239,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4183,
											"end": 4239,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4250,
											"end": 4256,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "1589"
										},
										{
											"begin": 4250,
											"end": 4269,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4250,
											"end": 4269,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4250,
											"end": 4269,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 4270,
											"end": 4280,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4290,
											"end": 4294,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 4297,
											"end": 4305,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4250,
											"end": 4306,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4250,
											"end": 4306,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4250,
											"end": 4306,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4250,
											"end": 4306,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4250,
											"end": 4306,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4250,
											"end": 4306,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 4250,
											"end": 4306,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 4250,
											"end": 4306,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4250,
											"end": 4306,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4250,
											"end": 4306,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4250,
											"end": 4306,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4250,
											"end": 4306,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 4250,
											"end": 4306,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4250,
											"end": 4306,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4250,
											"end": 4306,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4250,
											"end": 4306,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4250,
											"end": 4306,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 4250,
											"end": 4306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4250,
											"end": 4306,
											"name": "tag",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 4250,
											"end": 4306,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4250,
											"end": 4306,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4250,
											"end": 4306,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4250,
											"end": 4306,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4250,
											"end": 4306,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4250,
											"end": 4306,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4250,
											"end": 4306,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4250,
											"end": 4306,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4250,
											"end": 4306,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4250,
											"end": 4306,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 4250,
											"end": 4306,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 4250,
											"end": 4306,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 4250,
											"end": 4306,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4250,
											"end": 4306,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4250,
											"end": 4306,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4250,
											"end": 4306,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 4250,
											"end": 4306,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4250,
											"end": 4306,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4250,
											"end": 4306,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4250,
											"end": 4306,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4250,
											"end": 4306,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 4250,
											"end": 4306,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4250,
											"end": 4306,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4250,
											"end": 4306,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4250,
											"end": 4306,
											"name": "tag",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 4250,
											"end": 4306,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4250,
											"end": 4306,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4250,
											"end": 4306,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4250,
											"end": 4306,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4250,
											"end": 4306,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4250,
											"end": 4306,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4250,
											"end": 4306,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4250,
											"end": 4306,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4250,
											"end": 4306,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4250,
											"end": 4306,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 4250,
											"end": 4306,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4250,
											"end": 4306,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4250,
											"end": 4306,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4250,
											"end": 4306,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4250,
											"end": 4306,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4250,
											"end": 4306,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4250,
											"end": 4306,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4250,
											"end": 4306,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4250,
											"end": 4306,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4250,
											"end": 4306,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4250,
											"end": 4306,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4250,
											"end": 4306,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4250,
											"end": 4306,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4250,
											"end": 4306,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 4250,
											"end": 4306,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4250,
											"end": 4306,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4250,
											"end": 4306,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 4250,
											"end": 4306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4250,
											"end": 4306,
											"name": "tag",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 4250,
											"end": 4306,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4250,
											"end": 4306,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4334,
											"end": 4335,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4323,
											"end": 4331,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4323,
											"end": 4331,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4323,
											"end": 4335,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4323,
											"end": 4351,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4323,
											"end": 4351,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 4323,
											"end": 4351,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4323,
											"end": 4351,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4350,
											"end": 4351,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4339,
											"end": 4347,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 4339,
											"end": 4347,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4339,
											"end": 4351,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4323,
											"end": 4351,
											"name": "tag",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 4323,
											"end": 4351,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4319,
											"end": 4460,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4319,
											"end": 4460,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 4319,
											"end": 4460,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4412,
											"end": 4420,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4400,
											"end": 4408,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4400,
											"end": 4408,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4388,
											"end": 4396,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 4388,
											"end": 4396,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4377,
											"end": 4385,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4377,
											"end": 4396,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 4377,
											"end": 4396,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4377,
											"end": 4396,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4377,
											"end": 4396,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 4377,
											"end": 4396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4377,
											"end": 4396,
											"name": "tag",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 4377,
											"end": 4396,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4376,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 4376,
											"end": 4408,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4376,
											"end": 4408,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4376,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 4376,
											"end": 4408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4376,
											"end": 4408,
											"name": "tag",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 4376,
											"end": 4408,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4376,
											"end": 4420,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 4368,
											"end": 4448,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 4368,
											"end": 4448,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4368,
											"end": 4448,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4368,
											"end": 4448,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4368,
											"end": 4448,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4368,
											"end": 4448,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4368,
											"end": 4448,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4368,
											"end": 4448,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4368,
											"end": 4448,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4368,
											"end": 4448,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 4368,
											"end": 4448,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4368,
											"end": 4448,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 4368,
											"end": 4448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4368,
											"end": 4448,
											"name": "tag",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 4368,
											"end": 4448,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4368,
											"end": 4448,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4368,
											"end": 4448,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4368,
											"end": 4448,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4368,
											"end": 4448,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4368,
											"end": 4448,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4368,
											"end": 4448,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4368,
											"end": 4448,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4368,
											"end": 4448,
											"name": "tag",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 4368,
											"end": 4448,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4319,
											"end": 4460,
											"name": "tag",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 4319,
											"end": 4460,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4491,
											"end": 4492,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4476,
											"end": 4487,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 4476,
											"end": 4487,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4476,
											"end": 4492,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4472,
											"end": 4729,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 4472,
											"end": 4729,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4518,
											"end": 4544,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 4535,
											"end": 4543,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4524,
											"end": 4532,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4524,
											"end": 4543,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 4524,
											"end": 4543,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4524,
											"end": 4543,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4524,
											"end": 4543,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 4524,
											"end": 4543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4524,
											"end": 4543,
											"name": "tag",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 4524,
											"end": 4543,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4518,
											"end": 4523,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 4518,
											"end": 4544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4518,
											"end": 4544,
											"name": "tag",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 4518,
											"end": 4544,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4509,
											"end": 4544,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4509,
											"end": 4544,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4472,
											"end": 4729,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 4472,
											"end": 4729,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4472,
											"end": 4729,
											"name": "tag",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 4472,
											"end": 4729,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4586,
											"end": 4717,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 4640,
											"end": 4648,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4640,
											"end": 4648,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4625,
											"end": 4636,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 4625,
											"end": 4636,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4614,
											"end": 4622,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4614,
											"end": 4636,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 4614,
											"end": 4636,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4614,
											"end": 4636,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4614,
											"end": 4636,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 4614,
											"end": 4636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4614,
											"end": 4636,
											"name": "tag",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 4614,
											"end": 4636,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4613,
											"end": 4648,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 4613,
											"end": 4648,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4613,
											"end": 4648,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4613,
											"end": 4648,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 4613,
											"end": 4648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4613,
											"end": 4648,
											"name": "tag",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 4613,
											"end": 4648,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4694,
											"end": 4702,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 4694,
											"end": 4702,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4679,
											"end": 4690,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 4679,
											"end": 4690,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4668,
											"end": 4676,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4668,
											"end": 4690,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 4668,
											"end": 4690,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4668,
											"end": 4690,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4668,
											"end": 4690,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 4668,
											"end": 4690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4668,
											"end": 4690,
											"name": "tag",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 4668,
											"end": 4690,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4667,
											"end": 4702,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 4667,
											"end": 4702,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4667,
											"end": 4702,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4667,
											"end": 4702,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 4667,
											"end": 4702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4667,
											"end": 4702,
											"name": "tag",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 4667,
											"end": 4702,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4586,
											"end": 4594,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 4586,
											"end": 4717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4586,
											"end": 4717,
											"name": "tag",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 4586,
											"end": 4717,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4577,
											"end": 4717,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4577,
											"end": 4717,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4472,
											"end": 4729,
											"name": "tag",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 4472,
											"end": 4729,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4756,
											"end": 4757,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4747,
											"end": 4753,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4747,
											"end": 4757,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4739,
											"end": 4772,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 4739,
											"end": 4772,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4739,
											"end": 4772,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4739,
											"end": 4772,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4739,
											"end": 4772,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4739,
											"end": 4772,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4739,
											"end": 4772,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4739,
											"end": 4772,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4739,
											"end": 4772,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4739,
											"end": 4772,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 4739,
											"end": 4772,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4739,
											"end": 4772,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 4739,
											"end": 4772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4739,
											"end": 4772,
											"name": "tag",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 4739,
											"end": 4772,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4739,
											"end": 4772,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4739,
											"end": 4772,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4739,
											"end": 4772,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4739,
											"end": 4772,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4739,
											"end": 4772,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4739,
											"end": 4772,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4739,
											"end": 4772,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4739,
											"end": 4772,
											"name": "tag",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 4739,
											"end": 4772,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4783,
											"end": 4808,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 4789,
											"end": 4799,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4801,
											"end": 4807,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4783,
											"end": 4788,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 4783,
											"end": 4808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4783,
											"end": 4808,
											"name": "tag",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 4783,
											"end": 4808,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4821,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 4829,
											"end": 4835,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "1586"
										},
										{
											"begin": 4829,
											"end": 4845,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4829,
											"end": 4845,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4829,
											"end": 4845,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 4854,
											"end": 4858,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 4829,
											"end": 4860,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4829,
											"end": 4860,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4829,
											"end": 4860,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4829,
											"end": 4860,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4829,
											"end": 4860,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4829,
											"end": 4860,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 4829,
											"end": 4860,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 4829,
											"end": 4860,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4829,
											"end": 4860,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4829,
											"end": 4860,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4829,
											"end": 4860,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4829,
											"end": 4860,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 4829,
											"end": 4860,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4829,
											"end": 4860,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4829,
											"end": 4860,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 4829,
											"end": 4860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4829,
											"end": 4860,
											"name": "tag",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 4829,
											"end": 4860,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4829,
											"end": 4860,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4829,
											"end": 4860,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4829,
											"end": 4860,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4829,
											"end": 4860,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4829,
											"end": 4860,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4829,
											"end": 4860,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4829,
											"end": 4860,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4829,
											"end": 4860,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4829,
											"end": 4860,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 4829,
											"end": 4860,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 4829,
											"end": 4860,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4829,
											"end": 4860,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4829,
											"end": 4860,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4829,
											"end": 4860,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 4829,
											"end": 4860,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4829,
											"end": 4860,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4829,
											"end": 4860,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4829,
											"end": 4860,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4829,
											"end": 4860,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 4829,
											"end": 4860,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4829,
											"end": 4860,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4829,
											"end": 4860,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4829,
											"end": 4860,
											"name": "tag",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 4829,
											"end": 4860,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4829,
											"end": 4860,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4829,
											"end": 4860,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4829,
											"end": 4860,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4829,
											"end": 4860,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4829,
											"end": 4860,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4829,
											"end": 4860,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4829,
											"end": 4860,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4829,
											"end": 4860,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4829,
											"end": 4860,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 4829,
											"end": 4860,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4829,
											"end": 4860,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4829,
											"end": 4860,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4829,
											"end": 4860,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4829,
											"end": 4860,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4829,
											"end": 4860,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4829,
											"end": 4860,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4829,
											"end": 4860,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4829,
											"end": 4860,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4829,
											"end": 4860,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4829,
											"end": 4860,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4829,
											"end": 4860,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4829,
											"end": 4860,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4829,
											"end": 4860,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 4829,
											"end": 4860,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4829,
											"end": 4860,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4829,
											"end": 4860,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 4829,
											"end": 4860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4829,
											"end": 4860,
											"name": "tag",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 4829,
											"end": 4860,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4862,
											"end": 4868,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "1589"
										},
										{
											"begin": 4862,
											"end": 4878,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4862,
											"end": 4878,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4862,
											"end": 4878,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 4887,
											"end": 4891,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 4862,
											"end": 4893,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4862,
											"end": 4893,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4862,
											"end": 4893,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4862,
											"end": 4893,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4862,
											"end": 4893,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4862,
											"end": 4893,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 4862,
											"end": 4893,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 4862,
											"end": 4893,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4862,
											"end": 4893,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4862,
											"end": 4893,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4862,
											"end": 4893,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4862,
											"end": 4893,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 4862,
											"end": 4893,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4862,
											"end": 4893,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4862,
											"end": 4893,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 4862,
											"end": 4893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4862,
											"end": 4893,
											"name": "tag",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 4862,
											"end": 4893,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4862,
											"end": 4893,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4862,
											"end": 4893,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4862,
											"end": 4893,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4862,
											"end": 4893,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4862,
											"end": 4893,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4862,
											"end": 4893,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4862,
											"end": 4893,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4862,
											"end": 4893,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4862,
											"end": 4893,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 4862,
											"end": 4893,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 4862,
											"end": 4893,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4862,
											"end": 4893,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4862,
											"end": 4893,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4862,
											"end": 4893,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 4862,
											"end": 4893,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4862,
											"end": 4893,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4862,
											"end": 4893,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4862,
											"end": 4893,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4862,
											"end": 4893,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 4862,
											"end": 4893,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4862,
											"end": 4893,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4862,
											"end": 4893,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4862,
											"end": 4893,
											"name": "tag",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 4862,
											"end": 4893,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4862,
											"end": 4893,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4862,
											"end": 4893,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4862,
											"end": 4893,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4862,
											"end": 4893,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4862,
											"end": 4893,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4862,
											"end": 4893,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4862,
											"end": 4893,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4862,
											"end": 4893,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4862,
											"end": 4893,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 4862,
											"end": 4893,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4862,
											"end": 4893,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4862,
											"end": 4893,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4862,
											"end": 4893,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4862,
											"end": 4893,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4862,
											"end": 4893,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4862,
											"end": 4893,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4862,
											"end": 4893,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4862,
											"end": 4893,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4862,
											"end": 4893,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4862,
											"end": 4893,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4862,
											"end": 4893,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4862,
											"end": 4893,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4862,
											"end": 4893,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 4862,
											"end": 4893,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4862,
											"end": 4893,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4862,
											"end": 4893,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 4862,
											"end": 4893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4862,
											"end": 4893,
											"name": "tag",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 4862,
											"end": 4893,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4821,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 4821,
											"end": 4894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4821,
											"end": 4894,
											"name": "tag",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 4821,
											"end": 4894,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4080,
											"end": 4902,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4080,
											"end": 4902,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4080,
											"end": 4902,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4080,
											"end": 4902,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4080,
											"end": 4902,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6079,
											"end": 6176,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 6079,
											"end": 6176,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6120,
											"end": 6127,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6147,
											"end": 6156,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6147,
											"end": 6168,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6157,
											"end": 6167,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 6147,
											"end": 6168,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6147,
											"end": 6168,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6147,
											"end": 6168,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6147,
											"end": 6168,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6147,
											"end": 6168,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6147,
											"end": 6168,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6147,
											"end": 6168,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6147,
											"end": 6168,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6147,
											"end": 6168,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6147,
											"end": 6168,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6147,
											"end": 6168,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6147,
											"end": 6168,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6147,
											"end": 6168,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6147,
											"end": 6168,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6147,
											"end": 6168,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6147,
											"end": 6168,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6140,
											"end": 6168,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6140,
											"end": 6168,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6079,
											"end": 6176,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6079,
											"end": 6176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5321,
											"end": 5559,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 5321,
											"end": 5559,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5396,
											"end": 5411,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5413,
											"end": 5428,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5460,
											"end": 5469,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5460,
											"end": 5476,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5470,
											"end": 5475,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5460,
											"end": 5476,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5460,
											"end": 5476,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5460,
											"end": 5476,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5460,
											"end": 5476,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5460,
											"end": 5476,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5460,
											"end": 5476,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5460,
											"end": 5476,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5460,
											"end": 5476,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5460,
											"end": 5476,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5460,
											"end": 5476,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5460,
											"end": 5476,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5460,
											"end": 5476,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5460,
											"end": 5476,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5460,
											"end": 5476,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5460,
											"end": 5476,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5460,
											"end": 5476,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5449,
											"end": 5456,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5449,
											"end": 5476,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 5449,
											"end": 5476,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5441,
											"end": 5501,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 5441,
											"end": 5501,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5441,
											"end": 5501,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5441,
											"end": 5501,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5441,
											"end": 5501,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5441,
											"end": 5501,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5441,
											"end": 5501,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5441,
											"end": 5501,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5441,
											"end": 5501,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5441,
											"end": 5501,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 5441,
											"end": 5501,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5441,
											"end": 5501,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 5441,
											"end": 5501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5441,
											"end": 5501,
											"name": "tag",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 5441,
											"end": 5501,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5441,
											"end": 5501,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5441,
											"end": 5501,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5441,
											"end": 5501,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5441,
											"end": 5501,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5441,
											"end": 5501,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5441,
											"end": 5501,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5441,
											"end": 5501,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5441,
											"end": 5501,
											"name": "tag",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 5441,
											"end": 5501,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5519,
											"end": 5551,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 5536,
											"end": 5541,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5543,
											"end": 5550,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5519,
											"end": 5535,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 5519,
											"end": 5551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5519,
											"end": 5551,
											"name": "tag",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 5519,
											"end": 5551,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5512,
											"end": 5551,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5512,
											"end": 5551,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5512,
											"end": 5551,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5512,
											"end": 5551,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5321,
											"end": 5559,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5321,
											"end": 5559,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5321,
											"end": 5559,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5321,
											"end": 5559,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5321,
											"end": 5559,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5321,
											"end": 5559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3230,
											"end": 4072,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 3230,
											"end": 4072,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3383,
											"end": 3400,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3413,
											"end": 3419,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "1586"
										},
										{
											"begin": 3413,
											"end": 3432,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3413,
											"end": 3432,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3413,
											"end": 3432,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 3433,
											"end": 3443,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3453,
											"end": 3457,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 3460,
											"end": 3469,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 3413,
											"end": 3470,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3413,
											"end": 3470,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3413,
											"end": 3470,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3413,
											"end": 3470,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3413,
											"end": 3470,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3413,
											"end": 3470,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 3413,
											"end": 3470,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 3413,
											"end": 3470,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3413,
											"end": 3470,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3413,
											"end": 3470,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3413,
											"end": 3470,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3413,
											"end": 3470,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 3413,
											"end": 3470,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3413,
											"end": 3470,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3413,
											"end": 3470,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3413,
											"end": 3470,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3413,
											"end": 3470,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 3413,
											"end": 3470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3413,
											"end": 3470,
											"name": "tag",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 3413,
											"end": 3470,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3413,
											"end": 3470,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3413,
											"end": 3470,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3413,
											"end": 3470,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3413,
											"end": 3470,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3413,
											"end": 3470,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3413,
											"end": 3470,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3413,
											"end": 3470,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3413,
											"end": 3470,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3413,
											"end": 3470,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 3413,
											"end": 3470,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 3413,
											"end": 3470,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 3413,
											"end": 3470,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3413,
											"end": 3470,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3413,
											"end": 3470,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3413,
											"end": 3470,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 3413,
											"end": 3470,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3413,
											"end": 3470,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3413,
											"end": 3470,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3413,
											"end": 3470,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3413,
											"end": 3470,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 3413,
											"end": 3470,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3413,
											"end": 3470,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3413,
											"end": 3470,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3413,
											"end": 3470,
											"name": "tag",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 3413,
											"end": 3470,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3413,
											"end": 3470,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3413,
											"end": 3470,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3413,
											"end": 3470,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3413,
											"end": 3470,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3413,
											"end": 3470,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3413,
											"end": 3470,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3413,
											"end": 3470,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3413,
											"end": 3470,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3413,
											"end": 3470,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 3413,
											"end": 3470,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3413,
											"end": 3470,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3413,
											"end": 3470,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3413,
											"end": 3470,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3413,
											"end": 3470,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3413,
											"end": 3470,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3413,
											"end": 3470,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3413,
											"end": 3470,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3413,
											"end": 3470,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3413,
											"end": 3470,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3413,
											"end": 3470,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3413,
											"end": 3470,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3413,
											"end": 3470,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3413,
											"end": 3470,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 3413,
											"end": 3470,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3413,
											"end": 3470,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3413,
											"end": 3470,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 3413,
											"end": 3470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3413,
											"end": 3470,
											"name": "tag",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 3413,
											"end": 3470,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3413,
											"end": 3470,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3481,
											"end": 3504,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3527,
											"end": 3531,
											"name": "PUSH",
											"source": 5,
											"value": "3E8"
										},
										{
											"begin": 3520,
											"end": 3523,
											"name": "PUSH",
											"source": 5,
											"value": "3E5"
										},
										{
											"begin": 3508,
											"end": 3517,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3508,
											"end": 3523,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "287"
										},
										{
											"begin": 3508,
											"end": 3523,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3508,
											"end": 3523,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3508,
											"end": 3523,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 3508,
											"end": 3523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3508,
											"end": 3523,
											"name": "tag",
											"source": 5,
											"value": "287"
										},
										{
											"begin": 3508,
											"end": 3523,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3507,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 3507,
											"end": 3531,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3507,
											"end": 3531,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3507,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 3507,
											"end": 3531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3507,
											"end": 3531,
											"name": "tag",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 3507,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3481,
											"end": 3531,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3481,
											"end": 3531,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3599,
											"end": 3614,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3588,
											"end": 3596,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3588,
											"end": 3596,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3588,
											"end": 3614,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "289"
										},
										{
											"begin": 3588,
											"end": 3614,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3588,
											"end": 3614,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3588,
											"end": 3614,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 3588,
											"end": 3614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3588,
											"end": 3614,
											"name": "tag",
											"source": 5,
											"value": "289"
										},
										{
											"begin": 3588,
											"end": 3614,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3568,
											"end": 3583,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3557,
											"end": 3565,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 3557,
											"end": 3565,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3557,
											"end": 3583,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 3557,
											"end": 3583,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3557,
											"end": 3583,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3557,
											"end": 3583,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 3557,
											"end": 3583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3557,
											"end": 3583,
											"name": "tag",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 3557,
											"end": 3583,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3556,
											"end": 3615,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 3556,
											"end": 3615,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3556,
											"end": 3615,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3556,
											"end": 3615,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 3556,
											"end": 3615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3556,
											"end": 3615,
											"name": "tag",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 3556,
											"end": 3615,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3544,
											"end": 3615,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3544,
											"end": 3615,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3646,
											"end": 3647,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3634,
											"end": 3643,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3634,
											"end": 3647,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3626,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "292"
										},
										{
											"begin": 3626,
											"end": 3678,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3626,
											"end": 3678,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3626,
											"end": 3678,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3626,
											"end": 3678,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3626,
											"end": 3678,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3626,
											"end": 3678,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3626,
											"end": 3678,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3626,
											"end": 3678,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3626,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "293"
										},
										{
											"begin": 3626,
											"end": 3678,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3626,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 3626,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3626,
											"end": 3678,
											"name": "tag",
											"source": 5,
											"value": "293"
										},
										{
											"begin": 3626,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3626,
											"end": 3678,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3626,
											"end": 3678,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3626,
											"end": 3678,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3626,
											"end": 3678,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3626,
											"end": 3678,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3626,
											"end": 3678,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3626,
											"end": 3678,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3626,
											"end": 3678,
											"name": "tag",
											"source": 5,
											"value": "292"
										},
										{
											"begin": 3626,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3749,
											"end": 3753,
											"name": "PUSH",
											"source": 5,
											"value": "3E8"
										},
										{
											"begin": 3736,
											"end": 3745,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3729,
											"end": 3733,
											"name": "PUSH",
											"source": 5,
											"value": "3E8"
										},
										{
											"begin": 3729,
											"end": 3745,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "294"
										},
										{
											"begin": 3729,
											"end": 3745,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3729,
											"end": 3745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3729,
											"end": 3745,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 3729,
											"end": 3745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3729,
											"end": 3745,
											"name": "tag",
											"source": 5,
											"value": "294"
										},
										{
											"begin": 3729,
											"end": 3745,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3711,
											"end": 3725,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3711,
											"end": 3746,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 3711,
											"end": 3746,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3711,
											"end": 3746,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3711,
											"end": 3746,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 3711,
											"end": 3746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3711,
											"end": 3746,
											"name": "tag",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 3711,
											"end": 3746,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3711,
											"end": 3753,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 3711,
											"end": 3753,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3711,
											"end": 3753,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3711,
											"end": 3753,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 3711,
											"end": 3753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3711,
											"end": 3753,
											"name": "tag",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 3711,
											"end": 3753,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3697,
											"end": 3706,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3697,
											"end": 3754,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 3697,
											"end": 3754,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3689,
											"end": 3767,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "297"
										},
										{
											"begin": 3689,
											"end": 3767,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3689,
											"end": 3767,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3689,
											"end": 3767,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3689,
											"end": 3767,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3689,
											"end": 3767,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3689,
											"end": 3767,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3689,
											"end": 3767,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3689,
											"end": 3767,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3689,
											"end": 3767,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "298"
										},
										{
											"begin": 3689,
											"end": 3767,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3689,
											"end": 3767,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 3689,
											"end": 3767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3689,
											"end": 3767,
											"name": "tag",
											"source": 5,
											"value": "298"
										},
										{
											"begin": 3689,
											"end": 3767,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3689,
											"end": 3767,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3689,
											"end": 3767,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3689,
											"end": 3767,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3689,
											"end": 3767,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3689,
											"end": 3767,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3689,
											"end": 3767,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3689,
											"end": 3767,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3689,
											"end": 3767,
											"name": "tag",
											"source": 5,
											"value": "297"
										},
										{
											"begin": 3689,
											"end": 3767,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3778,
											"end": 3800,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3845,
											"end": 3849,
											"name": "PUSH",
											"source": 5,
											"value": "7D0"
										},
										{
											"begin": 3834,
											"end": 3842,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3834,
											"end": 3842,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3834,
											"end": 3849,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "299"
										},
										{
											"begin": 3834,
											"end": 3849,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3834,
											"end": 3849,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3834,
											"end": 3849,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 3834,
											"end": 3849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3834,
											"end": 3849,
											"name": "tag",
											"source": 5,
											"value": "299"
										},
										{
											"begin": 3834,
											"end": 3849,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3819,
											"end": 3830,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 3819,
											"end": 3830,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3815,
											"end": 3816,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 3803,
											"end": 3812,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 3803,
											"end": 3816,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 3803,
											"end": 3816,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3803,
											"end": 3816,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3803,
											"end": 3816,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 3803,
											"end": 3816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3803,
											"end": 3816,
											"name": "tag",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 3803,
											"end": 3816,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3803,
											"end": 3830,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 3803,
											"end": 3830,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3803,
											"end": 3830,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3803,
											"end": 3830,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 3803,
											"end": 3830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3803,
											"end": 3830,
											"name": "tag",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 3803,
											"end": 3830,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3803,
											"end": 3850,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "302"
										},
										{
											"begin": 3803,
											"end": 3850,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3803,
											"end": 3850,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3803,
											"end": 3850,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 3803,
											"end": 3850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3803,
											"end": 3850,
											"name": "tag",
											"source": 5,
											"value": "302"
										},
										{
											"begin": 3803,
											"end": 3850,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3778,
											"end": 3850,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3778,
											"end": 3850,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3861,
											"end": 3893,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "303"
										},
										{
											"begin": 3867,
											"end": 3876,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3867,
											"end": 3876,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3867,
											"end": 3876,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3867,
											"end": 3876,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3867,
											"end": 3876,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3867,
											"end": 3876,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 3867,
											"end": 3876,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3867,
											"end": 3876,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 3867,
											"end": 3876,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3867,
											"end": 3876,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3878,
											"end": 3892,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3861,
											"end": 3866,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 3861,
											"end": 3893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3861,
											"end": 3893,
											"name": "tag",
											"source": 5,
											"value": "303"
										},
										{
											"begin": 3861,
											"end": 3893,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3940,
											"end": 3946,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "1589"
										},
										{
											"begin": 3940,
											"end": 3955,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3940,
											"end": 3955,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3940,
											"end": 3955,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 3956,
											"end": 3966,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3968,
											"end": 3977,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3940,
											"end": 3978,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3940,
											"end": 3978,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3940,
											"end": 3978,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3940,
											"end": 3978,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3940,
											"end": 3978,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3940,
											"end": 3978,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 3940,
											"end": 3978,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 3940,
											"end": 3978,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3940,
											"end": 3978,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3940,
											"end": 3978,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3940,
											"end": 3978,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3940,
											"end": 3978,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "304"
										},
										{
											"begin": 3940,
											"end": 3978,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3940,
											"end": 3978,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3940,
											"end": 3978,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3940,
											"end": 3978,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 3940,
											"end": 3978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3940,
											"end": 3978,
											"name": "tag",
											"source": 5,
											"value": "304"
										},
										{
											"begin": 3940,
											"end": 3978,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3940,
											"end": 3978,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3940,
											"end": 3978,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3940,
											"end": 3978,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3940,
											"end": 3978,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3940,
											"end": 3978,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3940,
											"end": 3978,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3940,
											"end": 3978,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3940,
											"end": 3978,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3940,
											"end": 3978,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 3940,
											"end": 3978,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 3940,
											"end": 3978,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 3940,
											"end": 3978,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3940,
											"end": 3978,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3940,
											"end": 3978,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3940,
											"end": 3978,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "306"
										},
										{
											"begin": 3940,
											"end": 3978,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3940,
											"end": 3978,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3940,
											"end": 3978,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3940,
											"end": 3978,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3940,
											"end": 3978,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 3940,
											"end": 3978,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3940,
											"end": 3978,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3940,
											"end": 3978,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3940,
											"end": 3978,
											"name": "tag",
											"source": 5,
											"value": "306"
										},
										{
											"begin": 3940,
											"end": 3978,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3940,
											"end": 3978,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3940,
											"end": 3978,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3940,
											"end": 3978,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3940,
											"end": 3978,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3940,
											"end": 3978,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3940,
											"end": 3978,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3940,
											"end": 3978,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3940,
											"end": 3978,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3940,
											"end": 3978,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 3940,
											"end": 3978,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3940,
											"end": 3978,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3940,
											"end": 3978,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3940,
											"end": 3978,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3940,
											"end": 3978,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3940,
											"end": 3978,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3940,
											"end": 3978,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3940,
											"end": 3978,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3940,
											"end": 3978,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3940,
											"end": 3978,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3940,
											"end": 3978,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3940,
											"end": 3978,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3940,
											"end": 3978,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3940,
											"end": 3978,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 3940,
											"end": 3978,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3940,
											"end": 3978,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3940,
											"end": 3978,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 3940,
											"end": 3978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3940,
											"end": 3978,
											"name": "tag",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 3940,
											"end": 3978,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3940,
											"end": 3978,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3991,
											"end": 4064,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 3999,
											"end": 4005,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "1586"
										},
										{
											"begin": 3999,
											"end": 4015,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3999,
											"end": 4015,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3999,
											"end": 4015,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 4024,
											"end": 4028,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 3999,
											"end": 4030,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3999,
											"end": 4030,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3999,
											"end": 4030,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3999,
											"end": 4030,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3999,
											"end": 4030,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3999,
											"end": 4030,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 3999,
											"end": 4030,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 3999,
											"end": 4030,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3999,
											"end": 4030,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3999,
											"end": 4030,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3999,
											"end": 4030,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3999,
											"end": 4030,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 3999,
											"end": 4030,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3999,
											"end": 4030,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3999,
											"end": 4030,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 3999,
											"end": 4030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3999,
											"end": 4030,
											"name": "tag",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 3999,
											"end": 4030,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3999,
											"end": 4030,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3999,
											"end": 4030,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3999,
											"end": 4030,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3999,
											"end": 4030,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3999,
											"end": 4030,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3999,
											"end": 4030,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3999,
											"end": 4030,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3999,
											"end": 4030,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3999,
											"end": 4030,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 3999,
											"end": 4030,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 3999,
											"end": 4030,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3999,
											"end": 4030,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3999,
											"end": 4030,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3999,
											"end": 4030,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 3999,
											"end": 4030,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3999,
											"end": 4030,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3999,
											"end": 4030,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3999,
											"end": 4030,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3999,
											"end": 4030,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 3999,
											"end": 4030,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3999,
											"end": 4030,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3999,
											"end": 4030,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3999,
											"end": 4030,
											"name": "tag",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 3999,
											"end": 4030,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3999,
											"end": 4030,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3999,
											"end": 4030,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3999,
											"end": 4030,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3999,
											"end": 4030,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3999,
											"end": 4030,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3999,
											"end": 4030,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3999,
											"end": 4030,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3999,
											"end": 4030,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3999,
											"end": 4030,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 3999,
											"end": 4030,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3999,
											"end": 4030,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3999,
											"end": 4030,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3999,
											"end": 4030,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3999,
											"end": 4030,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3999,
											"end": 4030,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3999,
											"end": 4030,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3999,
											"end": 4030,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3999,
											"end": 4030,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3999,
											"end": 4030,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3999,
											"end": 4030,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3999,
											"end": 4030,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3999,
											"end": 4030,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3999,
											"end": 4030,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "312"
										},
										{
											"begin": 3999,
											"end": 4030,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3999,
											"end": 4030,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3999,
											"end": 4030,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 3999,
											"end": 4030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3999,
											"end": 4030,
											"name": "tag",
											"source": 5,
											"value": "312"
										},
										{
											"begin": 3999,
											"end": 4030,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4038,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "1589"
										},
										{
											"begin": 4032,
											"end": 4048,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4032,
											"end": 4048,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4048,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 4057,
											"end": 4061,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4063,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4032,
											"end": 4063,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4063,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4063,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4032,
											"end": 4063,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4063,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 4032,
											"end": 4063,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4063,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4063,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4063,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4032,
											"end": 4063,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4063,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "313"
										},
										{
											"begin": 4032,
											"end": 4063,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4063,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4063,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 4032,
											"end": 4063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4063,
											"name": "tag",
											"source": 5,
											"value": "313"
										},
										{
											"begin": 4032,
											"end": 4063,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4063,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4032,
											"end": 4063,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4032,
											"end": 4063,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4063,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4063,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4063,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4063,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4063,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4063,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4063,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4063,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4063,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4063,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4063,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 4032,
											"end": 4063,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4063,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4063,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4032,
											"end": 4063,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4063,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4063,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4063,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4032,
											"end": 4063,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4063,
											"name": "tag",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 4032,
											"end": 4063,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4063,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4063,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4063,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4063,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4063,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4032,
											"end": 4063,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4063,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4063,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4032,
											"end": 4063,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4063,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4032,
											"end": 4063,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4063,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4063,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4063,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4063,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4063,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4063,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4032,
											"end": 4063,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4063,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4063,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4063,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4063,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4063,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "316"
										},
										{
											"begin": 4032,
											"end": 4063,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4063,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4063,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 4032,
											"end": 4063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4063,
											"name": "tag",
											"source": 5,
											"value": "316"
										},
										{
											"begin": 4032,
											"end": 4063,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3991,
											"end": 3998,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 3991,
											"end": 4064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3991,
											"end": 4064,
											"name": "tag",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 3991,
											"end": 4064,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3402,
											"end": 4072,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3402,
											"end": 4072,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3230,
											"end": 4072,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3230,
											"end": 4072,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3230,
											"end": 4072,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3230,
											"end": 4072,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3230,
											"end": 4072,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3230,
											"end": 4072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 366,
											"end": 396,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 366,
											"end": 396,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 366,
											"end": 396,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "1589"
										},
										{
											"begin": 366,
											"end": 396,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 366,
											"end": 396,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6182,
											"end": 6287,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 6182,
											"end": 6287,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6236,
											"end": 6243,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6263,
											"end": 6272,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6263,
											"end": 6279,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6273,
											"end": 6278,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6263,
											"end": 6279,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6263,
											"end": 6279,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6263,
											"end": 6279,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6263,
											"end": 6279,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6263,
											"end": 6279,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6263,
											"end": 6279,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6263,
											"end": 6279,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6263,
											"end": 6279,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6263,
											"end": 6279,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6263,
											"end": 6279,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6263,
											"end": 6279,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6263,
											"end": 6279,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6263,
											"end": 6279,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6263,
											"end": 6279,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6263,
											"end": 6279,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6263,
											"end": 6279,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6256,
											"end": 6279,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6256,
											"end": 6279,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6182,
											"end": 6287,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6182,
											"end": 6287,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6182,
											"end": 6287,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6182,
											"end": 6287,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6614,
											"end": 6948,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 6614,
											"end": 6948,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6658,
											"end": 6665,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6697,
											"end": 6698,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6686,
											"end": 6694,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 6686,
											"end": 6694,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6686,
											"end": 6698,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 6686,
											"end": 6714,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6686,
											"end": 6714,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6686,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "319"
										},
										{
											"begin": 6686,
											"end": 6714,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6686,
											"end": 6714,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6713,
											"end": 6714,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6702,
											"end": 6710,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 6702,
											"end": 6710,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6702,
											"end": 6714,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 6686,
											"end": 6714,
											"name": "tag",
											"source": 5,
											"value": "319"
										},
										{
											"begin": 6686,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6678,
											"end": 6735,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "320"
										},
										{
											"begin": 6678,
											"end": 6735,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6678,
											"end": 6735,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6678,
											"end": 6735,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6678,
											"end": 6735,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6678,
											"end": 6735,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6678,
											"end": 6735,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6678,
											"end": 6735,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6678,
											"end": 6735,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6678,
											"end": 6735,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "321"
										},
										{
											"begin": 6678,
											"end": 6735,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6678,
											"end": 6735,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 6678,
											"end": 6735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6678,
											"end": 6735,
											"name": "tag",
											"source": 5,
											"value": "321"
										},
										{
											"begin": 6678,
											"end": 6735,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6678,
											"end": 6735,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6678,
											"end": 6735,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6678,
											"end": 6735,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6678,
											"end": 6735,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6678,
											"end": 6735,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6678,
											"end": 6735,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6678,
											"end": 6735,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6678,
											"end": 6735,
											"name": "tag",
											"source": 5,
											"value": "320"
										},
										{
											"begin": 6678,
											"end": 6735,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6746,
											"end": 6763,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "1586"
										},
										{
											"begin": 6766,
											"end": 6797,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6766,
											"end": 6797,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6766,
											"end": 6797,
											"name": "PUSH",
											"source": 5,
											"value": "313CE567"
										},
										{
											"begin": 6766,
											"end": 6799,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6766,
											"end": 6799,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6766,
											"end": 6799,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6766,
											"end": 6799,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6766,
											"end": 6799,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6766,
											"end": 6799,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 6766,
											"end": 6799,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 6766,
											"end": 6799,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6766,
											"end": 6799,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6766,
											"end": 6799,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6766,
											"end": 6799,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6766,
											"end": 6799,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6766,
											"end": 6799,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6766,
											"end": 6799,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6766,
											"end": 6799,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6766,
											"end": 6799,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6766,
											"end": 6799,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6766,
											"end": 6799,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6766,
											"end": 6799,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 6766,
											"end": 6799,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 6766,
											"end": 6799,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 6766,
											"end": 6799,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6766,
											"end": 6799,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6766,
											"end": 6799,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6766,
											"end": 6799,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "323"
										},
										{
											"begin": 6766,
											"end": 6799,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6766,
											"end": 6799,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 6766,
											"end": 6799,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6766,
											"end": 6799,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6766,
											"end": 6799,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 6766,
											"end": 6799,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 6766,
											"end": 6799,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6766,
											"end": 6799,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6766,
											"end": 6799,
											"name": "tag",
											"source": 5,
											"value": "323"
										},
										{
											"begin": 6766,
											"end": 6799,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6766,
											"end": 6799,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6766,
											"end": 6799,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6766,
											"end": 6799,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6766,
											"end": 6799,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6766,
											"end": 6799,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6766,
											"end": 6799,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6766,
											"end": 6799,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 6766,
											"end": 6799,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 6766,
											"end": 6799,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 6766,
											"end": 6799,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 6766,
											"end": 6799,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6766,
											"end": 6799,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6766,
											"end": 6799,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6766,
											"end": 6799,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6766,
											"end": 6799,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6766,
											"end": 6799,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6766,
											"end": 6799,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6766,
											"end": 6799,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6766,
											"end": 6799,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6766,
											"end": 6799,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6766,
											"end": 6799,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6766,
											"end": 6799,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6766,
											"end": 6799,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "324"
										},
										{
											"begin": 6766,
											"end": 6799,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6766,
											"end": 6799,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6766,
											"end": 6799,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "325"
										},
										{
											"begin": 6766,
											"end": 6799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6766,
											"end": 6799,
											"name": "tag",
											"source": 5,
											"value": "324"
										},
										{
											"begin": 6766,
											"end": 6799,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6746,
											"end": 6799,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 6746,
											"end": 6799,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6746,
											"end": 6799,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6746,
											"end": 6799,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6810,
											"end": 6827,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6850,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "1589"
										},
										{
											"begin": 6830,
											"end": 6861,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6830,
											"end": 6861,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6830,
											"end": 6861,
											"name": "PUSH",
											"source": 5,
											"value": "313CE567"
										},
										{
											"begin": 6830,
											"end": 6863,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6830,
											"end": 6863,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6830,
											"end": 6863,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6830,
											"end": 6863,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6830,
											"end": 6863,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6830,
											"end": 6863,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 6830,
											"end": 6863,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 6830,
											"end": 6863,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6830,
											"end": 6863,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6830,
											"end": 6863,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6830,
											"end": 6863,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6830,
											"end": 6863,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6830,
											"end": 6863,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6830,
											"end": 6863,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6830,
											"end": 6863,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6830,
											"end": 6863,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6830,
											"end": 6863,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6830,
											"end": 6863,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6830,
											"end": 6863,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 6830,
											"end": 6863,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 6830,
											"end": 6863,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 6830,
											"end": 6863,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6830,
											"end": 6863,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6830,
											"end": 6863,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6830,
											"end": 6863,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "327"
										},
										{
											"begin": 6830,
											"end": 6863,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6830,
											"end": 6863,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 6830,
											"end": 6863,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6830,
											"end": 6863,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6830,
											"end": 6863,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 6830,
											"end": 6863,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 6830,
											"end": 6863,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6830,
											"end": 6863,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6830,
											"end": 6863,
											"name": "tag",
											"source": 5,
											"value": "327"
										},
										{
											"begin": 6830,
											"end": 6863,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6830,
											"end": 6863,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6830,
											"end": 6863,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6830,
											"end": 6863,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6830,
											"end": 6863,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6830,
											"end": 6863,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6830,
											"end": 6863,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6830,
											"end": 6863,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 6830,
											"end": 6863,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 6830,
											"end": 6863,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 6830,
											"end": 6863,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 6830,
											"end": 6863,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6830,
											"end": 6863,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6830,
											"end": 6863,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6830,
											"end": 6863,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6830,
											"end": 6863,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6830,
											"end": 6863,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6830,
											"end": 6863,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6830,
											"end": 6863,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6830,
											"end": 6863,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6830,
											"end": 6863,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6830,
											"end": 6863,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6830,
											"end": 6863,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6830,
											"end": 6863,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "328"
										},
										{
											"begin": 6830,
											"end": 6863,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6830,
											"end": 6863,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6830,
											"end": 6863,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "325"
										},
										{
											"begin": 6830,
											"end": 6863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6830,
											"end": 6863,
											"name": "tag",
											"source": 5,
											"value": "328"
										},
										{
											"begin": 6830,
											"end": 6863,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6810,
											"end": 6863,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 6810,
											"end": 6863,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6810,
											"end": 6863,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6810,
											"end": 6863,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6929,
											"end": 6938,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6925,
											"end": 6927,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "329"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "330"
										},
										{
											"begin": 6925,
											"end": 6938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "tag",
											"source": 5,
											"value": "329"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6913,
											"end": 6921,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 6913,
											"end": 6921,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6913,
											"end": 6939,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "331"
										},
										{
											"begin": 6913,
											"end": 6939,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6913,
											"end": 6939,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6913,
											"end": 6939,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 6913,
											"end": 6939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6913,
											"end": 6939,
											"name": "tag",
											"source": 5,
											"value": "331"
										},
										{
											"begin": 6913,
											"end": 6939,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6898,
											"end": 6907,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6894,
											"end": 6896,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 6894,
											"end": 6907,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "332"
										},
										{
											"begin": 6894,
											"end": 6907,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6894,
											"end": 6907,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6894,
											"end": 6907,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "330"
										},
										{
											"begin": 6894,
											"end": 6907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6894,
											"end": 6907,
											"name": "tag",
											"source": 5,
											"value": "332"
										},
										{
											"begin": 6894,
											"end": 6907,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6882,
											"end": 6890,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 6882,
											"end": 6890,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6882,
											"end": 6908,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "333"
										},
										{
											"begin": 6882,
											"end": 6908,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6882,
											"end": 6908,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6882,
											"end": 6908,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 6882,
											"end": 6908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6882,
											"end": 6908,
											"name": "tag",
											"source": 5,
											"value": "333"
										},
										{
											"begin": 6882,
											"end": 6908,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6940,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "334"
										},
										{
											"begin": 6881,
											"end": 6940,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6940,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6940,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 6881,
											"end": 6940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6940,
											"name": "tag",
											"source": 5,
											"value": "334"
										},
										{
											"begin": 6881,
											"end": 6940,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6874,
											"end": 6940,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6874,
											"end": 6940,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6874,
											"end": 6940,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6874,
											"end": 6940,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6614,
											"end": 6948,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6614,
											"end": 6948,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 718,
											"end": 848,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 718,
											"end": 848,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 800,
											"end": 807,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 782,
											"end": 791,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 782,
											"end": 796,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 792,
											"end": 795,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 782,
											"end": 796,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 782,
											"end": 796,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 782,
											"end": 796,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 782,
											"end": 796,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 782,
											"end": 796,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 782,
											"end": 796,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 782,
											"end": 796,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 782,
											"end": 796,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 782,
											"end": 796,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 782,
											"end": 796,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 782,
											"end": 796,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 782,
											"end": 796,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 782,
											"end": 796,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 782,
											"end": 796,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 782,
											"end": 796,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 782,
											"end": 796,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 782,
											"end": 807,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 782,
											"end": 807,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 782,
											"end": 807,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 782,
											"end": 807,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "336"
										},
										{
											"begin": 782,
											"end": 807,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 782,
											"end": 807,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 782,
											"end": 807,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 782,
											"end": 807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 782,
											"end": 807,
											"name": "tag",
											"source": 5,
											"value": "336"
										},
										{
											"begin": 782,
											"end": 807,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 782,
											"end": 807,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 782,
											"end": 807,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 782,
											"end": 807,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 782,
											"end": 807,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 782,
											"end": 807,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 782,
											"end": 807,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 782,
											"end": 807,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 833,
											"end": 840,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 818,
											"end": 829,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 818,
											"end": 829,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 818,
											"end": 840,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 818,
											"end": 840,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 818,
											"end": 840,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 818,
											"end": 840,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "337"
										},
										{
											"begin": 818,
											"end": 840,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 818,
											"end": 840,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 818,
											"end": 840,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 818,
											"end": 840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 818,
											"end": 840,
											"name": "tag",
											"source": 5,
											"value": "337"
										},
										{
											"begin": 818,
											"end": 840,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 818,
											"end": 840,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 818,
											"end": 840,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 818,
											"end": 840,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 818,
											"end": 840,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 818,
											"end": 840,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 818,
											"end": 840,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 818,
											"end": 840,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 718,
											"end": 848,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 718,
											"end": 848,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 718,
											"end": 848,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 998,
											"end": 1131,
											"name": "tag",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 998,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1083,
											"end": 1092,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1072,
											"end": 1080,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1072,
											"end": 1092,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1072,
											"end": 1092,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1072,
											"end": 1092,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1072,
											"end": 1092,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1114,
											"end": 1123,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1103,
											"end": 1111,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1103,
											"end": 1123,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1103,
											"end": 1123,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1103,
											"end": 1123,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1103,
											"end": 1123,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 998,
											"end": 1131,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 998,
											"end": 1131,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 998,
											"end": 1131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5567,
											"end": 6071,
											"name": "tag",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 5567,
											"end": 6071,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5643,
											"end": 5658,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5660,
											"end": 5675,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5721,
											"end": 5732,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 5721,
											"end": 5732,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5709,
											"end": 5717,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 5709,
											"end": 5717,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5699,
											"end": 5706,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5699,
											"end": 5717,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "340"
										},
										{
											"begin": 5699,
											"end": 5717,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5699,
											"end": 5717,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5699,
											"end": 5717,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 5699,
											"end": 5717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5699,
											"end": 5717,
											"name": "tag",
											"source": 5,
											"value": "340"
										},
										{
											"begin": 5699,
											"end": 5717,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5698,
											"end": 5732,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "341"
										},
										{
											"begin": 5698,
											"end": 5732,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5698,
											"end": 5732,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5698,
											"end": 5732,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 5698,
											"end": 5732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5698,
											"end": 5732,
											"name": "tag",
											"source": 5,
											"value": "341"
										},
										{
											"begin": 5698,
											"end": 5732,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5688,
											"end": 5732,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5688,
											"end": 5732,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5776,
											"end": 5787,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 5776,
											"end": 5787,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5764,
											"end": 5772,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 5764,
											"end": 5772,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5754,
											"end": 5761,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5754,
											"end": 5772,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "342"
										},
										{
											"begin": 5754,
											"end": 5772,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5754,
											"end": 5772,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5754,
											"end": 5772,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 5754,
											"end": 5772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5754,
											"end": 5772,
											"name": "tag",
											"source": 5,
											"value": "342"
										},
										{
											"begin": 5754,
											"end": 5772,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5753,
											"end": 5787,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "343"
										},
										{
											"begin": 5753,
											"end": 5787,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5753,
											"end": 5787,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5753,
											"end": 5787,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 5753,
											"end": 5787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5753,
											"end": 5787,
											"name": "tag",
											"source": 5,
											"value": "343"
										},
										{
											"begin": 5753,
											"end": 5787,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5743,
											"end": 5787,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5743,
											"end": 5787,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5816,
											"end": 5817,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5806,
											"end": 5813,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5806,
											"end": 5817,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 5806,
											"end": 5832,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5806,
											"end": 5832,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5806,
											"end": 5832,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "344"
										},
										{
											"begin": 5806,
											"end": 5832,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5806,
											"end": 5832,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5831,
											"end": 5832,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5821,
											"end": 5828,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5821,
											"end": 5832,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 5806,
											"end": 5832,
											"name": "tag",
											"source": 5,
											"value": "344"
										},
										{
											"begin": 5806,
											"end": 5832,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5798,
											"end": 5859,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "345"
										},
										{
											"begin": 5798,
											"end": 5859,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5798,
											"end": 5859,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5798,
											"end": 5859,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5798,
											"end": 5859,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5798,
											"end": 5859,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5798,
											"end": 5859,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5798,
											"end": 5859,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5798,
											"end": 5859,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5798,
											"end": 5859,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "346"
										},
										{
											"begin": 5798,
											"end": 5859,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5798,
											"end": 5859,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "347"
										},
										{
											"begin": 5798,
											"end": 5859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5798,
											"end": 5859,
											"name": "tag",
											"source": 5,
											"value": "346"
										},
										{
											"begin": 5798,
											"end": 5859,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5798,
											"end": 5859,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5798,
											"end": 5859,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5798,
											"end": 5859,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5798,
											"end": 5859,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5798,
											"end": 5859,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5798,
											"end": 5859,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5798,
											"end": 5859,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5798,
											"end": 5859,
											"name": "tag",
											"source": 5,
											"value": "345"
										},
										{
											"begin": 5798,
											"end": 5859,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5872,
											"end": 5893,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "348"
										},
										{
											"begin": 5878,
											"end": 5883,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5885,
											"end": 5892,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5872,
											"end": 5877,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "349"
										},
										{
											"begin": 5872,
											"end": 5893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5872,
											"end": 5893,
											"name": "tag",
											"source": 5,
											"value": "348"
										},
										{
											"begin": 5872,
											"end": 5893,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5904,
											"end": 5977,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "350"
										},
										{
											"begin": 5912,
											"end": 5918,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "1586"
										},
										{
											"begin": 5912,
											"end": 5928,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5912,
											"end": 5928,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5912,
											"end": 5928,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 5937,
											"end": 5941,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 5912,
											"end": 5943,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5912,
											"end": 5943,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5912,
											"end": 5943,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5912,
											"end": 5943,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5912,
											"end": 5943,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5912,
											"end": 5943,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 5912,
											"end": 5943,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 5912,
											"end": 5943,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5912,
											"end": 5943,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5912,
											"end": 5943,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5912,
											"end": 5943,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5912,
											"end": 5943,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "351"
										},
										{
											"begin": 5912,
											"end": 5943,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5912,
											"end": 5943,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5912,
											"end": 5943,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 5912,
											"end": 5943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5912,
											"end": 5943,
											"name": "tag",
											"source": 5,
											"value": "351"
										},
										{
											"begin": 5912,
											"end": 5943,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5912,
											"end": 5943,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5912,
											"end": 5943,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5912,
											"end": 5943,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5912,
											"end": 5943,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5912,
											"end": 5943,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5912,
											"end": 5943,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5912,
											"end": 5943,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5912,
											"end": 5943,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5912,
											"end": 5943,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 5912,
											"end": 5943,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 5912,
											"end": 5943,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5912,
											"end": 5943,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5912,
											"end": 5943,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5912,
											"end": 5943,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "353"
										},
										{
											"begin": 5912,
											"end": 5943,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5912,
											"end": 5943,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5912,
											"end": 5943,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5912,
											"end": 5943,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5912,
											"end": 5943,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 5912,
											"end": 5943,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5912,
											"end": 5943,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5912,
											"end": 5943,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5912,
											"end": 5943,
											"name": "tag",
											"source": 5,
											"value": "353"
										},
										{
											"begin": 5912,
											"end": 5943,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5912,
											"end": 5943,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5912,
											"end": 5943,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5912,
											"end": 5943,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5912,
											"end": 5943,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5912,
											"end": 5943,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5912,
											"end": 5943,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5912,
											"end": 5943,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5912,
											"end": 5943,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 5912,
											"end": 5943,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 5912,
											"end": 5943,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 5912,
											"end": 5943,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5912,
											"end": 5943,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5912,
											"end": 5943,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5912,
											"end": 5943,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5912,
											"end": 5943,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5912,
											"end": 5943,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5912,
											"end": 5943,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5912,
											"end": 5943,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5912,
											"end": 5943,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5912,
											"end": 5943,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5912,
											"end": 5943,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5912,
											"end": 5943,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5912,
											"end": 5943,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "354"
										},
										{
											"begin": 5912,
											"end": 5943,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5912,
											"end": 5943,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5912,
											"end": 5943,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 5912,
											"end": 5943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5912,
											"end": 5943,
											"name": "tag",
											"source": 5,
											"value": "354"
										},
										{
											"begin": 5912,
											"end": 5943,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5945,
											"end": 5951,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "1589"
										},
										{
											"begin": 5945,
											"end": 5961,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5945,
											"end": 5961,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5945,
											"end": 5961,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 5970,
											"end": 5974,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 5945,
											"end": 5976,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5945,
											"end": 5976,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5945,
											"end": 5976,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5945,
											"end": 5976,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5945,
											"end": 5976,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5945,
											"end": 5976,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 5945,
											"end": 5976,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 5945,
											"end": 5976,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5945,
											"end": 5976,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5945,
											"end": 5976,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5945,
											"end": 5976,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5945,
											"end": 5976,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "355"
										},
										{
											"begin": 5945,
											"end": 5976,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5945,
											"end": 5976,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5945,
											"end": 5976,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 5945,
											"end": 5976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5945,
											"end": 5976,
											"name": "tag",
											"source": 5,
											"value": "355"
										},
										{
											"begin": 5945,
											"end": 5976,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5945,
											"end": 5976,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5945,
											"end": 5976,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5945,
											"end": 5976,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5945,
											"end": 5976,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5945,
											"end": 5976,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5945,
											"end": 5976,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5945,
											"end": 5976,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5945,
											"end": 5976,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5945,
											"end": 5976,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 5945,
											"end": 5976,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 5945,
											"end": 5976,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5945,
											"end": 5976,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5945,
											"end": 5976,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5945,
											"end": 5976,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "357"
										},
										{
											"begin": 5945,
											"end": 5976,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5945,
											"end": 5976,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5945,
											"end": 5976,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5945,
											"end": 5976,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5945,
											"end": 5976,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 5945,
											"end": 5976,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5945,
											"end": 5976,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5945,
											"end": 5976,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5945,
											"end": 5976,
											"name": "tag",
											"source": 5,
											"value": "357"
										},
										{
											"begin": 5945,
											"end": 5976,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5945,
											"end": 5976,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5945,
											"end": 5976,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5945,
											"end": 5976,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5945,
											"end": 5976,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5945,
											"end": 5976,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5945,
											"end": 5976,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5945,
											"end": 5976,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5945,
											"end": 5976,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 5945,
											"end": 5976,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 5945,
											"end": 5976,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 5945,
											"end": 5976,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5945,
											"end": 5976,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5945,
											"end": 5976,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5945,
											"end": 5976,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5945,
											"end": 5976,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5945,
											"end": 5976,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5945,
											"end": 5976,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5945,
											"end": 5976,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5945,
											"end": 5976,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5945,
											"end": 5976,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5945,
											"end": 5976,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5945,
											"end": 5976,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5945,
											"end": 5976,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "358"
										},
										{
											"begin": 5945,
											"end": 5976,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5945,
											"end": 5976,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5945,
											"end": 5976,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 5945,
											"end": 5976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5945,
											"end": 5976,
											"name": "tag",
											"source": 5,
											"value": "358"
										},
										{
											"begin": 5945,
											"end": 5976,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5904,
											"end": 5911,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 5904,
											"end": 5977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5904,
											"end": 5977,
											"name": "tag",
											"source": 5,
											"value": "350"
										},
										{
											"begin": 5904,
											"end": 5977,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5990,
											"end": 5996,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "1586"
										},
										{
											"begin": 5990,
											"end": 6005,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5990,
											"end": 6005,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5990,
											"end": 6005,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 6006,
											"end": 6011,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6013,
											"end": 6020,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5990,
											"end": 6021,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5990,
											"end": 6021,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5990,
											"end": 6021,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5990,
											"end": 6021,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5990,
											"end": 6021,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5990,
											"end": 6021,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 5990,
											"end": 6021,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 5990,
											"end": 6021,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5990,
											"end": 6021,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5990,
											"end": 6021,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5990,
											"end": 6021,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5990,
											"end": 6021,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "359"
										},
										{
											"begin": 5990,
											"end": 6021,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5990,
											"end": 6021,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5990,
											"end": 6021,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5990,
											"end": 6021,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 5990,
											"end": 6021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5990,
											"end": 6021,
											"name": "tag",
											"source": 5,
											"value": "359"
										},
										{
											"begin": 5990,
											"end": 6021,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5990,
											"end": 6021,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5990,
											"end": 6021,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5990,
											"end": 6021,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5990,
											"end": 6021,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5990,
											"end": 6021,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5990,
											"end": 6021,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5990,
											"end": 6021,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5990,
											"end": 6021,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5990,
											"end": 6021,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 5990,
											"end": 6021,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 5990,
											"end": 6021,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 5990,
											"end": 6021,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5990,
											"end": 6021,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5990,
											"end": 6021,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5990,
											"end": 6021,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "361"
										},
										{
											"begin": 5990,
											"end": 6021,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5990,
											"end": 6021,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5990,
											"end": 6021,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5990,
											"end": 6021,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5990,
											"end": 6021,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 5990,
											"end": 6021,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5990,
											"end": 6021,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5990,
											"end": 6021,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5990,
											"end": 6021,
											"name": "tag",
											"source": 5,
											"value": "361"
										},
										{
											"begin": 5990,
											"end": 6021,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5990,
											"end": 6021,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5990,
											"end": 6021,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5990,
											"end": 6021,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5990,
											"end": 6021,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5990,
											"end": 6021,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5990,
											"end": 6021,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5990,
											"end": 6021,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5990,
											"end": 6021,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 5990,
											"end": 6021,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 5990,
											"end": 6021,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 5990,
											"end": 6021,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5990,
											"end": 6021,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5990,
											"end": 6021,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5990,
											"end": 6021,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5990,
											"end": 6021,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5990,
											"end": 6021,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5990,
											"end": 6021,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5990,
											"end": 6021,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5990,
											"end": 6021,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5990,
											"end": 6021,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5990,
											"end": 6021,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5990,
											"end": 6021,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5990,
											"end": 6021,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "362"
										},
										{
											"begin": 5990,
											"end": 6021,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5990,
											"end": 6021,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5990,
											"end": 6021,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 5990,
											"end": 6021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5990,
											"end": 6021,
											"name": "tag",
											"source": 5,
											"value": "362"
										},
										{
											"begin": 5990,
											"end": 6021,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5990,
											"end": 6021,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6032,
											"end": 6038,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "1589"
										},
										{
											"begin": 6032,
											"end": 6047,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6032,
											"end": 6047,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6032,
											"end": 6047,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 6048,
											"end": 6053,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6055,
											"end": 6062,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6032,
											"end": 6063,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6032,
											"end": 6063,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6032,
											"end": 6063,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6032,
											"end": 6063,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6032,
											"end": 6063,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6032,
											"end": 6063,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 6032,
											"end": 6063,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 6032,
											"end": 6063,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6032,
											"end": 6063,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6032,
											"end": 6063,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6032,
											"end": 6063,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6032,
											"end": 6063,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "363"
										},
										{
											"begin": 6032,
											"end": 6063,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6032,
											"end": 6063,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6032,
											"end": 6063,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6032,
											"end": 6063,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 6032,
											"end": 6063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6032,
											"end": 6063,
											"name": "tag",
											"source": 5,
											"value": "363"
										},
										{
											"begin": 6032,
											"end": 6063,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6032,
											"end": 6063,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6032,
											"end": 6063,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6032,
											"end": 6063,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6032,
											"end": 6063,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6032,
											"end": 6063,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6032,
											"end": 6063,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6032,
											"end": 6063,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6032,
											"end": 6063,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6032,
											"end": 6063,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 6032,
											"end": 6063,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 6032,
											"end": 6063,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 6032,
											"end": 6063,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6032,
											"end": 6063,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6032,
											"end": 6063,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6032,
											"end": 6063,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "365"
										},
										{
											"begin": 6032,
											"end": 6063,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6032,
											"end": 6063,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 6032,
											"end": 6063,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6032,
											"end": 6063,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6032,
											"end": 6063,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 6032,
											"end": 6063,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 6032,
											"end": 6063,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6032,
											"end": 6063,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6032,
											"end": 6063,
											"name": "tag",
											"source": 5,
											"value": "365"
										},
										{
											"begin": 6032,
											"end": 6063,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6032,
											"end": 6063,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6032,
											"end": 6063,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6032,
											"end": 6063,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6032,
											"end": 6063,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6032,
											"end": 6063,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6032,
											"end": 6063,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6032,
											"end": 6063,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 6032,
											"end": 6063,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 6032,
											"end": 6063,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 6032,
											"end": 6063,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 6032,
											"end": 6063,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6032,
											"end": 6063,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6032,
											"end": 6063,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6032,
											"end": 6063,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6032,
											"end": 6063,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6032,
											"end": 6063,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6032,
											"end": 6063,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6032,
											"end": 6063,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6032,
											"end": 6063,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6032,
											"end": 6063,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6032,
											"end": 6063,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6032,
											"end": 6063,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6032,
											"end": 6063,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "366"
										},
										{
											"begin": 6032,
											"end": 6063,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6032,
											"end": 6063,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6032,
											"end": 6063,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 6032,
											"end": 6063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6032,
											"end": 6063,
											"name": "tag",
											"source": 5,
											"value": "366"
										},
										{
											"begin": 6032,
											"end": 6063,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6032,
											"end": 6063,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5567,
											"end": 6071,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5567,
											"end": 6071,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5567,
											"end": 6071,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5567,
											"end": 6071,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5567,
											"end": 6071,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5567,
											"end": 6071,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6293,
											"end": 6606,
											"name": "tag",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 6293,
											"end": 6606,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6342,
											"end": 6351,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6372,
											"end": 6373,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 6368,
											"end": 6369,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6368,
											"end": 6373,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 6364,
											"end": 6599,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6364,
											"end": 6599,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "368"
										},
										{
											"begin": 6364,
											"end": 6599,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6394,
											"end": 6395,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6390,
											"end": 6395,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6390,
											"end": 6395,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6410,
											"end": 6419,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6430,
											"end": 6431,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 6426,
											"end": 6427,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 6422,
											"end": 6423,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6422,
											"end": 6427,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "369"
										},
										{
											"begin": 6422,
											"end": 6427,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6422,
											"end": 6427,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6422,
											"end": 6427,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 6422,
											"end": 6427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6422,
											"end": 6427,
											"name": "tag",
											"source": 5,
											"value": "369"
										},
										{
											"begin": 6422,
											"end": 6427,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6422,
											"end": 6431,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "370"
										},
										{
											"begin": 6422,
											"end": 6431,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6422,
											"end": 6431,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6422,
											"end": 6431,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 6422,
											"end": 6431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6422,
											"end": 6431,
											"name": "tag",
											"source": 5,
											"value": "370"
										},
										{
											"begin": 6422,
											"end": 6431,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6410,
											"end": 6431,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6410,
											"end": 6431,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6446,
											"end": 6538,
											"name": "tag",
											"source": 5,
											"value": "371"
										},
										{
											"begin": 6446,
											"end": 6538,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6457,
											"end": 6458,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6453,
											"end": 6454,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6453,
											"end": 6458,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 6446,
											"end": 6538,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6446,
											"end": 6538,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "372"
										},
										{
											"begin": 6446,
											"end": 6538,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6483,
											"end": 6484,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6479,
											"end": 6484,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6479,
											"end": 6484,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6521,
											"end": 6522,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 6516,
											"end": 6517,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6512,
											"end": 6513,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6508,
											"end": 6509,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6508,
											"end": 6513,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "373"
										},
										{
											"begin": 6508,
											"end": 6513,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6508,
											"end": 6513,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6508,
											"end": 6513,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 6508,
											"end": 6513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6508,
											"end": 6513,
											"name": "tag",
											"source": 5,
											"value": "373"
										},
										{
											"begin": 6508,
											"end": 6513,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6508,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "374"
										},
										{
											"begin": 6508,
											"end": 6517,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6508,
											"end": 6517,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6508,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 6508,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6508,
											"end": 6517,
											"name": "tag",
											"source": 5,
											"value": "374"
										},
										{
											"begin": 6508,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6507,
											"end": 6522,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "375"
										},
										{
											"begin": 6507,
											"end": 6522,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6507,
											"end": 6522,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6507,
											"end": 6522,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 6507,
											"end": 6522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6507,
											"end": 6522,
											"name": "tag",
											"source": 5,
											"value": "375"
										},
										{
											"begin": 6507,
											"end": 6522,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6503,
											"end": 6522,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6503,
											"end": 6522,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6446,
											"end": 6538,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "371"
										},
										{
											"begin": 6446,
											"end": 6538,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6446,
											"end": 6538,
											"name": "tag",
											"source": 5,
											"value": "372"
										},
										{
											"begin": 6446,
											"end": 6538,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6375,
											"end": 6549,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6364,
											"end": 6599,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "376"
										},
										{
											"begin": 6364,
											"end": 6599,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6364,
											"end": 6599,
											"name": "tag",
											"source": 5,
											"value": "368"
										},
										{
											"begin": 6364,
											"end": 6599,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6564,
											"end": 6565,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6559,
											"end": 6560,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6559,
											"end": 6565,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 6555,
											"end": 6599,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "377"
										},
										{
											"begin": 6555,
											"end": 6599,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6586,
											"end": 6587,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 6582,
											"end": 6587,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6582,
											"end": 6587,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6555,
											"end": 6599,
											"name": "tag",
											"source": 5,
											"value": "377"
										},
										{
											"begin": 6555,
											"end": 6599,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6364,
											"end": 6599,
											"name": "tag",
											"source": 5,
											"value": "376"
										},
										{
											"begin": 6364,
											"end": 6599,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6293,
											"end": 6606,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6293,
											"end": 6606,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6293,
											"end": 6606,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6293,
											"end": 6606,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 588,
											"end": 692,
											"name": "tag",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 588,
											"end": 692,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 646,
											"end": 653,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 676,
											"end": 677,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 672,
											"end": 673,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 672,
											"end": 677,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 672,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "379"
										},
										{
											"begin": 672,
											"end": 685,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 684,
											"end": 685,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 672,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "380"
										},
										{
											"begin": 672,
											"end": 685,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 672,
											"end": 685,
											"name": "tag",
											"source": 4,
											"value": "379"
										},
										{
											"begin": 672,
											"end": 685,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 680,
											"end": 681,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 672,
											"end": 685,
											"name": "tag",
											"source": 4,
											"value": "380"
										},
										{
											"begin": 672,
											"end": 685,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 665,
											"end": 685,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 665,
											"end": 685,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 692,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 588,
											"end": 692,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 588,
											"end": 692,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 692,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 692,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 856,
											"end": 990,
											"name": "tag",
											"source": 5,
											"value": "349"
										},
										{
											"begin": 856,
											"end": 990,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 942,
											"end": 949,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 922,
											"end": 931,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 922,
											"end": 938,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 932,
											"end": 937,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 922,
											"end": 938,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 922,
											"end": 938,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 922,
											"end": 938,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 922,
											"end": 938,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 922,
											"end": 938,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 922,
											"end": 938,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 922,
											"end": 938,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 922,
											"end": 938,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 922,
											"end": 938,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 922,
											"end": 938,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 922,
											"end": 938,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 922,
											"end": 938,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 922,
											"end": 938,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 922,
											"end": 938,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 922,
											"end": 938,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 922,
											"end": 938,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 922,
											"end": 949,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 922,
											"end": 949,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 922,
											"end": 949,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 922,
											"end": 949,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "382"
										},
										{
											"begin": 922,
											"end": 949,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 922,
											"end": 949,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 922,
											"end": 949,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 922,
											"end": 949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 922,
											"end": 949,
											"name": "tag",
											"source": 5,
											"value": "382"
										},
										{
											"begin": 922,
											"end": 949,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 922,
											"end": 949,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 922,
											"end": 949,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 922,
											"end": 949,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 922,
											"end": 949,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 922,
											"end": 949,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 922,
											"end": 949,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 922,
											"end": 949,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 975,
											"end": 982,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 960,
											"end": 971,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 960,
											"end": 971,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 960,
											"end": 982,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 960,
											"end": 982,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 960,
											"end": 982,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 960,
											"end": 982,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "383"
										},
										{
											"begin": 960,
											"end": 982,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 960,
											"end": 982,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 960,
											"end": 982,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 960,
											"end": 982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 960,
											"end": 982,
											"name": "tag",
											"source": 5,
											"value": "383"
										},
										{
											"begin": 960,
											"end": 982,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 960,
											"end": 982,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 960,
											"end": 982,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 960,
											"end": 982,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 960,
											"end": 982,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 960,
											"end": 982,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 960,
											"end": 982,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 960,
											"end": 982,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 856,
											"end": 990,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 856,
											"end": 990,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 856,
											"end": 990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 6,
											"value": "384"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 139,
											"end": 199,
											"name": "tag",
											"source": 6,
											"value": "385"
										},
										{
											"begin": 139,
											"end": 199,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 167,
											"end": 170,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 188,
											"end": 193,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 181,
											"end": 193,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 181,
											"end": 193,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 139,
											"end": 199,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 139,
											"end": 199,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 139,
											"end": 199,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 139,
											"end": 199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 205,
											"end": 347,
											"name": "tag",
											"source": 6,
											"value": "386"
										},
										{
											"begin": 205,
											"end": 347,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 255,
											"end": 264,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 288,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "432"
										},
										{
											"begin": 306,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "433"
										},
										{
											"begin": 315,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "434"
										},
										{
											"begin": 333,
											"end": 338,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 315,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "384"
										},
										{
											"begin": 315,
											"end": 339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 315,
											"end": 339,
											"name": "tag",
											"source": 6,
											"value": "434"
										},
										{
											"begin": 315,
											"end": 339,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 306,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "385"
										},
										{
											"begin": 306,
											"end": 340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 306,
											"end": 340,
											"name": "tag",
											"source": 6,
											"value": "433"
										},
										{
											"begin": 306,
											"end": 340,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 288,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "384"
										},
										{
											"begin": 288,
											"end": 341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 288,
											"end": 341,
											"name": "tag",
											"source": 6,
											"value": "432"
										},
										{
											"begin": 288,
											"end": 341,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 275,
											"end": 341,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 275,
											"end": 341,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 205,
											"end": 347,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 205,
											"end": 347,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 205,
											"end": 347,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 205,
											"end": 347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 353,
											"end": 479,
											"name": "tag",
											"source": 6,
											"value": "387"
										},
										{
											"begin": 353,
											"end": 479,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 403,
											"end": 412,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 436,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "436"
										},
										{
											"begin": 467,
											"end": 472,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 436,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "386"
										},
										{
											"begin": 436,
											"end": 473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 436,
											"end": 473,
											"name": "tag",
											"source": 6,
											"value": "436"
										},
										{
											"begin": 436,
											"end": 473,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 423,
											"end": 473,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 423,
											"end": 473,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 353,
											"end": 479,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 353,
											"end": 479,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 353,
											"end": 479,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 353,
											"end": 479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 485,
											"end": 625,
											"name": "tag",
											"source": 6,
											"value": "388"
										},
										{
											"begin": 485,
											"end": 625,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 549,
											"end": 558,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 582,
											"end": 619,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "438"
										},
										{
											"begin": 613,
											"end": 618,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 582,
											"end": 619,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "387"
										},
										{
											"begin": 582,
											"end": 619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 582,
											"end": 619,
											"name": "tag",
											"source": 6,
											"value": "438"
										},
										{
											"begin": 582,
											"end": 619,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 569,
											"end": 619,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 569,
											"end": 619,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 485,
											"end": 625,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 485,
											"end": 625,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 485,
											"end": 625,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 485,
											"end": 625,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 631,
											"end": 790,
											"name": "tag",
											"source": 6,
											"value": "389"
										},
										{
											"begin": 631,
											"end": 790,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 732,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "440"
										},
										{
											"begin": 777,
											"end": 782,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 732,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "388"
										},
										{
											"begin": 732,
											"end": 783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 732,
											"end": 783,
											"name": "tag",
											"source": 6,
											"value": "440"
										},
										{
											"begin": 732,
											"end": 783,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 727,
											"end": 730,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 720,
											"end": 784,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 631,
											"end": 790,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 631,
											"end": 790,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 631,
											"end": 790,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 903,
											"end": 907,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 941,
											"end": 943,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 930,
											"end": 939,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 926,
											"end": 944,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 918,
											"end": 944,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 918,
											"end": 944,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 954,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "442"
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1025,
											"end": 1034,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1038,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1012,
											"end": 1018,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 954,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "389"
										},
										{
											"begin": 954,
											"end": 1039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 954,
											"end": 1039,
											"name": "tag",
											"source": 6,
											"value": "442"
										},
										{
											"begin": 954,
											"end": 1039,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 796,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1129,
											"name": "tag",
											"source": 6,
											"value": "390"
										},
										{
											"begin": 1052,
											"end": 1129,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1089,
											"end": 1096,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1118,
											"end": 1123,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1107,
											"end": 1123,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1107,
											"end": 1123,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1129,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1129,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1129,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1135,
											"end": 1253,
											"name": "tag",
											"source": 6,
											"value": "391"
										},
										{
											"begin": 1135,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1246,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "445"
										},
										{
											"begin": 1240,
											"end": 1245,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1246,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "390"
										},
										{
											"begin": 1222,
											"end": 1246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1246,
											"name": "tag",
											"source": 6,
											"value": "445"
										},
										{
											"begin": 1222,
											"end": 1246,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1217,
											"end": 1220,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1210,
											"end": 1247,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1135,
											"end": 1253,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1135,
											"end": 1253,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1135,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1481,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 1259,
											"end": 1481,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1352,
											"end": 1356,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1390,
											"end": 1392,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1379,
											"end": 1388,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1375,
											"end": 1393,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1393,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1393,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1403,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "447"
										},
										{
											"begin": 1471,
											"end": 1472,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1460,
											"end": 1469,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1456,
											"end": 1473,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1447,
											"end": 1453,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1403,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "391"
										},
										{
											"begin": 1403,
											"end": 1474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1403,
											"end": 1474,
											"name": "tag",
											"source": 6,
											"value": "447"
										},
										{
											"begin": 1403,
											"end": 1474,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1481,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1481,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1481,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1481,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1481,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1568,
											"end": 1685,
											"name": "tag",
											"source": 6,
											"value": "393"
										},
										{
											"begin": 1568,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1677,
											"end": 1678,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1674,
											"end": 1675,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1667,
											"end": 1679,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1814,
											"end": 1936,
											"name": "tag",
											"source": 6,
											"value": "395"
										},
										{
											"begin": 1814,
											"end": 1936,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1887,
											"end": 1911,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "452"
										},
										{
											"begin": 1905,
											"end": 1910,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1887,
											"end": 1911,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "390"
										},
										{
											"begin": 1887,
											"end": 1911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1887,
											"end": 1911,
											"name": "tag",
											"source": 6,
											"value": "452"
										},
										{
											"begin": 1887,
											"end": 1911,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1880,
											"end": 1885,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1877,
											"end": 1912,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1867,
											"end": 1930,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "453"
										},
										{
											"begin": 1867,
											"end": 1930,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1926,
											"end": 1927,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1923,
											"end": 1924,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1916,
											"end": 1928,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1867,
											"end": 1930,
											"name": "tag",
											"source": 6,
											"value": "453"
										},
										{
											"begin": 1867,
											"end": 1930,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1814,
											"end": 1936,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1814,
											"end": 1936,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1942,
											"end": 2081,
											"name": "tag",
											"source": 6,
											"value": "396"
										},
										{
											"begin": 1942,
											"end": 2081,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1988,
											"end": 1993,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2026,
											"end": 2032,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2013,
											"end": 2033,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2004,
											"end": 2033,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2004,
											"end": 2033,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2042,
											"end": 2075,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "455"
										},
										{
											"begin": 2069,
											"end": 2074,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2042,
											"end": 2075,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "395"
										},
										{
											"begin": 2042,
											"end": 2075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2042,
											"end": 2075,
											"name": "tag",
											"source": 6,
											"value": "455"
										},
										{
											"begin": 2042,
											"end": 2075,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1942,
											"end": 2081,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1942,
											"end": 2081,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1942,
											"end": 2081,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1942,
											"end": 2081,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1942,
											"end": 2081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2087,
											"end": 2416,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 2087,
											"end": 2416,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2146,
											"end": 2152,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2195,
											"end": 2197,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2183,
											"end": 2192,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2174,
											"end": 2181,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2170,
											"end": 2193,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2166,
											"end": 2198,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2163,
											"end": 2282,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2163,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "457"
										},
										{
											"begin": 2163,
											"end": 2282,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2201,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "458"
										},
										{
											"begin": 2201,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "393"
										},
										{
											"begin": 2201,
											"end": 2280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2201,
											"end": 2280,
											"name": "tag",
											"source": 6,
											"value": "458"
										},
										{
											"begin": 2201,
											"end": 2280,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2163,
											"end": 2282,
											"name": "tag",
											"source": 6,
											"value": "457"
										},
										{
											"begin": 2163,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2321,
											"end": 2322,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2346,
											"end": 2399,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "459"
										},
										{
											"begin": 2391,
											"end": 2398,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2382,
											"end": 2388,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2371,
											"end": 2380,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2389,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2346,
											"end": 2399,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "396"
										},
										{
											"begin": 2346,
											"end": 2399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2346,
											"end": 2399,
											"name": "tag",
											"source": 6,
											"value": "459"
										},
										{
											"begin": 2346,
											"end": 2399,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2336,
											"end": 2399,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2336,
											"end": 2399,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2292,
											"end": 2409,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2087,
											"end": 2416,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2087,
											"end": 2416,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2087,
											"end": 2416,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2087,
											"end": 2416,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2087,
											"end": 2416,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 3041,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 2422,
											"end": 3041,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2505,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2507,
											"end": 2513,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2515,
											"end": 2521,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2564,
											"end": 2566,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2552,
											"end": 2561,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2550,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 2562,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2535,
											"end": 2567,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2532,
											"end": 2651,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2532,
											"end": 2651,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "461"
										},
										{
											"begin": 2532,
											"end": 2651,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2570,
											"end": 2649,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "462"
										},
										{
											"begin": 2570,
											"end": 2649,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "393"
										},
										{
											"begin": 2570,
											"end": 2649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2570,
											"end": 2649,
											"name": "tag",
											"source": 6,
											"value": "462"
										},
										{
											"begin": 2570,
											"end": 2649,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2532,
											"end": 2651,
											"name": "tag",
											"source": 6,
											"value": "461"
										},
										{
											"begin": 2532,
											"end": 2651,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2690,
											"end": 2691,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2715,
											"end": 2768,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "463"
										},
										{
											"begin": 2760,
											"end": 2767,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2751,
											"end": 2757,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2740,
											"end": 2749,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2736,
											"end": 2758,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2715,
											"end": 2768,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "396"
										},
										{
											"begin": 2715,
											"end": 2768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2715,
											"end": 2768,
											"name": "tag",
											"source": 6,
											"value": "463"
										},
										{
											"begin": 2715,
											"end": 2768,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2705,
											"end": 2768,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2705,
											"end": 2768,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2661,
											"end": 2778,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2819,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2843,
											"end": 2896,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "464"
										},
										{
											"begin": 2888,
											"end": 2895,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2879,
											"end": 2885,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2868,
											"end": 2877,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2864,
											"end": 2886,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2843,
											"end": 2896,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "396"
										},
										{
											"begin": 2843,
											"end": 2896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2843,
											"end": 2896,
											"name": "tag",
											"source": 6,
											"value": "464"
										},
										{
											"begin": 2843,
											"end": 2896,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2833,
											"end": 2896,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2833,
											"end": 2896,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2788,
											"end": 2906,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2945,
											"end": 2947,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2971,
											"end": 3024,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "465"
										},
										{
											"begin": 3016,
											"end": 3023,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3007,
											"end": 3013,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3005,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2992,
											"end": 3014,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2971,
											"end": 3024,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "396"
										},
										{
											"begin": 2971,
											"end": 3024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2971,
											"end": 3024,
											"name": "tag",
											"source": 6,
											"value": "465"
										},
										{
											"begin": 2971,
											"end": 3024,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2961,
											"end": 3024,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2961,
											"end": 3024,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 3034,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 3041,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 3041,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 3041,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 3041,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 3041,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 3041,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3047,
											"end": 3143,
											"name": "tag",
											"source": 6,
											"value": "397"
										},
										{
											"begin": 3047,
											"end": 3143,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3084,
											"end": 3091,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3113,
											"end": 3137,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "467"
										},
										{
											"begin": 3131,
											"end": 3136,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3137,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "384"
										},
										{
											"begin": 3113,
											"end": 3137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3137,
											"name": "tag",
											"source": 6,
											"value": "467"
										},
										{
											"begin": 3113,
											"end": 3137,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3102,
											"end": 3137,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3102,
											"end": 3137,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3047,
											"end": 3143,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3047,
											"end": 3143,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3047,
											"end": 3143,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3047,
											"end": 3143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3149,
											"end": 3271,
											"name": "tag",
											"source": 6,
											"value": "398"
										},
										{
											"begin": 3149,
											"end": 3271,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3222,
											"end": 3246,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "469"
										},
										{
											"begin": 3240,
											"end": 3245,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3222,
											"end": 3246,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "397"
										},
										{
											"begin": 3222,
											"end": 3246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3222,
											"end": 3246,
											"name": "tag",
											"source": 6,
											"value": "469"
										},
										{
											"begin": 3222,
											"end": 3246,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3215,
											"end": 3220,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 3247,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3265,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "470"
										},
										{
											"begin": 3202,
											"end": 3265,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3262,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3258,
											"end": 3259,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3251,
											"end": 3263,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3265,
											"name": "tag",
											"source": 6,
											"value": "470"
										},
										{
											"begin": 3202,
											"end": 3265,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3149,
											"end": 3271,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3149,
											"end": 3271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3277,
											"end": 3416,
											"name": "tag",
											"source": 6,
											"value": "399"
										},
										{
											"begin": 3277,
											"end": 3416,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3323,
											"end": 3328,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3361,
											"end": 3367,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3348,
											"end": 3368,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3339,
											"end": 3368,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3339,
											"end": 3368,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3377,
											"end": 3410,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "472"
										},
										{
											"begin": 3404,
											"end": 3409,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3377,
											"end": 3410,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "398"
										},
										{
											"begin": 3377,
											"end": 3410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3377,
											"end": 3410,
											"name": "tag",
											"source": 6,
											"value": "472"
										},
										{
											"begin": 3377,
											"end": 3410,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3277,
											"end": 3416,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3277,
											"end": 3416,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3277,
											"end": 3416,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3277,
											"end": 3416,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3277,
											"end": 3416,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3422,
											"end": 3751,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 3422,
											"end": 3751,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3481,
											"end": 3487,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3530,
											"end": 3532,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3518,
											"end": 3527,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3509,
											"end": 3516,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3505,
											"end": 3528,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3501,
											"end": 3533,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3617,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3617,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "474"
										},
										{
											"begin": 3498,
											"end": 3617,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3536,
											"end": 3615,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "475"
										},
										{
											"begin": 3536,
											"end": 3615,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "393"
										},
										{
											"begin": 3536,
											"end": 3615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3536,
											"end": 3615,
											"name": "tag",
											"source": 6,
											"value": "475"
										},
										{
											"begin": 3536,
											"end": 3615,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3617,
											"name": "tag",
											"source": 6,
											"value": "474"
										},
										{
											"begin": 3498,
											"end": 3617,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3656,
											"end": 3657,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3681,
											"end": 3734,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "476"
										},
										{
											"begin": 3726,
											"end": 3733,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3717,
											"end": 3723,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3706,
											"end": 3715,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3702,
											"end": 3724,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3681,
											"end": 3734,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "399"
										},
										{
											"begin": 3681,
											"end": 3734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3681,
											"end": 3734,
											"name": "tag",
											"source": 6,
											"value": "476"
										},
										{
											"begin": 3681,
											"end": 3734,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3671,
											"end": 3734,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3671,
											"end": 3734,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3627,
											"end": 3744,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3422,
											"end": 3751,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3422,
											"end": 3751,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3422,
											"end": 3751,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3422,
											"end": 3751,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3422,
											"end": 3751,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3757,
											"end": 4089,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 3757,
											"end": 4089,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3878,
											"end": 3882,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3916,
											"end": 3918,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3905,
											"end": 3914,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3901,
											"end": 3919,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3893,
											"end": 3919,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3893,
											"end": 3919,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3929,
											"end": 4000,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "478"
										},
										{
											"begin": 3997,
											"end": 3998,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3986,
											"end": 3995,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3982,
											"end": 3999,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 3979,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3929,
											"end": 4000,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "391"
										},
										{
											"begin": 3929,
											"end": 4000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3929,
											"end": 4000,
											"name": "tag",
											"source": 6,
											"value": "478"
										},
										{
											"begin": 3929,
											"end": 4000,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4010,
											"end": 4082,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "479"
										},
										{
											"begin": 4078,
											"end": 4080,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4067,
											"end": 4076,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4063,
											"end": 4081,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4054,
											"end": 4060,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4010,
											"end": 4082,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "391"
										},
										{
											"begin": 4010,
											"end": 4082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4010,
											"end": 4082,
											"name": "tag",
											"source": 6,
											"value": "479"
										},
										{
											"begin": 4010,
											"end": 4082,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3757,
											"end": 4089,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3757,
											"end": 4089,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3757,
											"end": 4089,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3757,
											"end": 4089,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3757,
											"end": 4089,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3757,
											"end": 4089,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4095,
											"end": 4569,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 4095,
											"end": 4569,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4163,
											"end": 4169,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4171,
											"end": 4177,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4220,
											"end": 4222,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4208,
											"end": 4217,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4206,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4195,
											"end": 4218,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4191,
											"end": 4223,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 4188,
											"end": 4307,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4188,
											"end": 4307,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "481"
										},
										{
											"begin": 4188,
											"end": 4307,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4226,
											"end": 4305,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "482"
										},
										{
											"begin": 4226,
											"end": 4305,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "393"
										},
										{
											"begin": 4226,
											"end": 4305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4226,
											"end": 4305,
											"name": "tag",
											"source": 6,
											"value": "482"
										},
										{
											"begin": 4226,
											"end": 4305,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4188,
											"end": 4307,
											"name": "tag",
											"source": 6,
											"value": "481"
										},
										{
											"begin": 4188,
											"end": 4307,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4346,
											"end": 4347,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4371,
											"end": 4424,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "483"
										},
										{
											"begin": 4416,
											"end": 4423,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4407,
											"end": 4413,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4396,
											"end": 4405,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4392,
											"end": 4414,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4371,
											"end": 4424,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "396"
										},
										{
											"begin": 4371,
											"end": 4424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4371,
											"end": 4424,
											"name": "tag",
											"source": 6,
											"value": "483"
										},
										{
											"begin": 4371,
											"end": 4424,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4361,
											"end": 4424,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4361,
											"end": 4424,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4317,
											"end": 4434,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4473,
											"end": 4475,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4499,
											"end": 4552,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "484"
										},
										{
											"begin": 4544,
											"end": 4551,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4535,
											"end": 4541,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4524,
											"end": 4533,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4520,
											"end": 4542,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4499,
											"end": 4552,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "396"
										},
										{
											"begin": 4499,
											"end": 4552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4499,
											"end": 4552,
											"name": "tag",
											"source": 6,
											"value": "484"
										},
										{
											"begin": 4499,
											"end": 4552,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4489,
											"end": 4552,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4489,
											"end": 4552,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4444,
											"end": 4562,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4095,
											"end": 4569,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4095,
											"end": 4569,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4095,
											"end": 4569,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4095,
											"end": 4569,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4095,
											"end": 4569,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4095,
											"end": 4569,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4575,
											"end": 5049,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 4575,
											"end": 5049,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4643,
											"end": 4649,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4651,
											"end": 4657,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4700,
											"end": 4702,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4688,
											"end": 4697,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4679,
											"end": 4686,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4675,
											"end": 4698,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4671,
											"end": 4703,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 4668,
											"end": 4787,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4668,
											"end": 4787,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "486"
										},
										{
											"begin": 4668,
											"end": 4787,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4706,
											"end": 4785,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "487"
										},
										{
											"begin": 4706,
											"end": 4785,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "393"
										},
										{
											"begin": 4706,
											"end": 4785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4706,
											"end": 4785,
											"name": "tag",
											"source": 6,
											"value": "487"
										},
										{
											"begin": 4706,
											"end": 4785,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4668,
											"end": 4787,
											"name": "tag",
											"source": 6,
											"value": "486"
										},
										{
											"begin": 4668,
											"end": 4787,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4826,
											"end": 4827,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4851,
											"end": 4904,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "488"
										},
										{
											"begin": 4896,
											"end": 4903,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4887,
											"end": 4893,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4876,
											"end": 4885,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4872,
											"end": 4894,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4851,
											"end": 4904,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "399"
										},
										{
											"begin": 4851,
											"end": 4904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4851,
											"end": 4904,
											"name": "tag",
											"source": 6,
											"value": "488"
										},
										{
											"begin": 4851,
											"end": 4904,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4841,
											"end": 4904,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4841,
											"end": 4904,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4797,
											"end": 4914,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4953,
											"end": 4955,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4979,
											"end": 5032,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "489"
										},
										{
											"begin": 5024,
											"end": 5031,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5015,
											"end": 5021,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5004,
											"end": 5013,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5000,
											"end": 5022,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4979,
											"end": 5032,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "396"
										},
										{
											"begin": 4979,
											"end": 5032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4979,
											"end": 5032,
											"name": "tag",
											"source": 6,
											"value": "489"
										},
										{
											"begin": 4979,
											"end": 5032,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4969,
											"end": 5032,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4969,
											"end": 5032,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4924,
											"end": 5042,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4575,
											"end": 5049,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4575,
											"end": 5049,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4575,
											"end": 5049,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4575,
											"end": 5049,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4575,
											"end": 5049,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4575,
											"end": 5049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5055,
											"end": 5173,
											"name": "tag",
											"source": 6,
											"value": "400"
										},
										{
											"begin": 5055,
											"end": 5173,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5142,
											"end": 5166,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "491"
										},
										{
											"begin": 5160,
											"end": 5165,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5142,
											"end": 5166,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "397"
										},
										{
											"begin": 5142,
											"end": 5166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5142,
											"end": 5166,
											"name": "tag",
											"source": 6,
											"value": "491"
										},
										{
											"begin": 5142,
											"end": 5166,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5137,
											"end": 5140,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5130,
											"end": 5167,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5055,
											"end": 5173,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5055,
											"end": 5173,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5055,
											"end": 5173,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5179,
											"end": 5621,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 5179,
											"end": 5621,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5328,
											"end": 5332,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5366,
											"end": 5368,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5355,
											"end": 5364,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5351,
											"end": 5369,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5343,
											"end": 5369,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5343,
											"end": 5369,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5379,
											"end": 5450,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "493"
										},
										{
											"begin": 5447,
											"end": 5448,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5436,
											"end": 5445,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5432,
											"end": 5449,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5423,
											"end": 5429,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5379,
											"end": 5450,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "400"
										},
										{
											"begin": 5379,
											"end": 5450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5379,
											"end": 5450,
											"name": "tag",
											"source": 6,
											"value": "493"
										},
										{
											"begin": 5379,
											"end": 5450,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5460,
											"end": 5532,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "494"
										},
										{
											"begin": 5528,
											"end": 5530,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5517,
											"end": 5526,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5513,
											"end": 5531,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5504,
											"end": 5510,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5460,
											"end": 5532,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "400"
										},
										{
											"begin": 5460,
											"end": 5532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5460,
											"end": 5532,
											"name": "tag",
											"source": 6,
											"value": "494"
										},
										{
											"begin": 5460,
											"end": 5532,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5542,
											"end": 5614,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "495"
										},
										{
											"begin": 5610,
											"end": 5612,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5599,
											"end": 5608,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5595,
											"end": 5613,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5586,
											"end": 5592,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5542,
											"end": 5614,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "391"
										},
										{
											"begin": 5542,
											"end": 5614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5542,
											"end": 5614,
											"name": "tag",
											"source": 6,
											"value": "495"
										},
										{
											"begin": 5542,
											"end": 5614,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5179,
											"end": 5621,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 5179,
											"end": 5621,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5179,
											"end": 5621,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5179,
											"end": 5621,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5179,
											"end": 5621,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5179,
											"end": 5621,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5179,
											"end": 5621,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5627,
											"end": 5717,
											"name": "tag",
											"source": 6,
											"value": "401"
										},
										{
											"begin": 5627,
											"end": 5717,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5661,
											"end": 5668,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5704,
											"end": 5709,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5697,
											"end": 5710,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5690,
											"end": 5711,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5679,
											"end": 5711,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5679,
											"end": 5711,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5627,
											"end": 5717,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5627,
											"end": 5717,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5627,
											"end": 5717,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5627,
											"end": 5717,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5723,
											"end": 5839,
											"name": "tag",
											"source": 6,
											"value": "402"
										},
										{
											"begin": 5723,
											"end": 5839,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5793,
											"end": 5814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "498"
										},
										{
											"begin": 5808,
											"end": 5813,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5793,
											"end": 5814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "401"
										},
										{
											"begin": 5793,
											"end": 5814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5793,
											"end": 5814,
											"name": "tag",
											"source": 6,
											"value": "498"
										},
										{
											"begin": 5793,
											"end": 5814,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5786,
											"end": 5791,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5783,
											"end": 5815,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 5773,
											"end": 5833,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "499"
										},
										{
											"begin": 5773,
											"end": 5833,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5829,
											"end": 5830,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5826,
											"end": 5827,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5819,
											"end": 5831,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5773,
											"end": 5833,
											"name": "tag",
											"source": 6,
											"value": "499"
										},
										{
											"begin": 5773,
											"end": 5833,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5723,
											"end": 5839,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5723,
											"end": 5839,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5845,
											"end": 5982,
											"name": "tag",
											"source": 6,
											"value": "403"
										},
										{
											"begin": 5845,
											"end": 5982,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5899,
											"end": 5904,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5930,
											"end": 5936,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5924,
											"end": 5937,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5915,
											"end": 5937,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5915,
											"end": 5937,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5946,
											"end": 5976,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "501"
										},
										{
											"begin": 5970,
											"end": 5975,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5946,
											"end": 5976,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "402"
										},
										{
											"begin": 5946,
											"end": 5976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5946,
											"end": 5976,
											"name": "tag",
											"source": 6,
											"value": "501"
										},
										{
											"begin": 5946,
											"end": 5976,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5845,
											"end": 5982,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5845,
											"end": 5982,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5845,
											"end": 5982,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5845,
											"end": 5982,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5845,
											"end": 5982,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6333,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 5988,
											"end": 6333,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6055,
											"end": 6061,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6104,
											"end": 6106,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6092,
											"end": 6101,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6083,
											"end": 6090,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6079,
											"end": 6102,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6075,
											"end": 6107,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 6072,
											"end": 6191,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6072,
											"end": 6191,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "503"
										},
										{
											"begin": 6072,
											"end": 6191,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6110,
											"end": 6189,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "504"
										},
										{
											"begin": 6110,
											"end": 6189,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "393"
										},
										{
											"begin": 6110,
											"end": 6189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6110,
											"end": 6189,
											"name": "tag",
											"source": 6,
											"value": "504"
										},
										{
											"begin": 6110,
											"end": 6189,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6072,
											"end": 6191,
											"name": "tag",
											"source": 6,
											"value": "503"
										},
										{
											"begin": 6072,
											"end": 6191,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6230,
											"end": 6231,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6255,
											"end": 6316,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "505"
										},
										{
											"begin": 6308,
											"end": 6315,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6299,
											"end": 6305,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6288,
											"end": 6297,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6284,
											"end": 6306,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6255,
											"end": 6316,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "403"
										},
										{
											"begin": 6255,
											"end": 6316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6255,
											"end": 6316,
											"name": "tag",
											"source": 6,
											"value": "505"
										},
										{
											"begin": 6255,
											"end": 6316,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6245,
											"end": 6316,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6245,
											"end": 6316,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6201,
											"end": 6326,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6333,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6333,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6333,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6333,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6339,
											"end": 6519,
											"name": "tag",
											"source": 6,
											"value": "404"
										},
										{
											"begin": 6339,
											"end": 6519,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6387,
											"end": 6464,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6384,
											"end": 6385,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6377,
											"end": 6465,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6484,
											"end": 6488,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 6481,
											"end": 6482,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6474,
											"end": 6489,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6508,
											"end": 6512,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 6505,
											"end": 6506,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6498,
											"end": 6513,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6525,
											"end": 6935,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 6525,
											"end": 6935,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6565,
											"end": 6572,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6588,
											"end": 6608,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "508"
										},
										{
											"begin": 6606,
											"end": 6607,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6588,
											"end": 6608,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "390"
										},
										{
											"begin": 6588,
											"end": 6608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6588,
											"end": 6608,
											"name": "tag",
											"source": 6,
											"value": "508"
										},
										{
											"begin": 6588,
											"end": 6608,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6583,
											"end": 6608,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6583,
											"end": 6608,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6622,
											"end": 6642,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "509"
										},
										{
											"begin": 6640,
											"end": 6641,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6622,
											"end": 6642,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "390"
										},
										{
											"begin": 6622,
											"end": 6642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6622,
											"end": 6642,
											"name": "tag",
											"source": 6,
											"value": "509"
										},
										{
											"begin": 6622,
											"end": 6642,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6617,
											"end": 6642,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6617,
											"end": 6642,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6677,
											"end": 6678,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6674,
											"end": 6675,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6670,
											"end": 6679,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 6699,
											"end": 6729,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "510"
										},
										{
											"begin": 6717,
											"end": 6728,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6699,
											"end": 6729,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "390"
										},
										{
											"begin": 6699,
											"end": 6729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6699,
											"end": 6729,
											"name": "tag",
											"source": 6,
											"value": "510"
										},
										{
											"begin": 6699,
											"end": 6729,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6688,
											"end": 6729,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6688,
											"end": 6729,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6878,
											"end": 6879,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6869,
											"end": 6876,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6865,
											"end": 6880,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 6862,
											"end": 6863,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6859,
											"end": 6881,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 6839,
											"end": 6840,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6832,
											"end": 6841,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6812,
											"end": 6895,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 6789,
											"end": 6928,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "511"
										},
										{
											"begin": 6789,
											"end": 6928,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6908,
											"end": 6926,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "512"
										},
										{
											"begin": 6908,
											"end": 6926,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "404"
										},
										{
											"begin": 6908,
											"end": 6926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6908,
											"end": 6926,
											"name": "tag",
											"source": 6,
											"value": "512"
										},
										{
											"begin": 6908,
											"end": 6926,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6789,
											"end": 6928,
											"name": "tag",
											"source": 6,
											"value": "511"
										},
										{
											"begin": 6789,
											"end": 6928,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6573,
											"end": 6935,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6525,
											"end": 6935,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6525,
											"end": 6935,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6525,
											"end": 6935,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6525,
											"end": 6935,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6525,
											"end": 6935,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6941,
											"end": 7121,
											"name": "tag",
											"source": 6,
											"value": "405"
										},
										{
											"begin": 6941,
											"end": 7121,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6989,
											"end": 7066,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6986,
											"end": 6987,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6979,
											"end": 7067,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7086,
											"end": 7090,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 7083,
											"end": 7084,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7076,
											"end": 7091,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7110,
											"end": 7114,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 7107,
											"end": 7108,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7100,
											"end": 7115,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7127,
											"end": 7312,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 7127,
											"end": 7312,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7167,
											"end": 7168,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7184,
											"end": 7204,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "515"
										},
										{
											"begin": 7202,
											"end": 7203,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7184,
											"end": 7204,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "390"
										},
										{
											"begin": 7184,
											"end": 7204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7184,
											"end": 7204,
											"name": "tag",
											"source": 6,
											"value": "515"
										},
										{
											"begin": 7184,
											"end": 7204,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7179,
											"end": 7204,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7179,
											"end": 7204,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7218,
											"end": 7238,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "516"
										},
										{
											"begin": 7236,
											"end": 7237,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7218,
											"end": 7238,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "390"
										},
										{
											"begin": 7218,
											"end": 7238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7218,
											"end": 7238,
											"name": "tag",
											"source": 6,
											"value": "516"
										},
										{
											"begin": 7218,
											"end": 7238,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7213,
											"end": 7238,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7213,
											"end": 7238,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7257,
											"end": 7258,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7247,
											"end": 7282,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "517"
										},
										{
											"begin": 7247,
											"end": 7282,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7262,
											"end": 7280,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "518"
										},
										{
											"begin": 7262,
											"end": 7280,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "405"
										},
										{
											"begin": 7262,
											"end": 7280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7262,
											"end": 7280,
											"name": "tag",
											"source": 6,
											"value": "518"
										},
										{
											"begin": 7262,
											"end": 7280,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7247,
											"end": 7282,
											"name": "tag",
											"source": 6,
											"value": "517"
										},
										{
											"begin": 7247,
											"end": 7282,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7304,
											"end": 7305,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7301,
											"end": 7302,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7297,
											"end": 7306,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 7292,
											"end": 7306,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7292,
											"end": 7306,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7127,
											"end": 7312,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7127,
											"end": 7312,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7127,
											"end": 7312,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7127,
											"end": 7312,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7127,
											"end": 7312,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7318,
											"end": 7509,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 7318,
											"end": 7509,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7358,
											"end": 7361,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7377,
											"end": 7397,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "520"
										},
										{
											"begin": 7395,
											"end": 7396,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7377,
											"end": 7397,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "390"
										},
										{
											"begin": 7377,
											"end": 7397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7377,
											"end": 7397,
											"name": "tag",
											"source": 6,
											"value": "520"
										},
										{
											"begin": 7377,
											"end": 7397,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7372,
											"end": 7397,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7372,
											"end": 7397,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7411,
											"end": 7431,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "521"
										},
										{
											"begin": 7429,
											"end": 7430,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7411,
											"end": 7431,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "390"
										},
										{
											"begin": 7411,
											"end": 7431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7411,
											"end": 7431,
											"name": "tag",
											"source": 6,
											"value": "521"
										},
										{
											"begin": 7411,
											"end": 7431,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7406,
											"end": 7431,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7406,
											"end": 7431,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7454,
											"end": 7455,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7451,
											"end": 7452,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7447,
											"end": 7456,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7440,
											"end": 7456,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7440,
											"end": 7456,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7475,
											"end": 7478,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7472,
											"end": 7473,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7469,
											"end": 7479,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 7466,
											"end": 7502,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7466,
											"end": 7502,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "522"
										},
										{
											"begin": 7466,
											"end": 7502,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7482,
											"end": 7500,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "523"
										},
										{
											"begin": 7482,
											"end": 7500,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "404"
										},
										{
											"begin": 7482,
											"end": 7500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7482,
											"end": 7500,
											"name": "tag",
											"source": 6,
											"value": "523"
										},
										{
											"begin": 7482,
											"end": 7500,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7466,
											"end": 7502,
											"name": "tag",
											"source": 6,
											"value": "522"
										},
										{
											"begin": 7466,
											"end": 7502,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7318,
											"end": 7509,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7318,
											"end": 7509,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7318,
											"end": 7509,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7318,
											"end": 7509,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7318,
											"end": 7509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7515,
											"end": 7684,
											"name": "tag",
											"source": 6,
											"value": "406"
										},
										{
											"begin": 7515,
											"end": 7684,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7599,
											"end": 7610,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7633,
											"end": 7639,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7628,
											"end": 7631,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7621,
											"end": 7640,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7673,
											"end": 7677,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7668,
											"end": 7671,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7664,
											"end": 7678,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7649,
											"end": 7678,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7649,
											"end": 7678,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7515,
											"end": 7684,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7515,
											"end": 7684,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7515,
											"end": 7684,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7515,
											"end": 7684,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7515,
											"end": 7684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7690,
											"end": 7866,
											"name": "tag",
											"source": 6,
											"value": "407"
										},
										{
											"begin": 7690,
											"end": 7866,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7830,
											"end": 7858,
											"name": "PUSH",
											"source": 6,
											"value": "496E73756666696369656E74206F757470757420616D6F756E74000000000000"
										},
										{
											"begin": 7826,
											"end": 7827,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7818,
											"end": 7824,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7814,
											"end": 7828,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7807,
											"end": 7859,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7690,
											"end": 7866,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7690,
											"end": 7866,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7872,
											"end": 8238,
											"name": "tag",
											"source": 6,
											"value": "408"
										},
										{
											"begin": 7872,
											"end": 8238,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8014,
											"end": 8017,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8035,
											"end": 8102,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "527"
										},
										{
											"begin": 8099,
											"end": 8101,
											"name": "PUSH",
											"source": 6,
											"value": "1A"
										},
										{
											"begin": 8094,
											"end": 8097,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8035,
											"end": 8102,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "406"
										},
										{
											"begin": 8035,
											"end": 8102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8035,
											"end": 8102,
											"name": "tag",
											"source": 6,
											"value": "527"
										},
										{
											"begin": 8035,
											"end": 8102,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8028,
											"end": 8102,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8028,
											"end": 8102,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8111,
											"end": 8204,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "528"
										},
										{
											"begin": 8200,
											"end": 8203,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8111,
											"end": 8204,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "407"
										},
										{
											"begin": 8111,
											"end": 8204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8111,
											"end": 8204,
											"name": "tag",
											"source": 6,
											"value": "528"
										},
										{
											"begin": 8111,
											"end": 8204,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8229,
											"end": 8231,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8224,
											"end": 8227,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8220,
											"end": 8232,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8213,
											"end": 8232,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8213,
											"end": 8232,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7872,
											"end": 8238,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7872,
											"end": 8238,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7872,
											"end": 8238,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7872,
											"end": 8238,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8244,
											"end": 8663,
											"name": "tag",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 8244,
											"end": 8663,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8410,
											"end": 8414,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8448,
											"end": 8450,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8437,
											"end": 8446,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8433,
											"end": 8451,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8425,
											"end": 8451,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8425,
											"end": 8451,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8497,
											"end": 8506,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8491,
											"end": 8495,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8487,
											"end": 8507,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8483,
											"end": 8484,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8472,
											"end": 8481,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8468,
											"end": 8485,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8461,
											"end": 8508,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8525,
											"end": 8656,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "530"
										},
										{
											"begin": 8651,
											"end": 8655,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8525,
											"end": 8656,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "408"
										},
										{
											"begin": 8525,
											"end": 8656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8525,
											"end": 8656,
											"name": "tag",
											"source": 6,
											"value": "530"
										},
										{
											"begin": 8525,
											"end": 8656,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8517,
											"end": 8656,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8517,
											"end": 8656,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8244,
											"end": 8663,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8244,
											"end": 8663,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8244,
											"end": 8663,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8244,
											"end": 8663,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8669,
											"end": 9001,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 8669,
											"end": 9001,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8790,
											"end": 8794,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8828,
											"end": 8830,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8817,
											"end": 8826,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8813,
											"end": 8831,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8805,
											"end": 8831,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8805,
											"end": 8831,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8841,
											"end": 8912,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "532"
										},
										{
											"begin": 8909,
											"end": 8910,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8898,
											"end": 8907,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8894,
											"end": 8911,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8885,
											"end": 8891,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8841,
											"end": 8912,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "400"
										},
										{
											"begin": 8841,
											"end": 8912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8841,
											"end": 8912,
											"name": "tag",
											"source": 6,
											"value": "532"
										},
										{
											"begin": 8841,
											"end": 8912,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8922,
											"end": 8994,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "533"
										},
										{
											"begin": 8990,
											"end": 8992,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8979,
											"end": 8988,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8975,
											"end": 8993,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8966,
											"end": 8972,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8922,
											"end": 8994,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "391"
										},
										{
											"begin": 8922,
											"end": 8994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8922,
											"end": 8994,
											"name": "tag",
											"source": 6,
											"value": "533"
										},
										{
											"begin": 8922,
											"end": 8994,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8669,
											"end": 9001,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 8669,
											"end": 9001,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8669,
											"end": 9001,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8669,
											"end": 9001,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8669,
											"end": 9001,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8669,
											"end": 9001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9007,
											"end": 9229,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 9007,
											"end": 9229,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9100,
											"end": 9104,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9138,
											"end": 9140,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9127,
											"end": 9136,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9123,
											"end": 9141,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9115,
											"end": 9141,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9115,
											"end": 9141,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9151,
											"end": 9222,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "535"
										},
										{
											"begin": 9219,
											"end": 9220,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9208,
											"end": 9217,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9204,
											"end": 9221,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9195,
											"end": 9201,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9151,
											"end": 9222,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "400"
										},
										{
											"begin": 9151,
											"end": 9222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9151,
											"end": 9222,
											"name": "tag",
											"source": 6,
											"value": "535"
										},
										{
											"begin": 9151,
											"end": 9222,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9007,
											"end": 9229,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9007,
											"end": 9229,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9007,
											"end": 9229,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9007,
											"end": 9229,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9007,
											"end": 9229,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9235,
											"end": 9378,
											"name": "tag",
											"source": 6,
											"value": "409"
										},
										{
											"begin": 9235,
											"end": 9378,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9292,
											"end": 9297,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9323,
											"end": 9329,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9317,
											"end": 9330,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9308,
											"end": 9330,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9308,
											"end": 9330,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9339,
											"end": 9372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "537"
										},
										{
											"begin": 9366,
											"end": 9371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9339,
											"end": 9372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "395"
										},
										{
											"begin": 9339,
											"end": 9372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9339,
											"end": 9372,
											"name": "tag",
											"source": 6,
											"value": "537"
										},
										{
											"begin": 9339,
											"end": 9372,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9235,
											"end": 9378,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9235,
											"end": 9378,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9235,
											"end": 9378,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9235,
											"end": 9378,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9235,
											"end": 9378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9384,
											"end": 9735,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 9384,
											"end": 9735,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9454,
											"end": 9460,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9503,
											"end": 9505,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9491,
											"end": 9500,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9482,
											"end": 9489,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9478,
											"end": 9501,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9474,
											"end": 9506,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 9471,
											"end": 9590,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9471,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "539"
										},
										{
											"begin": 9471,
											"end": 9590,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9509,
											"end": 9588,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "540"
										},
										{
											"begin": 9509,
											"end": 9588,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "393"
										},
										{
											"begin": 9509,
											"end": 9588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9509,
											"end": 9588,
											"name": "tag",
											"source": 6,
											"value": "540"
										},
										{
											"begin": 9509,
											"end": 9588,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9471,
											"end": 9590,
											"name": "tag",
											"source": 6,
											"value": "539"
										},
										{
											"begin": 9471,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9629,
											"end": 9630,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9654,
											"end": 9718,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "541"
										},
										{
											"begin": 9710,
											"end": 9717,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9701,
											"end": 9707,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9690,
											"end": 9699,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9686,
											"end": 9708,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9654,
											"end": 9718,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "409"
										},
										{
											"begin": 9654,
											"end": 9718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9654,
											"end": 9718,
											"name": "tag",
											"source": 6,
											"value": "541"
										},
										{
											"begin": 9654,
											"end": 9718,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9644,
											"end": 9718,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9644,
											"end": 9718,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9600,
											"end": 9728,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9384,
											"end": 9735,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9384,
											"end": 9735,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9384,
											"end": 9735,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9384,
											"end": 9735,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9384,
											"end": 9735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9741,
											"end": 9907,
											"name": "tag",
											"source": 6,
											"value": "410"
										},
										{
											"begin": 9741,
											"end": 9907,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9881,
											"end": 9899,
											"name": "PUSH",
											"source": 6,
											"value": "496E76616C696420726573657276657300000000000000000000000000000000"
										},
										{
											"begin": 9877,
											"end": 9878,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9869,
											"end": 9875,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9865,
											"end": 9879,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9858,
											"end": 9900,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9741,
											"end": 9907,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9741,
											"end": 9907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9913,
											"end": 10279,
											"name": "tag",
											"source": 6,
											"value": "411"
										},
										{
											"begin": 9913,
											"end": 10279,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10055,
											"end": 10058,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10076,
											"end": 10143,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "544"
										},
										{
											"begin": 10140,
											"end": 10142,
											"name": "PUSH",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 10135,
											"end": 10138,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10076,
											"end": 10143,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "406"
										},
										{
											"begin": 10076,
											"end": 10143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10076,
											"end": 10143,
											"name": "tag",
											"source": 6,
											"value": "544"
										},
										{
											"begin": 10076,
											"end": 10143,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10069,
											"end": 10143,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10069,
											"end": 10143,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10152,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "545"
										},
										{
											"begin": 10241,
											"end": 10244,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10152,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "410"
										},
										{
											"begin": 10152,
											"end": 10245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10152,
											"end": 10245,
											"name": "tag",
											"source": 6,
											"value": "545"
										},
										{
											"begin": 10152,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10270,
											"end": 10272,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10265,
											"end": 10268,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10261,
											"end": 10273,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10254,
											"end": 10273,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10254,
											"end": 10273,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9913,
											"end": 10279,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9913,
											"end": 10279,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9913,
											"end": 10279,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9913,
											"end": 10279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10285,
											"end": 10704,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 10285,
											"end": 10704,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10451,
											"end": 10455,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10489,
											"end": 10491,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10478,
											"end": 10487,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10474,
											"end": 10492,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10492,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10492,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10538,
											"end": 10547,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10532,
											"end": 10536,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10528,
											"end": 10548,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10524,
											"end": 10525,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10513,
											"end": 10522,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10509,
											"end": 10526,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10502,
											"end": 10549,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10566,
											"end": 10697,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "547"
										},
										{
											"begin": 10692,
											"end": 10696,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10566,
											"end": 10697,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "411"
										},
										{
											"begin": 10566,
											"end": 10697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10566,
											"end": 10697,
											"name": "tag",
											"source": 6,
											"value": "547"
										},
										{
											"begin": 10566,
											"end": 10697,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10558,
											"end": 10697,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10558,
											"end": 10697,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10285,
											"end": 10704,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10285,
											"end": 10704,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10285,
											"end": 10704,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10285,
											"end": 10704,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10710,
											"end": 10904,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 10710,
											"end": 10904,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10750,
											"end": 10754,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10770,
											"end": 10790,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "549"
										},
										{
											"begin": 10788,
											"end": 10789,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10770,
											"end": 10790,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "390"
										},
										{
											"begin": 10770,
											"end": 10790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10770,
											"end": 10790,
											"name": "tag",
											"source": 6,
											"value": "549"
										},
										{
											"begin": 10770,
											"end": 10790,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10765,
											"end": 10790,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10765,
											"end": 10790,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10804,
											"end": 10824,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "550"
										},
										{
											"begin": 10822,
											"end": 10823,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10804,
											"end": 10824,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "390"
										},
										{
											"begin": 10804,
											"end": 10824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10804,
											"end": 10824,
											"name": "tag",
											"source": 6,
											"value": "550"
										},
										{
											"begin": 10804,
											"end": 10824,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10799,
											"end": 10824,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10799,
											"end": 10824,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10848,
											"end": 10849,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10845,
											"end": 10846,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10841,
											"end": 10850,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10833,
											"end": 10850,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10833,
											"end": 10850,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10872,
											"end": 10873,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10866,
											"end": 10870,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10863,
											"end": 10874,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 10860,
											"end": 10897,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10860,
											"end": 10897,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "551"
										},
										{
											"begin": 10860,
											"end": 10897,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10877,
											"end": 10895,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "552"
										},
										{
											"begin": 10877,
											"end": 10895,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "404"
										},
										{
											"begin": 10877,
											"end": 10895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10877,
											"end": 10895,
											"name": "tag",
											"source": 6,
											"value": "552"
										},
										{
											"begin": 10877,
											"end": 10895,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10860,
											"end": 10897,
											"name": "tag",
											"source": 6,
											"value": "551"
										},
										{
											"begin": 10860,
											"end": 10897,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10710,
											"end": 10904,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10710,
											"end": 10904,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10710,
											"end": 10904,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10710,
											"end": 10904,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10710,
											"end": 10904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10910,
											"end": 11068,
											"name": "tag",
											"source": 6,
											"value": "412"
										},
										{
											"begin": 10910,
											"end": 11068,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11050,
											"end": 11060,
											"name": "PUSH",
											"source": 6,
											"value": "536C69704C6F636B000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11046,
											"end": 11047,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11038,
											"end": 11044,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11034,
											"end": 11048,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11027,
											"end": 11061,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10910,
											"end": 11068,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10910,
											"end": 11068,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11074,
											"end": 11439,
											"name": "tag",
											"source": 6,
											"value": "413"
										},
										{
											"begin": 11074,
											"end": 11439,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11216,
											"end": 11219,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11237,
											"end": 11303,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "555"
										},
										{
											"begin": 11301,
											"end": 11302,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 11296,
											"end": 11299,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11237,
											"end": 11303,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "406"
										},
										{
											"begin": 11237,
											"end": 11303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11237,
											"end": 11303,
											"name": "tag",
											"source": 6,
											"value": "555"
										},
										{
											"begin": 11237,
											"end": 11303,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11230,
											"end": 11303,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11230,
											"end": 11303,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11312,
											"end": 11405,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "556"
										},
										{
											"begin": 11401,
											"end": 11404,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11312,
											"end": 11405,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "412"
										},
										{
											"begin": 11312,
											"end": 11405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11312,
											"end": 11405,
											"name": "tag",
											"source": 6,
											"value": "556"
										},
										{
											"begin": 11312,
											"end": 11405,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11430,
											"end": 11432,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11425,
											"end": 11428,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11414,
											"end": 11433,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11414,
											"end": 11433,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11074,
											"end": 11439,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11074,
											"end": 11439,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11074,
											"end": 11439,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11074,
											"end": 11439,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11445,
											"end": 11864,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 11445,
											"end": 11864,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11611,
											"end": 11615,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11649,
											"end": 11651,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11638,
											"end": 11647,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11634,
											"end": 11652,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11626,
											"end": 11652,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11626,
											"end": 11652,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11698,
											"end": 11707,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11692,
											"end": 11696,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11688,
											"end": 11708,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11684,
											"end": 11685,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11673,
											"end": 11682,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11669,
											"end": 11686,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11662,
											"end": 11709,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11726,
											"end": 11857,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "558"
										},
										{
											"begin": 11852,
											"end": 11856,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11726,
											"end": 11857,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "413"
										},
										{
											"begin": 11726,
											"end": 11857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11726,
											"end": 11857,
											"name": "tag",
											"source": 6,
											"value": "558"
										},
										{
											"begin": 11726,
											"end": 11857,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11718,
											"end": 11857,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11718,
											"end": 11857,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11445,
											"end": 11864,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11445,
											"end": 11864,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11445,
											"end": 11864,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11445,
											"end": 11864,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11870,
											"end": 12040,
											"name": "tag",
											"source": 6,
											"value": "414"
										},
										{
											"begin": 11870,
											"end": 12040,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12010,
											"end": 12032,
											"name": "PUSH",
											"source": 6,
											"value": "496E73756666696369656E742062616C616E6365000000000000000000000000"
										},
										{
											"begin": 12006,
											"end": 12007,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11998,
											"end": 12004,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11994,
											"end": 12008,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11987,
											"end": 12033,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11870,
											"end": 12040,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11870,
											"end": 12040,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12046,
											"end": 12412,
											"name": "tag",
											"source": 6,
											"value": "415"
										},
										{
											"begin": 12046,
											"end": 12412,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12188,
											"end": 12191,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12209,
											"end": 12276,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "561"
										},
										{
											"begin": 12273,
											"end": 12275,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 12268,
											"end": 12271,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12209,
											"end": 12276,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "406"
										},
										{
											"begin": 12209,
											"end": 12276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12209,
											"end": 12276,
											"name": "tag",
											"source": 6,
											"value": "561"
										},
										{
											"begin": 12209,
											"end": 12276,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12202,
											"end": 12276,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12202,
											"end": 12276,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12285,
											"end": 12378,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "562"
										},
										{
											"begin": 12374,
											"end": 12377,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12285,
											"end": 12378,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "414"
										},
										{
											"begin": 12285,
											"end": 12378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12285,
											"end": 12378,
											"name": "tag",
											"source": 6,
											"value": "562"
										},
										{
											"begin": 12285,
											"end": 12378,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12403,
											"end": 12405,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12398,
											"end": 12401,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12394,
											"end": 12406,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12387,
											"end": 12406,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12387,
											"end": 12406,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12046,
											"end": 12412,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12046,
											"end": 12412,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12046,
											"end": 12412,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12046,
											"end": 12412,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12418,
											"end": 12837,
											"name": "tag",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 12418,
											"end": 12837,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12584,
											"end": 12588,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12622,
											"end": 12624,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12611,
											"end": 12620,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12607,
											"end": 12625,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12599,
											"end": 12625,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12599,
											"end": 12625,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12671,
											"end": 12680,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12665,
											"end": 12669,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12661,
											"end": 12681,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 12657,
											"end": 12658,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12646,
											"end": 12655,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12642,
											"end": 12659,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12635,
											"end": 12682,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12699,
											"end": 12830,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "564"
										},
										{
											"begin": 12825,
											"end": 12829,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12699,
											"end": 12830,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "415"
										},
										{
											"begin": 12699,
											"end": 12830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12699,
											"end": 12830,
											"name": "tag",
											"source": 6,
											"value": "564"
										},
										{
											"begin": 12699,
											"end": 12830,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12691,
											"end": 12830,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12691,
											"end": 12830,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12418,
											"end": 12837,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12418,
											"end": 12837,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12418,
											"end": 12837,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12418,
											"end": 12837,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12843,
											"end": 13016,
											"name": "tag",
											"source": 6,
											"value": "416"
										},
										{
											"begin": 12843,
											"end": 13016,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12983,
											"end": 13008,
											"name": "PUSH",
											"source": 6,
											"value": "496E76616C6964206C697175696469747920726174696F000000000000000000"
										},
										{
											"begin": 12979,
											"end": 12980,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12971,
											"end": 12977,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12967,
											"end": 12981,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12960,
											"end": 13009,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12843,
											"end": 13016,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12843,
											"end": 13016,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13022,
											"end": 13388,
											"name": "tag",
											"source": 6,
											"value": "417"
										},
										{
											"begin": 13022,
											"end": 13388,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13164,
											"end": 13167,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13185,
											"end": 13252,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "567"
										},
										{
											"begin": 13249,
											"end": 13251,
											"name": "PUSH",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 13244,
											"end": 13247,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13185,
											"end": 13252,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "406"
										},
										{
											"begin": 13185,
											"end": 13252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13185,
											"end": 13252,
											"name": "tag",
											"source": 6,
											"value": "567"
										},
										{
											"begin": 13185,
											"end": 13252,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13178,
											"end": 13252,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13178,
											"end": 13252,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13261,
											"end": 13354,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "568"
										},
										{
											"begin": 13350,
											"end": 13353,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13261,
											"end": 13354,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "416"
										},
										{
											"begin": 13261,
											"end": 13354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13261,
											"end": 13354,
											"name": "tag",
											"source": 6,
											"value": "568"
										},
										{
											"begin": 13261,
											"end": 13354,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13379,
											"end": 13381,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13374,
											"end": 13377,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13370,
											"end": 13382,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13363,
											"end": 13382,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13363,
											"end": 13382,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13022,
											"end": 13388,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13022,
											"end": 13388,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13022,
											"end": 13388,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13022,
											"end": 13388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13394,
											"end": 13813,
											"name": "tag",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 13394,
											"end": 13813,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13560,
											"end": 13564,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13598,
											"end": 13600,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13587,
											"end": 13596,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13583,
											"end": 13601,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13575,
											"end": 13601,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13575,
											"end": 13601,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13647,
											"end": 13656,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13641,
											"end": 13645,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13637,
											"end": 13657,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 13633,
											"end": 13634,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13622,
											"end": 13631,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13618,
											"end": 13635,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13611,
											"end": 13658,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13675,
											"end": 13806,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "570"
										},
										{
											"begin": 13801,
											"end": 13805,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13675,
											"end": 13806,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "417"
										},
										{
											"begin": 13675,
											"end": 13806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13675,
											"end": 13806,
											"name": "tag",
											"source": 6,
											"value": "570"
										},
										{
											"begin": 13675,
											"end": 13806,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13667,
											"end": 13806,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13667,
											"end": 13806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13394,
											"end": 13813,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13394,
											"end": 13813,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13394,
											"end": 13813,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13394,
											"end": 13813,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13819,
											"end": 13979,
											"name": "tag",
											"source": 6,
											"value": "418"
										},
										{
											"begin": 13819,
											"end": 13979,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13959,
											"end": 13971,
											"name": "PUSH",
											"source": 6,
											"value": "736861726573203D203000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13955,
											"end": 13956,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13947,
											"end": 13953,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13943,
											"end": 13957,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13936,
											"end": 13972,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13819,
											"end": 13979,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13819,
											"end": 13979,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13985,
											"end": 14351,
											"name": "tag",
											"source": 6,
											"value": "419"
										},
										{
											"begin": 13985,
											"end": 14351,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14127,
											"end": 14130,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14148,
											"end": 14215,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "573"
										},
										{
											"begin": 14212,
											"end": 14214,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 14207,
											"end": 14210,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 14148,
											"end": 14215,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "406"
										},
										{
											"begin": 14148,
											"end": 14215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14148,
											"end": 14215,
											"name": "tag",
											"source": 6,
											"value": "573"
										},
										{
											"begin": 14148,
											"end": 14215,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14141,
											"end": 14215,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14141,
											"end": 14215,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14224,
											"end": 14317,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "574"
										},
										{
											"begin": 14313,
											"end": 14316,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14224,
											"end": 14317,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "418"
										},
										{
											"begin": 14224,
											"end": 14317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14224,
											"end": 14317,
											"name": "tag",
											"source": 6,
											"value": "574"
										},
										{
											"begin": 14224,
											"end": 14317,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14342,
											"end": 14344,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 14337,
											"end": 14340,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14333,
											"end": 14345,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14326,
											"end": 14345,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14326,
											"end": 14345,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13985,
											"end": 14351,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13985,
											"end": 14351,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13985,
											"end": 14351,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13985,
											"end": 14351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14357,
											"end": 14776,
											"name": "tag",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 14357,
											"end": 14776,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14523,
											"end": 14527,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14561,
											"end": 14563,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 14550,
											"end": 14559,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14546,
											"end": 14564,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14538,
											"end": 14564,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14538,
											"end": 14564,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14610,
											"end": 14619,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14604,
											"end": 14608,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14600,
											"end": 14620,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 14596,
											"end": 14597,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14585,
											"end": 14594,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 14581,
											"end": 14598,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14574,
											"end": 14621,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14638,
											"end": 14769,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "576"
										},
										{
											"begin": 14764,
											"end": 14768,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14638,
											"end": 14769,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "419"
										},
										{
											"begin": 14638,
											"end": 14769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14638,
											"end": 14769,
											"name": "tag",
											"source": 6,
											"value": "576"
										},
										{
											"begin": 14638,
											"end": 14769,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14630,
											"end": 14769,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14630,
											"end": 14769,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14357,
											"end": 14776,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14357,
											"end": 14776,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14357,
											"end": 14776,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14357,
											"end": 14776,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14782,
											"end": 14868,
											"name": "tag",
											"source": 6,
											"value": "420"
										},
										{
											"begin": 14782,
											"end": 14868,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14817,
											"end": 14824,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14857,
											"end": 14861,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 14850,
											"end": 14855,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14846,
											"end": 14862,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 14835,
											"end": 14862,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14835,
											"end": 14862,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14782,
											"end": 14868,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14782,
											"end": 14868,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14782,
											"end": 14868,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14782,
											"end": 14868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14874,
											"end": 14992,
											"name": "tag",
											"source": 6,
											"value": "421"
										},
										{
											"begin": 14874,
											"end": 14992,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14945,
											"end": 14967,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "579"
										},
										{
											"begin": 14961,
											"end": 14966,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14945,
											"end": 14967,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "420"
										},
										{
											"begin": 14945,
											"end": 14967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14945,
											"end": 14967,
											"name": "tag",
											"source": 6,
											"value": "579"
										},
										{
											"begin": 14945,
											"end": 14967,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14938,
											"end": 14943,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14935,
											"end": 14968,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 14925,
											"end": 14986,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "580"
										},
										{
											"begin": 14925,
											"end": 14986,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 14982,
											"end": 14983,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14979,
											"end": 14980,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 14972,
											"end": 14984,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 14925,
											"end": 14986,
											"name": "tag",
											"source": 6,
											"value": "580"
										},
										{
											"begin": 14925,
											"end": 14986,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14874,
											"end": 14992,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14874,
											"end": 14992,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14998,
											"end": 15137,
											"name": "tag",
											"source": 6,
											"value": "422"
										},
										{
											"begin": 14998,
											"end": 15137,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15053,
											"end": 15058,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15084,
											"end": 15090,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15078,
											"end": 15091,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 15069,
											"end": 15091,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15069,
											"end": 15091,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15100,
											"end": 15131,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "582"
										},
										{
											"begin": 15125,
											"end": 15130,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15100,
											"end": 15131,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "421"
										},
										{
											"begin": 15100,
											"end": 15131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15100,
											"end": 15131,
											"name": "tag",
											"source": 6,
											"value": "582"
										},
										{
											"begin": 15100,
											"end": 15131,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14998,
											"end": 15137,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 14998,
											"end": 15137,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14998,
											"end": 15137,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14998,
											"end": 15137,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14998,
											"end": 15137,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15143,
											"end": 15490,
											"name": "tag",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 15143,
											"end": 15490,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15211,
											"end": 15217,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15260,
											"end": 15262,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 15248,
											"end": 15257,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15239,
											"end": 15246,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 15235,
											"end": 15258,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 15231,
											"end": 15263,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 15228,
											"end": 15347,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 15228,
											"end": 15347,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "584"
										},
										{
											"begin": 15228,
											"end": 15347,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 15266,
											"end": 15345,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "585"
										},
										{
											"begin": 15266,
											"end": 15345,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "393"
										},
										{
											"begin": 15266,
											"end": 15345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15266,
											"end": 15345,
											"name": "tag",
											"source": 6,
											"value": "585"
										},
										{
											"begin": 15266,
											"end": 15345,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15228,
											"end": 15347,
											"name": "tag",
											"source": 6,
											"value": "584"
										},
										{
											"begin": 15228,
											"end": 15347,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15386,
											"end": 15387,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15411,
											"end": 15473,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "586"
										},
										{
											"begin": 15465,
											"end": 15472,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 15456,
											"end": 15462,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15445,
											"end": 15454,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 15441,
											"end": 15463,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15411,
											"end": 15473,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "422"
										},
										{
											"begin": 15411,
											"end": 15473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15411,
											"end": 15473,
											"name": "tag",
											"source": 6,
											"value": "586"
										},
										{
											"begin": 15411,
											"end": 15473,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15401,
											"end": 15473,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15401,
											"end": 15473,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15357,
											"end": 15483,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15143,
											"end": 15490,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 15143,
											"end": 15490,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15143,
											"end": 15490,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15143,
											"end": 15490,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15143,
											"end": 15490,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15496,
											"end": 15598,
											"name": "tag",
											"source": 6,
											"value": "423"
										},
										{
											"begin": 15496,
											"end": 15598,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15538,
											"end": 15546,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15585,
											"end": 15590,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15582,
											"end": 15583,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 15578,
											"end": 15591,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 15557,
											"end": 15591,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15557,
											"end": 15591,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15496,
											"end": 15598,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15496,
											"end": 15598,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15496,
											"end": 15598,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15496,
											"end": 15598,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15604,
											"end": 16452,
											"name": "tag",
											"source": 6,
											"value": "424"
										},
										{
											"begin": 15604,
											"end": 16452,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15665,
											"end": 15670,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15672,
											"end": 15676,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 15696,
											"end": 15702,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15687,
											"end": 15702,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15687,
											"end": 15702,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15720,
											"end": 15725,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 15711,
											"end": 15725,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15711,
											"end": 15725,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15734,
											"end": 16446,
											"name": "tag",
											"source": 6,
											"value": "589"
										},
										{
											"begin": 15734,
											"end": 16446,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15755,
											"end": 15756,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 15745,
											"end": 15753,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 15742,
											"end": 15757,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 15734,
											"end": 16446,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 15734,
											"end": 16446,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "591"
										},
										{
											"begin": 15734,
											"end": 16446,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 15850,
											"end": 15854,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 15845,
											"end": 15848,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 15841,
											"end": 15855,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 15835,
											"end": 15839,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15832,
											"end": 15856,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 15829,
											"end": 15879,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 15829,
											"end": 15879,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "592"
										},
										{
											"begin": 15829,
											"end": 15879,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 15859,
											"end": 15877,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "593"
										},
										{
											"begin": 15859,
											"end": 15877,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "404"
										},
										{
											"begin": 15859,
											"end": 15877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15859,
											"end": 15877,
											"name": "tag",
											"source": 6,
											"value": "593"
										},
										{
											"begin": 15859,
											"end": 15877,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15829,
											"end": 15879,
											"name": "tag",
											"source": 6,
											"value": "592"
										},
										{
											"begin": 15829,
											"end": 15879,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15909,
											"end": 15910,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 15899,
											"end": 15907,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 15895,
											"end": 15911,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 15892,
											"end": 16343,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 15892,
											"end": 16343,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "594"
										},
										{
											"begin": 15892,
											"end": 16343,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 16324,
											"end": 16328,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 16317,
											"end": 16322,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 16313,
											"end": 16329,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 16304,
											"end": 16329,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 16304,
											"end": 16329,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15892,
											"end": 16343,
											"name": "tag",
											"source": 6,
											"value": "594"
										},
										{
											"begin": 15892,
											"end": 16343,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16374,
											"end": 16378,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 16368,
											"end": 16372,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 16364,
											"end": 16379,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 16356,
											"end": 16379,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 16356,
											"end": 16379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16404,
											"end": 16436,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "595"
										},
										{
											"begin": 16427,
											"end": 16435,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 16404,
											"end": 16436,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "423"
										},
										{
											"begin": 16404,
											"end": 16436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16404,
											"end": 16436,
											"name": "tag",
											"source": 6,
											"value": "595"
										},
										{
											"begin": 16404,
											"end": 16436,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16392,
											"end": 16436,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 16392,
											"end": 16436,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15734,
											"end": 16446,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "589"
										},
										{
											"begin": 15734,
											"end": 16446,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15734,
											"end": 16446,
											"name": "tag",
											"source": 6,
											"value": "591"
										},
										{
											"begin": 15734,
											"end": 16446,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15604,
											"end": 16452,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 15604,
											"end": 16452,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15604,
											"end": 16452,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 15604,
											"end": 16452,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 15604,
											"end": 16452,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15604,
											"end": 16452,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15604,
											"end": 16452,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15604,
											"end": 16452,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16458,
											"end": 17531,
											"name": "tag",
											"source": 6,
											"value": "425"
										},
										{
											"begin": 16458,
											"end": 17531,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16512,
											"end": 16517,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16703,
											"end": 16711,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 16693,
											"end": 16733,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "597"
										},
										{
											"begin": 16693,
											"end": 16733,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 16724,
											"end": 16725,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 16715,
											"end": 16725,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 16715,
											"end": 16725,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16726,
											"end": 16731,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "596"
										},
										{
											"begin": 16726,
											"end": 16731,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16693,
											"end": 16733,
											"name": "tag",
											"source": 6,
											"value": "597"
										},
										{
											"begin": 16693,
											"end": 16733,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16752,
											"end": 16756,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 16742,
											"end": 16778,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "598"
										},
										{
											"begin": 16742,
											"end": 16778,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 16769,
											"end": 16770,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16760,
											"end": 16770,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 16760,
											"end": 16770,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16771,
											"end": 16776,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "596"
										},
										{
											"begin": 16771,
											"end": 16776,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16742,
											"end": 16778,
											"name": "tag",
											"source": 6,
											"value": "598"
										},
										{
											"begin": 16742,
											"end": 16778,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16838,
											"end": 16842,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 16886,
											"end": 16887,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 16881,
											"end": 16908,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 16881,
											"end": 16908,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 16881,
											"end": 16908,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "600"
										},
										{
											"begin": 16881,
											"end": 16908,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 16922,
											"end": 16923,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 16917,
											"end": 17108,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 16917,
											"end": 17108,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 16917,
											"end": 17108,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "601"
										},
										{
											"begin": 16917,
											"end": 17108,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 16831,
											"end": 17108,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "599"
										},
										{
											"begin": 16831,
											"end": 17108,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16881,
											"end": 16908,
											"name": "tag",
											"source": 6,
											"value": "600"
										},
										{
											"begin": 16881,
											"end": 16908,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16899,
											"end": 16900,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 16890,
											"end": 16900,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 16890,
											"end": 16900,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16901,
											"end": 16906,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16901,
											"end": 16906,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "596"
										},
										{
											"begin": 16901,
											"end": 16906,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16917,
											"end": 17108,
											"name": "tag",
											"source": 6,
											"value": "601"
										},
										{
											"begin": 16917,
											"end": 17108,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16962,
											"end": 16965,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 16952,
											"end": 16960,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 16949,
											"end": 16966,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 16946,
											"end": 16989,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 16946,
											"end": 16989,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "602"
										},
										{
											"begin": 16946,
											"end": 16989,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 16969,
											"end": 16987,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "603"
										},
										{
											"begin": 16969,
											"end": 16987,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "404"
										},
										{
											"begin": 16969,
											"end": 16987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16969,
											"end": 16987,
											"name": "tag",
											"source": 6,
											"value": "603"
										},
										{
											"begin": 16969,
											"end": 16987,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16946,
											"end": 16989,
											"name": "tag",
											"source": 6,
											"value": "602"
										},
										{
											"begin": 16946,
											"end": 16989,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17018,
											"end": 17026,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 17015,
											"end": 17016,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 17011,
											"end": 17027,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 17002,
											"end": 17027,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 17002,
											"end": 17027,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17053,
											"end": 17056,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 17046,
											"end": 17051,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 17043,
											"end": 17057,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 17040,
											"end": 17080,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 17040,
											"end": 17080,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "604"
										},
										{
											"begin": 17040,
											"end": 17080,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 17060,
											"end": 17078,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "605"
										},
										{
											"begin": 17060,
											"end": 17078,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "404"
										},
										{
											"begin": 17060,
											"end": 17078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17060,
											"end": 17078,
											"name": "tag",
											"source": 6,
											"value": "605"
										},
										{
											"begin": 17060,
											"end": 17078,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17040,
											"end": 17080,
											"name": "tag",
											"source": 6,
											"value": "604"
										},
										{
											"begin": 17040,
											"end": 17080,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17093,
											"end": 17098,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17093,
											"end": 17098,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "596"
										},
										{
											"begin": 17093,
											"end": 17098,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16831,
											"end": 17108,
											"name": "tag",
											"source": 6,
											"value": "599"
										},
										{
											"begin": 16831,
											"end": 17108,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16831,
											"end": 17108,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17217,
											"end": 17219,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 17207,
											"end": 17215,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 17204,
											"end": 17220,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 17198,
											"end": 17201,
											"name": "PUSH",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 17192,
											"end": 17196,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 17189,
											"end": 17202,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 17185,
											"end": 17221,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 17167,
											"end": 17169,
											"name": "PUSH",
											"source": 6,
											"value": "4E"
										},
										{
											"begin": 17157,
											"end": 17165,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 17154,
											"end": 17170,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 17149,
											"end": 17151,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 17143,
											"end": 17147,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 17140,
											"end": 17152,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 17136,
											"end": 17171,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 17120,
											"end": 17231,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 17117,
											"end": 17363,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 17117,
											"end": 17363,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "606"
										},
										{
											"begin": 17117,
											"end": 17363,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 17273,
											"end": 17281,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 17267,
											"end": 17271,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 17263,
											"end": 17282,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 17254,
											"end": 17282,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17254,
											"end": 17282,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17308,
											"end": 17311,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 17301,
											"end": 17306,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 17298,
											"end": 17312,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 17295,
											"end": 17335,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 17295,
											"end": 17335,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "607"
										},
										{
											"begin": 17295,
											"end": 17335,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 17315,
											"end": 17333,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "608"
										},
										{
											"begin": 17315,
											"end": 17333,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "404"
										},
										{
											"begin": 17315,
											"end": 17333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17315,
											"end": 17333,
											"name": "tag",
											"source": 6,
											"value": "608"
										},
										{
											"begin": 17315,
											"end": 17333,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17295,
											"end": 17335,
											"name": "tag",
											"source": 6,
											"value": "607"
										},
										{
											"begin": 17295,
											"end": 17335,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17348,
											"end": 17353,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "596"
										},
										{
											"begin": 17348,
											"end": 17353,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17117,
											"end": 17363,
											"name": "tag",
											"source": 6,
											"value": "606"
										},
										{
											"begin": 17117,
											"end": 17363,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17388,
											"end": 17430,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "609"
										},
										{
											"begin": 17426,
											"end": 17429,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 17416,
											"end": 17424,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 17410,
											"end": 17414,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 17407,
											"end": 17408,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 17388,
											"end": 17430,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "424"
										},
										{
											"begin": 17388,
											"end": 17430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17388,
											"end": 17430,
											"name": "tag",
											"source": 6,
											"value": "609"
										},
										{
											"begin": 17388,
											"end": 17430,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17373,
											"end": 17430,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 17373,
											"end": 17430,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17373,
											"end": 17430,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17373,
											"end": 17430,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17462,
											"end": 17466,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 17457,
											"end": 17460,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 17453,
											"end": 17467,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 17446,
											"end": 17451,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 17443,
											"end": 17468,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 17440,
											"end": 17491,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 17440,
											"end": 17491,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "610"
										},
										{
											"begin": 17440,
											"end": 17491,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 17471,
											"end": 17489,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "611"
										},
										{
											"begin": 17471,
											"end": 17489,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "404"
										},
										{
											"begin": 17471,
											"end": 17489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17471,
											"end": 17489,
											"name": "tag",
											"source": 6,
											"value": "611"
										},
										{
											"begin": 17471,
											"end": 17489,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17440,
											"end": 17491,
											"name": "tag",
											"source": 6,
											"value": "610"
										},
										{
											"begin": 17440,
											"end": 17491,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17520,
											"end": 17524,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 17513,
											"end": 17518,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 17509,
											"end": 17525,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 17500,
											"end": 17525,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17500,
											"end": 17525,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16458,
											"end": 17531,
											"name": "tag",
											"source": 6,
											"value": "596"
										},
										{
											"begin": 16458,
											"end": 17531,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16458,
											"end": 17531,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 16458,
											"end": 17531,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 16458,
											"end": 17531,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16458,
											"end": 17531,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16458,
											"end": 17531,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16458,
											"end": 17531,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17537,
											"end": 17822,
											"name": "tag",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 17537,
											"end": 17822,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17597,
											"end": 17602,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 17621,
											"end": 17644,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "613"
										},
										{
											"begin": 17639,
											"end": 17643,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 17621,
											"end": 17644,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "390"
										},
										{
											"begin": 17621,
											"end": 17644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17621,
											"end": 17644,
											"name": "tag",
											"source": 6,
											"value": "613"
										},
										{
											"begin": 17621,
											"end": 17644,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17613,
											"end": 17644,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 17613,
											"end": 17644,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17665,
											"end": 17692,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "614"
										},
										{
											"begin": 17683,
											"end": 17691,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 17665,
											"end": 17692,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "390"
										},
										{
											"begin": 17665,
											"end": 17692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17665,
											"end": 17692,
											"name": "tag",
											"source": 6,
											"value": "614"
										},
										{
											"begin": 17665,
											"end": 17692,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17653,
											"end": 17692,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 17653,
											"end": 17692,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17711,
											"end": 17815,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "615"
										},
										{
											"begin": 17748,
											"end": 17814,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17738,
											"end": 17746,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 17732,
											"end": 17736,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 17711,
											"end": 17815,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "425"
										},
										{
											"begin": 17711,
											"end": 17815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17711,
											"end": 17815,
											"name": "tag",
											"source": 6,
											"value": "615"
										},
										{
											"begin": 17711,
											"end": 17815,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17702,
											"end": 17815,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17702,
											"end": 17815,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17537,
											"end": 17822,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 17537,
											"end": 17822,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 17537,
											"end": 17822,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17537,
											"end": 17822,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17537,
											"end": 17822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17828,
											"end": 18000,
											"name": "tag",
											"source": 6,
											"value": "426"
										},
										{
											"begin": 17828,
											"end": 18000,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17968,
											"end": 17992,
											"name": "PUSH",
											"source": 6,
											"value": "616D6F756E7430206F7220616D6F756E7431203D203000000000000000000000"
										},
										{
											"begin": 17964,
											"end": 17965,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 17956,
											"end": 17962,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 17952,
											"end": 17966,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17945,
											"end": 17993,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 17828,
											"end": 18000,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17828,
											"end": 18000,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18006,
											"end": 18372,
											"name": "tag",
											"source": 6,
											"value": "427"
										},
										{
											"begin": 18006,
											"end": 18372,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18148,
											"end": 18151,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 18169,
											"end": 18236,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "618"
										},
										{
											"begin": 18233,
											"end": 18235,
											"name": "PUSH",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 18228,
											"end": 18231,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 18169,
											"end": 18236,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "406"
										},
										{
											"begin": 18169,
											"end": 18236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18169,
											"end": 18236,
											"name": "tag",
											"source": 6,
											"value": "618"
										},
										{
											"begin": 18169,
											"end": 18236,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18162,
											"end": 18236,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 18162,
											"end": 18236,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18245,
											"end": 18338,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "619"
										},
										{
											"begin": 18334,
											"end": 18337,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 18245,
											"end": 18338,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "426"
										},
										{
											"begin": 18245,
											"end": 18338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18245,
											"end": 18338,
											"name": "tag",
											"source": 6,
											"value": "619"
										},
										{
											"begin": 18245,
											"end": 18338,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18363,
											"end": 18365,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 18358,
											"end": 18361,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 18354,
											"end": 18366,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 18347,
											"end": 18366,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 18347,
											"end": 18366,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18006,
											"end": 18372,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 18006,
											"end": 18372,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 18006,
											"end": 18372,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18006,
											"end": 18372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18378,
											"end": 18797,
											"name": "tag",
											"source": 6,
											"value": "347"
										},
										{
											"begin": 18378,
											"end": 18797,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18544,
											"end": 18548,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 18582,
											"end": 18584,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 18571,
											"end": 18580,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 18567,
											"end": 18585,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 18559,
											"end": 18585,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 18559,
											"end": 18585,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18631,
											"end": 18640,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 18625,
											"end": 18629,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 18621,
											"end": 18641,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 18617,
											"end": 18618,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 18606,
											"end": 18615,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 18602,
											"end": 18619,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 18595,
											"end": 18642,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 18659,
											"end": 18790,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "621"
										},
										{
											"begin": 18785,
											"end": 18789,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 18659,
											"end": 18790,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "427"
										},
										{
											"begin": 18659,
											"end": 18790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18659,
											"end": 18790,
											"name": "tag",
											"source": 6,
											"value": "621"
										},
										{
											"begin": 18659,
											"end": 18790,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18651,
											"end": 18790,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 18651,
											"end": 18790,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18378,
											"end": 18797,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 18378,
											"end": 18797,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 18378,
											"end": 18797,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18378,
											"end": 18797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"W6/simpleAMM/src/simpleAMMV6ERC.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addLiquidity(uint256,uint256)": "9cd441da",
							"balanceOf(address)": "70a08231",
							"getERCPrice()": "fcc2ba08",
							"getPredictOutputToken0(uint256)": "9c1e5375",
							"getPredictOutputToken1(uint256)": "4d7d1598",
							"myShares()": "9e7a4757",
							"removeAllLiquidity(address)": "7a6a5e1b",
							"removeLiquidity(address,uint256)": "a201ccf6",
							"removeLiquidity(uint256)": "9c8f9f23",
							"reserve0()": "443cb4bc",
							"reserve1()": "5a76f25e",
							"sharesOf(address)": "f5eb42dc",
							"swap(uint256)": "94b918de",
							"swapTokenForToken1(uint256)": "46765bdc",
							"swapTokenForToken1_WithSlipLock(uint256,uint256,uint256)": "c9f4437e",
							"swap_WithSlipLock(uint256,uint256,uint256)": "62279b65",
							"token0()": "0dfe1681",
							"token1()": "d21220a7",
							"totalSupply()": "18160ddd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token1\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount1\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getERCPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"getPredictOutputToken0\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"getPredictOutputToken1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"myShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"removeAllLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_shares\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_shares\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserve0\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserve1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"sharesOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amountIn\",\"type\":\"uint256\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amountIn\",\"type\":\"uint256\"}],\"name\":\"swapTokenForToken1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_forwardOutput\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_slipLock\",\"type\":\"uint256\"}],\"name\":\"swapTokenForToken1_WithSlipLock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_forwardOutput\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_slipLock\",\"type\":\"uint256\"}],\"name\":\"swap_WithSlipLock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"W6/simpleAMM/src/simpleAMMV6ERC.sol\":\"AMM\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"W6/simpleAMM/src/simpleAMMV6ERC.sol\":{\"keccak256\":\"0x4005aa16a4e721fa71e4c1368db82d270dd19ca13b59e5b6f2fe2c1ff510c9a5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ceb907fc4e046cda982874a5d3234b9e1d6b33ca1e79c24a6a634193c0208a2\",\"dweb:/ipfs/QmU1yYH7BLED4rGMxeoqhGA8ZVDTZZVzHHUesu4dQgAJpB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1583,
								"contract": "W6/simpleAMM/src/simpleAMMV6ERC.sol:AMM",
								"label": "developer",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1591,
								"contract": "W6/simpleAMM/src/simpleAMMV6ERC.sol:AMM",
								"label": "reserve0",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 1593,
								"contract": "W6/simpleAMM/src/simpleAMMV6ERC.sol:AMM",
								"label": "reserve1",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 1595,
								"contract": "W6/simpleAMM/src/simpleAMMV6ERC.sol:AMM",
								"label": "totalSupply",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 1599,
								"contract": "W6/simpleAMM/src/simpleAMMV6ERC.sol:AMM",
								"label": "balanceOf",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							711
						],
						"ERC20": [
							586
						],
						"IERC20": [
							664
						],
						"IERC20Metadata": [
							689
						]
					},
					"id": 587,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 587,
							"sourceUnit": 665,
							"src": "130:22:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 587,
							"sourceUnit": 690,
							"src": "153:41:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 587,
							"sourceUnit": 712,
							"src": "195:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 6,
										"name": "Context",
										"nameLocations": [
											"1419:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 711,
										"src": "1419:7:0"
									},
									"id": 7,
									"nodeType": "InheritanceSpecifier",
									"src": "1419:7:0"
								},
								{
									"baseName": {
										"id": 8,
										"name": "IERC20",
										"nameLocations": [
											"1428:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 664,
										"src": "1428:6:0"
									},
									"id": 9,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:6:0"
								},
								{
									"baseName": {
										"id": 10,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1436:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 689,
										"src": "1436:14:0"
									},
									"id": 11,
									"nodeType": "InheritanceSpecifier",
									"src": "1436:14:0"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 5,
								"nodeType": "StructuredDocumentation",
								"src": "230:1170:0",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 586,
							"linearizedBaseContracts": [
								586,
								689,
								664,
								711
							],
							"name": "ERC20",
							"nameLocation": "1410:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 15,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1493:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 586,
									"src": "1457:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 14,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 12,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1465:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1457:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 13,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1476:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 21,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1565:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 586,
									"src": "1509:67:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 20,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 16,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1517:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1509:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 19,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 17,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1536:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1528:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 18,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1547:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 23,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1599:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 586,
									"src": "1583:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 22,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1583:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 25,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1633:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 586,
									"src": "1618:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 24,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1618:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 27,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1659:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 586,
									"src": "1644:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 26,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1644:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "2032:57:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 35,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "2042:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 36,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "2050:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2042:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "2042:13:0"
											},
											{
												"expression": {
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 39,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "2065:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 40,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "2075:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2065:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "2065:17:0"
											}
										]
									},
									"documentation": {
										"id": 28,
										"nodeType": "StructuredDocumentation",
										"src": "1673:298:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 44,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1988:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 29,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1988:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2023:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2009:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 31,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2009:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1987:44:0"
									},
									"returnParameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2032:0:0"
									},
									"scope": 586,
									"src": "1976:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										676
									],
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "2223:29:0",
										"statements": [
											{
												"expression": {
													"id": 51,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 25,
													"src": "2240:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 50,
												"id": 52,
												"nodeType": "Return",
												"src": "2233:12:0"
											}
										]
									},
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "2095:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2163:4:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 47,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2190:8:0"
									},
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2167:2:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "2208:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 48,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2208:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2207:15:0"
									},
									"scope": 586,
									"src": "2154:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										682
									],
									"body": {
										"id": 63,
										"nodeType": "Block",
										"src": "2436:31:0",
										"statements": [
											{
												"expression": {
													"id": 61,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "2453:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 60,
												"id": 62,
												"nodeType": "Return",
												"src": "2446:14:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "2258:102:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 64,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2374:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 57,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2403:8:0"
									},
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2380:2:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2421:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 58,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2421:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2420:15:0"
									},
									"scope": 586,
									"src": "2365:102:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										688
									],
									"body": {
										"id": 73,
										"nodeType": "Block",
										"src": "3156:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3173:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 70,
												"id": 72,
												"nodeType": "Return",
												"src": "3166:9:0"
											}
										]
									},
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2473:613:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 74,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3100:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 67,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3131:8:0"
									},
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3108:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "3149:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 68,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3149:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3148:7:0"
									},
									"scope": 586,
									"src": "3091:91:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										613
									],
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "3312:36:0",
										"statements": [
											{
												"expression": {
													"id": 81,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 23,
													"src": "3329:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 80,
												"id": 82,
												"nodeType": "Return",
												"src": "3322:19:0"
											}
										]
									},
									"documentation": {
										"id": 75,
										"nodeType": "StructuredDocumentation",
										"src": "3188:49:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3251:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 77,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3285:8:0"
									},
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3262:2:0"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "3303:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 78,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3303:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3302:9:0"
									},
									"scope": 586,
									"src": "3242:106:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										621
									],
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "3489:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 93,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "3506:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 95,
													"indexExpression": {
														"id": 94,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 87,
														"src": "3516:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3506:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 92,
												"id": 96,
												"nodeType": "Return",
												"src": "3499:25:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "3354:47:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3415:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 89,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3462:8:0"
									},
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3433:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3425:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3424:17:0"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3480:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 90,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3480:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3479:9:0"
									},
									"scope": 586,
									"src": "3406:125:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										631
									],
									"body": {
										"id": 122,
										"nodeType": "Block",
										"src": "3812:104:0",
										"statements": [
											{
												"assignments": [
													110
												],
												"declarations": [
													{
														"constant": false,
														"id": 110,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3830:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 122,
														"src": "3822:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 109,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3822:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 113,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 111,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 701,
														"src": "3838:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3838:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3822:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 115,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "3870:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 116,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "3877:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 117,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 103,
															"src": "3881:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 114,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 346,
														"src": "3860:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3860:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 119,
												"nodeType": "ExpressionStatement",
												"src": "3860:28:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3905:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 108,
												"id": 121,
												"nodeType": "Return",
												"src": "3898:11:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "3537:185:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 123,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3736:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 105,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3788:8:0"
									},
									"parameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3753:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "3745:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3745:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3765:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "3757:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 102,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3757:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3744:28:0"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "3806:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 106,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3806:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3805:6:0"
									},
									"scope": 586,
									"src": "3727:189:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										641
									],
									"body": {
										"id": 140,
										"nodeType": "Block",
										"src": "4072:51:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 134,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 21,
															"src": "4089:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 136,
														"indexExpression": {
															"id": 135,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 126,
															"src": "4101:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4089:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 138,
													"indexExpression": {
														"id": 137,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4108:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4089:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 133,
												"id": 139,
												"nodeType": "Return",
												"src": "4082:34:0"
											}
										]
									},
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "3922:47:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3983:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 130,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4045:8:0"
									},
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4001:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "3993:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3993:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4016:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "4008:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3992:32:0"
									},
									"returnParameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "4063:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4063:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4062:9:0"
									},
									"scope": 586,
									"src": "3974:149:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										651
									],
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "4520:108:0",
										"statements": [
											{
												"assignments": [
													153
												],
												"declarations": [
													{
														"constant": false,
														"id": 153,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4538:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 165,
														"src": "4530:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 152,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4530:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 156,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 154,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 701,
														"src": "4546:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4546:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4530:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 158,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "4577:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 159,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 144,
															"src": "4584:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 160,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 146,
															"src": "4593:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 157,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 520,
														"src": "4568:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4568:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "4568:32:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4617:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 151,
												"id": 164,
												"nodeType": "Return",
												"src": "4610:11:0"
											}
										]
									},
									"documentation": {
										"id": 142,
										"nodeType": "StructuredDocumentation",
										"src": "4129:297:0",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4440:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 148,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4496:8:0"
									},
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4456:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4448:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4448:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4473:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4465:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4465:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4447:33:0"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4514:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 149,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4514:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4513:6:0"
									},
									"scope": 586,
									"src": "4431:197:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										663
									],
									"body": {
										"id": 198,
										"nodeType": "Block",
										"src": "5323:153:0",
										"statements": [
											{
												"assignments": [
													180
												],
												"declarations": [
													{
														"constant": false,
														"id": 180,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5341:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 198,
														"src": "5333:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 179,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5333:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 183,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 181,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 701,
														"src": "5351:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5351:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5333:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 185,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5389:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 186,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "5395:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 187,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "5404:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 184,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 563,
														"src": "5373:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5373:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 189,
												"nodeType": "ExpressionStatement",
												"src": "5373:38:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 191,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5431:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 192,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5437:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 193,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "5441:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 190,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 346,
														"src": "5421:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5421:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 195,
												"nodeType": "ExpressionStatement",
												"src": "5421:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5465:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 178,
												"id": 197,
												"nodeType": "Return",
												"src": "5458:11:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "4634:551:0",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5199:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 175,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5299:8:0"
									},
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5229:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "5221:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5221:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5251:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "5243:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5243:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5271:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "5263:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5263:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5211:72:0"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "5317:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 176,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5317:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5316:6:0"
									},
									"scope": 586,
									"src": "5190:286:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 227,
										"nodeType": "Block",
										"src": "5965:140:0",
										"statements": [
											{
												"assignments": [
													210
												],
												"declarations": [
													{
														"constant": false,
														"id": 210,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "5983:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 227,
														"src": "5975:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 209,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5975:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 213,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 211,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 701,
														"src": "5991:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5991:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5975:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 215,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 210,
															"src": "6022:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 216,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 202,
															"src": "6029:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 218,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 210,
																		"src": "6048:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 219,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 202,
																		"src": "6055:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 217,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 141,
																	"src": "6038:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 220,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6038:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 221,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 204,
																"src": "6066:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6038:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 214,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 520,
														"src": "6013:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6013:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 224,
												"nodeType": "ExpressionStatement",
												"src": "6013:64:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6094:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 208,
												"id": 226,
												"nodeType": "Return",
												"src": "6087:11:0"
											}
										]
									},
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "5482:384:0",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "5880:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5906:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "5898:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "5923:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "5915:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5915:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:37:0"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "5959:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 206,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5959:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5958:6:0"
									},
									"scope": 586,
									"src": "5871:234:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 268,
										"nodeType": "Block",
										"src": "6691:328:0",
										"statements": [
											{
												"assignments": [
													239
												],
												"declarations": [
													{
														"constant": false,
														"id": 239,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "6709:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 268,
														"src": "6701:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 238,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6701:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 242,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 240,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 701,
														"src": "6717:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6717:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6701:28:0"
											},
											{
												"assignments": [
													244
												],
												"declarations": [
													{
														"constant": false,
														"id": 244,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "6747:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 268,
														"src": "6739:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 243,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6739:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 249,
												"initialValue": {
													"arguments": [
														{
															"id": 246,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "6776:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 247,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 231,
															"src": "6783:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 245,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "6766:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6766:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6739:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 251,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 244,
																"src": "6809:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 252,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 233,
																"src": "6829:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6809:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 254,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6846:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 250,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6801:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6801:85:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 256,
												"nodeType": "ExpressionStatement",
												"src": "6801:85:0"
											},
											{
												"id": 265,
												"nodeType": "UncheckedBlock",
												"src": "6896:95:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 258,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 239,
																	"src": "6929:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 259,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 231,
																	"src": "6936:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 262,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 260,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 244,
																		"src": "6945:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 261,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 233,
																		"src": "6964:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6945:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 257,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 520,
																"src": "6920:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6920:60:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 264,
														"nodeType": "ExpressionStatement",
														"src": "6920:60:0"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7008:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 237,
												"id": 267,
												"nodeType": "Return",
												"src": "7001:11:0"
											}
										]
									},
									"documentation": {
										"id": 229,
										"nodeType": "StructuredDocumentation",
										"src": "6111:476:0",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 269,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "6601:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6627:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "6619:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6619:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "6644:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "6636:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6636:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6618:42:0"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "6685:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 235,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6685:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6684:6:0"
									},
									"scope": 586,
									"src": "6592:427:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 345,
										"nodeType": "Block",
										"src": "7581:710:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 280,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "7599:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7615:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7607:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 281,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7607:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7607:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7599:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 286,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7619:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 279,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7591:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7591:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 288,
												"nodeType": "ExpressionStatement",
												"src": "7591:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 290,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 274,
																"src": "7677:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 293,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7691:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7683:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 291,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7683:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 294,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7683:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7677:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 296,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7695:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 289,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7669:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7669:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "7669:64:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 300,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "7765:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 301,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "7771:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 302,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "7775:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 299,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 574,
														"src": "7744:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7744:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 304,
												"nodeType": "ExpressionStatement",
												"src": "7744:38:0"
											},
											{
												"assignments": [
													306
												],
												"declarations": [
													{
														"constant": false,
														"id": 306,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "7801:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 345,
														"src": "7793:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 305,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7793:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 310,
												"initialValue": {
													"baseExpression": {
														"id": 307,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "7815:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 309,
													"indexExpression": {
														"id": 308,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 272,
														"src": "7825:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7815:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7793:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 314,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 312,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 306,
																"src": "7848:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 313,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 276,
																"src": "7863:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7848:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 315,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7871:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 311,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7840:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7840:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 317,
												"nodeType": "ExpressionStatement",
												"src": "7840:72:0"
											},
											{
												"id": 332,
												"nodeType": "UncheckedBlock",
												"src": "7922:273:0",
												"statements": [
													{
														"expression": {
															"id": 324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 318,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "7946:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 320,
																"indexExpression": {
																	"id": 319,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "7956:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "7946:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 323,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 321,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 306,
																	"src": "7964:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 322,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "7978:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7964:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7946:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 325,
														"nodeType": "ExpressionStatement",
														"src": "7946:38:0"
													},
													{
														"expression": {
															"id": 330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 326,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "8161:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 328,
																"indexExpression": {
																	"id": 327,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 274,
																	"src": "8171:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8161:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 329,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 276,
																"src": "8178:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8161:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 331,
														"nodeType": "ExpressionStatement",
														"src": "8161:23:0"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 334,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "8219:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 335,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "8225:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 336,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "8229:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 333,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 598,
														"src": "8210:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8210:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 338,
												"nodeType": "EmitStatement",
												"src": "8205:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 340,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "8267:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 341,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "8273:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 342,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "8277:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 339,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 585,
														"src": "8247:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8247:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 344,
												"nodeType": "ExpressionStatement",
												"src": "8247:37:0"
											}
										]
									},
									"documentation": {
										"id": 270,
										"nodeType": "StructuredDocumentation",
										"src": "7025:443:0",
										"text": " @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
									},
									"id": 346,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "7482:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7509:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "7501:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7501:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7531:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "7523:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7523:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7551:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "7543:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7543:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7491:72:0"
									},
									"returnParameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7581:0:0"
									},
									"scope": 586,
									"src": "7473:818:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 402,
										"nodeType": "Block",
										"src": "8632:470:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 355,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 349,
																"src": "8650:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 358,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8669:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8661:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 356,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8661:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 359,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8661:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8650:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8673:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 354,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8642:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8642:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 363,
												"nodeType": "ExpressionStatement",
												"src": "8642:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 367,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8747:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 366,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8739:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 365,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8739:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 368,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8739:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 369,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "8751:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 370,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "8760:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 364,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 574,
														"src": "8718:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8718:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 372,
												"nodeType": "ExpressionStatement",
												"src": "8718:49:0"
											},
											{
												"expression": {
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 373,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "8778:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 374,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "8794:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8778:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 376,
												"nodeType": "ExpressionStatement",
												"src": "8778:22:0"
											},
											{
												"id": 383,
												"nodeType": "UncheckedBlock",
												"src": "8810:175:0",
												"statements": [
													{
														"expression": {
															"id": 381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 377,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "8946:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 379,
																"indexExpression": {
																	"id": 378,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 349,
																	"src": "8956:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8946:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 380,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 351,
																"src": "8968:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8946:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 382,
														"nodeType": "ExpressionStatement",
														"src": "8946:28:0"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9016:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 386,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9008:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 385,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9008:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 388,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9008:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 389,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "9020:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 390,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "9029:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 384,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 598,
														"src": "8999:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8999:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 392,
												"nodeType": "EmitStatement",
												"src": "8994:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 396,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9075:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 395,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9067:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 394,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9067:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 397,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9067:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 398,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "9079:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 399,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "9088:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 393,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 585,
														"src": "9047:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9047:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 401,
												"nodeType": "ExpressionStatement",
												"src": "9047:48:0"
											}
										]
									},
									"documentation": {
										"id": 347,
										"nodeType": "StructuredDocumentation",
										"src": "8297:265:0",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8576:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8590:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "8582:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8582:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8607:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "8599:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8599:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8581:33:0"
									},
									"returnParameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8632:0:0"
									},
									"scope": 586,
									"src": "8567:535:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 474,
										"nodeType": "Block",
										"src": "9487:594:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 417,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 412,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 406,
																"src": "9505:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 415,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9524:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 414,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9516:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 413,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9516:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 416,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9516:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9505:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 418,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9528:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 411,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9497:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9497:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 420,
												"nodeType": "ExpressionStatement",
												"src": "9497:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 422,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "9596:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 425,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9613:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 424,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9605:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 423,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9605:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 426,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9605:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 427,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "9617:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 421,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 574,
														"src": "9575:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9575:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 429,
												"nodeType": "ExpressionStatement",
												"src": "9575:49:0"
											},
											{
												"assignments": [
													431
												],
												"declarations": [
													{
														"constant": false,
														"id": 431,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "9643:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 474,
														"src": "9635:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 430,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9635:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 435,
												"initialValue": {
													"baseExpression": {
														"id": 432,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "9660:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 434,
													"indexExpression": {
														"id": 433,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 406,
														"src": "9670:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9660:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9635:43:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 439,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 437,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 431,
																"src": "9696:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 438,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 408,
																"src": "9714:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9696:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 440,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9722:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 436,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9688:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9688:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 442,
												"nodeType": "ExpressionStatement",
												"src": "9688:71:0"
											},
											{
												"id": 455,
												"nodeType": "UncheckedBlock",
												"src": "9769:194:0",
												"statements": [
													{
														"expression": {
															"id": 449,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 443,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "9793:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 445,
																"indexExpression": {
																	"id": 444,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 406,
																	"src": "9803:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9793:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 448,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 446,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 431,
																	"src": "9814:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 447,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 408,
																	"src": "9831:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9814:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9793:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 450,
														"nodeType": "ExpressionStatement",
														"src": "9793:44:0"
													},
													{
														"expression": {
															"id": 453,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 451,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 23,
																"src": "9930:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"id": 452,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 408,
																"src": "9946:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9930:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 454,
														"nodeType": "ExpressionStatement",
														"src": "9930:22:0"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 457,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "9987:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 460,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10004:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 459,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9996:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 458,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9996:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 461,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9996:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 462,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "10008:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 456,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 598,
														"src": "9978:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9978:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 464,
												"nodeType": "EmitStatement",
												"src": "9973:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 466,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "10046:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 469,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10063:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 468,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10055:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 467,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10055:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 470,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10055:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 471,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "10067:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 465,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 585,
														"src": "10026:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10026:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 473,
												"nodeType": "ExpressionStatement",
												"src": "10026:48:0"
											}
										]
									},
									"documentation": {
										"id": 404,
										"nodeType": "StructuredDocumentation",
										"src": "9108:309:0",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 475,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9431:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9445:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "9437:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9437:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9462:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "9454:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 407,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9454:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9436:33:0"
									},
									"returnParameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9487:0:0"
									},
									"scope": 586,
									"src": "9422:659:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 519,
										"nodeType": "Block",
										"src": "10617:257:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 491,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 486,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 478,
																"src": "10635:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 489,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10652:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 488,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10644:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 487,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10644:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 490,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10644:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10635:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 492,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10656:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 485,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10627:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10627:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 494,
												"nodeType": "ExpressionStatement",
												"src": "10627:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 496,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 480,
																"src": "10713:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 499,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10732:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 498,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10724:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 497,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10724:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 500,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10724:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10713:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 502,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10736:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 495,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10705:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10705:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 504,
												"nodeType": "ExpressionStatement",
												"src": "10705:68:0"
											},
											{
												"expression": {
													"id": 511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 505,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 21,
																"src": "10784:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 508,
															"indexExpression": {
																"id": 506,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 478,
																"src": "10796:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10784:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 509,
														"indexExpression": {
															"id": 507,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "10803:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10784:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 510,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 482,
														"src": "10814:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10784:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 512,
												"nodeType": "ExpressionStatement",
												"src": "10784:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 514,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "10844:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 515,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "10851:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 516,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "10860:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 513,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 607,
														"src": "10835:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10835:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 518,
												"nodeType": "EmitStatement",
												"src": "10830:37:0"
											}
										]
									},
									"documentation": {
										"id": 476,
										"nodeType": "StructuredDocumentation",
										"src": "10087:412:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 520,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10513:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10539:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "10531:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 477,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10531:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10562:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "10554:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10554:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10587:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "10579:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10579:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10521:78:0"
									},
									"returnParameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10617:0:0"
									},
									"scope": 586,
									"src": "10504:370:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 562,
										"nodeType": "Block",
										"src": "11275:321:0",
										"statements": [
											{
												"assignments": [
													531
												],
												"declarations": [
													{
														"constant": false,
														"id": 531,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "11293:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 562,
														"src": "11285:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 530,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11285:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 536,
												"initialValue": {
													"arguments": [
														{
															"id": 533,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 523,
															"src": "11322:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 534,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 525,
															"src": "11329:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 532,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "11312:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11312:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11285:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 537,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 531,
														"src": "11351:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 540,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11376:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 539,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11376:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 538,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11371:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11371:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 542,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11385:3:0",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11371:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11351:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 561,
												"nodeType": "IfStatement",
												"src": "11347:243:0",
												"trueBody": {
													"id": 560,
													"nodeType": "Block",
													"src": "11390:200:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 547,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 545,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 531,
																			"src": "11412:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 546,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 527,
																			"src": "11432:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11412:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 548,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11440:31:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 544,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "11404:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 549,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11404:68:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 550,
															"nodeType": "ExpressionStatement",
															"src": "11404:68:0"
														},
														{
															"id": 559,
															"nodeType": "UncheckedBlock",
															"src": "11486:94:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 552,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 523,
																				"src": "11523:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 553,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 525,
																				"src": "11530:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 556,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 554,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 531,
																					"src": "11539:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 555,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 527,
																					"src": "11558:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11539:25:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 551,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 520,
																			"src": "11514:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 557,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11514:51:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 558,
																	"nodeType": "ExpressionStatement",
																	"src": "11514:51:0"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 521,
										"nodeType": "StructuredDocumentation",
										"src": "10880:270:0",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 563,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "11164:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11197:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "11189:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 522,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11189:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11220:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "11212:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 524,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11212:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11245:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "11237:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 526,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11237:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11179:78:0"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11275:0:0"
									},
									"scope": 586,
									"src": "11155:441:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 573,
										"nodeType": "Block",
										"src": "12299:2:0",
										"statements": []
									},
									"documentation": {
										"id": 564,
										"nodeType": "StructuredDocumentation",
										"src": "11602:573:0",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 574,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "12189:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12227:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "12219:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 565,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12219:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12249:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "12241:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 567,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12241:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12269:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "12261:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12261:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12209:72:0"
									},
									"returnParameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12299:0:0"
									},
									"scope": 586,
									"src": "12180:121:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 584,
										"nodeType": "Block",
										"src": "13007:2:0",
										"statements": []
									},
									"documentation": {
										"id": 575,
										"nodeType": "StructuredDocumentation",
										"src": "12307:577:0",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 585,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "12898:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12935:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "12927:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 576,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12927:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12957:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "12949:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 578,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12949:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12977:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "12969:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 580,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12969:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12917:72:0"
									},
									"returnParameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13007:0:0"
									},
									"scope": 586,
									"src": "12889:120:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 587,
							"src": "1401:11610:0",
							"usedErrors": []
						}
					],
					"src": "105:12907:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							664
						]
					},
					"id": 665,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 588,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 589,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 664,
							"linearizedBaseContracts": [
								664
							],
							"name": "IERC20",
							"nameLocation": "212:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 590,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 598,
									"name": "Transfer",
									"nameLocation": "394:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 592,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "403:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 591,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 594,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "425:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 593,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 596,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "445:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 595,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:1"
									},
									"src": "388:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 599,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 607,
									"name": "Approval",
									"nameLocation": "625:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 601,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "634:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 600,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 603,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "657:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 602,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 605,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "682:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:1"
									},
									"src": "619:78:1"
								},
								{
									"documentation": {
										"id": 608,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 613,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 664,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 614,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 621,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 615,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 618,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 664,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 622,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 631,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "1211:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "1223:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:1"
									},
									"returnParameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "1257:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 628,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:1"
									},
									"scope": 664,
									"src": "1193:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 632,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 641,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "1557:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 633,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "1572:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:1"
									},
									"returnParameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "1612:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 638,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:1"
									},
									"scope": 664,
									"src": "1538:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 642,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 651,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "2291:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 643,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 646,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "2308:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 645,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:1"
									},
									"returnParameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "2342:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 648,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:1"
									},
									"scope": 664,
									"src": "2274:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 652,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 663,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "2677:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 653,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "2699:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 655,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "2719:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:1"
									},
									"returnParameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "2758:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 660,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:1"
									},
									"scope": 664,
									"src": "2646:118:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 665,
							"src": "202:2564:1",
							"usedErrors": []
						}
					],
					"src": "106:2661:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							664
						],
						"IERC20Metadata": [
							689
						]
					},
					"id": 690,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 666,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 667,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 690,
							"sourceUnit": 665,
							"src": "135:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 669,
										"name": "IERC20",
										"nameLocations": [
											"305:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 664,
										"src": "305:6:2"
									},
									"id": 670,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:2"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 668,
								"nodeType": "StructuredDocumentation",
								"src": "160:116:2",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 689,
							"linearizedBaseContracts": [
								689,
								664
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 671,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 676,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:2"
									},
									"returnParameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "416:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 673,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:2"
									},
									"scope": 689,
									"src": "377:54:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 677,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:2",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 682,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "539:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 679,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:2"
									},
									"scope": 689,
									"src": "498:56:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 683,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:2",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 688,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:2"
									},
									"returnParameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "673:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 685,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:2"
									},
									"scope": 689,
									"src": "630:50:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 690,
							"src": "277:405:2",
							"usedErrors": []
						}
					],
					"src": "110:573:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							711
						]
					},
					"id": 712,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 691,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 692,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 711,
							"linearizedBaseContracts": [
								711
							],
							"name": "Context",
							"nameLocation": "626:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 700,
										"nodeType": "Block",
										"src": "702:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 697,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 696,
												"id": 699,
												"nodeType": "Return",
												"src": "712:17:3"
											}
										]
									},
									"id": 701,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:3"
									},
									"returnParameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "693:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:3"
									},
									"scope": 711,
									"src": "640:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 709,
										"nodeType": "Block",
										"src": "809:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 706,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:3",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 705,
												"id": 708,
												"nodeType": "Return",
												"src": "819:15:3"
											}
										]
									},
									"id": 710,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:3"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "793:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 703,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:3"
									},
									"scope": 711,
									"src": "742:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 712,
							"src": "608:235:3",
							"usedErrors": []
						}
					],
					"src": "86:758:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							1576
						]
					},
					"id": 1577,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 713,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 714,
								"nodeType": "StructuredDocumentation",
								"src": "128:73:4",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1576,
							"linearizedBaseContracts": [
								1576
							],
							"name": "Math",
							"nameLocation": "210:4:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 718,
									"members": [
										{
											"id": 715,
											"name": "Down",
											"nameLocation": "245:4:4",
											"nodeType": "EnumValue",
											"src": "245:4:4"
										},
										{
											"id": 716,
											"name": "Up",
											"nameLocation": "287:2:4",
											"nodeType": "EnumValue",
											"src": "287:2:4"
										},
										{
											"id": 717,
											"name": "Zero",
											"nameLocation": "318:4:4",
											"nodeType": "EnumValue",
											"src": "318:4:4"
										}
									],
									"name": "Rounding",
									"nameLocation": "226:8:4",
									"nodeType": "EnumDefinition",
									"src": "221:122:4"
								},
								{
									"body": {
										"id": 735,
										"nodeType": "Block",
										"src": "480:37:4",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 730,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 728,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 721,
															"src": "497:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 729,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 723,
															"src": "501:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "497:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 732,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 723,
														"src": "509:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "497:13:4",
													"trueExpression": {
														"id": 731,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 721,
														"src": "505:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 727,
												"id": 734,
												"nodeType": "Return",
												"src": "490:20:4"
											}
										]
									},
									"documentation": {
										"id": 719,
										"nodeType": "StructuredDocumentation",
										"src": "349:59:4",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 736,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "422:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "434:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "426:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 720,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "445:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "437:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "425:22:4"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "471:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "471:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:9:4"
									},
									"scope": 1576,
									"src": "413:104:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 753,
										"nodeType": "Block",
										"src": "655:37:4",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 748,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 746,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 739,
															"src": "672:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 747,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 741,
															"src": "676:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "672:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 750,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 741,
														"src": "684:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "672:13:4",
													"trueExpression": {
														"id": 749,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 739,
														"src": "680:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 745,
												"id": 752,
												"nodeType": "Return",
												"src": "665:20:4"
											}
										]
									},
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "523:60:4",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 754,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "597:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "601:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 738,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "612:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 740,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:4"
									},
									"returnParameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "646:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 743,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:9:4"
									},
									"scope": 1576,
									"src": "588:104:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 776,
										"nodeType": "Block",
										"src": "876:82:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 766,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 764,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "931:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 765,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 759,
																	"src": "935:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "931:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 767,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "930:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 773,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 768,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 757,
																		"src": "941:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 769,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 759,
																		"src": "945:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "941:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 771,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "940:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 772,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "950:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "940:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "930:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 763,
												"id": 775,
												"nodeType": "Return",
												"src": "923:28:4"
											}
										]
									},
									"documentation": {
										"id": 755,
										"nodeType": "StructuredDocumentation",
										"src": "698:102:4",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 777,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "814:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "830:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 777,
												"src": "822:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "841:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 777,
												"src": "833:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 758,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:22:4"
									},
									"returnParameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 777,
												"src": "867:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "866:9:4"
									},
									"scope": 1576,
									"src": "805:153:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 801,
										"nodeType": "Block",
										"src": "1228:123:4",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 789,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 787,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 780,
															"src": "1316:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 788,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1321:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1316:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 798,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 796,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 793,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 791,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 780,
																			"src": "1330:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 792,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1334:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1330:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 794,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1329:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 795,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 782,
																"src": "1339:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1329:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 797,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1343:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1329:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1316:28:4",
													"trueExpression": {
														"hexValue": "30",
														"id": 790,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1325:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 786,
												"id": 800,
												"nodeType": "Return",
												"src": "1309:35:4"
											}
										]
									},
									"documentation": {
										"id": 778,
										"nodeType": "StructuredDocumentation",
										"src": "964:188:4",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 802,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "1166:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 780,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1182:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "1174:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 779,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1174:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1193:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "1185:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 781,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1185:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1173:22:4"
									},
									"returnParameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "1219:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 784,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1219:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1218:9:4"
									},
									"scope": 1576,
									"src": "1157:194:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "1795:3797:4",
										"statements": [
											{
												"id": 922,
												"nodeType": "UncheckedBlock",
												"src": "1805:3781:4",
												"statements": [
													{
														"assignments": [
															815
														],
														"declarations": [
															{
																"constant": false,
																"id": 815,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "2134:5:4",
																"nodeType": "VariableDeclaration",
																"scope": 922,
																"src": "2126:13:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 814,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2126:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 816,
														"nodeType": "VariableDeclarationStatement",
														"src": "2126:13:4"
													},
													{
														"assignments": [
															818
														],
														"declarations": [
															{
																"constant": false,
																"id": 818,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "2206:5:4",
																"nodeType": "VariableDeclaration",
																"scope": 922,
																"src": "2198:13:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 817,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2198:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 819,
														"nodeType": "VariableDeclarationStatement",
														"src": "2198:13:4"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "2278:157:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2296:30:4",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2313:1:4"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2316:1:4"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2323:1:4",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2319:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2319:6:4"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "2306:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2306:20:4"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "2300:2:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2343:18:4",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2356:1:4"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2359:1:4"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "2352:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2352:9:4"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "2343:5:4"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2378:43:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2395:2:4"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2399:5:4"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2391:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2391:14:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2410:2:4"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2414:5:4"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "2407:2:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2407:13:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2387:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2387:34:4"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "2378:5:4"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 815,
																"isOffset": false,
																"isSlot": false,
																"src": "2343:5:4",
																"valueSize": 1
															},
															{
																"declaration": 815,
																"isOffset": false,
																"isSlot": false,
																"src": "2399:5:4",
																"valueSize": 1
															},
															{
																"declaration": 815,
																"isOffset": false,
																"isSlot": false,
																"src": "2414:5:4",
																"valueSize": 1
															},
															{
																"declaration": 818,
																"isOffset": false,
																"isSlot": false,
																"src": "2378:5:4",
																"valueSize": 1
															},
															{
																"declaration": 805,
																"isOffset": false,
																"isSlot": false,
																"src": "2313:1:4",
																"valueSize": 1
															},
															{
																"declaration": 805,
																"isOffset": false,
																"isSlot": false,
																"src": "2356:1:4",
																"valueSize": 1
															},
															{
																"declaration": 807,
																"isOffset": false,
																"isSlot": false,
																"src": "2316:1:4",
																"valueSize": 1
															},
															{
																"declaration": 807,
																"isOffset": false,
																"isSlot": false,
																"src": "2359:1:4",
																"valueSize": 1
															}
														],
														"id": 820,
														"nodeType": "InlineAssembly",
														"src": "2269:166:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 823,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 821,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 818,
																"src": "2516:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 822,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2525:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2516:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 829,
														"nodeType": "IfStatement",
														"src": "2512:75:4",
														"trueBody": {
															"id": 828,
															"nodeType": "Block",
															"src": "2528:59:4",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 826,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 824,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 815,
																			"src": "2553:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 825,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 809,
																			"src": "2561:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2553:19:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 813,
																	"id": 827,
																	"nodeType": "Return",
																	"src": "2546:26:4"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 833,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 831,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 809,
																		"src": "2697:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 832,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 818,
																		"src": "2711:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2697:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 830,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2689:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																	"typeString": "function (bool) pure"
																}
															},
															"id": 834,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2689:28:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 835,
														"nodeType": "ExpressionStatement",
														"src": "2689:28:4"
													},
													{
														"assignments": [
															837
														],
														"declarations": [
															{
																"constant": false,
																"id": 837,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "2981:9:4",
																"nodeType": "VariableDeclaration",
																"scope": 922,
																"src": "2973:17:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 836,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2973:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 838,
														"nodeType": "VariableDeclarationStatement",
														"src": "2973:17:4"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3013:291:4",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3082:38:4",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "3102:1:4"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3105:1:4"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3108:11:4"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "3095:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3095:25:4"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "3082:9:4"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3202:41:4",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "3215:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "3225:9:4"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "3236:5:4"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "3222:2:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3222:20:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3211:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3211:32:4"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "3202:5:4"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3260:30:4",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3273:5:4"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "3280:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3269:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3269:21:4"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3260:5:4"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 809,
																"isOffset": false,
																"isSlot": false,
																"src": "3108:11:4",
																"valueSize": 1
															},
															{
																"declaration": 815,
																"isOffset": false,
																"isSlot": false,
																"src": "3236:5:4",
																"valueSize": 1
															},
															{
																"declaration": 815,
																"isOffset": false,
																"isSlot": false,
																"src": "3260:5:4",
																"valueSize": 1
															},
															{
																"declaration": 815,
																"isOffset": false,
																"isSlot": false,
																"src": "3273:5:4",
																"valueSize": 1
															},
															{
																"declaration": 818,
																"isOffset": false,
																"isSlot": false,
																"src": "3202:5:4",
																"valueSize": 1
															},
															{
																"declaration": 818,
																"isOffset": false,
																"isSlot": false,
																"src": "3215:5:4",
																"valueSize": 1
															},
															{
																"declaration": 837,
																"isOffset": false,
																"isSlot": false,
																"src": "3082:9:4",
																"valueSize": 1
															},
															{
																"declaration": 837,
																"isOffset": false,
																"isSlot": false,
																"src": "3225:9:4",
																"valueSize": 1
															},
															{
																"declaration": 837,
																"isOffset": false,
																"isSlot": false,
																"src": "3280:9:4",
																"valueSize": 1
															},
															{
																"declaration": 805,
																"isOffset": false,
																"isSlot": false,
																"src": "3102:1:4",
																"valueSize": 1
															},
															{
																"declaration": 807,
																"isOffset": false,
																"isSlot": false,
																"src": "3105:1:4",
																"valueSize": 1
															}
														],
														"id": 839,
														"nodeType": "InlineAssembly",
														"src": "3004:300:4"
													},
													{
														"assignments": [
															841
														],
														"declarations": [
															{
																"constant": false,
																"id": 841,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "3619:4:4",
																"nodeType": "VariableDeclaration",
																"scope": 922,
																"src": "3611:12:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 840,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3611:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 849,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 848,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 842,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 809,
																"src": "3626:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 846,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 844,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "3641:12:4",
																			"subExpression": {
																				"id": 843,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 809,
																				"src": "3642:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 845,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3656:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3641:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 847,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3640:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3626:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3611:47:4"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3681:362:4",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3746:37:4",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3765:11:4"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "3778:4:4"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "3761:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3761:22:4"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "3746:11:4"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3850:25:4",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3863:5:4"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "3870:4:4"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "3859:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3859:16:4"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3850:5:4"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3990:39:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4010:1:4",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "4013:4:4"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "4006:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4006:12:4"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "4020:4:4"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "4002:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4002:23:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4027:1:4",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3998:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3998:31:4"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "3990:4:4"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 809,
																"isOffset": false,
																"isSlot": false,
																"src": "3746:11:4",
																"valueSize": 1
															},
															{
																"declaration": 809,
																"isOffset": false,
																"isSlot": false,
																"src": "3765:11:4",
																"valueSize": 1
															},
															{
																"declaration": 815,
																"isOffset": false,
																"isSlot": false,
																"src": "3850:5:4",
																"valueSize": 1
															},
															{
																"declaration": 815,
																"isOffset": false,
																"isSlot": false,
																"src": "3863:5:4",
																"valueSize": 1
															},
															{
																"declaration": 841,
																"isOffset": false,
																"isSlot": false,
																"src": "3778:4:4",
																"valueSize": 1
															},
															{
																"declaration": 841,
																"isOffset": false,
																"isSlot": false,
																"src": "3870:4:4",
																"valueSize": 1
															},
															{
																"declaration": 841,
																"isOffset": false,
																"isSlot": false,
																"src": "3990:4:4",
																"valueSize": 1
															},
															{
																"declaration": 841,
																"isOffset": false,
																"isSlot": false,
																"src": "4013:4:4",
																"valueSize": 1
															},
															{
																"declaration": 841,
																"isOffset": false,
																"isSlot": false,
																"src": "4020:4:4",
																"valueSize": 1
															}
														],
														"id": 850,
														"nodeType": "InlineAssembly",
														"src": "3672:371:4"
													},
													{
														"expression": {
															"id": 855,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 851,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 815,
																"src": "4109:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 854,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 852,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 818,
																	"src": "4118:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 853,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 841,
																	"src": "4126:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4118:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4109:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 856,
														"nodeType": "ExpressionStatement",
														"src": "4109:21:4"
													},
													{
														"assignments": [
															858
														],
														"declarations": [
															{
																"constant": false,
																"id": 858,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "4456:7:4",
																"nodeType": "VariableDeclaration",
																"scope": 922,
																"src": "4448:15:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 857,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4448:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 865,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 864,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 861,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 859,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4467:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 860,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 809,
																			"src": "4471:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4467:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 862,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4466:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 863,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4486:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "4466:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4448:39:4"
													},
													{
														"expression": {
															"id": 872,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 866,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 858,
																"src": "4704:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 871,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 867,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4715:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 870,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 868,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 809,
																		"src": "4719:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 869,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 858,
																		"src": "4733:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4719:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4715:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4704:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 873,
														"nodeType": "ExpressionStatement",
														"src": "4704:36:4"
													},
													{
														"expression": {
															"id": 880,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 874,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 858,
																"src": "4773:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 879,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 875,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4784:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 878,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 876,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 809,
																		"src": "4788:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 877,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 858,
																		"src": "4802:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4788:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4784:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4773:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 881,
														"nodeType": "ExpressionStatement",
														"src": "4773:36:4"
													},
													{
														"expression": {
															"id": 888,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 882,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 858,
																"src": "4843:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 887,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 883,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4854:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 886,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 884,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 809,
																		"src": "4858:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 885,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 858,
																		"src": "4872:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4858:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4854:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4843:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 889,
														"nodeType": "ExpressionStatement",
														"src": "4843:36:4"
													},
													{
														"expression": {
															"id": 896,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 890,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 858,
																"src": "4913:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 895,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 891,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4924:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 894,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 892,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 809,
																		"src": "4928:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 893,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 858,
																		"src": "4942:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4928:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4924:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4913:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 897,
														"nodeType": "ExpressionStatement",
														"src": "4913:36:4"
													},
													{
														"expression": {
															"id": 904,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 898,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 858,
																"src": "4983:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 903,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 899,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4994:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 902,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 900,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 809,
																		"src": "4998:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 901,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 858,
																		"src": "5012:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4998:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4994:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4983:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 905,
														"nodeType": "ExpressionStatement",
														"src": "4983:36:4"
													},
													{
														"expression": {
															"id": 912,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 906,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 858,
																"src": "5054:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 911,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 907,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5065:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 910,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 908,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 809,
																		"src": "5069:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 909,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 858,
																		"src": "5083:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5069:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5065:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5054:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 913,
														"nodeType": "ExpressionStatement",
														"src": "5054:36:4"
													},
													{
														"expression": {
															"id": 918,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 914,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 812,
																"src": "5524:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 917,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 915,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 815,
																	"src": "5533:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 916,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 858,
																	"src": "5541:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5533:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5524:24:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 919,
														"nodeType": "ExpressionStatement",
														"src": "5524:24:4"
													},
													{
														"expression": {
															"id": 920,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 812,
															"src": "5569:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 813,
														"id": 921,
														"nodeType": "Return",
														"src": "5562:13:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "1357:305:4",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "1676:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1700:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "1692:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 804,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1692:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1719:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "1711:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 806,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "1738:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "1730:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1730:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1682:73:4"
									},
									"returnParameters": {
										"id": 813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 812,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1787:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "1779:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 811,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1779:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1778:16:4"
									},
									"scope": 1576,
									"src": "1667:3925:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 967,
										"nodeType": "Block",
										"src": "5872:189:4",
										"statements": [
											{
												"assignments": [
													940
												],
												"declarations": [
													{
														"constant": false,
														"id": 940,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "5890:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 967,
														"src": "5882:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 939,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5882:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 946,
												"initialValue": {
													"arguments": [
														{
															"id": 942,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 927,
															"src": "5906:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 943,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 929,
															"src": "5909:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 944,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 931,
															"src": "5912:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 941,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															924,
															968
														],
														"referencedDeclaration": 924,
														"src": "5899:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5899:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5882:42:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$718",
															"typeString": "enum Math.Rounding"
														},
														"id": 950,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 947,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 934,
															"src": "5938:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$718",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 948,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 718,
																"src": "5950:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$718_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 949,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "5959:2:4",
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 716,
															"src": "5950:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$718",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "5938:23:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 957,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 952,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 927,
																	"src": "5972:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 953,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 929,
																	"src": "5975:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 954,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 931,
																	"src": "5978:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 951,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "5965:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 955,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5965:25:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 956,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5993:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5965:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5938:56:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 964,
												"nodeType": "IfStatement",
												"src": "5934:98:4",
												"trueBody": {
													"id": 963,
													"nodeType": "Block",
													"src": "5996:36:4",
													"statements": [
														{
															"expression": {
																"id": 961,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 959,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 940,
																	"src": "6010:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 960,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6020:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6010:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 962,
															"nodeType": "ExpressionStatement",
															"src": "6010:11:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 965,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 940,
													"src": "6048:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 938,
												"id": 966,
												"nodeType": "Return",
												"src": "6041:13:4"
											}
										]
									},
									"documentation": {
										"id": 925,
										"nodeType": "StructuredDocumentation",
										"src": "5598:121:4",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 968,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "5733:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "5757:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "5749:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5749:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 929,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "5776:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "5768:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 928,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5768:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 931,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "5795:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "5787:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 930,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5787:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "5825:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "5816:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$718",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 933,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 932,
														"name": "Rounding",
														"nameLocations": [
															"5816:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 718,
														"src": "5816:8:4"
													},
													"referencedDeclaration": 718,
													"src": "5816:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$718",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5739:100:4"
									},
									"returnParameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "5863:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 936,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5863:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5862:9:4"
									},
									"scope": 1576,
									"src": "5724:337:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1079,
										"nodeType": "Block",
										"src": "6337:1585:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 976,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 971,
														"src": "6351:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 977,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6356:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6351:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 982,
												"nodeType": "IfStatement",
												"src": "6347:45:4",
												"trueBody": {
													"id": 981,
													"nodeType": "Block",
													"src": "6359:33:4",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 979,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6380:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 975,
															"id": 980,
															"nodeType": "Return",
															"src": "6373:8:4"
														}
													]
												}
											},
											{
												"assignments": [
													984
												],
												"declarations": [
													{
														"constant": false,
														"id": 984,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7079:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 1079,
														"src": "7071:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 983,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7071:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 993,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 985,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7088:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 990,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 987,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 971,
																			"src": "7099:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 986,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1248,
																			1284
																		],
																		"referencedDeclaration": 1248,
																		"src": "7094:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 988,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7094:7:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 989,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7105:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7094:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 991,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7093:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7088:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7071:36:4"
											},
											{
												"id": 1078,
												"nodeType": "UncheckedBlock",
												"src": "7508:408:4",
												"statements": [
													{
														"expression": {
															"id": 1003,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 994,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 984,
																"src": "7532:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1002,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 999,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 995,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 984,
																				"src": "7542:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 998,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 996,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 971,
																					"src": "7551:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 997,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 984,
																					"src": "7555:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7551:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7542:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1000,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7541:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1001,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7566:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7541:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7532:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1004,
														"nodeType": "ExpressionStatement",
														"src": "7532:35:4"
													},
													{
														"expression": {
															"id": 1014,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1005,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 984,
																"src": "7581:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1013,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1010,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1006,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 984,
																				"src": "7591:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1009,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1007,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 971,
																					"src": "7600:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1008,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 984,
																					"src": "7604:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7600:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7591:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1011,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7590:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1012,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7615:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7590:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7581:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1015,
														"nodeType": "ExpressionStatement",
														"src": "7581:35:4"
													},
													{
														"expression": {
															"id": 1025,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1016,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 984,
																"src": "7630:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1024,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1021,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1017,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 984,
																				"src": "7640:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1020,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1018,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 971,
																					"src": "7649:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1019,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 984,
																					"src": "7653:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7649:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7640:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1022,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7639:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1023,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7664:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7639:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7630:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1026,
														"nodeType": "ExpressionStatement",
														"src": "7630:35:4"
													},
													{
														"expression": {
															"id": 1036,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1027,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 984,
																"src": "7679:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1035,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1032,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1028,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 984,
																				"src": "7689:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1031,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1029,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 971,
																					"src": "7698:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1030,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 984,
																					"src": "7702:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7698:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7689:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1033,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7688:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1034,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7713:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7688:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7679:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1037,
														"nodeType": "ExpressionStatement",
														"src": "7679:35:4"
													},
													{
														"expression": {
															"id": 1047,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1038,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 984,
																"src": "7728:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1046,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1043,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1039,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 984,
																				"src": "7738:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1042,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1040,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 971,
																					"src": "7747:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1041,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 984,
																					"src": "7751:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7747:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7738:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1044,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7737:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1045,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7762:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7737:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7728:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1048,
														"nodeType": "ExpressionStatement",
														"src": "7728:35:4"
													},
													{
														"expression": {
															"id": 1058,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1049,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 984,
																"src": "7777:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1057,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1054,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1050,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 984,
																				"src": "7787:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1053,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1051,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 971,
																					"src": "7796:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1052,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 984,
																					"src": "7800:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7796:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7787:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1055,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7786:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1056,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7811:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7786:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7777:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1059,
														"nodeType": "ExpressionStatement",
														"src": "7777:35:4"
													},
													{
														"expression": {
															"id": 1069,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1060,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 984,
																"src": "7826:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1068,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1065,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1061,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 984,
																				"src": "7836:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1064,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1062,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 971,
																					"src": "7845:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1063,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 984,
																					"src": "7849:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7845:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7836:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1066,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7835:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1067,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7860:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7835:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7826:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1070,
														"nodeType": "ExpressionStatement",
														"src": "7826:35:4"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1072,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 984,
																	"src": "7886:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1075,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1073,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 971,
																		"src": "7894:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1074,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 984,
																		"src": "7898:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7894:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1071,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 754,
																"src": "7882:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1076,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7882:23:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 975,
														"id": 1077,
														"nodeType": "Return",
														"src": "7875:30:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 969,
										"nodeType": "StructuredDocumentation",
										"src": "6067:208:4",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 1080,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "6289:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 971,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6302:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "6294:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 970,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6294:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6293:11:4"
									},
									"returnParameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "6328:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 973,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6328:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6327:9:4"
									},
									"scope": 1576,
									"src": "6280:1642:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1115,
										"nodeType": "Block",
										"src": "8098:161:4",
										"statements": [
											{
												"id": 1114,
												"nodeType": "UncheckedBlock",
												"src": "8108:145:4",
												"statements": [
													{
														"assignments": [
															1092
														],
														"declarations": [
															{
																"constant": false,
																"id": 1092,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "8140:6:4",
																"nodeType": "VariableDeclaration",
																"scope": 1114,
																"src": "8132:14:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1091,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8132:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1096,
														"initialValue": {
															"arguments": [
																{
																	"id": 1094,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1083,
																	"src": "8154:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1093,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1080,
																	1116
																],
																"referencedDeclaration": 1080,
																"src": "8149:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1095,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8149:7:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8132:24:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1112,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1097,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1092,
																"src": "8177:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1107,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$718",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1101,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1098,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1086,
																					"src": "8187:8:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$718",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1099,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 718,
																						"src": "8199:8:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$718_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1100,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "8208:2:4",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 716,
																					"src": "8199:11:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$718",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "8187:23:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1106,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1104,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1102,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1092,
																						"src": "8214:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1103,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1092,
																						"src": "8223:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "8214:15:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1105,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1083,
																					"src": "8232:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8214:19:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "8187:46:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1109,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8240:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1110,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "8187:54:4",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1108,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8236:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1111,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8186:56:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "8177:65:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1090,
														"id": 1113,
														"nodeType": "Return",
														"src": "8170:72:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1081,
										"nodeType": "StructuredDocumentation",
										"src": "7928:89:4",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 1116,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8031:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8044:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "8036:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1082,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8036:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8056:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "8047:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$718",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1085,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1084,
														"name": "Rounding",
														"nameLocations": [
															"8047:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 718,
														"src": "8047:8:4"
													},
													"referencedDeclaration": 718,
													"src": "8047:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$718",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8035:30:4"
									},
									"returnParameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "8089:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1088,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8088:9:4"
									},
									"scope": 1576,
									"src": "8022:237:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1247,
										"nodeType": "Block",
										"src": "8444:922:4",
										"statements": [
											{
												"assignments": [
													1125
												],
												"declarations": [
													{
														"constant": false,
														"id": 1125,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8462:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 1247,
														"src": "8454:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1124,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8454:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1127,
												"initialValue": {
													"hexValue": "30",
													"id": 1126,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8471:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8454:18:4"
											},
											{
												"id": 1244,
												"nodeType": "UncheckedBlock",
												"src": "8482:855:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1130,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1128,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1119,
																	"src": "8510:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1129,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8519:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "8510:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1131,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8525:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8510:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1142,
														"nodeType": "IfStatement",
														"src": "8506:99:4",
														"trueBody": {
															"id": 1141,
															"nodeType": "Block",
															"src": "8528:77:4",
															"statements": [
																{
																	"expression": {
																		"id": 1135,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1133,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1119,
																			"src": "8546:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1134,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8556:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8546:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1136,
																	"nodeType": "ExpressionStatement",
																	"src": "8546:13:4"
																},
																{
																	"expression": {
																		"id": 1139,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1137,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1125,
																			"src": "8577:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1138,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8587:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8577:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1140,
																	"nodeType": "ExpressionStatement",
																	"src": "8577:13:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1145,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1143,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1119,
																	"src": "8622:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1144,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8631:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "8622:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1146,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8636:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8622:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1157,
														"nodeType": "IfStatement",
														"src": "8618:96:4",
														"trueBody": {
															"id": 1156,
															"nodeType": "Block",
															"src": "8639:75:4",
															"statements": [
																{
																	"expression": {
																		"id": 1150,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1148,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1119,
																			"src": "8657:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1149,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8667:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8657:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1151,
																	"nodeType": "ExpressionStatement",
																	"src": "8657:12:4"
																},
																{
																	"expression": {
																		"id": 1154,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1152,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1125,
																			"src": "8687:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1153,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8697:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8687:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1155,
																	"nodeType": "ExpressionStatement",
																	"src": "8687:12:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1162,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1160,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1158,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1119,
																	"src": "8731:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1159,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8740:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "8731:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1161,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8745:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8731:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1172,
														"nodeType": "IfStatement",
														"src": "8727:96:4",
														"trueBody": {
															"id": 1171,
															"nodeType": "Block",
															"src": "8748:75:4",
															"statements": [
																{
																	"expression": {
																		"id": 1165,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1163,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1119,
																			"src": "8766:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1164,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8776:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "8766:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1166,
																	"nodeType": "ExpressionStatement",
																	"src": "8766:12:4"
																},
																{
																	"expression": {
																		"id": 1169,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1167,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1125,
																			"src": "8796:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1168,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8806:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "8796:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1170,
																	"nodeType": "ExpressionStatement",
																	"src": "8796:12:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1177,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1175,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1173,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1119,
																	"src": "8840:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1174,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8849:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "8840:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1176,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8854:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8840:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1187,
														"nodeType": "IfStatement",
														"src": "8836:96:4",
														"trueBody": {
															"id": 1186,
															"nodeType": "Block",
															"src": "8857:75:4",
															"statements": [
																{
																	"expression": {
																		"id": 1180,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1178,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1119,
																			"src": "8875:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1179,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8885:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "8875:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1181,
																	"nodeType": "ExpressionStatement",
																	"src": "8875:12:4"
																},
																{
																	"expression": {
																		"id": 1184,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1182,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1125,
																			"src": "8905:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1183,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8915:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "8905:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1185,
																	"nodeType": "ExpressionStatement",
																	"src": "8905:12:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1192,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1190,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1188,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1119,
																	"src": "8949:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1189,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8958:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "8949:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1191,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8962:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8949:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1202,
														"nodeType": "IfStatement",
														"src": "8945:93:4",
														"trueBody": {
															"id": 1201,
															"nodeType": "Block",
															"src": "8965:73:4",
															"statements": [
																{
																	"expression": {
																		"id": 1195,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1193,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1119,
																			"src": "8983:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1194,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8993:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "8983:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1196,
																	"nodeType": "ExpressionStatement",
																	"src": "8983:11:4"
																},
																{
																	"expression": {
																		"id": 1199,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1197,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1125,
																			"src": "9012:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1198,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9022:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9012:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1200,
																	"nodeType": "ExpressionStatement",
																	"src": "9012:11:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1207,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1205,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1203,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1119,
																	"src": "9055:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1204,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9064:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "9055:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1206,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9068:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9055:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1217,
														"nodeType": "IfStatement",
														"src": "9051:93:4",
														"trueBody": {
															"id": 1216,
															"nodeType": "Block",
															"src": "9071:73:4",
															"statements": [
																{
																	"expression": {
																		"id": 1210,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1208,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1119,
																			"src": "9089:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1209,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9099:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9089:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1211,
																	"nodeType": "ExpressionStatement",
																	"src": "9089:11:4"
																},
																{
																	"expression": {
																		"id": 1214,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1212,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1125,
																			"src": "9118:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1213,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9128:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9118:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1215,
																	"nodeType": "ExpressionStatement",
																	"src": "9118:11:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1220,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1218,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1119,
																	"src": "9161:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1219,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9170:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "9161:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1221,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9174:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9161:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1232,
														"nodeType": "IfStatement",
														"src": "9157:93:4",
														"trueBody": {
															"id": 1231,
															"nodeType": "Block",
															"src": "9177:73:4",
															"statements": [
																{
																	"expression": {
																		"id": 1225,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1223,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1119,
																			"src": "9195:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1224,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9205:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9195:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1226,
																	"nodeType": "ExpressionStatement",
																	"src": "9195:11:4"
																},
																{
																	"expression": {
																		"id": 1229,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1227,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1125,
																			"src": "9224:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1228,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9234:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9224:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1230,
																	"nodeType": "ExpressionStatement",
																	"src": "9224:11:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1237,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1235,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1233,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1119,
																	"src": "9267:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1234,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9276:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9267:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1236,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9280:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9267:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1243,
														"nodeType": "IfStatement",
														"src": "9263:64:4",
														"trueBody": {
															"id": 1242,
															"nodeType": "Block",
															"src": "9283:44:4",
															"statements": [
																{
																	"expression": {
																		"id": 1240,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1238,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1125,
																			"src": "9301:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1239,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9311:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9301:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1241,
																	"nodeType": "ExpressionStatement",
																	"src": "9301:11:4"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1245,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1125,
													"src": "9353:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1123,
												"id": 1246,
												"nodeType": "Return",
												"src": "9346:13:4"
											}
										]
									},
									"documentation": {
										"id": 1117,
										"nodeType": "StructuredDocumentation",
										"src": "8265:113:4",
										"text": " @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1248,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "8392:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8405:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "8397:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8397:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8396:15:4"
									},
									"returnParameters": {
										"id": 1123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "8435:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8435:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8434:9:4"
									},
									"scope": 1576,
									"src": "8383:983:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1283,
										"nodeType": "Block",
										"src": "9599:165:4",
										"statements": [
											{
												"id": 1282,
												"nodeType": "UncheckedBlock",
												"src": "9609:149:4",
												"statements": [
													{
														"assignments": [
															1260
														],
														"declarations": [
															{
																"constant": false,
																"id": 1260,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "9641:6:4",
																"nodeType": "VariableDeclaration",
																"scope": 1282,
																"src": "9633:14:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1259,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9633:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1264,
														"initialValue": {
															"arguments": [
																{
																	"id": 1262,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1251,
																	"src": "9655:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1261,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1248,
																	1284
																],
																"referencedDeclaration": 1248,
																"src": "9650:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9650:11:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "9633:28:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1280,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1265,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1260,
																"src": "9682:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1275,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$718",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1269,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1266,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1254,
																					"src": "9692:8:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$718",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1267,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 718,
																						"src": "9704:8:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$718_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1268,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "9713:2:4",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 716,
																					"src": "9704:11:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$718",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "9692:23:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1274,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1272,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1270,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9719:1:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 1271,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1260,
																						"src": "9724:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "9719:11:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1273,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1251,
																					"src": "9733:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9719:19:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "9692:46:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1277,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9745:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1278,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "9692:54:4",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1276,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9741:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1279,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9691:56:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "9682:65:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1258,
														"id": 1281,
														"nodeType": "Return",
														"src": "9675:72:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1249,
										"nodeType": "StructuredDocumentation",
										"src": "9372:142:4",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1284,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "9528:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1251,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9541:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "9533:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9533:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "9557:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "9548:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$718",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1253,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1252,
														"name": "Rounding",
														"nameLocations": [
															"9548:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 718,
														"src": "9548:8:4"
													},
													"referencedDeclaration": 718,
													"src": "9548:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$718",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9532:34:4"
									},
									"returnParameters": {
										"id": 1258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1257,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "9590:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1256,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9590:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9589:9:4"
									},
									"scope": 1576,
									"src": "9519:245:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1412,
										"nodeType": "Block",
										"src": "9951:828:4",
										"statements": [
											{
												"assignments": [
													1293
												],
												"declarations": [
													{
														"constant": false,
														"id": 1293,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9969:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 1412,
														"src": "9961:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1292,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9961:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1295,
												"initialValue": {
													"hexValue": "30",
													"id": 1294,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9978:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9961:18:4"
											},
											{
												"id": 1409,
												"nodeType": "UncheckedBlock",
												"src": "9989:761:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1296,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1287,
																"src": "10017:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 1299,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1297,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10026:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1298,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10030:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10026:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "10017:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1312,
														"nodeType": "IfStatement",
														"src": "10013:99:4",
														"trueBody": {
															"id": 1311,
															"nodeType": "Block",
															"src": "10034:78:4",
															"statements": [
																{
																	"expression": {
																		"id": 1305,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1301,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1287,
																			"src": "10052:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 1304,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1302,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10061:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 1303,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10065:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "10061:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "10052:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1306,
																	"nodeType": "ExpressionStatement",
																	"src": "10052:15:4"
																},
																{
																	"expression": {
																		"id": 1309,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1307,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1293,
																			"src": "10085:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1308,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10095:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10085:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1310,
																	"nodeType": "ExpressionStatement",
																	"src": "10085:12:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1313,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1287,
																"src": "10129:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 1316,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1314,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10138:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1315,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10142:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "10138:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "10129:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1329,
														"nodeType": "IfStatement",
														"src": "10125:99:4",
														"trueBody": {
															"id": 1328,
															"nodeType": "Block",
															"src": "10146:78:4",
															"statements": [
																{
																	"expression": {
																		"id": 1322,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1318,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1287,
																			"src": "10164:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 1321,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1319,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10173:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 1320,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10177:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "10173:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "10164:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1323,
																	"nodeType": "ExpressionStatement",
																	"src": "10164:15:4"
																},
																{
																	"expression": {
																		"id": 1326,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1324,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1293,
																			"src": "10197:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1325,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10207:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "10197:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1327,
																	"nodeType": "ExpressionStatement",
																	"src": "10197:12:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1330,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1287,
																"src": "10241:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 1333,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1331,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10250:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1332,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10254:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "10250:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "10241:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1346,
														"nodeType": "IfStatement",
														"src": "10237:99:4",
														"trueBody": {
															"id": 1345,
															"nodeType": "Block",
															"src": "10258:78:4",
															"statements": [
																{
																	"expression": {
																		"id": 1339,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1335,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1287,
																			"src": "10276:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 1338,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1336,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10285:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 1337,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10289:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "10285:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "10276:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1340,
																	"nodeType": "ExpressionStatement",
																	"src": "10276:15:4"
																},
																{
																	"expression": {
																		"id": 1343,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1341,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1293,
																			"src": "10309:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1342,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10319:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "10309:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1344,
																	"nodeType": "ExpressionStatement",
																	"src": "10309:12:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1347,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1287,
																"src": "10353:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 1350,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1348,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10362:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1349,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10366:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "10362:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "10353:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1363,
														"nodeType": "IfStatement",
														"src": "10349:96:4",
														"trueBody": {
															"id": 1362,
															"nodeType": "Block",
															"src": "10369:76:4",
															"statements": [
																{
																	"expression": {
																		"id": 1356,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1352,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1287,
																			"src": "10387:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 1355,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10396:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 1354,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10400:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "10396:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "10387:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1357,
																	"nodeType": "ExpressionStatement",
																	"src": "10387:14:4"
																},
																{
																	"expression": {
																		"id": 1360,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1358,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1293,
																			"src": "10419:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1359,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10429:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "10419:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1361,
																	"nodeType": "ExpressionStatement",
																	"src": "10419:11:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1368,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1364,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1287,
																"src": "10462:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 1367,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1365,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10471:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1366,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10475:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "10471:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "10462:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1380,
														"nodeType": "IfStatement",
														"src": "10458:96:4",
														"trueBody": {
															"id": 1379,
															"nodeType": "Block",
															"src": "10478:76:4",
															"statements": [
																{
																	"expression": {
																		"id": 1373,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1369,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1287,
																			"src": "10496:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 1372,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1370,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10505:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 1371,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10509:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "10505:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "10496:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1374,
																	"nodeType": "ExpressionStatement",
																	"src": "10496:14:4"
																},
																{
																	"expression": {
																		"id": 1377,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1375,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1293,
																			"src": "10528:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1376,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10538:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "10528:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1378,
																	"nodeType": "ExpressionStatement",
																	"src": "10528:11:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1381,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1287,
																"src": "10571:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 1384,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1382,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10580:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1383,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10584:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "10580:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "10571:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1397,
														"nodeType": "IfStatement",
														"src": "10567:96:4",
														"trueBody": {
															"id": 1396,
															"nodeType": "Block",
															"src": "10587:76:4",
															"statements": [
																{
																	"expression": {
																		"id": 1390,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1386,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1287,
																			"src": "10605:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 1389,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1387,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10614:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 1388,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10618:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "10614:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "10605:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1391,
																	"nodeType": "ExpressionStatement",
																	"src": "10605:14:4"
																},
																{
																	"expression": {
																		"id": 1394,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1392,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1293,
																			"src": "10637:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1393,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10647:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "10637:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1395,
																	"nodeType": "ExpressionStatement",
																	"src": "10637:11:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1398,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1287,
																"src": "10680:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 1401,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1399,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10689:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1400,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10693:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10689:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "10680:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1408,
														"nodeType": "IfStatement",
														"src": "10676:64:4",
														"trueBody": {
															"id": 1407,
															"nodeType": "Block",
															"src": "10696:44:4",
															"statements": [
																{
																	"expression": {
																		"id": 1405,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1403,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1293,
																			"src": "10714:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1404,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10724:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "10714:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1406,
																	"nodeType": "ExpressionStatement",
																	"src": "10714:11:4"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1410,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1293,
													"src": "10766:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1291,
												"id": 1411,
												"nodeType": "Return",
												"src": "10759:13:4"
											}
										]
									},
									"documentation": {
										"id": 1285,
										"nodeType": "StructuredDocumentation",
										"src": "9770:114:4",
										"text": " @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1413,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "9898:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1287,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9912:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "9904:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9904:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9903:15:4"
									},
									"returnParameters": {
										"id": 1291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "9942:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9942:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9941:9:4"
									},
									"scope": 1576,
									"src": "9889:890:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1448,
										"nodeType": "Block",
										"src": "11014:165:4",
										"statements": [
											{
												"id": 1447,
												"nodeType": "UncheckedBlock",
												"src": "11024:149:4",
												"statements": [
													{
														"assignments": [
															1425
														],
														"declarations": [
															{
																"constant": false,
																"id": 1425,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11056:6:4",
																"nodeType": "VariableDeclaration",
																"scope": 1447,
																"src": "11048:14:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1424,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11048:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1429,
														"initialValue": {
															"arguments": [
																{
																	"id": 1427,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1416,
																	"src": "11071:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1426,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1413,
																	1449
																],
																"referencedDeclaration": 1413,
																"src": "11065:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1428,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11065:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11048:29:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1445,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1430,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1425,
																"src": "11098:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1440,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$718",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1434,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1431,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1419,
																					"src": "11108:8:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$718",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1432,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 718,
																						"src": "11120:8:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$718_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1433,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "11129:2:4",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 716,
																					"src": "11120:11:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$718",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "11108:23:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1439,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1437,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 1435,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "11135:2:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 1436,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1425,
																						"src": "11139:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11135:10:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1438,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1416,
																					"src": "11148:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11135:18:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "11108:45:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1442,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11160:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1443,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "11108:53:4",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1441,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11156:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1444,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11107:55:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11098:64:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1423,
														"id": 1446,
														"nodeType": "Return",
														"src": "11091:71:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1414,
										"nodeType": "StructuredDocumentation",
										"src": "10785:143:4",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1449,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "10942:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1416,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10956:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1449,
												"src": "10948:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1415,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10948:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1419,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10972:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1449,
												"src": "10963:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$718",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1418,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1417,
														"name": "Rounding",
														"nameLocations": [
															"10963:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 718,
														"src": "10963:8:4"
													},
													"referencedDeclaration": 718,
													"src": "10963:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$718",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10947:34:4"
									},
									"returnParameters": {
										"id": 1423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1449,
												"src": "11005:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1421,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11005:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11004:9:4"
									},
									"scope": 1576,
									"src": "10933:246:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1535,
										"nodeType": "Block",
										"src": "11493:600:4",
										"statements": [
											{
												"assignments": [
													1458
												],
												"declarations": [
													{
														"constant": false,
														"id": 1458,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "11511:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 1535,
														"src": "11503:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1457,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11503:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1460,
												"initialValue": {
													"hexValue": "30",
													"id": 1459,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11520:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11503:18:4"
											},
											{
												"id": 1532,
												"nodeType": "UncheckedBlock",
												"src": "11531:533:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1465,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1463,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1461,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1452,
																	"src": "11559:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1462,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11568:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "11559:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1464,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11574:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11559:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1475,
														"nodeType": "IfStatement",
														"src": "11555:98:4",
														"trueBody": {
															"id": 1474,
															"nodeType": "Block",
															"src": "11577:76:4",
															"statements": [
																{
																	"expression": {
																		"id": 1468,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1466,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1452,
																			"src": "11595:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1467,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11605:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11595:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1469,
																	"nodeType": "ExpressionStatement",
																	"src": "11595:13:4"
																},
																{
																	"expression": {
																		"id": 1472,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1470,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1458,
																			"src": "11626:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1471,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11636:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11626:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1473,
																	"nodeType": "ExpressionStatement",
																	"src": "11626:12:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1480,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1478,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1476,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1452,
																	"src": "11670:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1477,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11679:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "11670:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1479,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11684:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11670:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1490,
														"nodeType": "IfStatement",
														"src": "11666:95:4",
														"trueBody": {
															"id": 1489,
															"nodeType": "Block",
															"src": "11687:74:4",
															"statements": [
																{
																	"expression": {
																		"id": 1483,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1481,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1452,
																			"src": "11705:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1482,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11715:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11705:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1484,
																	"nodeType": "ExpressionStatement",
																	"src": "11705:12:4"
																},
																{
																	"expression": {
																		"id": 1487,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1485,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1458,
																			"src": "11735:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1486,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11745:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11735:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1488,
																	"nodeType": "ExpressionStatement",
																	"src": "11735:11:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1495,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1493,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1491,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1452,
																	"src": "11778:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1492,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11787:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11778:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1494,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11792:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11778:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1505,
														"nodeType": "IfStatement",
														"src": "11774:95:4",
														"trueBody": {
															"id": 1504,
															"nodeType": "Block",
															"src": "11795:74:4",
															"statements": [
																{
																	"expression": {
																		"id": 1498,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1496,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1452,
																			"src": "11813:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1497,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11823:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11813:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1499,
																	"nodeType": "ExpressionStatement",
																	"src": "11813:12:4"
																},
																{
																	"expression": {
																		"id": 1502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1500,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1458,
																			"src": "11843:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1501,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11853:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11843:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1503,
																	"nodeType": "ExpressionStatement",
																	"src": "11843:11:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1510,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1508,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1506,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1452,
																	"src": "11886:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1507,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11895:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11886:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1509,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11900:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11886:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1520,
														"nodeType": "IfStatement",
														"src": "11882:95:4",
														"trueBody": {
															"id": 1519,
															"nodeType": "Block",
															"src": "11903:74:4",
															"statements": [
																{
																	"expression": {
																		"id": 1513,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1511,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1452,
																			"src": "11921:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1512,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11931:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11921:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1514,
																	"nodeType": "ExpressionStatement",
																	"src": "11921:12:4"
																},
																{
																	"expression": {
																		"id": 1517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1515,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1458,
																			"src": "11951:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1516,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11961:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11951:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1518,
																	"nodeType": "ExpressionStatement",
																	"src": "11951:11:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1525,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1523,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1521,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1452,
																	"src": "11994:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1522,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12003:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11994:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1524,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12007:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11994:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1531,
														"nodeType": "IfStatement",
														"src": "11990:64:4",
														"trueBody": {
															"id": 1530,
															"nodeType": "Block",
															"src": "12010:44:4",
															"statements": [
																{
																	"expression": {
																		"id": 1528,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1526,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1458,
																			"src": "12028:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1527,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12038:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "12028:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1529,
																	"nodeType": "ExpressionStatement",
																	"src": "12028:11:4"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1533,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1458,
													"src": "12080:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1456,
												"id": 1534,
												"nodeType": "Return",
												"src": "12073:13:4"
											}
										]
									},
									"documentation": {
										"id": 1450,
										"nodeType": "StructuredDocumentation",
										"src": "11185:240:4",
										"text": " @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 1536,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "11439:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1452,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11454:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1536,
												"src": "11446:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11446:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11445:15:4"
									},
									"returnParameters": {
										"id": 1456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1455,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1536,
												"src": "11484:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11484:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11483:9:4"
									},
									"scope": 1576,
									"src": "11430:663:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1574,
										"nodeType": "Block",
										"src": "12329:173:4",
										"statements": [
											{
												"id": 1573,
												"nodeType": "UncheckedBlock",
												"src": "12339:157:4",
												"statements": [
													{
														"assignments": [
															1548
														],
														"declarations": [
															{
																"constant": false,
																"id": 1548,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "12371:6:4",
																"nodeType": "VariableDeclaration",
																"scope": 1573,
																"src": "12363:14:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1547,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12363:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1552,
														"initialValue": {
															"arguments": [
																{
																	"id": 1550,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1539,
																	"src": "12387:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1549,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1536,
																	1575
																],
																"referencedDeclaration": 1536,
																"src": "12380:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1551,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12380:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12363:30:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1571,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1553,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1548,
																"src": "12414:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1566,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$718",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1557,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1554,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1542,
																					"src": "12424:8:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$718",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1555,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 718,
																						"src": "12436:8:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$718_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1556,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "12445:2:4",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 716,
																					"src": "12436:11:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$718",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "12424:23:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1565,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1563,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1558,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12451:1:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1561,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1559,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1548,
																									"src": "12457:6:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "*",
																								"rightExpression": {
																									"hexValue": "38",
																									"id": 1560,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "12466:1:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_8_by_1",
																										"typeString": "int_const 8"
																									},
																									"value": "8"
																								},
																								"src": "12457:10:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1562,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "12456:12:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12451:17:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1564,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1539,
																					"src": "12471:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12451:25:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12424:52:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1568,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12483:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1569,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12424:60:4",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1567,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12479:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1570,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12423:62:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "12414:71:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1546,
														"id": 1572,
														"nodeType": "Return",
														"src": "12407:78:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1537,
										"nodeType": "StructuredDocumentation",
										"src": "12099:143:4",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "12256:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1539,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12271:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "12263:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12263:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1542,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "12287:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "12278:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$718",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1541,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1540,
														"name": "Rounding",
														"nameLocations": [
															"12278:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 718,
														"src": "12278:8:4"
													},
													"referencedDeclaration": 718,
													"src": "12278:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$718",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12262:34:4"
									},
									"returnParameters": {
										"id": 1546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1545,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "12320:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1544,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12320:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12319:9:4"
									},
									"scope": 1576,
									"src": "12247:255:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1577,
							"src": "202:12302:4",
							"usedErrors": []
						}
					],
					"src": "103:12402:4"
				},
				"id": 4
			},
			"W6/simpleAMM/src/simpleAMMV6ERC.sol": {
				"ast": {
					"absolutePath": "W6/simpleAMM/src/simpleAMMV6ERC.sol",
					"exportedSymbols": {
						"AMM": [
							2551
						],
						"Context": [
							711
						],
						"ERC20": [
							586
						],
						"IERC20": [
							664
						],
						"IERC20Metadata": [
							689
						],
						"Math": [
							1576
						]
					},
					"id": 2552,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1578,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1579,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2552,
							"sourceUnit": 587,
							"src": "61:55:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1580,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2552,
							"sourceUnit": 665,
							"src": "118:56:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "@openzeppelin/contracts/utils/math/Math.sol",
							"id": 1581,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2552,
							"sourceUnit": 1577,
							"src": "176:53:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AMM",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2551,
							"linearizedBaseContracts": [
								2551
							],
							"name": "AMM",
							"nameLocation": "292:3:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1583,
									"mutability": "mutable",
									"name": "developer",
									"nameLocation": "311:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 2551,
									"src": "303:17:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1582,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "303:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "0dfe1681",
									"id": 1586,
									"mutability": "immutable",
									"name": "token0",
									"nameLocation": "353:6:5",
									"nodeType": "VariableDeclaration",
									"scope": 2551,
									"src": "329:30:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$664",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1585,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1584,
											"name": "IERC20",
											"nameLocations": [
												"329:6:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 664,
											"src": "329:6:5"
										},
										"referencedDeclaration": 664,
										"src": "329:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$664",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d21220a7",
									"id": 1589,
									"mutability": "immutable",
									"name": "token1",
									"nameLocation": "390:6:5",
									"nodeType": "VariableDeclaration",
									"scope": 2551,
									"src": "366:30:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$664",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1588,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1587,
											"name": "IERC20",
											"nameLocations": [
												"366:6:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 664,
											"src": "366:6:5"
										},
										"referencedDeclaration": 664,
										"src": "366:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$664",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "443cb4bc",
									"id": 1591,
									"mutability": "mutable",
									"name": "reserve0",
									"nameLocation": "420:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 2551,
									"src": "405:23:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1590,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "405:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5a76f25e",
									"id": 1593,
									"mutability": "mutable",
									"name": "reserve1",
									"nameLocation": "450:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 2551,
									"src": "435:23:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1592,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "435:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "18160ddd",
									"id": 1595,
									"mutability": "mutable",
									"name": "totalSupply",
									"nameLocation": "482:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 2551,
									"src": "467:26:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1594,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "467:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "70a08231",
									"id": 1599,
									"mutability": "mutable",
									"name": "balanceOf",
									"nameLocation": "535:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 2551,
									"src": "500:44:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1598,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1596,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "508:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "500:27:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1597,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "519:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1623,
										"nodeType": "Block",
										"src": "599:111:5",
										"statements": [
											{
												"expression": {
													"id": 1609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1606,
														"name": "developer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1583,
														"src": "610:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1607,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "622:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1608,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "626:6:5",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "622:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "610:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1610,
												"nodeType": "ExpressionStatement",
												"src": "610:22:5"
											},
											{
												"expression": {
													"id": 1615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1611,
														"name": "token0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1586,
														"src": "643:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$664",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1613,
																"name": "_token0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1601,
																"src": "659:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1612,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 664,
															"src": "652:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$664_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1614,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "652:15:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$664",
															"typeString": "contract IERC20"
														}
													},
													"src": "643:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$664",
														"typeString": "contract IERC20"
													}
												},
												"id": 1616,
												"nodeType": "ExpressionStatement",
												"src": "643:24:5"
											},
											{
												"expression": {
													"id": 1621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1617,
														"name": "token1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1589,
														"src": "678:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$664",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1619,
																"name": "_token1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1603,
																"src": "694:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1618,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 664,
															"src": "687:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$664_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1620,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "687:15:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$664",
															"typeString": "contract IERC20"
														}
													},
													"src": "678:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$664",
														"typeString": "contract IERC20"
													}
												},
												"id": 1622,
												"nodeType": "ExpressionStatement",
												"src": "678:24:5"
											}
										]
									},
									"id": 1624,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1601,
												"mutability": "mutable",
												"name": "_token0",
												"nameLocation": "573:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1624,
												"src": "565:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1600,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "565:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1603,
												"mutability": "mutable",
												"name": "_token1",
												"nameLocation": "590:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1624,
												"src": "582:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1602,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "582:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "564:34:5"
									},
									"returnParameters": {
										"id": 1605,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "599:0:5"
									},
									"scope": 2551,
									"src": "553:157:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1641,
										"nodeType": "Block",
										"src": "771:77:5",
										"statements": [
											{
												"expression": {
													"id": 1635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1631,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1599,
															"src": "782:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1633,
														"indexExpression": {
															"id": 1632,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1626,
															"src": "792:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "782:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1634,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1628,
														"src": "800:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "782:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1636,
												"nodeType": "ExpressionStatement",
												"src": "782:25:5"
											},
											{
												"expression": {
													"id": 1639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1637,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1595,
														"src": "818:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1638,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1628,
														"src": "833:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "818:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1640,
												"nodeType": "ExpressionStatement",
												"src": "818:22:5"
											}
										]
									},
									"id": 1642,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "727:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1626,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "741:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1642,
												"src": "733:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1625,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "733:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1628,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "754:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1642,
												"src": "746:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "746:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "732:30:5"
									},
									"returnParameters": {
										"id": 1630,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "771:0:5"
									},
									"scope": 2551,
									"src": "718:130:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1659,
										"nodeType": "Block",
										"src": "911:79:5",
										"statements": [
											{
												"expression": {
													"id": 1653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1649,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1599,
															"src": "922:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1651,
														"indexExpression": {
															"id": 1650,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1644,
															"src": "932:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "922:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1652,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1646,
														"src": "942:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "922:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1654,
												"nodeType": "ExpressionStatement",
												"src": "922:27:5"
											},
											{
												"expression": {
													"id": 1657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1655,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1595,
														"src": "960:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1656,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1646,
														"src": "975:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "960:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1658,
												"nodeType": "ExpressionStatement",
												"src": "960:22:5"
											}
										]
									},
									"id": 1660,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "865:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1644,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "879:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "871:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1643,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "871:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1646,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "894:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "886:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1645,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "886:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "870:32:5"
									},
									"returnParameters": {
										"id": 1648,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:0:5"
									},
									"scope": 2551,
									"src": "856:134:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1675,
										"nodeType": "Block",
										"src": "1061:70:5",
										"statements": [
											{
												"expression": {
													"id": 1669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1667,
														"name": "reserve0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1591,
														"src": "1072:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1668,
														"name": "_reserve0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1662,
														"src": "1083:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1072:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1670,
												"nodeType": "ExpressionStatement",
												"src": "1072:20:5"
											},
											{
												"expression": {
													"id": 1673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1671,
														"name": "reserve1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1593,
														"src": "1103:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1672,
														"name": "_reserve1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1664,
														"src": "1114:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1103:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1674,
												"nodeType": "ExpressionStatement",
												"src": "1103:20:5"
											}
										]
									},
									"id": 1676,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "1007:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1662,
												"mutability": "mutable",
												"name": "_reserve0",
												"nameLocation": "1023:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1676,
												"src": "1015:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1661,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1015:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1664,
												"mutability": "mutable",
												"name": "_reserve1",
												"nameLocation": "1042:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1676,
												"src": "1034:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1663,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1034:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1014:38:5"
									},
									"returnParameters": {
										"id": 1666,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1061:0:5"
									},
									"scope": 2551,
									"src": "998:133:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1759,
										"nodeType": "Block",
										"src": "1207:516:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1686,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1238:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1687,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1242:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1238:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1690,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1258:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_AMM_$2551",
																		"typeString": "contract AMM"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_AMM_$2551",
																		"typeString": "contract AMM"
																	}
																],
																"id": 1689,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1250:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1688,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1250:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1691,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1250:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1692,
															"name": "_amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1678,
															"src": "1265:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1683,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1589,
															"src": "1218:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$664",
																"typeString": "contract IERC20"
															}
														},
														"id": 1685,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1225:12:5",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 663,
														"src": "1218:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1218:57:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1694,
												"nodeType": "ExpressionStatement",
												"src": "1218:57:5"
											},
											{
												"assignments": [
													1696
												],
												"declarations": [
													{
														"constant": false,
														"id": 1696,
														"mutability": "mutable",
														"name": "amountInWithFee",
														"nameLocation": "1294:15:5",
														"nodeType": "VariableDeclaration",
														"scope": 1759,
														"src": "1286:23:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1695,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1286:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1703,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1699,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1697,
																	"name": "_amountIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1678,
																	"src": "1313:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "393937",
																	"id": 1698,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1325:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_997_by_1",
																		"typeString": "int_const 997"
																	},
																	"value": "997"
																},
																"src": "1313:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1700,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1312:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31303030",
														"id": 1701,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1332:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000_by_1",
															"typeString": "int_const 1000"
														},
														"value": "1000"
													},
													"src": "1312:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1286:50:5"
											},
											{
												"expression": {
													"id": 1714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1704,
														"name": "amountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1681,
														"src": "1347:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1713,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1707,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1705,
																		"name": "reserve1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1593,
																		"src": "1360:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1706,
																		"name": "amountInWithFee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1696,
																		"src": "1371:15:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1360:26:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1708,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1359:28:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1711,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1709,
																		"name": "reserve0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1591,
																		"src": "1391:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 1710,
																		"name": "amountInWithFee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1696,
																		"src": "1402:15:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1391:26:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1712,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1390:28:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1359:59:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1347:71:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1715,
												"nodeType": "ExpressionStatement",
												"src": "1347:71:5"
											},
											{
												"assignments": [
													1717
												],
												"declarations": [
													{
														"constant": false,
														"id": 1717,
														"mutability": "mutable",
														"name": "feeToDeveloper",
														"nameLocation": "1437:14:5",
														"nodeType": "VariableDeclaration",
														"scope": 1759,
														"src": "1429:22:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1716,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1429:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1728,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1722,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1718,
																"name": "_amountIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1678,
																"src": "1454:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"hexValue": "33",
																"id": 1719,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1466:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3_by_1",
																	"typeString": "int_const 3"
																},
																"value": "3"
															},
															"src": "1454:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 1721,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1595,
															"src": "1470:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1454:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1725,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1723,
																	"name": "reserve0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1591,
																	"src": "1485:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "32303030",
																	"id": 1724,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1496:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2000_by_1",
																		"typeString": "int_const 2000"
																	},
																	"value": "2000"
																},
																"src": "1485:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1726,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1484:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1454:47:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1429:72:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1730,
															"name": "developer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1583,
															"src": "1518:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1731,
															"name": "feeToDeveloper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1717,
															"src": "1529:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1729,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1642,
														"src": "1512:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1512:32:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1733,
												"nodeType": "ExpressionStatement",
												"src": "1512:32:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1737,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1607:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1738,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1611:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1607:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1739,
															"name": "amountOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1681,
															"src": "1619:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1734,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1586,
															"src": "1591:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$664",
																"typeString": "contract IERC20"
															}
														},
														"id": 1736,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1598:8:5",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 631,
														"src": "1591:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1591:38:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1741,
												"nodeType": "ExpressionStatement",
												"src": "1591:38:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1747,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1675:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AMM_$2551",
																				"typeString": "contract AMM"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AMM_$2551",
																				"typeString": "contract AMM"
																			}
																		],
																		"id": 1746,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1667:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1745,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1667:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1748,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1667:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1743,
																	"name": "token0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1586,
																	"src": "1650:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$664",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1744,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1657:9:5",
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 621,
																"src": "1650:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 1749,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1650:31:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1754,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1708:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AMM_$2551",
																				"typeString": "contract AMM"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AMM_$2551",
																				"typeString": "contract AMM"
																			}
																		],
																		"id": 1753,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1700:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1752,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1700:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1755,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1700:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1750,
																	"name": "token1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1589,
																	"src": "1683:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$664",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1751,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1690:9:5",
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 621,
																"src": "1683:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 1756,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1683:31:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1742,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1676,
														"src": "1642:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1642:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1758,
												"nodeType": "ExpressionStatement",
												"src": "1642:73:5"
											}
										]
									},
									"functionSelector": "94b918de",
									"id": 1760,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nameLocation": "1148:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1678,
												"mutability": "mutable",
												"name": "_amountIn",
												"nameLocation": "1161:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1760,
												"src": "1153:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1153:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1152:19:5"
									},
									"returnParameters": {
										"id": 1682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1681,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1196:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1760,
												"src": "1188:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1680,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1188:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1187:19:5"
									},
									"scope": 2551,
									"src": "1139:584:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1850,
										"nodeType": "Block",
										"src": "1813:579:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1770,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1844:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1771,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1848:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1844:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1774,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1864:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_AMM_$2551",
																		"typeString": "contract AMM"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_AMM_$2551",
																		"typeString": "contract AMM"
																	}
																],
																"id": 1773,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1856:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1772,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1856:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1775,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1856:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1776,
															"name": "_amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1762,
															"src": "1871:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1767,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1586,
															"src": "1824:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$664",
																"typeString": "contract IERC20"
															}
														},
														"id": 1769,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1831:12:5",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 663,
														"src": "1824:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1824:57:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1778,
												"nodeType": "ExpressionStatement",
												"src": "1824:57:5"
											},
											{
												"assignments": [
													1780
												],
												"declarations": [
													{
														"constant": false,
														"id": 1780,
														"mutability": "mutable",
														"name": "amountInWithFee",
														"nameLocation": "1900:15:5",
														"nodeType": "VariableDeclaration",
														"scope": 1850,
														"src": "1892:23:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1779,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1892:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1787,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1783,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1781,
																	"name": "_amountIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1762,
																	"src": "1919:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "393937",
																	"id": 1782,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1931:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_997_by_1",
																		"typeString": "int_const 997"
																	},
																	"value": "997"
																},
																"src": "1919:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1784,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1918:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31303030",
														"id": 1785,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1938:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000_by_1",
															"typeString": "int_const 1000"
														},
														"value": "1000"
													},
													"src": "1918:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1892:50:5"
											},
											{
												"expression": {
													"id": 1798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1788,
														"name": "amountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1765,
														"src": "1953:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1797,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1791,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1789,
																		"name": "reserve1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1593,
																		"src": "1966:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1790,
																		"name": "amountInWithFee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1780,
																		"src": "1977:15:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1966:26:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1792,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1965:28:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1795,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1793,
																		"name": "reserve0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1591,
																		"src": "1997:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 1794,
																		"name": "amountInWithFee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1780,
																		"src": "2008:15:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1997:26:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1796,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1996:28:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1965:59:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1953:71:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1799,
												"nodeType": "ExpressionStatement",
												"src": "1953:71:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1803,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1801,
																"name": "amountOut",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1765,
																"src": "2043:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1802,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2055:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2043:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e74206f757470757420616d6f756e74",
															"id": 1804,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2058:28:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90",
																"typeString": "literal_string \"Insufficient output amount\""
															},
															"value": "Insufficient output amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90",
																"typeString": "literal_string \"Insufficient output amount\""
															}
														],
														"id": 1800,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2035:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2035:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1806,
												"nodeType": "ExpressionStatement",
												"src": "2035:52:5"
											},
											{
												"assignments": [
													1808
												],
												"declarations": [
													{
														"constant": false,
														"id": 1808,
														"mutability": "mutable",
														"name": "feeToDeveloper",
														"nameLocation": "2106:14:5",
														"nodeType": "VariableDeclaration",
														"scope": 1850,
														"src": "2098:22:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1807,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2098:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1819,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1813,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1811,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1809,
																"name": "_amountIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1762,
																"src": "2123:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"hexValue": "33",
																"id": 1810,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2135:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3_by_1",
																	"typeString": "int_const 3"
																},
																"value": "3"
															},
															"src": "2123:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 1812,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1595,
															"src": "2139:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2123:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1816,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1814,
																	"name": "reserve0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1591,
																	"src": "2154:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "32303030",
																	"id": 1815,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2165:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2000_by_1",
																		"typeString": "int_const 2000"
																	},
																	"value": "2000"
																},
																"src": "2154:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1817,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2153:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2123:47:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2098:72:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1821,
															"name": "developer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1583,
															"src": "2187:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1822,
															"name": "feeToDeveloper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1808,
															"src": "2198:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1820,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1642,
														"src": "2181:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2181:32:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1824,
												"nodeType": "ExpressionStatement",
												"src": "2181:32:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1828,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2276:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1829,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2280:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2276:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1830,
															"name": "amountOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1765,
															"src": "2288:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1825,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1589,
															"src": "2260:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$664",
																"typeString": "contract IERC20"
															}
														},
														"id": 1827,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2267:8:5",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 631,
														"src": "2260:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1831,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2260:38:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1832,
												"nodeType": "ExpressionStatement",
												"src": "2260:38:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1838,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2344:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AMM_$2551",
																				"typeString": "contract AMM"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AMM_$2551",
																				"typeString": "contract AMM"
																			}
																		],
																		"id": 1837,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2336:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1836,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2336:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1839,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2336:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1834,
																	"name": "token0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1586,
																	"src": "2319:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$664",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1835,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2326:9:5",
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 621,
																"src": "2319:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 1840,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2319:31:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1845,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2377:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AMM_$2551",
																				"typeString": "contract AMM"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AMM_$2551",
																				"typeString": "contract AMM"
																			}
																		],
																		"id": 1844,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2369:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1843,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2369:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1846,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2369:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1841,
																	"name": "token1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1589,
																	"src": "2352:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$664",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1842,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2359:9:5",
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 621,
																"src": "2352:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 1847,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2352:31:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1833,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1676,
														"src": "2311:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2311:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1849,
												"nodeType": "ExpressionStatement",
												"src": "2311:73:5"
											}
										]
									},
									"functionSelector": "46765bdc",
									"id": 1851,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokenForToken1",
									"nameLocation": "1740:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1762,
												"mutability": "mutable",
												"name": "_amountIn",
												"nameLocation": "1767:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1851,
												"src": "1759:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1759:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1758:19:5"
									},
									"returnParameters": {
										"id": 1766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1765,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1802:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1851,
												"src": "1794:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1764,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1794:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1793:19:5"
									},
									"scope": 2551,
									"src": "1731:661:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1960,
										"nodeType": "Block",
										"src": "2558:666:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1865,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2589:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1866,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2593:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2589:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1869,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2609:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_AMM_$2551",
																		"typeString": "contract AMM"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_AMM_$2551",
																		"typeString": "contract AMM"
																	}
																],
																"id": 1868,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2601:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1867,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2601:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1870,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2601:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1871,
															"name": "_amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1853,
															"src": "2616:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1862,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1589,
															"src": "2569:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$664",
																"typeString": "contract IERC20"
															}
														},
														"id": 1864,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2576:12:5",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 663,
														"src": "2569:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2569:57:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1873,
												"nodeType": "ExpressionStatement",
												"src": "2569:57:5"
											},
											{
												"assignments": [
													1875
												],
												"declarations": [
													{
														"constant": false,
														"id": 1875,
														"mutability": "mutable",
														"name": "amountInWithFee",
														"nameLocation": "2645:15:5",
														"nodeType": "VariableDeclaration",
														"scope": 1960,
														"src": "2637:23:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1874,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2637:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1882,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1878,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1876,
																	"name": "_amountIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1853,
																	"src": "2664:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "393937",
																	"id": 1877,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2676:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_997_by_1",
																		"typeString": "int_const 997"
																	},
																	"value": "997"
																},
																"src": "2664:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1879,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2663:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31303030",
														"id": 1880,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2683:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000_by_1",
															"typeString": "int_const 1000"
														},
														"value": "1000"
													},
													"src": "2663:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2637:50:5"
											},
											{
												"expression": {
													"id": 1893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1883,
														"name": "amountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1860,
														"src": "2698:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1892,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1886,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1884,
																		"name": "reserve1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1593,
																		"src": "2711:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1885,
																		"name": "amountInWithFee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1875,
																		"src": "2722:15:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2711:26:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1887,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2710:28:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1890,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1888,
																		"name": "reserve0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1591,
																		"src": "2742:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 1889,
																		"name": "amountInWithFee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1875,
																		"src": "2753:15:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2742:26:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1891,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2741:28:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2710:59:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2698:71:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1894,
												"nodeType": "ExpressionStatement",
												"src": "2698:71:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1898,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1896,
																"name": "amountOut",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1860,
																"src": "2788:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1897,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2800:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2788:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e74206f757470757420616d6f756e74",
															"id": 1899,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2803:28:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90",
																"typeString": "literal_string \"Insufficient output amount\""
															},
															"value": "Insufficient output amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90",
																"typeString": "literal_string \"Insufficient output amount\""
															}
														],
														"id": 1895,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2780:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2780:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1901,
												"nodeType": "ExpressionStatement",
												"src": "2780:52:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1913,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1903,
																"name": "amountOut",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1860,
																"src": "2851:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1911,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1909,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1904,
																				"name": "_forwardOutput",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1855,
																				"src": "2865:14:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1907,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31303030",
																							"id": 1905,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "2883:4:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1000_by_1",
																								"typeString": "int_const 1000"
																							},
																							"value": "1000"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"id": 1906,
																							"name": "_slipLock",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1857,
																							"src": "2890:9:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "2883:16:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1908,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "2882:18:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2865:35:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"hexValue": "31303030",
																			"id": 1910,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2903:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			},
																			"value": "1000"
																		},
																		"src": "2865:42:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1912,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2864:44:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2851:57:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536c69704c6f636b",
															"id": 1914,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2910:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_146985345a2b79e4aa6c7e4844006bcfe53a437d612514d7098dbcbad9d449dc",
																"typeString": "literal_string \"SlipLock\""
															},
															"value": "SlipLock"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_146985345a2b79e4aa6c7e4844006bcfe53a437d612514d7098dbcbad9d449dc",
																"typeString": "literal_string \"SlipLock\""
															}
														],
														"id": 1902,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2843:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2843:78:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1916,
												"nodeType": "ExpressionStatement",
												"src": "2843:78:5"
											},
											{
												"assignments": [
													1918
												],
												"declarations": [
													{
														"constant": false,
														"id": 1918,
														"mutability": "mutable",
														"name": "feeToDeveloper",
														"nameLocation": "2940:14:5",
														"nodeType": "VariableDeclaration",
														"scope": 1960,
														"src": "2932:22:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1917,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2932:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1929,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1923,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1921,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1919,
																"name": "_amountIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1853,
																"src": "2957:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"hexValue": "33",
																"id": 1920,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2969:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3_by_1",
																	"typeString": "int_const 3"
																},
																"value": "3"
															},
															"src": "2957:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 1922,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1595,
															"src": "2973:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2957:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1926,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1924,
																	"name": "reserve0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1591,
																	"src": "2988:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "32303030",
																	"id": 1925,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2999:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2000_by_1",
																		"typeString": "int_const 2000"
																	},
																	"value": "2000"
																},
																"src": "2988:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1927,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2987:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2957:47:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2932:72:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1931,
															"name": "developer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1583,
															"src": "3021:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1932,
															"name": "feeToDeveloper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1918,
															"src": "3032:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1930,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1642,
														"src": "3015:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3015:32:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1934,
												"nodeType": "ExpressionStatement",
												"src": "3015:32:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1938,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3110:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1939,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3114:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3110:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1940,
															"name": "amountOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1860,
															"src": "3122:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1935,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1586,
															"src": "3094:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$664",
																"typeString": "contract IERC20"
															}
														},
														"id": 1937,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3101:8:5",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 631,
														"src": "3094:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3094:38:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1942,
												"nodeType": "ExpressionStatement",
												"src": "3094:38:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1948,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3176:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AMM_$2551",
																				"typeString": "contract AMM"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AMM_$2551",
																				"typeString": "contract AMM"
																			}
																		],
																		"id": 1947,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3168:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1946,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3168:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1949,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3168:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1944,
																	"name": "token0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1586,
																	"src": "3151:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$664",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1945,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3158:9:5",
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 621,
																"src": "3151:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 1950,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3151:31:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1955,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3209:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AMM_$2551",
																				"typeString": "contract AMM"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AMM_$2551",
																				"typeString": "contract AMM"
																			}
																		],
																		"id": 1954,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3201:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1953,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3201:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1956,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3201:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1951,
																	"name": "token1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1589,
																	"src": "3184:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$664",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1952,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3191:9:5",
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 621,
																"src": "3184:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 1957,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3184:31:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1943,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1676,
														"src": "3143:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3143:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1959,
												"nodeType": "ExpressionStatement",
												"src": "3143:73:5"
											}
										]
									},
									"functionSelector": "62279b65",
									"id": 1961,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swap_WithSlipLock",
									"nameLocation": "2409:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1853,
												"mutability": "mutable",
												"name": "_amountIn",
												"nameLocation": "2445:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1961,
												"src": "2437:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1852,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2437:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1855,
												"mutability": "mutable",
												"name": "_forwardOutput",
												"nameLocation": "2473:14:5",
												"nodeType": "VariableDeclaration",
												"scope": 1961,
												"src": "2465:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1854,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1857,
												"mutability": "mutable",
												"name": "_slipLock",
												"nameLocation": "2506:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1961,
												"src": "2498:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1856,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2498:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2426:96:5"
									},
									"returnParameters": {
										"id": 1861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1860,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2547:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1961,
												"src": "2539:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1859,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2539:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2538:19:5"
									},
									"scope": 2551,
									"src": "2400:824:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2070,
										"nodeType": "Block",
										"src": "3402:670:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1975,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3433:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1976,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3437:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3433:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1979,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3453:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_AMM_$2551",
																		"typeString": "contract AMM"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_AMM_$2551",
																		"typeString": "contract AMM"
																	}
																],
																"id": 1978,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3445:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1977,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3445:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1980,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3445:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1981,
															"name": "_amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1963,
															"src": "3460:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1972,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1586,
															"src": "3413:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$664",
																"typeString": "contract IERC20"
															}
														},
														"id": 1974,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3420:12:5",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 663,
														"src": "3413:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1982,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3413:57:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1983,
												"nodeType": "ExpressionStatement",
												"src": "3413:57:5"
											},
											{
												"assignments": [
													1985
												],
												"declarations": [
													{
														"constant": false,
														"id": 1985,
														"mutability": "mutable",
														"name": "amountInWithFee",
														"nameLocation": "3489:15:5",
														"nodeType": "VariableDeclaration",
														"scope": 2070,
														"src": "3481:23:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1984,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3481:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1992,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1988,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1986,
																	"name": "_amountIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1963,
																	"src": "3508:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "393937",
																	"id": 1987,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3520:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_997_by_1",
																		"typeString": "int_const 997"
																	},
																	"value": "997"
																},
																"src": "3508:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1989,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3507:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31303030",
														"id": 1990,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3527:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000_by_1",
															"typeString": "int_const 1000"
														},
														"value": "1000"
													},
													"src": "3507:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3481:50:5"
											},
											{
												"expression": {
													"id": 2003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1993,
														"name": "amountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1970,
														"src": "3544:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2002,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1996,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1994,
																		"name": "reserve1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1593,
																		"src": "3557:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1995,
																		"name": "amountInWithFee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1985,
																		"src": "3568:15:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3557:26:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1997,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3556:28:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2000,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1998,
																		"name": "reserve0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1591,
																		"src": "3588:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 1999,
																		"name": "amountInWithFee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1985,
																		"src": "3599:15:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3588:26:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2001,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3587:28:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3556:59:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3544:71:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2004,
												"nodeType": "ExpressionStatement",
												"src": "3544:71:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2008,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2006,
																"name": "amountOut",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1970,
																"src": "3634:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2007,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3646:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3634:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e74206f757470757420616d6f756e74",
															"id": 2009,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3649:28:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90",
																"typeString": "literal_string \"Insufficient output amount\""
															},
															"value": "Insufficient output amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90",
																"typeString": "literal_string \"Insufficient output amount\""
															}
														],
														"id": 2005,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3626:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3626:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2011,
												"nodeType": "ExpressionStatement",
												"src": "3626:52:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2023,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2013,
																"name": "amountOut",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1970,
																"src": "3697:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2021,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2019,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2014,
																				"name": "_forwardOutput",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1965,
																				"src": "3711:14:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 2017,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31303030",
																							"id": 2015,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3729:4:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1000_by_1",
																								"typeString": "int_const 1000"
																							},
																							"value": "1000"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"id": 2016,
																							"name": "_slipLock",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1967,
																							"src": "3736:9:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "3729:16:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 2018,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3728:18:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3711:35:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"hexValue": "31303030",
																			"id": 2020,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3749:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			},
																			"value": "1000"
																		},
																		"src": "3711:42:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2022,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3710:44:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3697:57:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536c69704c6f636b",
															"id": 2024,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3756:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_146985345a2b79e4aa6c7e4844006bcfe53a437d612514d7098dbcbad9d449dc",
																"typeString": "literal_string \"SlipLock\""
															},
															"value": "SlipLock"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_146985345a2b79e4aa6c7e4844006bcfe53a437d612514d7098dbcbad9d449dc",
																"typeString": "literal_string \"SlipLock\""
															}
														],
														"id": 2012,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3689:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2025,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3689:78:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2026,
												"nodeType": "ExpressionStatement",
												"src": "3689:78:5"
											},
											{
												"assignments": [
													2028
												],
												"declarations": [
													{
														"constant": false,
														"id": 2028,
														"mutability": "mutable",
														"name": "feeToDeveloper",
														"nameLocation": "3786:14:5",
														"nodeType": "VariableDeclaration",
														"scope": 2070,
														"src": "3778:22:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2027,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3778:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2039,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2033,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2031,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2029,
																"name": "_amountIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1963,
																"src": "3803:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"hexValue": "33",
																"id": 2030,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3815:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3_by_1",
																	"typeString": "int_const 3"
																},
																"value": "3"
															},
															"src": "3803:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 2032,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1595,
															"src": "3819:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3803:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2036,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2034,
																	"name": "reserve0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1591,
																	"src": "3834:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "32303030",
																	"id": 2035,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3845:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2000_by_1",
																		"typeString": "int_const 2000"
																	},
																	"value": "2000"
																},
																"src": "3834:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2037,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3833:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3803:47:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3778:72:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2041,
															"name": "developer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1583,
															"src": "3867:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2042,
															"name": "feeToDeveloper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2028,
															"src": "3878:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2040,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1642,
														"src": "3861:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3861:32:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2044,
												"nodeType": "ExpressionStatement",
												"src": "3861:32:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2048,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3956:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3960:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3956:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2050,
															"name": "amountOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1970,
															"src": "3968:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2045,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1589,
															"src": "3940:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$664",
																"typeString": "contract IERC20"
															}
														},
														"id": 2047,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3947:8:5",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 631,
														"src": "3940:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 2051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3940:38:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2052,
												"nodeType": "ExpressionStatement",
												"src": "3940:38:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2058,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4024:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AMM_$2551",
																				"typeString": "contract AMM"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AMM_$2551",
																				"typeString": "contract AMM"
																			}
																		],
																		"id": 2057,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4016:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2056,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4016:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2059,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4016:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 2054,
																	"name": "token0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1586,
																	"src": "3999:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$664",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 2055,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4006:9:5",
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 621,
																"src": "3999:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 2060,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3999:31:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2065,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4057:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AMM_$2551",
																				"typeString": "contract AMM"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AMM_$2551",
																				"typeString": "contract AMM"
																			}
																		],
																		"id": 2064,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4049:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2063,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4049:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2066,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4049:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 2061,
																	"name": "token1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1589,
																	"src": "4032:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$664",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 2062,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4039:9:5",
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 621,
																"src": "4032:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 2067,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4032:31:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2053,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1676,
														"src": "3991:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 2068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3991:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2069,
												"nodeType": "ExpressionStatement",
												"src": "3991:73:5"
											}
										]
									},
									"functionSelector": "c9f4437e",
									"id": 2071,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokenForToken1_WithSlipLock",
									"nameLocation": "3239:31:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1963,
												"mutability": "mutable",
												"name": "_amountIn",
												"nameLocation": "3289:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 2071,
												"src": "3281:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1962,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3281:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1965,
												"mutability": "mutable",
												"name": "_forwardOutput",
												"nameLocation": "3317:14:5",
												"nodeType": "VariableDeclaration",
												"scope": 2071,
												"src": "3309:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1964,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3309:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1967,
												"mutability": "mutable",
												"name": "_slipLock",
												"nameLocation": "3350:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 2071,
												"src": "3342:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1966,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3342:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3270:96:5"
									},
									"returnParameters": {
										"id": 1971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1970,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3391:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 2071,
												"src": "3383:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1969,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3383:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3382:19:5"
									},
									"scope": 2551,
									"src": "3230:842:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2187,
										"nodeType": "Block",
										"src": "4172:730:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2083,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4203:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2084,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4207:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4203:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2087,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4223:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_AMM_$2551",
																		"typeString": "contract AMM"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_AMM_$2551",
																		"typeString": "contract AMM"
																	}
																],
																"id": 2086,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4215:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2085,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4215:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 2088,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4215:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2089,
															"name": "_amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2073,
															"src": "4230:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2080,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1586,
															"src": "4183:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$664",
																"typeString": "contract IERC20"
															}
														},
														"id": 2082,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4190:12:5",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 663,
														"src": "4183:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 2090,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4183:56:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2091,
												"nodeType": "ExpressionStatement",
												"src": "4183:56:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2095,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4270:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2096,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4274:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4270:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2099,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4290:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_AMM_$2551",
																		"typeString": "contract AMM"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_AMM_$2551",
																		"typeString": "contract AMM"
																	}
																],
																"id": 2098,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4282:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2097,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4282:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 2100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4282:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2101,
															"name": "_amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2075,
															"src": "4297:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2092,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1589,
															"src": "4250:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$664",
																"typeString": "contract IERC20"
															}
														},
														"id": 2094,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4257:12:5",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 663,
														"src": "4250:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 2102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4250:56:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2103,
												"nodeType": "ExpressionStatement",
												"src": "4250:56:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2106,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2104,
															"name": "reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1591,
															"src": "4323:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2105,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4334:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4323:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2109,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2107,
															"name": "reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1593,
															"src": "4339:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4350:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4339:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4323:28:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2124,
												"nodeType": "IfStatement",
												"src": "4319:141:5",
												"trueBody": {
													"id": 2123,
													"nodeType": "Block",
													"src": "4353:107:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2117,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 2114,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 2112,
																							"name": "_amount0",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2073,
																							"src": "4377:8:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"id": 2113,
																							"name": "reserve1",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1593,
																							"src": "4388:8:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "4377:19:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 2115,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4376:21:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 2116,
																				"name": "reserve0",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1591,
																				"src": "4400:8:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4376:32:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 2118,
																			"name": "_amount1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2075,
																			"src": "4412:8:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4376:44:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "496e76616c6964206c697175696469747920726174696f",
																		"id": 2120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4422:25:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_2e4cfbebddcf91980949e97537f2af8b49e403c7efea6b51f4c200d1dd98a066",
																			"typeString": "literal_string \"Invalid liquidity ratio\""
																		},
																		"value": "Invalid liquidity ratio"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_2e4cfbebddcf91980949e97537f2af8b49e403c7efea6b51f4c200d1dd98a066",
																			"typeString": "literal_string \"Invalid liquidity ratio\""
																		}
																	],
																	"id": 2111,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4368:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2121,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4368:80:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2122,
															"nodeType": "ExpressionStatement",
															"src": "4368:80:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2125,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1595,
														"src": "4476:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2126,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4491:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4476:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2155,
													"nodeType": "Block",
													"src": "4562:167:5",
													"statements": [
														{
															"expression": {
																"id": 2153,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2137,
																	"name": "shares",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2078,
																	"src": "4577:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2145,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 2142,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 2140,
																							"name": "_amount0",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2073,
																							"src": "4614:8:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"id": 2141,
																							"name": "totalSupply",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1595,
																							"src": "4625:11:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "4614:22:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 2143,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4613:24:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 2144,
																				"name": "reserve0",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1591,
																				"src": "4640:8:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4613:35:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2151,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 2148,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 2146,
																							"name": "_amount1",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2075,
																							"src": "4668:8:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"id": 2147,
																							"name": "totalSupply",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1595,
																							"src": "4679:11:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "4668:22:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 2149,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4667:24:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 2150,
																				"name": "reserve1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1593,
																				"src": "4694:8:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4667:35:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 2138,
																			"name": "Math",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1576,
																			"src": "4586:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Math_$1576_$",
																				"typeString": "type(library Math)"
																			}
																		},
																		"id": 2139,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4591:3:5",
																		"memberName": "min",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 754,
																		"src": "4586:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4586:131:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4577:140:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2154,
															"nodeType": "ExpressionStatement",
															"src": "4577:140:5"
														}
													]
												},
												"id": 2156,
												"nodeType": "IfStatement",
												"src": "4472:257:5",
												"trueBody": {
													"id": 2136,
													"nodeType": "Block",
													"src": "4494:62:5",
													"statements": [
														{
															"expression": {
																"id": 2134,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2128,
																	"name": "shares",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2078,
																	"src": "4509:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2132,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2130,
																				"name": "_amount0",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2073,
																				"src": "4524:8:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 2131,
																				"name": "_amount1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2075,
																				"src": "4535:8:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4524:19:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2129,
																		"name": "_sqrt",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2411,
																		"src": "4518:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2133,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4518:26:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4509:35:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2135,
															"nodeType": "ExpressionStatement",
															"src": "4509:35:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2160,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2158,
																"name": "shares",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2078,
																"src": "4747:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2159,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4756:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4747:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "736861726573203d2030",
															"id": 2161,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4759:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4e208da9c6252e844e3faafb4bce1ac6103358d48cc8ab07bbca5bb9ee4b2f37",
																"typeString": "literal_string \"shares = 0\""
															},
															"value": "shares = 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4e208da9c6252e844e3faafb4bce1ac6103358d48cc8ab07bbca5bb9ee4b2f37",
																"typeString": "literal_string \"shares = 0\""
															}
														],
														"id": 2157,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4739:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4739:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2163,
												"nodeType": "ExpressionStatement",
												"src": "4739:33:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2165,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4789:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2166,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4793:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4789:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2167,
															"name": "shares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2078,
															"src": "4801:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2164,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1642,
														"src": "4783:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4783:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2169,
												"nodeType": "ExpressionStatement",
												"src": "4783:25:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2175,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4854:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AMM_$2551",
																				"typeString": "contract AMM"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AMM_$2551",
																				"typeString": "contract AMM"
																			}
																		],
																		"id": 2174,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4846:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2173,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4846:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2176,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4846:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 2171,
																	"name": "token0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1586,
																	"src": "4829:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$664",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 2172,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4836:9:5",
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 621,
																"src": "4829:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 2177,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4829:31:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2182,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4887:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AMM_$2551",
																				"typeString": "contract AMM"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AMM_$2551",
																				"typeString": "contract AMM"
																			}
																		],
																		"id": 2181,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4879:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2180,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4879:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2183,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4879:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 2178,
																	"name": "token1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1589,
																	"src": "4862:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$664",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 2179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4869:9:5",
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 621,
																"src": "4862:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 2184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4862:31:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2170,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1676,
														"src": "4821:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 2185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4821:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2186,
												"nodeType": "ExpressionStatement",
												"src": "4821:73:5"
											}
										]
									},
									"functionSelector": "9cd441da",
									"id": 2188,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidity",
									"nameLocation": "4089:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2076,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2073,
												"mutability": "mutable",
												"name": "_amount0",
												"nameLocation": "4110:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 2188,
												"src": "4102:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2072,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4102:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2075,
												"mutability": "mutable",
												"name": "_amount1",
												"nameLocation": "4128:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 2188,
												"src": "4120:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2074,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4120:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4101:36:5"
									},
									"returnParameters": {
										"id": 2079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2078,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "4164:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 2188,
												"src": "4156:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2077,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4156:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4155:16:5"
									},
									"scope": 2551,
									"src": "4080:822:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2204,
										"nodeType": "Block",
										"src": "5005:67:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2198,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2190,
															"src": "5040:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"baseExpression": {
																"id": 2199,
																"name": "balanceOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1599,
																"src": "5047:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 2201,
															"indexExpression": {
																"id": 2200,
																"name": "_user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2190,
																"src": "5057:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5047:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2197,
														"name": "_removeLiquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2334,
														"src": "5023:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function (address,uint256) returns (uint256,uint256)"
														}
													},
													"id": 2202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5023:41:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 2196,
												"id": 2203,
												"nodeType": "Return",
												"src": "5016:48:5"
											}
										]
									},
									"functionSelector": "7a6a5e1b",
									"id": 2205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "removeAllLiquidity",
									"nameLocation": "4919:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2190,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "4946:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2205,
												"src": "4938:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2189,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4938:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4937:15:5"
									},
									"returnParameters": {
										"id": 2196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2193,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "4979:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 2205,
												"src": "4971:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4971:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2195,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "4996:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 2205,
												"src": "4988:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4988:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4970:34:5"
									},
									"scope": 2551,
									"src": "4910:162:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2230,
										"nodeType": "Block",
										"src": "5174:139:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2220,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2215,
																"name": "_shares",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2207,
																"src": "5193:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"baseExpression": {
																	"id": 2216,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1599,
																	"src": "5204:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2219,
																"indexExpression": {
																	"expression": {
																		"id": 2217,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "5214:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2218,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5218:6:5",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "5214:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5204:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5193:32:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365",
															"id": 2221,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5227:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															},
															"value": "Insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															}
														],
														"id": 2214,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5185:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5185:65:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2223,
												"nodeType": "ExpressionStatement",
												"src": "5185:65:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2225,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5285:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2226,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5289:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5285:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2227,
															"name": "_shares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2207,
															"src": "5297:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2224,
														"name": "_removeLiquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2334,
														"src": "5268:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function (address,uint256) returns (uint256,uint256)"
														}
													},
													"id": 2228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5268:37:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 2213,
												"id": 2229,
												"nodeType": "Return",
												"src": "5261:44:5"
											}
										]
									},
									"functionSelector": "9c8f9f23",
									"id": 2231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidity",
									"nameLocation": "5089:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2207,
												"mutability": "mutable",
												"name": "_shares",
												"nameLocation": "5113:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 2231,
												"src": "5105:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5105:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5104:17:5"
									},
									"returnParameters": {
										"id": 2213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2210,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "5148:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 2231,
												"src": "5140:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5140:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2212,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "5165:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 2231,
												"src": "5157:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5157:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5139:34:5"
									},
									"scope": 2551,
									"src": "5080:233:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2256,
										"nodeType": "Block",
										"src": "5430:129:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2247,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2243,
																"name": "_shares",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2235,
																"src": "5449:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"baseExpression": {
																	"id": 2244,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1599,
																	"src": "5460:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2246,
																"indexExpression": {
																	"id": 2245,
																	"name": "_user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2233,
																	"src": "5470:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5460:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5449:27:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365",
															"id": 2248,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5478:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															},
															"value": "Insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															}
														],
														"id": 2242,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5441:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5441:60:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2250,
												"nodeType": "ExpressionStatement",
												"src": "5441:60:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2252,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2233,
															"src": "5536:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2253,
															"name": "_shares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2235,
															"src": "5543:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2251,
														"name": "_removeLiquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2334,
														"src": "5519:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function (address,uint256) returns (uint256,uint256)"
														}
													},
													"id": 2254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5519:32:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 2241,
												"id": 2255,
												"nodeType": "Return",
												"src": "5512:39:5"
											}
										]
									},
									"functionSelector": "a201ccf6",
									"id": 2257,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidity",
									"nameLocation": "5330:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2233,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "5354:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2257,
												"src": "5346:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5346:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2235,
												"mutability": "mutable",
												"name": "_shares",
												"nameLocation": "5369:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 2257,
												"src": "5361:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5361:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5345:32:5"
									},
									"returnParameters": {
										"id": 2241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2238,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "5404:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 2257,
												"src": "5396:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5396:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2240,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "5421:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 2257,
												"src": "5413:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5413:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5395:34:5"
									},
									"scope": 2551,
									"src": "5321:238:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2333,
										"nodeType": "Block",
										"src": "5677:394:5",
										"statements": [
											{
												"expression": {
													"id": 2275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2268,
														"name": "amount0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2264,
														"src": "5688:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2274,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2271,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2269,
																		"name": "_shares",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2261,
																		"src": "5699:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2270,
																		"name": "reserve0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1591,
																		"src": "5709:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5699:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2272,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5698:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 2273,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1595,
															"src": "5721:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5698:34:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5688:44:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2276,
												"nodeType": "ExpressionStatement",
												"src": "5688:44:5"
											},
											{
												"expression": {
													"id": 2284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2277,
														"name": "amount1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2266,
														"src": "5743:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2283,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2280,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2278,
																		"name": "_shares",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2261,
																		"src": "5754:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2279,
																		"name": "reserve1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1593,
																		"src": "5764:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5754:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2281,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5753:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 2282,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1595,
															"src": "5776:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5753:34:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5743:44:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2285,
												"nodeType": "ExpressionStatement",
												"src": "5743:44:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2293,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2289,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2287,
																	"name": "amount0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2264,
																	"src": "5806:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2288,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5816:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5806:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2292,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2290,
																	"name": "amount1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2266,
																	"src": "5821:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2291,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5831:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5821:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "5806:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "616d6f756e7430206f7220616d6f756e7431203d2030",
															"id": 2294,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5834:24:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_07f0348f6c2c1a6f3350d18d3a915d48f775a408df0934a0d28dec896cf2d48d",
																"typeString": "literal_string \"amount0 or amount1 = 0\""
															},
															"value": "amount0 or amount1 = 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_07f0348f6c2c1a6f3350d18d3a915d48f775a408df0934a0d28dec896cf2d48d",
																"typeString": "literal_string \"amount0 or amount1 = 0\""
															}
														],
														"id": 2286,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5798:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5798:61:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2296,
												"nodeType": "ExpressionStatement",
												"src": "5798:61:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2298,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2259,
															"src": "5878:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2299,
															"name": "_shares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2261,
															"src": "5885:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2297,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1660,
														"src": "5872:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5872:21:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2301,
												"nodeType": "ExpressionStatement",
												"src": "5872:21:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2307,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5937:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AMM_$2551",
																				"typeString": "contract AMM"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AMM_$2551",
																				"typeString": "contract AMM"
																			}
																		],
																		"id": 2306,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5929:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2305,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5929:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2308,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5929:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 2303,
																	"name": "token0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1586,
																	"src": "5912:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$664",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 2304,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5919:9:5",
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 621,
																"src": "5912:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 2309,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5912:31:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2314,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5970:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AMM_$2551",
																				"typeString": "contract AMM"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AMM_$2551",
																				"typeString": "contract AMM"
																			}
																		],
																		"id": 2313,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5962:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2312,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5962:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2315,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5962:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 2310,
																	"name": "token1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1589,
																	"src": "5945:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$664",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 2311,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5952:9:5",
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 621,
																"src": "5945:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 2316,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5945:31:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2302,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1676,
														"src": "5904:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 2317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5904:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2318,
												"nodeType": "ExpressionStatement",
												"src": "5904:73:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2322,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2259,
															"src": "6006:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2323,
															"name": "amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2264,
															"src": "6013:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2319,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1586,
															"src": "5990:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$664",
																"typeString": "contract IERC20"
															}
														},
														"id": 2321,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5997:8:5",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 631,
														"src": "5990:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 2324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5990:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2325,
												"nodeType": "ExpressionStatement",
												"src": "5990:31:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2329,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2259,
															"src": "6048:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2330,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2266,
															"src": "6055:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2326,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1589,
															"src": "6032:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$664",
																"typeString": "contract IERC20"
															}
														},
														"id": 2328,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6039:8:5",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 631,
														"src": "6032:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 2331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6032:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2332,
												"nodeType": "ExpressionStatement",
												"src": "6032:31:5"
											}
										]
									},
									"id": 2334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_removeLiquidity",
									"nameLocation": "5576:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2259,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "5601:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2334,
												"src": "5593:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5593:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2261,
												"mutability": "mutable",
												"name": "_shares",
												"nameLocation": "5616:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 2334,
												"src": "5608:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5608:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5592:32:5"
									},
									"returnParameters": {
										"id": 2267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2264,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "5651:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 2334,
												"src": "5643:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5643:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2266,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "5668:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 2334,
												"src": "5660:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5660:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5642:34:5"
									},
									"scope": 2551,
									"src": "5567:504:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2344,
										"nodeType": "Block",
										"src": "6129:47:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 2339,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1599,
														"src": "6147:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 2342,
													"indexExpression": {
														"expression": {
															"id": 2340,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "6157:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 2341,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6161:6:5",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "6157:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6147:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2338,
												"id": 2343,
												"nodeType": "Return",
												"src": "6140:28:5"
											}
										]
									},
									"functionSelector": "9e7a4757",
									"id": 2345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "myShares",
									"nameLocation": "6088:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2335,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6096:2:5"
									},
									"returnParameters": {
										"id": 2338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2337,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2345,
												"src": "6120:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2336,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6120:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6119:9:5"
									},
									"scope": 2551,
									"src": "6079:97:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2356,
										"nodeType": "Block",
										"src": "6245:42:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 2352,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1599,
														"src": "6263:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 2354,
													"indexExpression": {
														"id": 2353,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2347,
														"src": "6273:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6263:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2351,
												"id": 2355,
												"nodeType": "Return",
												"src": "6256:23:5"
											}
										]
									},
									"functionSelector": "f5eb42dc",
									"id": 2357,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sharesOf",
									"nameLocation": "6191:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2347,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "6208:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2357,
												"src": "6200:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6200:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6199:15:5"
									},
									"returnParameters": {
										"id": 2351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2350,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2357,
												"src": "6236:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6236:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6235:9:5"
									},
									"scope": 2551,
									"src": "6182:105:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2410,
										"nodeType": "Block",
										"src": "6353:253:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2364,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2359,
														"src": "6368:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "33",
														"id": 2365,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6372:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "6368:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2402,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2400,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2359,
															"src": "6559:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 2401,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6564:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "6559:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 2408,
													"nodeType": "IfStatement",
													"src": "6555:44:5",
													"trueBody": {
														"id": 2407,
														"nodeType": "Block",
														"src": "6567:32:5",
														"statements": [
															{
																"expression": {
																	"id": 2405,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 2403,
																		"name": "z",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2362,
																		"src": "6582:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"hexValue": "31",
																		"id": 2404,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6586:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "6582:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2406,
																"nodeType": "ExpressionStatement",
																"src": "6582:5:5"
															}
														]
													}
												},
												"id": 2409,
												"nodeType": "IfStatement",
												"src": "6364:235:5",
												"trueBody": {
													"id": 2399,
													"nodeType": "Block",
													"src": "6375:174:5",
													"statements": [
														{
															"expression": {
																"id": 2369,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2367,
																	"name": "z",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2362,
																	"src": "6390:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 2368,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2359,
																	"src": "6394:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6390:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2370,
															"nodeType": "ExpressionStatement",
															"src": "6390:5:5"
														},
														{
															"assignments": [
																2372
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2372,
																	"mutability": "mutable",
																	"name": "x",
																	"nameLocation": "6418:1:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 2399,
																	"src": "6410:9:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2371,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6410:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2378,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2377,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2373,
																		"name": "y",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2359,
																		"src": "6422:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 2374,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6426:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "6422:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2376,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6430:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6422:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6410:21:5"
														},
														{
															"body": {
																"id": 2397,
																"nodeType": "Block",
																"src": "6460:78:5",
																"statements": [
																	{
																		"expression": {
																			"id": 2384,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2382,
																				"name": "z",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2362,
																				"src": "6479:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 2383,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2372,
																				"src": "6483:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6479:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2385,
																		"nodeType": "ExpressionStatement",
																		"src": "6479:5:5"
																	},
																	{
																		"expression": {
																			"id": 2395,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2386,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2372,
																				"src": "6503:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2394,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 2391,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2389,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2387,
																									"name": "y",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2359,
																									"src": "6508:1:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "/",
																								"rightExpression": {
																									"id": 2388,
																									"name": "x",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2372,
																									"src": "6512:1:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "6508:5:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "+",
																							"rightExpression": {
																								"id": 2390,
																								"name": "x",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2372,
																								"src": "6516:1:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "6508:9:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 2392,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "6507:11:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"hexValue": "32",
																					"id": 2393,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "6521:1:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "6507:15:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6503:19:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2396,
																		"nodeType": "ExpressionStatement",
																		"src": "6503:19:5"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2381,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2379,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2372,
																	"src": "6453:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 2380,
																	"name": "z",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2362,
																	"src": "6457:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6453:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2398,
															"nodeType": "WhileStatement",
															"src": "6446:92:5"
														}
													]
												}
											}
										]
									},
									"id": 2411,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_sqrt",
									"nameLocation": "6302:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2359,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "6316:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 2411,
												"src": "6308:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2358,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6308:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6307:11:5"
									},
									"returnParameters": {
										"id": 2363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2362,
												"mutability": "mutable",
												"name": "z",
												"nameLocation": "6350:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 2411,
												"src": "6342:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6342:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6341:11:5"
									},
									"scope": 2551,
									"src": "6293:313:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2465,
										"nodeType": "Block",
										"src": "6667:281:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2423,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2419,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2417,
																	"name": "reserve0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1591,
																	"src": "6686:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2418,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6697:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6686:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2422,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2420,
																	"name": "reserve1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1593,
																	"src": "6702:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2421,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6713:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6702:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "6686:28:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964207265736572766573",
															"id": 2424,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6716:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_185a9d5da6de3eebfb2e4ad4adad189f402b098c61f6e8e0c8d2b4a20a1faa2a",
																"typeString": "literal_string \"Invalid reserves\""
															},
															"value": "Invalid reserves"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_185a9d5da6de3eebfb2e4ad4adad189f402b098c61f6e8e0c8d2b4a20a1faa2a",
																"typeString": "literal_string \"Invalid reserves\""
															}
														],
														"id": 2416,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6678:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6678:57:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2426,
												"nodeType": "ExpressionStatement",
												"src": "6678:57:5"
											},
											{
												"assignments": [
													2428
												],
												"declarations": [
													{
														"constant": false,
														"id": 2428,
														"mutability": "mutable",
														"name": "decimals0",
														"nameLocation": "6754:9:5",
														"nodeType": "VariableDeclaration",
														"scope": 2465,
														"src": "6746:17:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2427,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6746:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2437,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2432,
																			"name": "token0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1586,
																			"src": "6780:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$664",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$664",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 2431,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6772:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2430,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "6772:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2433,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6772:15:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2429,
																"name": "ERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 586,
																"src": "6766:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC20_$586_$",
																	"typeString": "type(contract ERC20)"
																}
															},
															"id": 2434,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6766:22:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$586",
																"typeString": "contract ERC20"
															}
														},
														"id": 2435,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6789:8:5",
														"memberName": "decimals",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 74,
														"src": "6766:31:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
															"typeString": "function () view external returns (uint8)"
														}
													},
													"id": 2436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6766:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6746:53:5"
											},
											{
												"assignments": [
													2439
												],
												"declarations": [
													{
														"constant": false,
														"id": 2439,
														"mutability": "mutable",
														"name": "decimals1",
														"nameLocation": "6818:9:5",
														"nodeType": "VariableDeclaration",
														"scope": 2465,
														"src": "6810:17:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2438,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6810:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2448,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2443,
																			"name": "token1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1589,
																			"src": "6844:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$664",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$664",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 2442,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6836:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2441,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "6836:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2444,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6836:15:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2440,
																"name": "ERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 586,
																"src": "6830:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC20_$586_$",
																	"typeString": "type(contract ERC20)"
																}
															},
															"id": 2445,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6830:22:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$586",
																"typeString": "contract ERC20"
															}
														},
														"id": 2446,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6853:8:5",
														"memberName": "decimals",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 74,
														"src": "6830:31:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
															"typeString": "function () view external returns (uint8)"
														}
													},
													"id": 2447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6830:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6810:53:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2454,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2449,
																	"name": "reserve0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1591,
																	"src": "6882:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2452,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2450,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6894:2:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"id": 2451,
																				"name": "decimals1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2439,
																				"src": "6898:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6894:13:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2453,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "6893:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6882:26:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2455,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6881:28:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2461,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2456,
																	"name": "reserve1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1593,
																	"src": "6913:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2459,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2457,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6925:2:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"id": 2458,
																				"name": "decimals0",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2428,
																				"src": "6929:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6925:13:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2460,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "6924:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6913:26:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2462,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6912:28:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6881:59:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2415,
												"id": 2464,
												"nodeType": "Return",
												"src": "6874:66:5"
											}
										]
									},
									"functionSelector": "fcc2ba08",
									"id": 2466,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getERCPrice",
									"nameLocation": "6623:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2412,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6634:2:5"
									},
									"returnParameters": {
										"id": 2415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2414,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2466,
												"src": "6658:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2413,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6658:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6657:9:5"
									},
									"scope": 2551,
									"src": "6614:334:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2507,
										"nodeType": "Block",
										"src": "7035:227:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2480,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2476,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2474,
																		"name": "reserve0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1591,
																		"src": "7054:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2475,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7065:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "7054:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2479,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2477,
																		"name": "reserve1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1593,
																		"src": "7070:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2478,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7081:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "7070:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "7054:28:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2483,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2481,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2468,
																	"src": "7086:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2482,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7096:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7086:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "7054:43:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964207265736572766573",
															"id": 2485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7099:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_185a9d5da6de3eebfb2e4ad4adad189f402b098c61f6e8e0c8d2b4a20a1faa2a",
																"typeString": "literal_string \"Invalid reserves\""
															},
															"value": "Invalid reserves"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_185a9d5da6de3eebfb2e4ad4adad189f402b098c61f6e8e0c8d2b4a20a1faa2a",
																"typeString": "literal_string \"Invalid reserves\""
															}
														],
														"id": 2473,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7046:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7046:72:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2487,
												"nodeType": "ExpressionStatement",
												"src": "7046:72:5"
											},
											{
												"assignments": [
													2489
												],
												"declarations": [
													{
														"constant": false,
														"id": 2489,
														"mutability": "mutable",
														"name": "amountInWithFee",
														"nameLocation": "7137:15:5",
														"nodeType": "VariableDeclaration",
														"scope": 2507,
														"src": "7129:23:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2488,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7129:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2496,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2492,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2490,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2468,
																	"src": "7156:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "393937",
																	"id": 2491,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7166:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_997_by_1",
																		"typeString": "int_const 997"
																	},
																	"value": "997"
																},
																"src": "7156:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2493,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7155:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31303030",
														"id": 2494,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7173:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000_by_1",
															"typeString": "int_const 1000"
														},
														"value": "1000"
													},
													"src": "7155:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7129:48:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2499,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2497,
																	"name": "reserve1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1593,
																	"src": "7196:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2498,
																	"name": "amountInWithFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2489,
																	"src": "7207:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7196:26:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2500,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7195:28:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2501,
																	"name": "reserve0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1591,
																	"src": "7227:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 2502,
																	"name": "amountInWithFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2489,
																	"src": "7238:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7227:26:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2504,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7226:28:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7195:59:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2472,
												"id": 2506,
												"nodeType": "Return",
												"src": "7188:66:5"
											}
										]
									},
									"functionSelector": "4d7d1598",
									"id": 2508,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPredictOutputToken1",
									"nameLocation": "6965:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2468,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "6996:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 2508,
												"src": "6988:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6988:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6987:17:5"
									},
									"returnParameters": {
										"id": 2472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2471,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2508,
												"src": "7026:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2470,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7026:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7025:9:5"
									},
									"scope": 2551,
									"src": "6956:306:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2549,
										"nodeType": "Block",
										"src": "7349:227:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2526,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2522,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2516,
																		"name": "reserve0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1591,
																		"src": "7368:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7379:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "7368:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2521,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2519,
																		"name": "reserve1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1593,
																		"src": "7384:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2520,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7395:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "7384:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "7368:28:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2525,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2523,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2510,
																	"src": "7400:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2524,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7410:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7400:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "7368:43:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964207265736572766573",
															"id": 2527,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7413:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_185a9d5da6de3eebfb2e4ad4adad189f402b098c61f6e8e0c8d2b4a20a1faa2a",
																"typeString": "literal_string \"Invalid reserves\""
															},
															"value": "Invalid reserves"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_185a9d5da6de3eebfb2e4ad4adad189f402b098c61f6e8e0c8d2b4a20a1faa2a",
																"typeString": "literal_string \"Invalid reserves\""
															}
														],
														"id": 2515,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7360:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7360:72:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2529,
												"nodeType": "ExpressionStatement",
												"src": "7360:72:5"
											},
											{
												"assignments": [
													2531
												],
												"declarations": [
													{
														"constant": false,
														"id": 2531,
														"mutability": "mutable",
														"name": "amountInWithFee",
														"nameLocation": "7451:15:5",
														"nodeType": "VariableDeclaration",
														"scope": 2549,
														"src": "7443:23:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2530,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7443:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2538,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2534,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2532,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2510,
																	"src": "7470:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "393937",
																	"id": 2533,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7480:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_997_by_1",
																		"typeString": "int_const 997"
																	},
																	"value": "997"
																},
																"src": "7470:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2535,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7469:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31303030",
														"id": 2536,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7487:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000_by_1",
															"typeString": "int_const 1000"
														},
														"value": "1000"
													},
													"src": "7469:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7443:48:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2541,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2539,
																	"name": "reserve0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1591,
																	"src": "7510:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2540,
																	"name": "amountInWithFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2531,
																	"src": "7521:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7510:26:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2542,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7509:28:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2545,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2543,
																	"name": "reserve1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1593,
																	"src": "7541:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 2544,
																	"name": "amountInWithFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2531,
																	"src": "7552:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7541:26:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2546,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7540:28:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7509:59:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2514,
												"id": 2548,
												"nodeType": "Return",
												"src": "7502:66:5"
											}
										]
									},
									"functionSelector": "9c1e5375",
									"id": 2550,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPredictOutputToken0",
									"nameLocation": "7279:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2510,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "7310:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 2550,
												"src": "7302:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7302:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7301:17:5"
									},
									"returnParameters": {
										"id": 2514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2513,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2550,
												"src": "7340:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7340:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7339:9:5"
									},
									"scope": 2551,
									"src": "7270:306:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2552,
							"src": "283:7296:5",
							"usedErrors": []
						}
					],
					"src": "33:7546:5"
				},
				"id": 5
			}
		}
	}
}